name: CI
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  skip_check:
    name: Duplicate Check
    runs-on: ubuntu-24.04
    outputs:
      should_skip: ${{ steps.check.outputs.should_skip }}
    steps:
      - id: check
        uses: fkirc/skip-duplicate-actions@v5.3.1
        with:
          skip_after_successful_duplicate: 'true'
          concurrent_skipping: 'same_content_newer'

  build:
    needs: skip_check
    if: ${{ needs.skip_check.outputs.should_skip != 'true' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 480

    strategy:
      fail-fast: false
      matrix:
        #platform: [os4, os3, mos, aros-ppc, aros-i386, aros-x86_64]
        platform: [os4, os3-68020, os3-68060]
        build: [release, debug]

        exclude:
          - platform: release
            build: debug

    steps:
    - uses: actions/checkout@v5

    - name: setup env
      run: |
        echo "GITHUB_SHA7=$(echo ${GITHUB_SHA::7})" >>$GITHUB_ENV

    - name: setup dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update -y -qq || true
        sudo apt-get -qq install libc6:i386
        sudo ln -s /usr/lib/x86_64-linux-gnu/libmpfr.so.6 /usr/lib/x86_64-linux-gnu/libmpfr.so.4

    - name: install adtools build env
      run: |
        DOWNLOAD_PATH=https://github.com/adtools/adtools/releases/download/20170213
        DOWNLOAD_PATH_UTILS=https://github.com/adtools/adtools/releases/download/20220416
        curl -L ${DOWNLOAD_PATH_UTILS}/adtools-utils.tar.bz2 | sudo tar xj -C /
        if [[ ${{ matrix.platform }} =~ os3-68020|os3-68060|release|nightly ]]; then curl -L ${DOWNLOAD_PATH}/adtools-m68k-amigaos.tar.bz2 | sudo tar xj -C / ; fi
        if [[ ${{ matrix.platform }} =~ os4|release|nightly ]]; then curl -L ${DOWNLOAD_PATH}/adtools-ppc-amigaos-legacy.tar.bz2 | sudo tar xj -C / ; fi
        if [[ ${{ matrix.platform }} =~ os4|release|nightly ]]; then curl -L ${DOWNLOAD_PATH}/adtools-ppc-amigaos.tar.bz2 | sudo tar xj -C / ; fi
        #if [[ ${{ matrix.platform }} =~ mos|release|nightly ]]; then curl -L ${DOWNLOAD_PATH}/adtools-ppc-morphos.tar.bz2 | sudo tar xj -C / ; fi
        #if [[ ${{ matrix.platform }} =~ aros-ppc|release|nightly ]]; then curl -L ${DOWNLOAD_PATH}/adtools-ppc-aros.tar.bz2 | sudo tar xj -C / ; fi
        #if [[ ${{ matrix.platform }} =~ aros-i386|release|nightly ]]; then curl -L ${DOWNLOAD_PATH}/adtools-i386-aros.tar.bz2 | sudo tar xj -C / ; fi
        #if [[ ${{ matrix.platform }} =~ aros-x86_64|release|nightly ]]; then curl -L ${DOWNLOAD_PATH}/adtools-x86_64-aros.tar.bz2 | sudo tar xj -C / ; fi

    #- name: remote debug tmate session
    #  uses: mxschmitt/action-tmate@v1
    #  if: matrix.platform == 'os4'

    - name: build ${{ matrix.platform }}-${{ matrix.build }}
      timeout-minutes: 480
      run: |
        if [[ ${{ matrix.platform }} =~ os4|release|nightly ]]; then sudo rm /usr/local/amiga/bin/ppc-amigaos-strip ; fi
        export PATH=/usr/local/amiga/bin:/opt/m68k-amigaos/bin:/opt/ppc-amigaos/bin:/opt/ppc-morphos/bin:${PATH}
        if [[ ${{ matrix.build }} =~ release ]]; then make -j1 OS=${{ matrix.platform }} DEBUG= ; fi
        if [[ ${{ matrix.build }} =~ debug ]]; then make -j1 OS=${{ matrix.platform }} ; fi

    - name: upload build as workflow artifact
      uses: actions/upload-artifact@v4
      with:
        path: |
          build_${{ matrix.platform }}/amissl_v*.library*
          build_${{ matrix.platform }}/amisslmaster.library*
        name: AmiSSL-${{ matrix.platform }}-${{ env.GITHUB_SHA7 }}-${{ matrix.build }}
      continue-on-error: true

  cleanup:
    permissions:
      contents: write  # c-hive/gha-remove-artifacts
      actions: write  # c-hive/gha-remove-artifacts
    name: Cleanup artifacts/packages
    needs: skip_check
    if: ${{ needs.skip_check.outputs.should_skip != 'true' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Remove old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '2 months'
          skip-tags: true
          skip-recent: 15
