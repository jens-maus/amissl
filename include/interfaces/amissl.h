#ifndef AMISSL_INTERFACE_DEF_H
#define AMISSL_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.35.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef DOS_DOS_H
#include <dos/dos.h>
#endif
#ifndef AMISSL_AMISSL_H
#include <amissl/amissl.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct AmiSSLIFace
{
	struct InterfaceData Data;

	APICALL ULONG (*Obtain)(struct AmiSSLIFace *Self);
	APICALL ULONG (*Release)(struct AmiSSLIFace *Self);
	APTR Expunge_UNIMPLEMENTED;
	APTR Clone_UNIMPLEMENTED;
	APICALL void (*InternalInitAmiSSL)(struct AmiSSLIFace *Self, void * amisslinit);
	APICALL long (*InitAmiSSLA)(struct AmiSSLIFace *Self, struct TagItem * tagList);
	APICALL long (*InitAmiSSL)(struct AmiSSLIFace *Self, ...);
	APICALL long (*CleanupAmiSSLA)(struct AmiSSLIFace *Self, struct TagItem * tagList);
	APICALL long (*CleanupAmiSSL)(struct AmiSSLIFace *Self, ...);
	APTR IsCipherAvailable_UNIMPLEMENTED;
	APTR Reserved1_UNIMPLEMENTED;
	APTR Reserved2_UNIMPLEMENTED;
	APTR Reserved3_UNIMPLEMENTED;
	APTR Reserved4_UNIMPLEMENTED;
	APTR Reserved5_UNIMPLEMENTED;
	APTR Reserved6_UNIMPLEMENTED;
	APTR Reserved7_UNIMPLEMENTED;
	APTR Reserved8_UNIMPLEMENTED;
	APICALL ASN1_TYPE * (*ASN1_TYPE_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_TYPE_free)(struct AmiSSLIFace *Self, ASN1_TYPE * a);
	APICALL ASN1_TYPE * (*d2i_ASN1_TYPE)(struct AmiSSLIFace *Self, ASN1_TYPE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_TYPE)(struct AmiSSLIFace *Self, const ASN1_TYPE * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_ANY_it)(struct AmiSSLIFace *Self);
	APICALL int (*ASN1_TYPE_get)(struct AmiSSLIFace *Self, const ASN1_TYPE * a);
	APICALL void (*ASN1_TYPE_set)(struct AmiSSLIFace *Self, ASN1_TYPE * a, int type, void * value);
	APICALL ASN1_OBJECT * (*ASN1_OBJECT_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_OBJECT_free)(struct AmiSSLIFace *Self, ASN1_OBJECT * a);
	APICALL int (*i2d_ASN1_OBJECT)(struct AmiSSLIFace *Self, const ASN1_OBJECT * a, unsigned char ** pp);
	APTR c2i_ASN1_OBJECT_UNIMPLEMENTED;
	APICALL ASN1_OBJECT * (*d2i_ASN1_OBJECT)(struct AmiSSLIFace *Self, ASN1_OBJECT ** a, const unsigned char ** pp, long length);
	APICALL const ASN1_ITEM * (*ASN1_OBJECT_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_STRING * (*ASN1_STRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_STRING_free)(struct AmiSSLIFace *Self, ASN1_STRING * a);
	APICALL ASN1_STRING * (*ASN1_STRING_dup)(struct AmiSSLIFace *Self, const ASN1_STRING * a);
	APICALL ASN1_STRING * (*ASN1_STRING_type_new)(struct AmiSSLIFace *Self, int type);
	APICALL int (*ASN1_STRING_cmp)(struct AmiSSLIFace *Self, const ASN1_STRING * a, const ASN1_STRING * b);
	APICALL int (*ASN1_STRING_set)(struct AmiSSLIFace *Self, ASN1_STRING * str, const void * data, int len);
	APICALL int (*ASN1_STRING_length)(struct AmiSSLIFace *Self, const ASN1_STRING * x);
	DEPRECATED APICALL void (*ASN1_STRING_length_set)(struct AmiSSLIFace *Self, ASN1_STRING * x, int n);
	APICALL int (*ASN1_STRING_type)(struct AmiSSLIFace *Self, const ASN1_STRING * x);
	DEPRECATED APICALL unsigned char * (*ASN1_STRING_data)(struct AmiSSLIFace *Self, ASN1_STRING * x);
	APICALL ASN1_BIT_STRING * (*ASN1_BIT_STRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_BIT_STRING_free)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * x);
	APICALL ASN1_BIT_STRING * (*d2i_ASN1_BIT_STRING)(struct AmiSSLIFace *Self, ASN1_BIT_STRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_BIT_STRING)(struct AmiSSLIFace *Self, const ASN1_BIT_STRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_BIT_STRING_it)(struct AmiSSLIFace *Self);
	APTR i2c_ASN1_BIT_STRING_UNIMPLEMENTED;
	APTR c2i_ASN1_BIT_STRING_UNIMPLEMENTED;
	APICALL int (*ASN1_BIT_STRING_set)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * a, unsigned char * d, int length);
	APICALL int (*ASN1_BIT_STRING_set_bit)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * a, int n, int value);
	APICALL int (*ASN1_BIT_STRING_get_bit)(struct AmiSSLIFace *Self, const ASN1_BIT_STRING * a, int n);
	APICALL int (*ASN1_BIT_STRING_name_print)(struct AmiSSLIFace *Self, BIO * out, ASN1_BIT_STRING * bs, BIT_STRING_BITNAME * tbl, int indent);
	APICALL int (*ASN1_BIT_STRING_num_asc)(struct AmiSSLIFace *Self, const char * name, BIT_STRING_BITNAME * tbl);
	APICALL int (*ASN1_BIT_STRING_set_asc)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * bs, const char * name, int value, BIT_STRING_BITNAME * tbl);
	APTR i2d_ASN1_BOOLEAN_UNIMPLEMENTED;
	APTR d2i_ASN1_BOOLEAN_UNIMPLEMENTED;
	APICALL ASN1_INTEGER * (*ASN1_INTEGER_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_INTEGER_free)(struct AmiSSLIFace *Self, ASN1_INTEGER * x);
	APICALL ASN1_INTEGER * (*d2i_ASN1_INTEGER)(struct AmiSSLIFace *Self, ASN1_INTEGER ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_INTEGER)(struct AmiSSLIFace *Self, const ASN1_INTEGER * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_INTEGER_it)(struct AmiSSLIFace *Self);
	APTR i2c_ASN1_INTEGER_UNIMPLEMENTED;
	APTR c2i_ASN1_INTEGER_UNIMPLEMENTED;
	APICALL ASN1_INTEGER * (*d2i_ASN1_UINTEGER)(struct AmiSSLIFace *Self, ASN1_INTEGER ** a, const unsigned char ** pp, long length);
	APICALL ASN1_INTEGER * (*ASN1_INTEGER_dup)(struct AmiSSLIFace *Self, const ASN1_INTEGER * x);
	APICALL int (*ASN1_INTEGER_cmp)(struct AmiSSLIFace *Self, const ASN1_INTEGER * x, const ASN1_INTEGER * y);
	APICALL ASN1_ENUMERATED * (*ASN1_ENUMERATED_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_ENUMERATED_free)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * x);
	APICALL ASN1_ENUMERATED * (*d2i_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, ASN1_ENUMERATED ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, const ASN1_ENUMERATED * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_ENUMERATED_it)(struct AmiSSLIFace *Self);
	APICALL int (*ASN1_UTCTIME_check)(struct AmiSSLIFace *Self, const ASN1_UTCTIME * a);
	APICALL ASN1_UTCTIME * (*ASN1_UTCTIME_set)(struct AmiSSLIFace *Self, ASN1_UTCTIME * s, time_t t);
	APICALL int (*ASN1_UTCTIME_set_string)(struct AmiSSLIFace *Self, ASN1_UTCTIME * s, const char * str);
	APICALL int (*ASN1_UTCTIME_cmp_time_t)(struct AmiSSLIFace *Self, const ASN1_UTCTIME * s, time_t t);
	APICALL int (*ASN1_GENERALIZEDTIME_check)(struct AmiSSLIFace *Self, const ASN1_GENERALIZEDTIME * a);
	APICALL ASN1_GENERALIZEDTIME * (*ASN1_GENERALIZEDTIME_set)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * s, time_t t);
	APICALL int (*ASN1_GENERALIZEDTIME_set_string)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * s, const char * str);
	APICALL ASN1_OCTET_STRING * (*ASN1_OCTET_STRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_OCTET_STRING_free)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING * x);
	APICALL ASN1_OCTET_STRING * (*d2i_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, const ASN1_OCTET_STRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_OCTET_STRING_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_OCTET_STRING * (*ASN1_OCTET_STRING_dup)(struct AmiSSLIFace *Self, const ASN1_OCTET_STRING * a);
	APICALL int (*ASN1_OCTET_STRING_cmp)(struct AmiSSLIFace *Self, const ASN1_OCTET_STRING * a, const ASN1_OCTET_STRING * b);
	APICALL int (*ASN1_OCTET_STRING_set)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING * str, const unsigned char * data, int len);
	APICALL ASN1_VISIBLESTRING * (*ASN1_VISIBLESTRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_VISIBLESTRING_free)(struct AmiSSLIFace *Self, ASN1_VISIBLESTRING * a);
	APICALL ASN1_VISIBLESTRING * (*d2i_ASN1_VISIBLESTRING)(struct AmiSSLIFace *Self, ASN1_VISIBLESTRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_VISIBLESTRING)(struct AmiSSLIFace *Self, const ASN1_VISIBLESTRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_VISIBLESTRING_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_UNIVERSALSTRING * (*ASN1_UNIVERSALSTRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_UNIVERSALSTRING_free)(struct AmiSSLIFace *Self, ASN1_UNIVERSALSTRING * a);
	APICALL ASN1_UNIVERSALSTRING * (*d2i_ASN1_UNIVERSALSTRING)(struct AmiSSLIFace *Self, ASN1_UNIVERSALSTRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_UNIVERSALSTRING)(struct AmiSSLIFace *Self, const ASN1_UNIVERSALSTRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_UNIVERSALSTRING_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_UTF8STRING * (*ASN1_UTF8STRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_UTF8STRING_free)(struct AmiSSLIFace *Self, ASN1_UTF8STRING * x);
	APICALL ASN1_UTF8STRING * (*d2i_ASN1_UTF8STRING)(struct AmiSSLIFace *Self, ASN1_UTF8STRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_UTF8STRING)(struct AmiSSLIFace *Self, const ASN1_UTF8STRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_UTF8STRING_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_NULL * (*ASN1_NULL_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_NULL_free)(struct AmiSSLIFace *Self, ASN1_NULL * a);
	APICALL ASN1_NULL * (*d2i_ASN1_NULL)(struct AmiSSLIFace *Self, ASN1_NULL ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_NULL)(struct AmiSSLIFace *Self, const ASN1_NULL * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_NULL_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_BMPSTRING * (*ASN1_BMPSTRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_BMPSTRING_free)(struct AmiSSLIFace *Self, ASN1_BMPSTRING * a);
	APICALL ASN1_BMPSTRING * (*d2i_ASN1_BMPSTRING)(struct AmiSSLIFace *Self, ASN1_BMPSTRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_BMPSTRING)(struct AmiSSLIFace *Self, const ASN1_BMPSTRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_BMPSTRING_it)(struct AmiSSLIFace *Self);
	APICALL int (*UTF8_getc)(struct AmiSSLIFace *Self, const unsigned char * str, int len, unsigned long * val);
	APICALL int (*UTF8_putc)(struct AmiSSLIFace *Self, unsigned char * str, int len, unsigned long value);
	APICALL ASN1_STRING * (*ASN1_PRINTABLE_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_PRINTABLE_free)(struct AmiSSLIFace *Self, ASN1_STRING * a);
	APICALL ASN1_STRING * (*d2i_ASN1_PRINTABLE)(struct AmiSSLIFace *Self, ASN1_STRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_PRINTABLE)(struct AmiSSLIFace *Self, const ASN1_STRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_PRINTABLE_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_STRING * (*DIRECTORYSTRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*DIRECTORYSTRING_free)(struct AmiSSLIFace *Self, ASN1_STRING * a);
	APICALL ASN1_STRING * (*d2i_DIRECTORYSTRING)(struct AmiSSLIFace *Self, ASN1_STRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_DIRECTORYSTRING)(struct AmiSSLIFace *Self, const ASN1_STRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*DIRECTORYSTRING_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_STRING * (*DISPLAYTEXT_new)(struct AmiSSLIFace *Self);
	APICALL void (*DISPLAYTEXT_free)(struct AmiSSLIFace *Self, ASN1_STRING * a);
	APICALL ASN1_STRING * (*d2i_DISPLAYTEXT)(struct AmiSSLIFace *Self, ASN1_STRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_DISPLAYTEXT)(struct AmiSSLIFace *Self, const ASN1_STRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*DISPLAYTEXT_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_PRINTABLESTRING * (*ASN1_PRINTABLESTRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_PRINTABLESTRING_free)(struct AmiSSLIFace *Self, ASN1_PRINTABLESTRING * a);
	APICALL ASN1_PRINTABLESTRING * (*d2i_ASN1_PRINTABLESTRING)(struct AmiSSLIFace *Self, ASN1_PRINTABLESTRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_PRINTABLESTRING)(struct AmiSSLIFace *Self, const ASN1_PRINTABLESTRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_PRINTABLESTRING_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_T61STRING * (*ASN1_T61STRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_T61STRING_free)(struct AmiSSLIFace *Self, ASN1_T61STRING * a);
	APICALL ASN1_T61STRING * (*d2i_ASN1_T61STRING)(struct AmiSSLIFace *Self, ASN1_T61STRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_T61STRING)(struct AmiSSLIFace *Self, const ASN1_T61STRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_T61STRING_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_IA5STRING * (*ASN1_IA5STRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_IA5STRING_free)(struct AmiSSLIFace *Self, ASN1_IA5STRING * a);
	APICALL ASN1_IA5STRING * (*d2i_ASN1_IA5STRING)(struct AmiSSLIFace *Self, ASN1_IA5STRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_IA5STRING)(struct AmiSSLIFace *Self, const ASN1_IA5STRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_IA5STRING_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_GENERALSTRING * (*ASN1_GENERALSTRING_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_GENERALSTRING_free)(struct AmiSSLIFace *Self, ASN1_GENERALSTRING * a);
	APICALL ASN1_GENERALSTRING * (*d2i_ASN1_GENERALSTRING)(struct AmiSSLIFace *Self, ASN1_GENERALSTRING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_GENERALSTRING)(struct AmiSSLIFace *Self, const ASN1_GENERALSTRING * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_GENERALSTRING_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_UTCTIME * (*ASN1_UTCTIME_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_UTCTIME_free)(struct AmiSSLIFace *Self, ASN1_UTCTIME * a);
	APICALL ASN1_UTCTIME * (*d2i_ASN1_UTCTIME)(struct AmiSSLIFace *Self, ASN1_UTCTIME ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_UTCTIME)(struct AmiSSLIFace *Self, const ASN1_UTCTIME * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_UTCTIME_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_GENERALIZEDTIME * (*ASN1_GENERALIZEDTIME_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_GENERALIZEDTIME_free)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * x);
	APICALL ASN1_GENERALIZEDTIME * (*d2i_ASN1_GENERALIZEDTIME)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_GENERALIZEDTIME)(struct AmiSSLIFace *Self, const ASN1_GENERALIZEDTIME * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_GENERALIZEDTIME_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_TIME * (*ASN1_TIME_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_TIME_free)(struct AmiSSLIFace *Self, ASN1_TIME * a);
	APICALL ASN1_TIME * (*d2i_ASN1_TIME)(struct AmiSSLIFace *Self, ASN1_TIME ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASN1_TIME)(struct AmiSSLIFace *Self, const ASN1_TIME * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASN1_TIME_it)(struct AmiSSLIFace *Self);
	APICALL ASN1_TIME * (*ASN1_TIME_set)(struct AmiSSLIFace *Self, ASN1_TIME * s, time_t t);
	APICALL int (*ASN1_TIME_check)(struct AmiSSLIFace *Self, const ASN1_TIME * t);
	APICALL ASN1_GENERALIZEDTIME * (*ASN1_TIME_to_generalizedtime)(struct AmiSSLIFace *Self, const ASN1_TIME * t, ASN1_GENERALIZEDTIME ** out);
	APTR i2d_ASN1_SET_UNIMPLEMENTED;
	APTR d2i_ASN1_SET_UNIMPLEMENTED;
	APICALL int (*i2a_ASN1_INTEGER)(struct AmiSSLIFace *Self, BIO * bp, const ASN1_INTEGER * a);
	APICALL int (*a2i_ASN1_INTEGER)(struct AmiSSLIFace *Self, BIO * bp, ASN1_INTEGER * bs, char * buf, int size);
	APICALL int (*i2a_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, BIO * bp, const ASN1_ENUMERATED * a);
	APICALL int (*a2i_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, BIO * bp, ASN1_ENUMERATED * bs, char * buf, int size);
	APICALL int (*i2a_ASN1_OBJECT)(struct AmiSSLIFace *Self, BIO * bp, const ASN1_OBJECT * a);
	APICALL int (*a2i_ASN1_STRING)(struct AmiSSLIFace *Self, BIO * bp, ASN1_STRING * bs, char * buf, int size);
	APICALL int (*i2a_ASN1_STRING)(struct AmiSSLIFace *Self, BIO * bp, const ASN1_STRING * a, int type);
	APICALL int (*i2t_ASN1_OBJECT)(struct AmiSSLIFace *Self, char * buf, int buf_len, const ASN1_OBJECT * a);
	APICALL int (*a2d_ASN1_OBJECT)(struct AmiSSLIFace *Self, unsigned char * out, int olen, const char * buf, int num);
	APICALL ASN1_OBJECT * (*ASN1_OBJECT_create)(struct AmiSSLIFace *Self, int nid, unsigned char * data, int len, const char * sn, const char * ln);
	APICALL int (*ASN1_INTEGER_set)(struct AmiSSLIFace *Self, ASN1_INTEGER * a, long v);
	APICALL long (*ASN1_INTEGER_get)(struct AmiSSLIFace *Self, const ASN1_INTEGER * a);
	APICALL ASN1_INTEGER * (*BN_to_ASN1_INTEGER)(struct AmiSSLIFace *Self, const BIGNUM * bn, ASN1_INTEGER * ai);
	APICALL BIGNUM * (*ASN1_INTEGER_to_BN)(struct AmiSSLIFace *Self, const ASN1_INTEGER * ai, BIGNUM * bn);
	APICALL int (*ASN1_ENUMERATED_set)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * a, long v);
	APICALL long (*ASN1_ENUMERATED_get)(struct AmiSSLIFace *Self, const ASN1_ENUMERATED * a);
	APICALL ASN1_ENUMERATED * (*BN_to_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, const BIGNUM * bn, ASN1_ENUMERATED * ai);
	APICALL BIGNUM * (*ASN1_ENUMERATED_to_BN)(struct AmiSSLIFace *Self, const ASN1_ENUMERATED * ai, BIGNUM * bn);
	APICALL int (*ASN1_PRINTABLE_type)(struct AmiSSLIFace *Self, const unsigned char * s, int max);
	APTR i2d_ASN1_bytes_UNIMPLEMENTED;
	APTR d2i_ASN1_bytes_UNIMPLEMENTED;
	APICALL unsigned long (*ASN1_tag2bit)(struct AmiSSLIFace *Self, int tag);
	APTR d2i_ASN1_type_bytes_UNIMPLEMENTED;
	APTR asn1_Finish_UNIMPLEMENTED;
	APICALL int (*ASN1_get_object)(struct AmiSSLIFace *Self, const unsigned char ** pp, long * plength, int * ptag, int * pclass, long omax);
	APICALL int (*ASN1_check_infinite_end)(struct AmiSSLIFace *Self, unsigned char ** p, long len);
	APICALL void (*ASN1_put_object)(struct AmiSSLIFace *Self, unsigned char ** pp, int constructed, int length, int tag, int xclass);
	APICALL int (*ASN1_object_size)(struct AmiSSLIFace *Self, int constructed, int length, int tag);
	APICALL void * (*ASN1_dup)(struct AmiSSLIFace *Self, i2d_of_void * i2d, d2i_of_void * d2i, const void * x);
	APICALL void * (*ASN1_item_dup)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, const void * x);
	APICALL int (*ASN1_STRING_to_UTF8)(struct AmiSSLIFace *Self, unsigned char ** out, const ASN1_STRING * in);
	APICALL void * (*ASN1_d2i_bio)(struct AmiSSLIFace *Self, void * (*xnew)(void), d2i_of_void * d2i, BIO * in, void ** x);
	APICALL void * (*ASN1_item_d2i_bio)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, BIO * in, void * x);
	APICALL int (*ASN1_i2d_bio)(struct AmiSSLIFace *Self, i2d_of_void * i2d, BIO * out, const void * x);
	APICALL int (*ASN1_item_i2d_bio)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, BIO * out, const void * x);
	APICALL int (*ASN1_UTCTIME_print)(struct AmiSSLIFace *Self, BIO * fp, const ASN1_UTCTIME * a);
	APICALL int (*ASN1_GENERALIZEDTIME_print)(struct AmiSSLIFace *Self, BIO * fp, const ASN1_GENERALIZEDTIME * a);
	APICALL int (*ASN1_TIME_print)(struct AmiSSLIFace *Self, BIO * fp, const ASN1_TIME * a);
	APICALL int (*ASN1_STRING_print)(struct AmiSSLIFace *Self, BIO * bp, const ASN1_STRING * v);
	APICALL int (*ASN1_STRING_print_ex)(struct AmiSSLIFace *Self, BIO * out, const ASN1_STRING * str, unsigned long flags);
	APICALL int (*ASN1_parse)(struct AmiSSLIFace *Self, BIO * bp, const unsigned char * pp, long len, int indent);
	APICALL int (*ASN1_parse_dump)(struct AmiSSLIFace *Self, BIO * bp, const unsigned char * pp, long len, int indent, int dump);
	APICALL const char * (*ASN1_tag2str)(struct AmiSSLIFace *Self, int tag);
	APTR i2d_ASN1_HEADER_UNIMPLEMENTED;
	APTR d2i_ASN1_HEADER_UNIMPLEMENTED;
	APTR ASN1_HEADER_new_UNIMPLEMENTED;
	APTR ASN1_HEADER_free_UNIMPLEMENTED;
	APICALL int (*ASN1_UNIVERSALSTRING_to_string)(struct AmiSSLIFace *Self, ASN1_UNIVERSALSTRING * s);
	APTR X509_asn1_meth_UNIMPLEMENTED;
	APTR RSAPrivateKey_asn1_meth_UNIMPLEMENTED;
	APTR ASN1_IA5STRING_asn1_meth_UNIMPLEMENTED;
	APTR ASN1_BIT_STRING_asn1_meth_UNIMPLEMENTED;
	APICALL int (*ASN1_TYPE_set_octetstring)(struct AmiSSLIFace *Self, ASN1_TYPE * a, unsigned char * data, int len);
	APICALL int (*ASN1_TYPE_get_octetstring)(struct AmiSSLIFace *Self, const ASN1_TYPE * a, unsigned char * data, int max_len);
	APICALL int (*ASN1_TYPE_set_int_octetstring)(struct AmiSSLIFace *Self, ASN1_TYPE * a, long num, unsigned char * data, int len);
	APICALL int (*ASN1_TYPE_get_int_octetstring)(struct AmiSSLIFace *Self, const ASN1_TYPE * a, long * num, unsigned char * data, int max_len);
	APTR ASN1_seq_unpack_UNIMPLEMENTED;
	APTR ASN1_seq_pack_UNIMPLEMENTED;
	APTR ASN1_unpack_string_UNIMPLEMENTED;
	APICALL void * (*ASN1_item_unpack)(struct AmiSSLIFace *Self, const ASN1_STRING * oct, const ASN1_ITEM * it);
	APTR ASN1_pack_string_UNIMPLEMENTED;
	APICALL ASN1_STRING * (*ASN1_item_pack)(struct AmiSSLIFace *Self, void * obj, const ASN1_ITEM * it, ASN1_OCTET_STRING ** oct);
	APICALL void (*ASN1_STRING_set_default_mask)(struct AmiSSLIFace *Self, unsigned long mask);
	APICALL int (*ASN1_STRING_set_default_mask_asc)(struct AmiSSLIFace *Self, const char * p);
	APICALL unsigned long (*ASN1_STRING_get_default_mask)(struct AmiSSLIFace *Self);
	APICALL int (*ASN1_mbstring_copy)(struct AmiSSLIFace *Self, ASN1_STRING ** out, const unsigned char * in, int len, int inform, unsigned long mask);
	APICALL int (*ASN1_mbstring_ncopy)(struct AmiSSLIFace *Self, ASN1_STRING ** out, const unsigned char * in, int len, int inform, unsigned long mask, long minsize, long maxsize);
	APICALL ASN1_STRING * (*ASN1_STRING_set_by_NID)(struct AmiSSLIFace *Self, ASN1_STRING ** out, const unsigned char * in, int inlen, int inform, int nid);
	APICALL ASN1_STRING_TABLE * (*ASN1_STRING_TABLE_get)(struct AmiSSLIFace *Self, int nid);
	APICALL int (*ASN1_STRING_TABLE_add)(struct AmiSSLIFace *Self, int a, long b, long c, unsigned long d, unsigned long e);
	APICALL void (*ASN1_STRING_TABLE_cleanup)(struct AmiSSLIFace *Self);
	APICALL ASN1_VALUE * (*ASN1_item_new)(struct AmiSSLIFace *Self, const ASN1_ITEM * it);
	APICALL void (*ASN1_item_free)(struct AmiSSLIFace *Self, ASN1_VALUE * val, const ASN1_ITEM * it);
	APICALL ASN1_VALUE * (*ASN1_item_d2i)(struct AmiSSLIFace *Self, ASN1_VALUE ** val, const unsigned char ** in, long len, const ASN1_ITEM * it);
	APICALL int (*ASN1_item_i2d)(struct AmiSSLIFace *Self, const ASN1_VALUE * val, unsigned char ** out, const ASN1_ITEM * it);
	APICALL void (*ASN1_add_oid_module)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ERR_load_ASN1_strings)(struct AmiSSLIFace *Self);
	APTR asn1_GetSequence_UNIMPLEMENTED;
	APTR asn1_add_error_UNIMPLEMENTED;
	APICALL const ASN1_ITEM * (*ASN1_BOOLEAN_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ASN1_TBOOLEAN_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ASN1_FBOOLEAN_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ASN1_SEQUENCE_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*CBIGNUM_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*BIGNUM_it)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const ASN1_ITEM * (*LONG_it)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const ASN1_ITEM * (*ZLONG_it)(struct AmiSSLIFace *Self);
	APICALL int (*ASN1_item_ex_new)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_ITEM * it);
	APICALL void (*ASN1_item_ex_free)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_ITEM * it);
	APTR ASN1_template_new_UNIMPLEMENTED;
	APTR ASN1_primitive_new_UNIMPLEMENTED;
	APTR ASN1_template_free_UNIMPLEMENTED;
	APTR ASN1_template_d2i_UNIMPLEMENTED;
	APICALL int (*ASN1_item_ex_d2i)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const unsigned char ** in, long len, const ASN1_ITEM * it, int tag, int aclass, char opt, ASN1_TLC * ctx);
	APICALL int (*ASN1_item_ex_i2d)(struct AmiSSLIFace *Self, const ASN1_VALUE ** pval, unsigned char ** out, const ASN1_ITEM * it, int tag, int aclass);
	APTR ASN1_template_i2d_UNIMPLEMENTED;
	APTR ASN1_primitive_free_UNIMPLEMENTED;
	APTR asn1_ex_i2c_UNIMPLEMENTED;
	APTR asn1_ex_c2i_UNIMPLEMENTED;
	APTR asn1_get_choice_selector_UNIMPLEMENTED;
	APTR asn1_set_choice_selector_UNIMPLEMENTED;
	APTR asn1_get_field_ptr_UNIMPLEMENTED;
	APTR asn1_do_adb_UNIMPLEMENTED;
	APTR asn1_do_lock_UNIMPLEMENTED;
	APTR asn1_enc_init_UNIMPLEMENTED;
	APTR asn1_enc_free_UNIMPLEMENTED;
	APTR asn1_enc_restore_UNIMPLEMENTED;
	APTR asn1_enc_save_UNIMPLEMENTED;
	APICALL size_t (*BIO_ctrl_pending)(struct AmiSSLIFace *Self, BIO * b);
	APICALL size_t (*BIO_ctrl_wpending)(struct AmiSSLIFace *Self, BIO * b);
	APICALL size_t (*BIO_ctrl_get_write_guarantee)(struct AmiSSLIFace *Self, BIO * b);
	APICALL size_t (*BIO_ctrl_get_read_request)(struct AmiSSLIFace *Self, BIO * b);
	APICALL int (*BIO_ctrl_reset_read_request)(struct AmiSSLIFace *Self, BIO * b);
	APICALL int (*BIO_set_ex_data)(struct AmiSSLIFace *Self, BIO * bio, int idx, void * data);
	APICALL void * (*BIO_get_ex_data)(struct AmiSSLIFace *Self, const BIO * bio, int idx);
	APICALL int (*OBSOLETE_BIO_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dup_func, CRYPTO_EX_free * free_func);
	APICALL uint64_t (*BIO_number_read)(struct AmiSSLIFace *Self, BIO * bio);
	APICALL uint64_t (*BIO_number_written)(struct AmiSSLIFace *Self, BIO * bio);
	APICALL const BIO_METHOD * (*BIO_s_file)(struct AmiSSLIFace *Self);
	APICALL BIO * (*BIO_new_file)(struct AmiSSLIFace *Self, const char * filename, const char * mode);
	APICALL BIO * (*BIO_new_fp_amiga)(struct AmiSSLIFace *Self, BPTR stream, int close_flag);
	APICALL BIO * (*BIO_new)(struct AmiSSLIFace *Self, const BIO_METHOD * type);
	APTR BIO_set_UNIMPLEMENTED;
	APICALL int (*BIO_free)(struct AmiSSLIFace *Self, BIO * a);
	APICALL void (*BIO_vfree)(struct AmiSSLIFace *Self, BIO * a);
	APICALL int (*BIO_read)(struct AmiSSLIFace *Self, BIO * b, void * data, int dlen);
	APICALL int (*BIO_gets)(struct AmiSSLIFace *Self, BIO * bp, char * buf, int size);
	APICALL int (*BIO_write)(struct AmiSSLIFace *Self, BIO * b, const void * data, int dlen);
	APICALL int (*BIO_puts)(struct AmiSSLIFace *Self, BIO * bp, const char * buf);
	APICALL int (*BIO_indent)(struct AmiSSLIFace *Self, BIO * b, int indent, int max);
	APICALL long (*BIO_ctrl)(struct AmiSSLIFace *Self, BIO * bp, int cmd, long larg, void * parg);
	APICALL long (*BIO_callback_ctrl)(struct AmiSSLIFace *Self, BIO * b, int cmd, BIO_info_cb * fp);
	APICALL void * (*BIO_ptr_ctrl)(struct AmiSSLIFace *Self, BIO * bp, int cmd, long larg);
	APICALL long (*BIO_int_ctrl)(struct AmiSSLIFace *Self, BIO * bp, int cmd, long larg, int iarg);
	APICALL BIO * (*BIO_push)(struct AmiSSLIFace *Self, BIO * b, BIO * append);
	APICALL BIO * (*BIO_pop)(struct AmiSSLIFace *Self, BIO * b);
	APICALL void (*BIO_free_all)(struct AmiSSLIFace *Self, BIO * a);
	APICALL BIO * (*BIO_find_type)(struct AmiSSLIFace *Self, BIO * b, int bio_type);
	APICALL BIO * (*BIO_next)(struct AmiSSLIFace *Self, BIO * b);
	APICALL BIO * (*BIO_get_retry_BIO)(struct AmiSSLIFace *Self, BIO * bio, int * reason);
	APICALL int (*BIO_get_retry_reason)(struct AmiSSLIFace *Self, BIO * bio);
	APICALL BIO * (*BIO_dup_chain)(struct AmiSSLIFace *Self, BIO * in);
	APICALL int (*BIO_nread0)(struct AmiSSLIFace *Self, BIO * bio, char ** buf);
	APICALL int (*BIO_nread)(struct AmiSSLIFace *Self, BIO * bio, char ** buf, int num);
	APICALL int (*BIO_nwrite0)(struct AmiSSLIFace *Self, BIO * bio, char ** buf);
	APICALL int (*BIO_nwrite)(struct AmiSSLIFace *Self, BIO * bio, char ** buf, int num);
	DEPRECATED APICALL long (*BIO_debug_callback)(struct AmiSSLIFace *Self, BIO * bio, int cmd, const char * argp, int argi, long argl, long ret);
	APICALL const BIO_METHOD * (*BIO_s_mem)(struct AmiSSLIFace *Self);
	APICALL BIO * (*BIO_new_mem_buf)(struct AmiSSLIFace *Self, const void * buf, int len);
	APICALL const BIO_METHOD * (*BIO_s_socket)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_s_connect)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_s_accept)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_s_fd)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_s_log)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_s_bio)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_s_null)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_f_null)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_f_buffer)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_f_nbio_test)(struct AmiSSLIFace *Self);
	APICALL int (*BIO_sock_should_retry)(struct AmiSSLIFace *Self, int i);
	APICALL int (*BIO_sock_non_fatal_error)(struct AmiSSLIFace *Self, int error);
	APICALL int (*BIO_fd_should_retry)(struct AmiSSLIFace *Self, int i);
	APICALL int (*BIO_fd_non_fatal_error)(struct AmiSSLIFace *Self, int error);
	APICALL int (*BIO_dump)(struct AmiSSLIFace *Self, BIO * b, const void * bytes, int len);
	APICALL int (*BIO_dump_indent)(struct AmiSSLIFace *Self, BIO * b, const void * bytes, int len, int indent);
	DEPRECATED APICALL struct hostent * (*BIO_gethostbyname)(struct AmiSSLIFace *Self, const char * name);
	APICALL int (*BIO_sock_error)(struct AmiSSLIFace *Self, int sock);
	APICALL int (*BIO_socket_ioctl)(struct AmiSSLIFace *Self, int fd, long type, void * arg);
	APICALL int (*BIO_socket_nbio)(struct AmiSSLIFace *Self, int fd, int mode);
	DEPRECATED APICALL int (*BIO_get_port)(struct AmiSSLIFace *Self, const char * str, unsigned short * port_ptr);
	DEPRECATED APICALL int (*BIO_get_host_ip)(struct AmiSSLIFace *Self, const char * str, unsigned char * ip);
	DEPRECATED APICALL int (*BIO_get_accept_socket)(struct AmiSSLIFace *Self, char * host_port, int mode);
	DEPRECATED APICALL int (*BIO_accept)(struct AmiSSLIFace *Self, int sock, char ** ip_port);
	APICALL int (*BIO_sock_init)(struct AmiSSLIFace *Self);
	APTR BIO_sock_cleanup_UNIMPLEMENTED;
	APICALL int (*BIO_set_tcp_ndelay)(struct AmiSSLIFace *Self, int sock, int turn_on);
	APICALL BIO * (*BIO_new_socket)(struct AmiSSLIFace *Self, int sock, int close_flag);
	APICALL BIO * (*BIO_new_fd)(struct AmiSSLIFace *Self, int fd, int close_flag);
	APICALL BIO * (*BIO_new_connect)(struct AmiSSLIFace *Self, const char * host_port);
	APICALL BIO * (*BIO_new_accept)(struct AmiSSLIFace *Self, const char * host_port);
	APICALL int (*BIO_new_bio_pair)(struct AmiSSLIFace *Self, BIO ** bio1, size_t writebuf1, BIO ** bio2, size_t writebuf2);
	APICALL void (*BIO_copy_next_retry)(struct AmiSSLIFace *Self, BIO * b);
	APICALL int (*BIO_vprintf)(struct AmiSSLIFace *Self, BIO * bio, const char * format, long * args);
	APICALL int (*BIO_printf)(struct AmiSSLIFace *Self, BIO * bio, const char * format, ...);
	APICALL int (*BIO_vsnprintf)(struct AmiSSLIFace *Self, char * buf, size_t n, const char * format, long * args);
	APICALL int (*BIO_snprintf)(struct AmiSSLIFace *Self, char * buf, size_t n, const char * format, ...);
	DEPRECATED APICALL int (*ERR_load_BIO_strings)(struct AmiSSLIFace *Self);
	APICALL const BIGNUM * (*BN_value_one)(struct AmiSSLIFace *Self);
	APICALL char * (*BN_options)(struct AmiSSLIFace *Self);
	APICALL BN_CTX * (*BN_CTX_new)(struct AmiSSLIFace *Self);
	APTR BN_CTX_init_UNIMPLEMENTED;
	APICALL void (*BN_CTX_free)(struct AmiSSLIFace *Self, BN_CTX * c);
	APICALL void (*BN_CTX_start)(struct AmiSSLIFace *Self, BN_CTX * ctx);
	APICALL BIGNUM * (*BN_CTX_get)(struct AmiSSLIFace *Self, BN_CTX * ctx);
	APICALL void (*BN_CTX_end)(struct AmiSSLIFace *Self, BN_CTX * ctx);
	APICALL int (*BN_rand)(struct AmiSSLIFace *Self, BIGNUM * rnd, int bits, int top, int bottom);
	DEPRECATED APICALL int (*BN_pseudo_rand)(struct AmiSSLIFace *Self, BIGNUM * rnd, int bits, int top, int bottom);
	APICALL int (*BN_rand_range)(struct AmiSSLIFace *Self, BIGNUM * rnd, const BIGNUM * range);
	DEPRECATED APICALL int (*BN_pseudo_rand_range)(struct AmiSSLIFace *Self, BIGNUM * rnd, const BIGNUM * range);
	APICALL int (*BN_num_bits)(struct AmiSSLIFace *Self, const BIGNUM * a);
	APICALL int (*BN_num_bits_word)(struct AmiSSLIFace *Self, BN_ULONG a);
	APICALL BIGNUM * (*BN_new)(struct AmiSSLIFace *Self);
	APTR BN_init_UNIMPLEMENTED;
	APICALL void (*BN_clear_free)(struct AmiSSLIFace *Self, BIGNUM * a);
	APICALL BIGNUM * (*BN_copy)(struct AmiSSLIFace *Self, BIGNUM * a, const BIGNUM * b);
	APICALL void (*BN_swap)(struct AmiSSLIFace *Self, BIGNUM * a, BIGNUM * b);
	APICALL BIGNUM * (*BN_bin2bn)(struct AmiSSLIFace *Self, const unsigned char * s, int len, BIGNUM * ret);
	APICALL int (*BN_bn2bin)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to);
	APICALL BIGNUM * (*BN_mpi2bn)(struct AmiSSLIFace *Self, const unsigned char * s, int len, BIGNUM * ret);
	APICALL int (*BN_bn2mpi)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to);
	APICALL int (*BN_sub)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
	APICALL int (*BN_usub)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
	APICALL int (*BN_uadd)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
	APICALL int (*BN_add)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
	APICALL int (*BN_mul)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, BN_CTX * ctx);
	APICALL int (*BN_sqr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, BN_CTX * ctx);
	APICALL int (*BN_div)(struct AmiSSLIFace *Self, BIGNUM * dv, BIGNUM * rem, const BIGNUM * m, const BIGNUM * d, BN_CTX * ctx);
	APICALL int (*BN_nnmod)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * m, const BIGNUM * d, BN_CTX * ctx);
	APICALL int (*BN_mod_add)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * m, BN_CTX * ctx);
	APICALL int (*BN_mod_add_quick)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * m);
	APICALL int (*BN_mod_sub)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * m, BN_CTX * ctx);
	APICALL int (*BN_mod_sub_quick)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * m);
	APICALL int (*BN_mod_mul)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * m, BN_CTX * ctx);
	APICALL int (*BN_mod_sqr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * m, BN_CTX * ctx);
	APICALL int (*BN_mod_lshift1)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * m, BN_CTX * ctx);
	APICALL int (*BN_mod_lshift1_quick)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * m);
	APICALL int (*BN_mod_lshift)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, int n, const BIGNUM * m, BN_CTX * ctx);
	APICALL int (*BN_mod_lshift_quick)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, int n, const BIGNUM * m);
	APICALL BN_ULONG (*BN_mod_word)(struct AmiSSLIFace *Self, const BIGNUM * a, BN_ULONG w);
	APICALL BN_ULONG (*BN_div_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
	APICALL int (*BN_mul_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
	APICALL int (*BN_add_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
	APICALL int (*BN_sub_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
	APICALL int (*BN_set_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
	APICALL BN_ULONG (*BN_get_word)(struct AmiSSLIFace *Self, const BIGNUM * a);
	APICALL int (*BN_cmp)(struct AmiSSLIFace *Self, const BIGNUM * a, const BIGNUM * b);
	APICALL void (*BN_free)(struct AmiSSLIFace *Self, BIGNUM * a);
	APICALL int (*BN_is_bit_set)(struct AmiSSLIFace *Self, const BIGNUM * a, int n);
	APICALL int (*BN_lshift)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, int n);
	APICALL int (*BN_lshift1)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a);
	APICALL int (*BN_exp)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx);
	APICALL int (*BN_mod_exp)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx);
	APICALL int (*BN_mod_exp_mont)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx, BN_MONT_CTX * m_ctx);
	APICALL int (*BN_mod_exp_mont_word)(struct AmiSSLIFace *Self, BIGNUM * r, BN_ULONG a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx, BN_MONT_CTX * m_ctx);
	APICALL int (*BN_mod_exp2_mont)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a1, const BIGNUM * p1, const BIGNUM * a2, const BIGNUM * p2, const BIGNUM * m, BN_CTX * ctx, BN_MONT_CTX * m_ctx);
	APICALL int (*BN_mod_exp_simple)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx);
	APICALL int (*BN_mask_bits)(struct AmiSSLIFace *Self, BIGNUM * a, int n);
	APICALL int (*BN_print)(struct AmiSSLIFace *Self, BIO * fp, const BIGNUM * a);
	APICALL int (*BN_reciprocal)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * m, int len, BN_CTX * ctx);
	APICALL int (*BN_rshift)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, int n);
	APICALL int (*BN_rshift1)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a);
	APICALL void (*BN_clear)(struct AmiSSLIFace *Self, BIGNUM * a);
	APICALL BIGNUM * (*BN_dup)(struct AmiSSLIFace *Self, const BIGNUM * a);
	APICALL int (*BN_ucmp)(struct AmiSSLIFace *Self, const BIGNUM * a, const BIGNUM * b);
	APICALL int (*BN_set_bit)(struct AmiSSLIFace *Self, BIGNUM * a, int n);
	APICALL int (*BN_clear_bit)(struct AmiSSLIFace *Self, BIGNUM * a, int n);
	APICALL char * (*BN_bn2hex)(struct AmiSSLIFace *Self, const BIGNUM * a);
	APICALL char * (*BN_bn2dec)(struct AmiSSLIFace *Self, const BIGNUM * a);
	APICALL int (*BN_hex2bn)(struct AmiSSLIFace *Self, BIGNUM ** a, const char * str);
	APICALL int (*BN_dec2bn)(struct AmiSSLIFace *Self, BIGNUM ** a, const char * str);
	APICALL int (*BN_gcd)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, BN_CTX * ctx);
	APICALL int (*BN_kronecker)(struct AmiSSLIFace *Self, const BIGNUM * a, const BIGNUM * b, BN_CTX * ctx);
	APICALL BIGNUM * (*BN_mod_inverse)(struct AmiSSLIFace *Self, BIGNUM * ret, const BIGNUM * a, const BIGNUM * n, BN_CTX * ctx);
	APICALL BIGNUM * (*BN_mod_sqrt)(struct AmiSSLIFace *Self, BIGNUM * ret, const BIGNUM * a, const BIGNUM * n, BN_CTX * ctx);
	DEPRECATED APICALL BIGNUM * (*BN_generate_prime)(struct AmiSSLIFace *Self, BIGNUM * ret, int bits, int safe, const BIGNUM * add, const BIGNUM * rem, void (*callback)(int, int, void *), void * cb_arg);
	DEPRECATED APICALL int (*BN_is_prime)(struct AmiSSLIFace *Self, const BIGNUM * p, int nchecks, void (*callback)(int, int, void *), BN_CTX * ctx, void * cb_arg);
	DEPRECATED APICALL int (*BN_is_prime_fasttest)(struct AmiSSLIFace *Self, const BIGNUM * p, int nchecks, void (*callback)(int, int, void *), BN_CTX * ctx, void * cb_arg, int do_trial_division);
	APICALL BN_MONT_CTX * (*BN_MONT_CTX_new)(struct AmiSSLIFace *Self);
	APTR BN_MONT_CTX_init_UNIMPLEMENTED;
	APICALL int (*BN_mod_mul_montgomery)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, BN_MONT_CTX * mont, BN_CTX * ctx);
	APICALL int (*BN_from_montgomery)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, BN_MONT_CTX * mont, BN_CTX * ctx);
	APICALL void (*BN_MONT_CTX_free)(struct AmiSSLIFace *Self, BN_MONT_CTX * mont);
	APICALL int (*BN_MONT_CTX_set)(struct AmiSSLIFace *Self, BN_MONT_CTX * mont, const BIGNUM * mod, BN_CTX * ctx);
	APICALL BN_MONT_CTX * (*BN_MONT_CTX_copy)(struct AmiSSLIFace *Self, BN_MONT_CTX * to, BN_MONT_CTX * from);
	APICALL BN_BLINDING * (*BN_BLINDING_new)(struct AmiSSLIFace *Self, const BIGNUM * A, const BIGNUM * Ai, BIGNUM * mod);
	APICALL void (*BN_BLINDING_free)(struct AmiSSLIFace *Self, BN_BLINDING * b);
	APICALL int (*BN_BLINDING_update)(struct AmiSSLIFace *Self, BN_BLINDING * b, BN_CTX * ctx);
	APICALL int (*BN_BLINDING_convert)(struct AmiSSLIFace *Self, BIGNUM * n, BN_BLINDING * r, BN_CTX * ctx);
	APICALL int (*BN_BLINDING_invert)(struct AmiSSLIFace *Self, BIGNUM * n, BN_BLINDING * b, BN_CTX * ctx);
	DEPRECATED APICALL void (*BN_set_params)(struct AmiSSLIFace *Self, int mul, int high, int low, int mont);
	DEPRECATED APICALL int (*BN_get_params)(struct AmiSSLIFace *Self, int which);
	APTR BN_RECP_CTX_init_UNIMPLEMENTED;
	APICALL BN_RECP_CTX * (*BN_RECP_CTX_new)(struct AmiSSLIFace *Self);
	APICALL void (*BN_RECP_CTX_free)(struct AmiSSLIFace *Self, BN_RECP_CTX * recp);
	APICALL int (*BN_RECP_CTX_set)(struct AmiSSLIFace *Self, BN_RECP_CTX * recp, const BIGNUM * rdiv, BN_CTX * ctx);
	APICALL int (*BN_mod_mul_reciprocal)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * x, const BIGNUM * y, BN_RECP_CTX * recp, BN_CTX * ctx);
	APICALL int (*BN_mod_exp_recp)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx);
	APICALL int (*BN_div_recp)(struct AmiSSLIFace *Self, BIGNUM * dv, BIGNUM * rem, const BIGNUM * m, BN_RECP_CTX * recp, BN_CTX * ctx);
	APTR bn_expand2_UNIMPLEMENTED;
	APTR bn_dup_expand_UNIMPLEMENTED;
	APTR bn_mul_add_words_UNIMPLEMENTED;
	APTR bn_mul_words_UNIMPLEMENTED;
	APTR bn_sqr_words_UNIMPLEMENTED;
	APTR bn_div_words_UNIMPLEMENTED;
	APTR bn_add_words_UNIMPLEMENTED;
	APTR bn_sub_words_UNIMPLEMENTED;
	APICALL int (*BN_bntest_rand)(struct AmiSSLIFace *Self, BIGNUM * rnd, int bits, int top, int bottom);
	DEPRECATED APICALL int (*ERR_load_BN_strings)(struct AmiSSLIFace *Self);
	APICALL BUF_MEM * (*BUF_MEM_new)(struct AmiSSLIFace *Self);
	APICALL void (*BUF_MEM_free)(struct AmiSSLIFace *Self, BUF_MEM * a);
	APICALL size_t (*BUF_MEM_grow)(struct AmiSSLIFace *Self, BUF_MEM * str, size_t len);
	APICALL size_t (*BUF_MEM_grow_clean)(struct AmiSSLIFace *Self, BUF_MEM * str, size_t len);
	APICALL char * (*OBSOLETE_BUF_strdup)(struct AmiSSLIFace *Self, const char * str);
	APICALL size_t (*OBSOLETE_BUF_strlcpy)(struct AmiSSLIFace *Self, char * dst, const char * src, size_t siz);
	APICALL size_t (*OBSOLETE_BUF_strlcat)(struct AmiSSLIFace *Self, char * dst, const char * src, size_t siz);
	DEPRECATED APICALL int (*ERR_load_BUF_strings)(struct AmiSSLIFace *Self);
	APICALL COMP_CTX * (*COMP_CTX_new)(struct AmiSSLIFace *Self, COMP_METHOD * meth);
	APICALL void (*COMP_CTX_free)(struct AmiSSLIFace *Self, COMP_CTX * ctx);
	APICALL int (*COMP_compress_block)(struct AmiSSLIFace *Self, COMP_CTX * ctx, unsigned char * out, int olen, unsigned char * in, int ilen);
	APICALL int (*COMP_expand_block)(struct AmiSSLIFace *Self, COMP_CTX * ctx, unsigned char * out, int olen, unsigned char * in, int ilen);
	APTR COMP_rle_UNIMPLEMENTED;
	APICALL COMP_METHOD * (*COMP_zlib)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ERR_load_COMP_strings)(struct AmiSSLIFace *Self);
	APICALL int (*CONF_set_default_method)(struct AmiSSLIFace *Self, CONF_METHOD * meth);
	APICALL void (*CONF_set_nconf)(struct AmiSSLIFace *Self, CONF * conf, LHASH_OF(CONF_VALUE) * hash);
	APICALL LHASH_OF(CONF_VALUE) * (*CONF_load)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf, const char * file, long * eline);
	APICALL LHASH_OF(CONF_VALUE) * (*CONF_load_bio)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf, BIO * bp, long * eline);
	APICALL STACK_OF(CONF_VALUE) * (*CONF_get_section)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf, const char * section);
	APICALL char * (*CONF_get_string)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf, const char * group, const char * name);
	APICALL long (*CONF_get_number)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf, const char * group, const char * name);
	APICALL void (*CONF_free)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf);
	APICALL int (*CONF_dump_bio)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf, BIO * out);
	DEPRECATED APICALL void (*OPENSSL_config)(struct AmiSSLIFace *Self, const char * config_name);
	DEPRECATED APICALL void (*OBSOLETE_OPENSSL_no_config)(struct AmiSSLIFace *Self);
	APICALL CONF * (*NCONF_new)(struct AmiSSLIFace *Self, CONF_METHOD * meth);
	APICALL CONF_METHOD * (*NCONF_default)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL CONF_METHOD * (*NCONF_WIN32)(struct AmiSSLIFace *Self);
	APICALL void (*NCONF_free)(struct AmiSSLIFace *Self, CONF * conf);
	APICALL void (*NCONF_free_data)(struct AmiSSLIFace *Self, CONF * conf);
	APICALL int (*NCONF_load)(struct AmiSSLIFace *Self, CONF * conf, const char * file, long * eline);
	APICALL int (*NCONF_load_bio)(struct AmiSSLIFace *Self, CONF * conf, BIO * bp, long * eline);
	APICALL STACK_OF(CONF_VALUE) * (*NCONF_get_section)(struct AmiSSLIFace *Self, const CONF * conf, const char * section);
	APICALL char * (*NCONF_get_string)(struct AmiSSLIFace *Self, const CONF * conf, const char * group, const char * name);
	APICALL int (*NCONF_get_number_e)(struct AmiSSLIFace *Self, const CONF * conf, const char * group, const char * name, long * result);
	APICALL int (*NCONF_dump_bio)(struct AmiSSLIFace *Self, const CONF * conf, BIO * out);
	APICALL int (*CONF_modules_load)(struct AmiSSLIFace *Self, const CONF * cnf, const char * appname, unsigned long flags);
	APICALL int (*CONF_modules_load_file)(struct AmiSSLIFace *Self, const char * filename, const char * appname, unsigned long flags);
	APICALL void (*CONF_modules_unload)(struct AmiSSLIFace *Self, int all);
	APICALL void (*CONF_modules_finish)(struct AmiSSLIFace *Self);
	APTR CONF_modules_free_UNIMPLEMENTED;
	APICALL int (*CONF_module_add)(struct AmiSSLIFace *Self, const char * name, conf_init_func * ifunc, conf_finish_func * ffunc);
	APICALL const char * (*CONF_imodule_get_name)(struct AmiSSLIFace *Self, const CONF_IMODULE * md);
	APICALL const char * (*CONF_imodule_get_value)(struct AmiSSLIFace *Self, const CONF_IMODULE * md);
	APICALL void * (*CONF_imodule_get_usr_data)(struct AmiSSLIFace *Self, const CONF_IMODULE * md);
	APICALL void (*CONF_imodule_set_usr_data)(struct AmiSSLIFace *Self, CONF_IMODULE * md, void * usr_data);
	APICALL CONF_MODULE * (*CONF_imodule_get_module)(struct AmiSSLIFace *Self, const CONF_IMODULE * md);
	APICALL unsigned long (*CONF_imodule_get_flags)(struct AmiSSLIFace *Self, const CONF_IMODULE * md);
	APICALL void (*CONF_imodule_set_flags)(struct AmiSSLIFace *Self, CONF_IMODULE * md, unsigned long flags);
	APICALL void * (*CONF_module_get_usr_data)(struct AmiSSLIFace *Self, CONF_MODULE * pmod);
	APICALL void (*CONF_module_set_usr_data)(struct AmiSSLIFace *Self, CONF_MODULE * pmod, void * usr_data);
	APICALL char * (*CONF_get1_default_config_file)(struct AmiSSLIFace *Self);
	APICALL int (*CONF_parse_list)(struct AmiSSLIFace *Self, const char * list, int sep, int nospc, int (*list_cb)(const char *elem, int len, void *usr), void * arg);
	APICALL void (*OPENSSL_load_builtin_modules)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ERR_load_CONF_strings)(struct AmiSSLIFace *Self);
	APTR _CONF_new_section_UNIMPLEMENTED;
	APTR _CONF_get_section_UNIMPLEMENTED;
	APTR _CONF_get_section_values_UNIMPLEMENTED;
	APTR _CONF_add_string_UNIMPLEMENTED;
	APTR _CONF_get_string_UNIMPLEMENTED;
	APTR _CONF_new_data_UNIMPLEMENTED;
	APTR _CONF_free_data_UNIMPLEMENTED;
	APTR CRYPTO_mem_ctrl_UNIMPLEMENTED;
	APTR CRYPTO_is_mem_check_on_UNIMPLEMENTED;
	APICALL const char * (*OBSOLETE_SSLeay_version)(struct AmiSSLIFace *Self, int type);
	APICALL unsigned long (*OBSOLETE_SSLeay)(struct AmiSSLIFace *Self);
	APICALL int (*OPENSSL_issetugid)(struct AmiSSLIFace *Self);
	APTR CRYPTO_get_ex_data_implementation_UNIMPLEMENTED;
	APTR CRYPTO_set_ex_data_implementation_UNIMPLEMENTED;
	APTR CRYPTO_ex_data_new_class_UNIMPLEMENTED;
	APICALL int (*CRYPTO_get_ex_new_index)(struct AmiSSLIFace *Self, int class_index, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dup_func, CRYPTO_EX_free * free_func);
	APICALL int (*CRYPTO_new_ex_data)(struct AmiSSLIFace *Self, int class_index, void * obj, CRYPTO_EX_DATA * ad);
	APICALL int (*CRYPTO_dup_ex_data)(struct AmiSSLIFace *Self, int class_index, CRYPTO_EX_DATA * to, const CRYPTO_EX_DATA * from);
	APICALL void (*CRYPTO_free_ex_data)(struct AmiSSLIFace *Self, int class_index, void * obj, CRYPTO_EX_DATA * ad);
	APICALL int (*CRYPTO_set_ex_data)(struct AmiSSLIFace *Self, CRYPTO_EX_DATA * ad, int idx, void * val);
	APICALL void * (*CRYPTO_get_ex_data)(struct AmiSSLIFace *Self, const CRYPTO_EX_DATA * ad, int idx);
	APTR CRYPTO_cleanup_all_ex_data_UNIMPLEMENTED;
	APTR CRYPTO_get_new_lockid_UNIMPLEMENTED;
	APTR CRYPTO_num_locks_UNIMPLEMENTED;
	APTR CRYPTO_lock_UNIMPLEMENTED;
	APTR CRYPTO_set_locking_callback_UNIMPLEMENTED;
	APTR CRYPTO_get_locking_callback_UNIMPLEMENTED;
	APTR CRYPTO_set_add_lock_callback_UNIMPLEMENTED;
	APTR CRYPTO_get_add_lock_callback_UNIMPLEMENTED;
	APTR CRYPTO_set_id_callback_UNIMPLEMENTED;
	APTR CRYPTO_get_id_callback_UNIMPLEMENTED;
	APTR CRYPTO_thread_id_UNIMPLEMENTED;
	APTR CRYPTO_get_lock_name_UNIMPLEMENTED;
	APTR CRYPTO_add_lock_UNIMPLEMENTED;
	APTR CRYPTO_get_new_dynlockid_UNIMPLEMENTED;
	APTR CRYPTO_destroy_dynlockid_UNIMPLEMENTED;
	APTR CRYPTO_get_dynlock_value_UNIMPLEMENTED;
	APTR CRYPTO_set_dynlock_create_callback_UNIMPLEMENTED;
	APTR CRYPTO_set_dynlock_lock_callback_UNIMPLEMENTED;
	APTR CRYPTO_set_dynlock_destroy_callback_UNIMPLEMENTED;
	APTR CRYPTO_get_dynlock_create_callback_UNIMPLEMENTED;
	APTR CRYPTO_get_dynlock_lock_callback_UNIMPLEMENTED;
	APTR CRYPTO_get_dynlock_destroy_callback_UNIMPLEMENTED;
	APICALL int (*CRYPTO_set_mem_functions)(struct AmiSSLIFace *Self, CRYPTO_malloc_fn malloc_fn, CRYPTO_realloc_fn realloc_fn, CRYPTO_free_fn free_fn);
	APTR CRYPTO_set_locked_mem_functions_UNIMPLEMENTED;
	APTR CRYPTO_set_mem_ex_functions_UNIMPLEMENTED;
	APTR CRYPTO_set_locked_mem_ex_functions_UNIMPLEMENTED;
	APTR CRYPTO_set_mem_debug_functions_UNIMPLEMENTED;
	APICALL void (*CRYPTO_get_mem_functions)(struct AmiSSLIFace *Self, CRYPTO_malloc_fn * malloc_fn, CRYPTO_realloc_fn * realloc_fn, CRYPTO_free_fn * free_fn);
	APTR CRYPTO_get_locked_mem_functions_UNIMPLEMENTED;
	APTR CRYPTO_get_mem_ex_functions_UNIMPLEMENTED;
	APTR CRYPTO_get_locked_mem_ex_functions_UNIMPLEMENTED;
	APTR CRYPTO_get_mem_debug_functions_UNIMPLEMENTED;
	APTR CRYPTO_malloc_locked_UNIMPLEMENTED;
	APTR CRYPTO_free_locked_UNIMPLEMENTED;
	APICALL void * (*CRYPTO_malloc)(struct AmiSSLIFace *Self, size_t num, const char * file, int line);
	APICALL void (*CRYPTO_free)(struct AmiSSLIFace *Self, void * str, const char * file, int line);
	APICALL void * (*CRYPTO_realloc)(struct AmiSSLIFace *Self, void * addr, size_t num, const char * file, int line);
	APTR CRYPTO_realloc_clean_UNIMPLEMENTED;
	APTR CRYPTO_remalloc_UNIMPLEMENTED;
	APICALL void (*OPENSSL_cleanse)(struct AmiSSLIFace *Self, void * ptr, size_t len);
	APTR CRYPTO_set_mem_debug_options_UNIMPLEMENTED;
	APTR CRYPTO_get_mem_debug_options_UNIMPLEMENTED;
	APTR CRYPTO_push_info__UNIMPLEMENTED;
	APTR CRYPTO_pop_info_UNIMPLEMENTED;
	APTR CRYPTO_remove_all_info_UNIMPLEMENTED;
	APTR CRYPTO_dbg_malloc_UNIMPLEMENTED;
	APTR CRYPTO_dbg_realloc_UNIMPLEMENTED;
	APTR CRYPTO_dbg_free_UNIMPLEMENTED;
	APTR CRYPTO_dbg_set_options_UNIMPLEMENTED;
	APTR CRYPTO_dbg_get_options_UNIMPLEMENTED;
	APTR CRYPTO_mem_leaks_UNIMPLEMENTED;
	APTR CRYPTO_mem_leaks_cb_UNIMPLEMENTED;
	APTR OpenSSLDie_UNIMPLEMENTED;
	DEPRECATED APICALL int (*ERR_load_CRYPTO_strings)(struct AmiSSLIFace *Self);
	APTR DSO_new_UNIMPLEMENTED;
	APTR DSO_new_method_UNIMPLEMENTED;
	APTR DSO_free_UNIMPLEMENTED;
	APTR DSO_flags_UNIMPLEMENTED;
	APTR DSO_up_ref_UNIMPLEMENTED;
	APTR DSO_ctrl_UNIMPLEMENTED;
	APTR DSO_set_name_converter_UNIMPLEMENTED;
	APTR DSO_get_filename_UNIMPLEMENTED;
	APTR DSO_set_filename_UNIMPLEMENTED;
	APTR DSO_convert_filename_UNIMPLEMENTED;
	APTR DSO_get_loaded_filename_UNIMPLEMENTED;
	APTR DSO_set_default_method_UNIMPLEMENTED;
	APTR DSO_get_default_method_UNIMPLEMENTED;
	APTR DSO_get_method_UNIMPLEMENTED;
	APTR DSO_set_method_UNIMPLEMENTED;
	APTR DSO_load_UNIMPLEMENTED;
	APTR DSO_bind_var_UNIMPLEMENTED;
	APTR DSO_bind_func_UNIMPLEMENTED;
	APTR DSO_METHOD_openssl_UNIMPLEMENTED;
	APTR DSO_METHOD_null_UNIMPLEMENTED;
	APTR DSO_METHOD_dlfcn_UNIMPLEMENTED;
	APTR DSO_METHOD_dl_UNIMPLEMENTED;
	APTR DSO_METHOD_win32_UNIMPLEMENTED;
	APTR DSO_METHOD_vms_UNIMPLEMENTED;
	APTR ERR_load_DSO_strings_UNIMPLEMENTED;
	DEPRECATED APICALL const EC_METHOD * (*EC_GFp_simple_method)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const EC_METHOD * (*EC_GFp_mont_method)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL EC_GROUP * (*EC_GROUP_new)(struct AmiSSLIFace *Self, const EC_METHOD * a);
	APICALL void (*EC_GROUP_free)(struct AmiSSLIFace *Self, EC_GROUP * a);
	DEPRECATED APICALL void (*EC_GROUP_clear_free)(struct AmiSSLIFace *Self, EC_GROUP * a);
	APICALL int (*EC_GROUP_copy)(struct AmiSSLIFace *Self, EC_GROUP * a, const EC_GROUP * b);
	DEPRECATED APICALL const EC_METHOD * (*EC_GROUP_method_of)(struct AmiSSLIFace *Self, const EC_GROUP * a);
	DEPRECATED APICALL int (*EC_GROUP_set_curve_GFp)(struct AmiSSLIFace *Self, EC_GROUP * a1, const BIGNUM * p, const BIGNUM * a, const BIGNUM * b, BN_CTX * a2);
	DEPRECATED APICALL int (*EC_GROUP_get_curve_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, BIGNUM * p, BIGNUM * a, BIGNUM * b, BN_CTX * a2);
	APICALL EC_GROUP * (*EC_GROUP_new_curve_GFp)(struct AmiSSLIFace *Self, const BIGNUM * p, const BIGNUM * a, const BIGNUM * b, BN_CTX * a1);
	APICALL int (*EC_GROUP_set_generator)(struct AmiSSLIFace *Self, EC_GROUP * a1, const EC_POINT * generator, const BIGNUM * order, const BIGNUM * cofactor);
	APICALL const EC_POINT * (*EC_GROUP_get0_generator)(struct AmiSSLIFace *Self, const EC_GROUP * a1);
	APICALL int (*EC_GROUP_get_order)(struct AmiSSLIFace *Self, const EC_GROUP * a1, BIGNUM * order, BN_CTX * a2);
	APICALL int (*EC_GROUP_get_cofactor)(struct AmiSSLIFace *Self, const EC_GROUP * a1, BIGNUM * cofactor, BN_CTX * a2);
	APICALL EC_POINT * (*EC_POINT_new)(struct AmiSSLIFace *Self, const EC_GROUP * a);
	APICALL void (*EC_POINT_free)(struct AmiSSLIFace *Self, EC_POINT * a);
	APICALL void (*EC_POINT_clear_free)(struct AmiSSLIFace *Self, EC_POINT * a);
	APICALL int (*EC_POINT_copy)(struct AmiSSLIFace *Self, EC_POINT * a, const EC_POINT * b);
	DEPRECATED APICALL const EC_METHOD * (*EC_POINT_method_of)(struct AmiSSLIFace *Self, const EC_POINT * a);
	APICALL int (*EC_POINT_set_to_infinity)(struct AmiSSLIFace *Self, const EC_GROUP * a, EC_POINT * b);
	DEPRECATED APICALL int (*EC_POINT_set_Jprojective_coordinates_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * a2, const BIGNUM * x, const BIGNUM * y, const BIGNUM * z, BN_CTX * a3);
	DEPRECATED APICALL int (*EC_POINT_get_Jprojective_coordinates_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, const EC_POINT * a2, BIGNUM * x, BIGNUM * y, BIGNUM * z, BN_CTX * a3);
	DEPRECATED APICALL int (*EC_POINT_set_affine_coordinates_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * a2, const BIGNUM * x, const BIGNUM * y, BN_CTX * a3);
	DEPRECATED APICALL int (*EC_POINT_get_affine_coordinates_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, const EC_POINT * a2, BIGNUM * x, BIGNUM * y, BN_CTX * a3);
	DEPRECATED APICALL int (*EC_POINT_set_compressed_coordinates_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * a2, const BIGNUM * x, int y_bit, BN_CTX * a3);
	APICALL size_t (*EC_POINT_point2oct)(struct AmiSSLIFace *Self, const EC_GROUP * a1, const EC_POINT * a2, point_conversion_form_t form, unsigned char * buf, size_t len, BN_CTX * a3);
	APICALL int (*EC_POINT_oct2point)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * a2, const unsigned char * buf, size_t len, BN_CTX * a3);
	APICALL int (*EC_POINT_add)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * r, const EC_POINT * a, const EC_POINT * b, BN_CTX * a2);
	APICALL int (*EC_POINT_dbl)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * r, const EC_POINT * a, BN_CTX * a2);
	APICALL int (*EC_POINT_invert)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * a2, BN_CTX * a3);
	APICALL int (*EC_POINT_is_at_infinity)(struct AmiSSLIFace *Self, const EC_GROUP * a, const EC_POINT * b);
	APICALL int (*EC_POINT_is_on_curve)(struct AmiSSLIFace *Self, const EC_GROUP * a, const EC_POINT * b, BN_CTX * c);
	APICALL int (*EC_POINT_cmp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, const EC_POINT * a, const EC_POINT * b, BN_CTX * a2);
	DEPRECATED APICALL int (*EC_POINT_make_affine)(struct AmiSSLIFace *Self, const EC_GROUP * a, EC_POINT * b, BN_CTX * c);
	DEPRECATED APICALL int (*EC_POINTs_make_affine)(struct AmiSSLIFace *Self, const EC_GROUP * a1, size_t num, EC_POINT ** a2, BN_CTX * a3);
	DEPRECATED APICALL int (*EC_POINTs_mul)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * r, const BIGNUM * a2, size_t num, const EC_POINT ** a3, const BIGNUM ** a4, BN_CTX * a5);
	APICALL int (*EC_POINT_mul)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * r, const BIGNUM * a2, const EC_POINT * a3, const BIGNUM * a4, BN_CTX * a5);
	DEPRECATED APICALL int (*EC_GROUP_precompute_mult)(struct AmiSSLIFace *Self, EC_GROUP * a, BN_CTX * b);
	DEPRECATED APICALL int (*ERR_load_EC_strings)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*OBSOLETE_ERR_put_error)(struct AmiSSLIFace *Self, int lib, int func, int reason, const char * file, int line);
	APICALL void (*ERR_set_error_data)(struct AmiSSLIFace *Self, char * data, int flags);
	APICALL unsigned long (*ERR_get_error)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL unsigned long (*ERR_get_error_line)(struct AmiSSLIFace *Self, const char ** file, int * line);
	DEPRECATED APICALL unsigned long (*ERR_get_error_line_data)(struct AmiSSLIFace *Self, const char ** file, int * line, const char ** data, int * flags);
	APICALL unsigned long (*ERR_peek_error)(struct AmiSSLIFace *Self);
	APICALL unsigned long (*ERR_peek_error_line)(struct AmiSSLIFace *Self, const char ** file, int * line);
	DEPRECATED APICALL unsigned long (*ERR_peek_error_line_data)(struct AmiSSLIFace *Self, const char ** file, int * line, const char ** data, int * flags);
	APICALL unsigned long (*ERR_peek_last_error)(struct AmiSSLIFace *Self);
	APICALL unsigned long (*ERR_peek_last_error_line)(struct AmiSSLIFace *Self, const char ** file, int * line);
	DEPRECATED APICALL unsigned long (*ERR_peek_last_error_line_data)(struct AmiSSLIFace *Self, const char ** file, int * line, const char ** data, int * flags);
	APICALL void (*ERR_clear_error)(struct AmiSSLIFace *Self);
	APICALL char * (*ERR_error_string)(struct AmiSSLIFace *Self, unsigned long e, char * buf);
	APICALL void (*ERR_error_string_n)(struct AmiSSLIFace *Self, unsigned long e, char * buf, size_t len);
	APICALL const char * (*ERR_lib_error_string)(struct AmiSSLIFace *Self, unsigned long e);
	DEPRECATED APICALL const char * (*ERR_func_error_string)(struct AmiSSLIFace *Self, unsigned long e);
	APICALL const char * (*ERR_reason_error_string)(struct AmiSSLIFace *Self, unsigned long e);
	APICALL void (*ERR_print_errors_cb)(struct AmiSSLIFace *Self, int (*cb)(const char *str, size_t len, void *u), void * u);
	APICALL void (*ERR_print_errors)(struct AmiSSLIFace *Self, BIO * bp);
	APICALL void (*ERR_add_error_vdata)(struct AmiSSLIFace *Self, int num, long * args);
	APICALL void (*ERR_add_error_data)(struct AmiSSLIFace *Self, int num, ...);
	APICALL int (*ERR_load_strings)(struct AmiSSLIFace *Self, int lib, ERR_STRING_DATA * str);
	APICALL int (*ERR_unload_strings)(struct AmiSSLIFace *Self, int lib, ERR_STRING_DATA * str);
	DEPRECATED APICALL int (*ERR_load_ERR_strings)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*OBSOLETE_ERR_load_crypto_strings)(struct AmiSSLIFace *Self);
	APTR err_free_strings_int_UNIMPLEMENTED;
	APTR ERR_remove_state_UNIMPLEMENTED;
	DEPRECATED APICALL ERR_STATE * (*ERR_get_state)(struct AmiSSLIFace *Self);
	APTR ERR_get_string_table_UNIMPLEMENTED;
	APTR ERR_get_err_state_table_UNIMPLEMENTED;
	APTR ERR_release_err_state_table_UNIMPLEMENTED;
	APICALL int (*ERR_get_next_error_library)(struct AmiSSLIFace *Self);
	APTR ERR_get_implementation_UNIMPLEMENTED;
	APTR ERR_set_implementation_UNIMPLEMENTED;
	APICALL void (*OBSOLETE_EVP_MD_CTX_init)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx);
	APTR EVP_MD_CTX_cleanup_UNIMPLEMENTED;
	APICALL EVP_MD_CTX * (*OBSOLETE_EVP_MD_CTX_create)(struct AmiSSLIFace *Self);
	APICALL void (*OBSOLETE_EVP_MD_CTX_destroy)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx);
	APICALL int (*EVP_MD_CTX_copy_ex)(struct AmiSSLIFace *Self, EVP_MD_CTX * out, const EVP_MD_CTX * in);
	APICALL int (*EVP_DigestInit_ex)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const EVP_MD * type, ENGINE * impl);
	APICALL int (*EVP_DigestUpdate)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const void * d, unsigned int cnt);
	APICALL int (*EVP_DigestFinal_ex)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * md, unsigned int * s);
	APICALL int (*EVP_Digest)(struct AmiSSLIFace *Self, const void * data, size_t count, unsigned char * md, unsigned int * size, const EVP_MD * type, ENGINE * impl);
	APICALL int (*EVP_MD_CTX_copy)(struct AmiSSLIFace *Self, EVP_MD_CTX * out, const EVP_MD_CTX * in);
	APICALL int (*EVP_DigestInit)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const EVP_MD * type);
	APICALL int (*EVP_DigestFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * md, unsigned int * s);
	APICALL int (*EVP_read_pw_string)(struct AmiSSLIFace *Self, char * buf, int length, const char * prompt, int verify);
	APICALL void (*EVP_set_pw_prompt)(struct AmiSSLIFace *Self, const char * prompt);
	APICALL char * (*EVP_get_pw_prompt)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_BytesToKey)(struct AmiSSLIFace *Self, const EVP_CIPHER * type, const EVP_MD * md, const unsigned char * salt, const unsigned char * data, int datal, int count, unsigned char * key, unsigned char * iv);
	APICALL int (*EVP_EncryptInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, const unsigned char * key, const unsigned char * iv);
	APICALL int (*EVP_EncryptInit_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, ENGINE * impl, const unsigned char * key, const unsigned char * iv);
	APICALL int (*EVP_EncryptUpdate)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl, const unsigned char * in, int inl);
	APICALL int (*EVP_EncryptFinal_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl);
	APICALL int (*EVP_EncryptFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl);
	APICALL int (*EVP_DecryptInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, const unsigned char * key, const unsigned char * iv);
	APICALL int (*EVP_DecryptInit_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, ENGINE * impl, const unsigned char * key, const unsigned char * iv);
	APICALL int (*EVP_DecryptUpdate)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl, const unsigned char * in, int inl);
	APICALL int (*EVP_DecryptFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * outm, int * outl);
	APICALL int (*EVP_DecryptFinal_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * outm, int * outl);
	APICALL int (*EVP_CipherInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, const unsigned char * key, const unsigned char * iv, int enc);
	APICALL int (*EVP_CipherInit_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, ENGINE * impl, const unsigned char * key, const unsigned char * iv, int enc);
	APICALL int (*EVP_CipherUpdate)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl, const unsigned char * in, int inl);
	APICALL int (*EVP_CipherFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * outm, int * outl);
	APICALL int (*EVP_CipherFinal_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * outm, int * outl);
	APICALL int (*EVP_SignFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * md, unsigned int * s, EVP_PKEY * pkey);
	APICALL int (*EVP_VerifyFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const unsigned char * sigbuf, unsigned int siglen, EVP_PKEY * pkey);
	APICALL int (*EVP_OpenInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * type, const unsigned char * ek, int ekl, const unsigned char * iv, EVP_PKEY * priv);
	APICALL int (*EVP_OpenFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl);
	APICALL int (*EVP_SealInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * type, unsigned char ** ek, int * ekl, unsigned char * iv, EVP_PKEY ** pubk, int npubk);
	APICALL int (*EVP_SealFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl);
	APICALL void (*EVP_EncodeInit)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx);
	APICALL int (*EVP_EncodeUpdate)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl, const unsigned char * in, int inl);
	APICALL void (*EVP_EncodeFinal)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl);
	APICALL int (*EVP_EncodeBlock)(struct AmiSSLIFace *Self, unsigned char * t, const unsigned char * f, int n);
	APICALL void (*EVP_DecodeInit)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx);
	APICALL int (*EVP_DecodeUpdate)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl, const unsigned char * in, int inl);
	APICALL int (*EVP_DecodeFinal)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl);
	APICALL int (*EVP_DecodeBlock)(struct AmiSSLIFace *Self, unsigned char * t, const unsigned char * f, int n);
	APICALL void (*OBSOLETE_EVP_CIPHER_CTX_init)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * a);
	APICALL int (*OBSOLETE_EVP_CIPHER_CTX_cleanup)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * a);
	APICALL int (*EVP_CIPHER_CTX_set_key_length)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * x, int keylen);
	APICALL int (*EVP_CIPHER_CTX_set_padding)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, int pad);
	APICALL int (*EVP_CIPHER_CTX_ctrl)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, int type, int arg, void * ptr);
	APICALL const BIO_METHOD * (*BIO_f_md)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_f_base64)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_f_cipher)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_f_reliable)(struct AmiSSLIFace *Self);
	APICALL int (*BIO_set_cipher)(struct AmiSSLIFace *Self, BIO * b, const EVP_CIPHER * c, const unsigned char * k, const unsigned char * i, int enc);
	APICALL const EVP_MD * (*EVP_md_null)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_md2)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_md4)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_md5)(struct AmiSSLIFace *Self);
	APTR EVP_sha_UNIMPLEMENTED;
	APICALL const EVP_MD * (*EVP_sha1)(struct AmiSSLIFace *Self);
	APTR EVP_dss_UNIMPLEMENTED;
	APTR EVP_dss1_UNIMPLEMENTED;
	APICALL const EVP_MD * (*EVP_mdc2)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_ripemd160)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_enc_null)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede3)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede3_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_cfb64)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_cfb1)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_cfb8)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede_cfb64)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede3_cfb64)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede3_cfb1)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede3_cfb8)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede3_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede3_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_desx_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc4)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc4_40)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_idea_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_idea_cfb64)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_idea_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_idea_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc2_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc2_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc2_40_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc2_64_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc2_cfb64)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc2_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_bf_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_bf_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_bf_cfb64)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_bf_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_cast5_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_cast5_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_cast5_cfb64)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_cast5_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc5_32_12_16_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc5_32_12_16_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc5_32_12_16_cfb64)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc5_32_12_16_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_128_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_128_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_128_cfb1)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_128_cfb8)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_128_cfb128)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_128_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_192_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_192_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_192_cfb1)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_192_cfb8)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_192_cfb128)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_192_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_cfb1)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_cfb8)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_cfb128)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_ofb)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*OBSOLETE_OPENSSL_add_all_algorithms_noconf)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*OBSOLETE_OPENSSL_add_all_algorithms_conf)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*OBSOLETE_OpenSSL_add_all_ciphers)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*OBSOLETE_OpenSSL_add_all_digests)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_add_cipher)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL int (*EVP_add_digest)(struct AmiSSLIFace *Self, const EVP_MD * digest);
	APICALL const EVP_CIPHER * (*EVP_get_cipherbyname)(struct AmiSSLIFace *Self, const char * name);
	APICALL const EVP_MD * (*EVP_get_digestbyname)(struct AmiSSLIFace *Self, const char * name);
	APTR EVP_cleanup_UNIMPLEMENTED;
	APICALL int (*EVP_PKEY_decrypt)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char * out, size_t * outlen, const unsigned char * in, size_t inlen);
	APICALL int (*EVP_PKEY_encrypt)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char * out, size_t * outlen, const unsigned char * in, size_t inlen);
	APICALL int (*EVP_PKEY_type)(struct AmiSSLIFace *Self, int type);
	APICALL int (*EVP_PKEY_get_bits)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL int (*EVP_PKEY_get_size)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	DEPRECATED APICALL int (*EVP_PKEY_assign)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, int type, void * key);
	DEPRECATED APICALL int (*EVP_PKEY_set1_RSA)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, struct rsa_st * key);
	DEPRECATED APICALL struct rsa_st * (*EVP_PKEY_get1_RSA)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	DEPRECATED APICALL int (*EVP_PKEY_set1_DSA)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, struct dsa_st * key);
	DEPRECATED APICALL struct dsa_st * (*EVP_PKEY_get1_DSA)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	DEPRECATED APICALL int (*EVP_PKEY_set1_DH)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, struct dh_st * key);
	DEPRECATED APICALL struct dh_st * (*EVP_PKEY_get1_DH)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	APICALL EVP_PKEY * (*EVP_PKEY_new)(struct AmiSSLIFace *Self);
	APICALL void (*EVP_PKEY_free)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	APICALL EVP_PKEY * (*d2i_PublicKey)(struct AmiSSLIFace *Self, int type, EVP_PKEY ** a, const unsigned char ** pp, long length);
	APICALL int (*i2d_PublicKey)(struct AmiSSLIFace *Self, const EVP_PKEY * a, unsigned char ** pp);
	APICALL EVP_PKEY * (*d2i_PrivateKey)(struct AmiSSLIFace *Self, int type, EVP_PKEY ** a, const unsigned char ** pp, long length);
	APICALL EVP_PKEY * (*d2i_AutoPrivateKey)(struct AmiSSLIFace *Self, EVP_PKEY ** a, const unsigned char ** pp, long length);
	APICALL int (*i2d_PrivateKey)(struct AmiSSLIFace *Self, const EVP_PKEY * a, unsigned char ** pp);
	APICALL int (*EVP_PKEY_copy_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * to, const EVP_PKEY * from);
	APICALL int (*EVP_PKEY_missing_parameters)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL int (*EVP_PKEY_save_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, int mode);
	DEPRECATED APICALL int (*EVP_PKEY_cmp_parameters)(struct AmiSSLIFace *Self, const EVP_PKEY * a, const EVP_PKEY * b);
	APICALL int (*EVP_CIPHER_get_type)(struct AmiSSLIFace *Self, const EVP_CIPHER * ctx);
	APICALL int (*EVP_CIPHER_param_to_asn1)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
	APICALL int (*EVP_CIPHER_asn1_to_param)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
	APICALL int (*EVP_CIPHER_set_asn1_iv)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
	APICALL int (*EVP_CIPHER_get_asn1_iv)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
	APICALL int (*PKCS5_PBE_keyivgen)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, const EVP_CIPHER * cipher, const EVP_MD * md, int en_de);
	APICALL int (*PKCS5_PBKDF2_HMAC_SHA1)(struct AmiSSLIFace *Self, const char * pass, int passlen, const unsigned char * salt, int saltlen, int iter, int keylen, unsigned char * out);
	APICALL int (*PKCS5_v2_PBE_keyivgen)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, const EVP_CIPHER * cipher, const EVP_MD * md, int en_de);
	APICALL void (*PKCS5_PBE_add)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_PBE_CipherInit)(struct AmiSSLIFace *Self, ASN1_OBJECT * pbe_obj, const char * pass, int passlen, ASN1_TYPE * param, EVP_CIPHER_CTX * ctx, int en_de);
	APICALL int (*EVP_PBE_alg_add)(struct AmiSSLIFace *Self, int nid, const EVP_CIPHER * cipher, const EVP_MD * md, EVP_PBE_KEYGEN * keygen);
	APICALL void (*EVP_PBE_cleanup)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ERR_load_EVP_strings)(struct AmiSSLIFace *Self);
	APTR HMAC_CTX_init_UNIMPLEMENTED;
	APTR HMAC_CTX_cleanup_UNIMPLEMENTED;
	DEPRECATED APICALL int (*HMAC_Init)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, const void * key, int len, const EVP_MD * md);
	DEPRECATED APICALL int (*HMAC_Init_ex)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, const void * key, int len, const EVP_MD * md, ENGINE * impl);
	DEPRECATED APICALL int (*HMAC_Update)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, const unsigned char * data, size_t len);
	DEPRECATED APICALL int (*HMAC_Final)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, unsigned char * md, unsigned int * len);
	APICALL unsigned char * (*HMAC)(struct AmiSSLIFace *Self, const EVP_MD * evp_md, const void * key, int key_len, const unsigned char * data, size_t data_len, unsigned char * md, unsigned int * md_len);
	APTR KRB5_ENCDATA_new_UNIMPLEMENTED;
	APTR KRB5_ENCDATA_free_UNIMPLEMENTED;
	APTR d2i_KRB5_ENCDATA_UNIMPLEMENTED;
	APTR i2d_KRB5_ENCDATA_UNIMPLEMENTED;
	APTR KRB5_ENCDATA_it_UNIMPLEMENTED;
	APTR KRB5_PRINCNAME_new_UNIMPLEMENTED;
	APTR KRB5_PRINCNAME_free_UNIMPLEMENTED;
	APTR d2i_KRB5_PRINCNAME_UNIMPLEMENTED;
	APTR i2d_KRB5_PRINCNAME_UNIMPLEMENTED;
	APTR KRB5_PRINCNAME_it_UNIMPLEMENTED;
	APTR KRB5_TKTBODY_new_UNIMPLEMENTED;
	APTR KRB5_TKTBODY_free_UNIMPLEMENTED;
	APTR d2i_KRB5_TKTBODY_UNIMPLEMENTED;
	APTR i2d_KRB5_TKTBODY_UNIMPLEMENTED;
	APTR KRB5_TKTBODY_it_UNIMPLEMENTED;
	APTR KRB5_APREQBODY_new_UNIMPLEMENTED;
	APTR KRB5_APREQBODY_free_UNIMPLEMENTED;
	APTR d2i_KRB5_APREQBODY_UNIMPLEMENTED;
	APTR i2d_KRB5_APREQBODY_UNIMPLEMENTED;
	APTR KRB5_APREQBODY_it_UNIMPLEMENTED;
	APTR KRB5_TICKET_new_UNIMPLEMENTED;
	APTR KRB5_TICKET_free_UNIMPLEMENTED;
	APTR d2i_KRB5_TICKET_UNIMPLEMENTED;
	APTR i2d_KRB5_TICKET_UNIMPLEMENTED;
	APTR KRB5_TICKET_it_UNIMPLEMENTED;
	APTR KRB5_APREQ_new_UNIMPLEMENTED;
	APTR KRB5_APREQ_free_UNIMPLEMENTED;
	APTR d2i_KRB5_APREQ_UNIMPLEMENTED;
	APTR i2d_KRB5_APREQ_UNIMPLEMENTED;
	APTR KRB5_APREQ_it_UNIMPLEMENTED;
	APTR KRB5_CHECKSUM_new_UNIMPLEMENTED;
	APTR KRB5_CHECKSUM_free_UNIMPLEMENTED;
	APTR d2i_KRB5_CHECKSUM_UNIMPLEMENTED;
	APTR i2d_KRB5_CHECKSUM_UNIMPLEMENTED;
	APTR KRB5_CHECKSUM_it_UNIMPLEMENTED;
	APTR KRB5_ENCKEY_new_UNIMPLEMENTED;
	APTR KRB5_ENCKEY_free_UNIMPLEMENTED;
	APTR d2i_KRB5_ENCKEY_UNIMPLEMENTED;
	APTR i2d_KRB5_ENCKEY_UNIMPLEMENTED;
	APTR KRB5_ENCKEY_it_UNIMPLEMENTED;
	APTR KRB5_AUTHDATA_new_UNIMPLEMENTED;
	APTR KRB5_AUTHDATA_free_UNIMPLEMENTED;
	APTR d2i_KRB5_AUTHDATA_UNIMPLEMENTED;
	APTR i2d_KRB5_AUTHDATA_UNIMPLEMENTED;
	APTR KRB5_AUTHDATA_it_UNIMPLEMENTED;
	APTR KRB5_AUTHENTBODY_new_UNIMPLEMENTED;
	APTR KRB5_AUTHENTBODY_free_UNIMPLEMENTED;
	APTR d2i_KRB5_AUTHENTBODY_UNIMPLEMENTED;
	APTR i2d_KRB5_AUTHENTBODY_UNIMPLEMENTED;
	APTR KRB5_AUTHENTBODY_it_UNIMPLEMENTED;
	APTR KRB5_AUTHENT_new_UNIMPLEMENTED;
	APTR KRB5_AUTHENT_free_UNIMPLEMENTED;
	APTR d2i_KRB5_AUTHENT_UNIMPLEMENTED;
	APTR i2d_KRB5_AUTHENT_UNIMPLEMENTED;
	APTR KRB5_AUTHENT_it_UNIMPLEMENTED;
	APICALL OPENSSL_LHASH * (*OPENSSL_LH_new)(struct AmiSSLIFace *Self, OPENSSL_LH_HASHFUNC h, OPENSSL_LH_COMPFUNC c);
	APICALL void (*OPENSSL_LH_free)(struct AmiSSLIFace *Self, OPENSSL_LHASH * lh);
	APICALL void * (*OPENSSL_LH_insert)(struct AmiSSLIFace *Self, OPENSSL_LHASH * lh, void * data);
	APICALL void * (*OPENSSL_LH_delete)(struct AmiSSLIFace *Self, OPENSSL_LHASH * lh, const void * data);
	APICALL void * (*OPENSSL_LH_retrieve)(struct AmiSSLIFace *Self, OPENSSL_LHASH * lh, const void * data);
	APICALL void (*OPENSSL_LH_doall)(struct AmiSSLIFace *Self, OPENSSL_LHASH * lh, OPENSSL_LH_DOALL_FUNC func);
	APICALL void (*OPENSSL_LH_doall_arg)(struct AmiSSLIFace *Self, OPENSSL_LHASH * lh, OPENSSL_LH_DOALL_FUNCARG func, void * arg);
	APICALL unsigned long (*OPENSSL_LH_strhash)(struct AmiSSLIFace *Self, const char * c);
	APICALL unsigned long (*OPENSSL_LH_num_items)(struct AmiSSLIFace *Self, const OPENSSL_LHASH * lh);
	DEPRECATED APICALL void (*OPENSSL_LH_stats_bio)(struct AmiSSLIFace *Self, const OPENSSL_LHASH * lh, BIO * out);
	APICALL void (*OPENSSL_LH_node_stats_bio)(struct AmiSSLIFace *Self, const OPENSSL_LHASH * lh, BIO * out);
	DEPRECATED APICALL void (*OPENSSL_LH_node_usage_stats_bio)(struct AmiSSLIFace *Self, const OPENSSL_LHASH * lh, BIO * out);
	APICALL int (*OBJ_NAME_init)(struct AmiSSLIFace *Self);
	APICALL int (*OBJ_NAME_new_index)(struct AmiSSLIFace *Self, unsigned long (*hash_func)(const char *), int (*cmp_func)(const char *, const char *), void (*free_func)(const char *, int, const char *));
	APICALL const char * (*OBJ_NAME_get)(struct AmiSSLIFace *Self, const char * name, int type);
	APICALL int (*OBJ_NAME_add)(struct AmiSSLIFace *Self, const char * name, int type, const char * data);
	APICALL int (*OBJ_NAME_remove)(struct AmiSSLIFace *Self, const char * name, int type);
	APICALL void (*OBJ_NAME_cleanup)(struct AmiSSLIFace *Self, int type);
	APICALL void (*OBJ_NAME_do_all)(struct AmiSSLIFace *Self, int type, void (*fn)(const OBJ_NAME *, void *arg), void * arg);
	APICALL void (*OBJ_NAME_do_all_sorted)(struct AmiSSLIFace *Self, int type, void (*fn)(const OBJ_NAME *, void *arg), void * arg);
	APICALL ASN1_OBJECT * (*OBJ_dup)(struct AmiSSLIFace *Self, const ASN1_OBJECT * o);
	APICALL ASN1_OBJECT * (*OBJ_nid2obj)(struct AmiSSLIFace *Self, int n);
	APICALL const char * (*OBJ_nid2ln)(struct AmiSSLIFace *Self, int n);
	APICALL const char * (*OBJ_nid2sn)(struct AmiSSLIFace *Self, int n);
	APICALL int (*OBJ_obj2nid)(struct AmiSSLIFace *Self, const ASN1_OBJECT * o);
	APICALL ASN1_OBJECT * (*OBJ_txt2obj)(struct AmiSSLIFace *Self, const char * s, int no_name);
	APICALL int (*OBJ_obj2txt)(struct AmiSSLIFace *Self, char * buf, int buf_len, const ASN1_OBJECT * a, int no_name);
	APICALL int (*OBJ_txt2nid)(struct AmiSSLIFace *Self, const char * s);
	APICALL int (*OBJ_ln2nid)(struct AmiSSLIFace *Self, const char * s);
	APICALL int (*OBJ_sn2nid)(struct AmiSSLIFace *Self, const char * s);
	APICALL int (*OBJ_cmp)(struct AmiSSLIFace *Self, const ASN1_OBJECT * a, const ASN1_OBJECT * b);
	APTR OBJ_bsearch_UNIMPLEMENTED;
	APICALL int (*OBJ_new_nid)(struct AmiSSLIFace *Self, int num);
	APICALL int (*OBJ_add_object)(struct AmiSSLIFace *Self, const ASN1_OBJECT * obj);
	APICALL int (*OBJ_create)(struct AmiSSLIFace *Self, const char * oid, const char * sn, const char * ln);
	APTR OBJ_cleanup_UNIMPLEMENTED;
	APICALL int (*OBJ_create_objects)(struct AmiSSLIFace *Self, BIO * in);
	DEPRECATED APICALL int (*ERR_load_OBJ_strings)(struct AmiSSLIFace *Self);
	APICALL OCSP_RESPONSE * (*OCSP_sendreq_bio)(struct AmiSSLIFace *Self, BIO * b, const char * path, OCSP_REQUEST * req);
	APICALL OCSP_CERTID * (*OCSP_cert_to_id)(struct AmiSSLIFace *Self, const EVP_MD * dgst, const X509 * subject, const X509 * issuer);
	APICALL OCSP_CERTID * (*OCSP_cert_id_new)(struct AmiSSLIFace *Self, const EVP_MD * dgst, const X509_NAME * issuerName, const ASN1_BIT_STRING * issuerKey, const ASN1_INTEGER * serialNumber);
	APICALL OCSP_ONEREQ * (*OCSP_request_add0_id)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, OCSP_CERTID * cid);
	APICALL int (*OCSP_request_add1_nonce)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, unsigned char * val, int len);
	APICALL int (*OCSP_basic_add1_nonce)(struct AmiSSLIFace *Self, OCSP_BASICRESP * resp, unsigned char * val, int len);
	APICALL int (*OCSP_check_nonce)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, OCSP_BASICRESP * bs);
	APICALL int (*OCSP_copy_nonce)(struct AmiSSLIFace *Self, OCSP_BASICRESP * resp, OCSP_REQUEST * req);
	APICALL int (*OCSP_request_set1_name)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, const X509_NAME * nm);
	APICALL int (*OCSP_request_add1_cert)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, X509 * cert);
	APICALL int (*OCSP_request_sign)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, X509 * signer, EVP_PKEY * key, const EVP_MD * dgst, STACK_OF(X509) * certs, unsigned long flags);
	APICALL int (*OCSP_response_status)(struct AmiSSLIFace *Self, OCSP_RESPONSE * resp);
	APICALL OCSP_BASICRESP * (*OCSP_response_get1_basic)(struct AmiSSLIFace *Self, OCSP_RESPONSE * resp);
	APICALL int (*OCSP_resp_count)(struct AmiSSLIFace *Self, OCSP_BASICRESP * bs);
	APICALL OCSP_SINGLERESP * (*OCSP_resp_get0)(struct AmiSSLIFace *Self, OCSP_BASICRESP * bs, int idx);
	APICALL int (*OCSP_resp_find)(struct AmiSSLIFace *Self, OCSP_BASICRESP * bs, OCSP_CERTID * id, int last);
	APICALL int (*OCSP_single_get0_status)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * single, int * reason, ASN1_GENERALIZEDTIME ** revtime, ASN1_GENERALIZEDTIME ** thisupd, ASN1_GENERALIZEDTIME ** nextupd);
	APICALL int (*OCSP_resp_find_status)(struct AmiSSLIFace *Self, OCSP_BASICRESP * bs, OCSP_CERTID * id, int * status, int * reason, ASN1_GENERALIZEDTIME ** revtime, ASN1_GENERALIZEDTIME ** thisupd, ASN1_GENERALIZEDTIME ** nextupd);
	APICALL int (*OCSP_check_validity)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * thisupd, ASN1_GENERALIZEDTIME * nextupd, long sec, long maxsec);
	APICALL int (*OCSP_request_verify)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, STACK_OF(X509) * certs, X509_STORE * store, unsigned long flags);
	APICALL int (*OBSOLETE_OCSP_parse_url)(struct AmiSSLIFace *Self, const char * url, char ** phost, char ** pport, char ** ppath, int * pssl);
	APICALL int (*OCSP_id_issuer_cmp)(struct AmiSSLIFace *Self, const OCSP_CERTID * a, const OCSP_CERTID * b);
	APICALL int (*OCSP_id_cmp)(struct AmiSSLIFace *Self, const OCSP_CERTID * a, const OCSP_CERTID * b);
	APICALL int (*OCSP_request_onereq_count)(struct AmiSSLIFace *Self, OCSP_REQUEST * req);
	APICALL OCSP_ONEREQ * (*OCSP_request_onereq_get0)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, int i);
	APICALL OCSP_CERTID * (*OCSP_onereq_get0_id)(struct AmiSSLIFace *Self, OCSP_ONEREQ * one);
	APICALL int (*OCSP_id_get0_info)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING ** piNameHash, ASN1_OBJECT ** pmd, ASN1_OCTET_STRING ** pikeyHash, ASN1_INTEGER ** pserial, OCSP_CERTID * cid);
	APICALL int (*OCSP_request_is_signed)(struct AmiSSLIFace *Self, OCSP_REQUEST * req);
	APICALL OCSP_RESPONSE * (*OCSP_response_create)(struct AmiSSLIFace *Self, int status, OCSP_BASICRESP * bs);
	APICALL OCSP_SINGLERESP * (*OCSP_basic_add1_status)(struct AmiSSLIFace *Self, OCSP_BASICRESP * rsp, OCSP_CERTID * cid, int status, int reason, ASN1_TIME * revtime, ASN1_TIME * thisupd, ASN1_TIME * nextupd);
	APICALL int (*OCSP_basic_add1_cert)(struct AmiSSLIFace *Self, OCSP_BASICRESP * resp, X509 * cert);
	APICALL int (*OCSP_basic_sign)(struct AmiSSLIFace *Self, OCSP_BASICRESP * brsp, X509 * signer, EVP_PKEY * key, const EVP_MD * dgst, STACK_OF(X509) * certs, unsigned long flags);
	APTR ASN1_STRING_encode_UNIMPLEMENTED;
	APICALL X509_EXTENSION * (*OCSP_crlID_new)(struct AmiSSLIFace *Self, const char * url, long * n, char * tim);
	APICALL X509_EXTENSION * (*OCSP_accept_responses_new)(struct AmiSSLIFace *Self, char ** oids);
	APICALL X509_EXTENSION * (*OCSP_archive_cutoff_new)(struct AmiSSLIFace *Self, char * tim);
	APICALL X509_EXTENSION * (*OCSP_url_svcloc_new)(struct AmiSSLIFace *Self, const X509_NAME * issuer, const char ** urls);
	APICALL int (*OCSP_REQUEST_get_ext_count)(struct AmiSSLIFace *Self, OCSP_REQUEST * x);
	APICALL int (*OCSP_REQUEST_get_ext_by_NID)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int nid, int lastpos);
	APICALL int (*OCSP_REQUEST_get_ext_by_OBJ)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, const ASN1_OBJECT * obj, int lastpos);
	APICALL int (*OCSP_REQUEST_get_ext_by_critical)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int crit, int lastpos);
	APICALL X509_EXTENSION * (*OCSP_REQUEST_get_ext)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int loc);
	APICALL X509_EXTENSION * (*OCSP_REQUEST_delete_ext)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int loc);
	APICALL void * (*OCSP_REQUEST_get1_ext_d2i)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int nid, int * crit, int * idx);
	APICALL int (*OCSP_REQUEST_add1_ext_i2d)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int nid, void * value, int crit, unsigned long flags);
	APICALL int (*OCSP_REQUEST_add_ext)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, X509_EXTENSION * ex, int loc);
	APICALL int (*OCSP_ONEREQ_get_ext_count)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x);
	APICALL int (*OCSP_ONEREQ_get_ext_by_NID)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int nid, int lastpos);
	APICALL int (*OCSP_ONEREQ_get_ext_by_OBJ)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, const ASN1_OBJECT * obj, int lastpos);
	APICALL int (*OCSP_ONEREQ_get_ext_by_critical)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int crit, int lastpos);
	APICALL X509_EXTENSION * (*OCSP_ONEREQ_get_ext)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int loc);
	APICALL X509_EXTENSION * (*OCSP_ONEREQ_delete_ext)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int loc);
	APICALL void * (*OCSP_ONEREQ_get1_ext_d2i)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int nid, int * crit, int * idx);
	APICALL int (*OCSP_ONEREQ_add1_ext_i2d)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int nid, void * value, int crit, unsigned long flags);
	APICALL int (*OCSP_ONEREQ_add_ext)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, X509_EXTENSION * ex, int loc);
	APICALL int (*OCSP_BASICRESP_get_ext_count)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x);
	APICALL int (*OCSP_BASICRESP_get_ext_by_NID)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int nid, int lastpos);
	APICALL int (*OCSP_BASICRESP_get_ext_by_OBJ)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, const ASN1_OBJECT * obj, int lastpos);
	APICALL int (*OCSP_BASICRESP_get_ext_by_critical)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int crit, int lastpos);
	APICALL X509_EXTENSION * (*OCSP_BASICRESP_get_ext)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int loc);
	APICALL X509_EXTENSION * (*OCSP_BASICRESP_delete_ext)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int loc);
	APICALL void * (*OCSP_BASICRESP_get1_ext_d2i)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int nid, int * crit, int * idx);
	APICALL int (*OCSP_BASICRESP_add1_ext_i2d)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int nid, void * value, int crit, unsigned long flags);
	APICALL int (*OCSP_BASICRESP_add_ext)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, X509_EXTENSION * ex, int loc);
	APICALL int (*OCSP_SINGLERESP_get_ext_count)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x);
	APICALL int (*OCSP_SINGLERESP_get_ext_by_NID)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int nid, int lastpos);
	APICALL int (*OCSP_SINGLERESP_get_ext_by_OBJ)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, const ASN1_OBJECT * obj, int lastpos);
	APICALL int (*OCSP_SINGLERESP_get_ext_by_critical)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int crit, int lastpos);
	APICALL X509_EXTENSION * (*OCSP_SINGLERESP_get_ext)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int loc);
	APICALL X509_EXTENSION * (*OCSP_SINGLERESP_delete_ext)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int loc);
	APICALL void * (*OCSP_SINGLERESP_get1_ext_d2i)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int nid, int * crit, int * idx);
	APICALL int (*OCSP_SINGLERESP_add1_ext_i2d)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int nid, void * value, int crit, unsigned long flags);
	APICALL int (*OCSP_SINGLERESP_add_ext)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, X509_EXTENSION * ex, int loc);
	APICALL OCSP_SINGLERESP * (*OCSP_SINGLERESP_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_SINGLERESP_free)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * a);
	APICALL OCSP_SINGLERESP * (*d2i_OCSP_SINGLERESP)(struct AmiSSLIFace *Self, OCSP_SINGLERESP ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_SINGLERESP)(struct AmiSSLIFace *Self, const OCSP_SINGLERESP * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_SINGLERESP_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_CERTSTATUS * (*OCSP_CERTSTATUS_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_CERTSTATUS_free)(struct AmiSSLIFace *Self, OCSP_CERTSTATUS * a);
	APICALL OCSP_CERTSTATUS * (*d2i_OCSP_CERTSTATUS)(struct AmiSSLIFace *Self, OCSP_CERTSTATUS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_CERTSTATUS)(struct AmiSSLIFace *Self, const OCSP_CERTSTATUS * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_CERTSTATUS_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_REVOKEDINFO * (*OCSP_REVOKEDINFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_REVOKEDINFO_free)(struct AmiSSLIFace *Self, OCSP_REVOKEDINFO * a);
	APICALL OCSP_REVOKEDINFO * (*d2i_OCSP_REVOKEDINFO)(struct AmiSSLIFace *Self, OCSP_REVOKEDINFO ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_REVOKEDINFO)(struct AmiSSLIFace *Self, const OCSP_REVOKEDINFO * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_REVOKEDINFO_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_BASICRESP * (*OCSP_BASICRESP_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_BASICRESP_free)(struct AmiSSLIFace *Self, OCSP_BASICRESP * a);
	APICALL OCSP_BASICRESP * (*d2i_OCSP_BASICRESP)(struct AmiSSLIFace *Self, OCSP_BASICRESP ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_BASICRESP)(struct AmiSSLIFace *Self, const OCSP_BASICRESP * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_BASICRESP_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_RESPDATA * (*OCSP_RESPDATA_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_RESPDATA_free)(struct AmiSSLIFace *Self, OCSP_RESPDATA * a);
	APICALL OCSP_RESPDATA * (*d2i_OCSP_RESPDATA)(struct AmiSSLIFace *Self, OCSP_RESPDATA ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_RESPDATA)(struct AmiSSLIFace *Self, const OCSP_RESPDATA * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_RESPDATA_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_RESPID * (*OCSP_RESPID_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_RESPID_free)(struct AmiSSLIFace *Self, OCSP_RESPID * a);
	APICALL OCSP_RESPID * (*d2i_OCSP_RESPID)(struct AmiSSLIFace *Self, OCSP_RESPID ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_RESPID)(struct AmiSSLIFace *Self, const OCSP_RESPID * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_RESPID_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_RESPONSE * (*OCSP_RESPONSE_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_RESPONSE_free)(struct AmiSSLIFace *Self, OCSP_RESPONSE * a);
	APICALL OCSP_RESPONSE * (*d2i_OCSP_RESPONSE)(struct AmiSSLIFace *Self, OCSP_RESPONSE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_RESPONSE)(struct AmiSSLIFace *Self, const OCSP_RESPONSE * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_RESPONSE_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_RESPBYTES * (*OCSP_RESPBYTES_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_RESPBYTES_free)(struct AmiSSLIFace *Self, OCSP_RESPBYTES * a);
	APICALL OCSP_RESPBYTES * (*d2i_OCSP_RESPBYTES)(struct AmiSSLIFace *Self, OCSP_RESPBYTES ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_RESPBYTES)(struct AmiSSLIFace *Self, const OCSP_RESPBYTES * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_RESPBYTES_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_ONEREQ * (*OCSP_ONEREQ_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_ONEREQ_free)(struct AmiSSLIFace *Self, OCSP_ONEREQ * a);
	APICALL OCSP_ONEREQ * (*d2i_OCSP_ONEREQ)(struct AmiSSLIFace *Self, OCSP_ONEREQ ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_ONEREQ)(struct AmiSSLIFace *Self, const OCSP_ONEREQ * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_ONEREQ_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_CERTID * (*OCSP_CERTID_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_CERTID_free)(struct AmiSSLIFace *Self, OCSP_CERTID * a);
	APICALL OCSP_CERTID * (*d2i_OCSP_CERTID)(struct AmiSSLIFace *Self, OCSP_CERTID ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_CERTID)(struct AmiSSLIFace *Self, const OCSP_CERTID * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_CERTID_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_REQUEST * (*OCSP_REQUEST_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_REQUEST_free)(struct AmiSSLIFace *Self, OCSP_REQUEST * a);
	APICALL OCSP_REQUEST * (*d2i_OCSP_REQUEST)(struct AmiSSLIFace *Self, OCSP_REQUEST ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_REQUEST)(struct AmiSSLIFace *Self, const OCSP_REQUEST * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_REQUEST_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_SIGNATURE * (*OCSP_SIGNATURE_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_SIGNATURE_free)(struct AmiSSLIFace *Self, OCSP_SIGNATURE * a);
	APICALL OCSP_SIGNATURE * (*d2i_OCSP_SIGNATURE)(struct AmiSSLIFace *Self, OCSP_SIGNATURE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_SIGNATURE)(struct AmiSSLIFace *Self, const OCSP_SIGNATURE * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_SIGNATURE_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_REQINFO * (*OCSP_REQINFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_REQINFO_free)(struct AmiSSLIFace *Self, OCSP_REQINFO * a);
	APICALL OCSP_REQINFO * (*d2i_OCSP_REQINFO)(struct AmiSSLIFace *Self, OCSP_REQINFO ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_REQINFO)(struct AmiSSLIFace *Self, const OCSP_REQINFO * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_REQINFO_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_CRLID * (*OCSP_CRLID_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_CRLID_free)(struct AmiSSLIFace *Self, OCSP_CRLID * a);
	APICALL OCSP_CRLID * (*d2i_OCSP_CRLID)(struct AmiSSLIFace *Self, OCSP_CRLID ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_CRLID)(struct AmiSSLIFace *Self, const OCSP_CRLID * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_CRLID_it)(struct AmiSSLIFace *Self);
	APICALL OCSP_SERVICELOC * (*OCSP_SERVICELOC_new)(struct AmiSSLIFace *Self);
	APICALL void (*OCSP_SERVICELOC_free)(struct AmiSSLIFace *Self, OCSP_SERVICELOC * a);
	APICALL OCSP_SERVICELOC * (*d2i_OCSP_SERVICELOC)(struct AmiSSLIFace *Self, OCSP_SERVICELOC ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OCSP_SERVICELOC)(struct AmiSSLIFace *Self, const OCSP_SERVICELOC * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OCSP_SERVICELOC_it)(struct AmiSSLIFace *Self);
	APICALL const char * (*OCSP_response_status_str)(struct AmiSSLIFace *Self, long s);
	APICALL const char * (*OCSP_cert_status_str)(struct AmiSSLIFace *Self, long s);
	APICALL const char * (*OCSP_crl_reason_str)(struct AmiSSLIFace *Self, long s);
	APICALL int (*OCSP_REQUEST_print)(struct AmiSSLIFace *Self, BIO * bp, OCSP_REQUEST * a, unsigned long flags);
	APICALL int (*OCSP_RESPONSE_print)(struct AmiSSLIFace *Self, BIO * bp, OCSP_RESPONSE * o, unsigned long flags);
	APICALL int (*OCSP_basic_verify)(struct AmiSSLIFace *Self, OCSP_BASICRESP * bs, STACK_OF(X509) * certs, X509_STORE * st, unsigned long flags);
	DEPRECATED APICALL int (*ERR_load_OCSP_strings)(struct AmiSSLIFace *Self);
	APICALL int (*PEM_get_EVP_CIPHER_INFO)(struct AmiSSLIFace *Self, char * header, EVP_CIPHER_INFO * cipher);
	APICALL int (*PEM_do_header)(struct AmiSSLIFace *Self, EVP_CIPHER_INFO * cipher, unsigned char * data, long * len, pem_password_cb * callback, void * u);
	APICALL int (*PEM_read_bio)(struct AmiSSLIFace *Self, BIO * bp, char ** name, char ** header, unsigned char ** data, long * len);
	APICALL int (*PEM_write_bio)(struct AmiSSLIFace *Self, BIO * bp, const char * name, const char * hdr, const unsigned char * data, long len);
	APICALL int (*PEM_bytes_read_bio)(struct AmiSSLIFace *Self, unsigned char ** pdata, long * plen, char ** pnm, const char * name, BIO * bp, pem_password_cb * cb, void * u);
	APICALL void * (*PEM_ASN1_read_bio)(struct AmiSSLIFace *Self, d2i_of_void * d2i, const char * name, BIO * bp, void ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_ASN1_write_bio)(struct AmiSSLIFace *Self, i2d_of_void * i2d, const char * name, BIO * bp, const void * x, const EVP_CIPHER * enc, const unsigned char * kstr, int klen, pem_password_cb * cb, void * u);
	APICALL STACK_OF(X509_INFO) * (*PEM_X509_INFO_read_bio)(struct AmiSSLIFace *Self, BIO * bp, STACK_OF(X509_INFO) * sk, pem_password_cb * cb, void * u);
	APICALL int (*PEM_X509_INFO_write_bio)(struct AmiSSLIFace *Self, BIO * bp, const X509_INFO * xi, EVP_CIPHER * enc, const unsigned char * kstr, int klen, pem_password_cb * cd, void * u);
	APTR PEM_SealInit_UNIMPLEMENTED;
	APTR PEM_SealUpdate_UNIMPLEMENTED;
	APTR PEM_SealFinal_UNIMPLEMENTED;
	APICALL int (*PEM_SignInit)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, EVP_MD * type);
	APICALL int (*PEM_SignUpdate)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const unsigned char * d, unsigned int cnt);
	APICALL int (*PEM_SignFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * sigret, unsigned int * siglen, EVP_PKEY * pkey);
	APICALL int (*PEM_def_callback)(struct AmiSSLIFace *Self, char * buf, int num, int w, void * key);
	APICALL void (*PEM_proc_type)(struct AmiSSLIFace *Self, char * buf, int type);
	APICALL void (*PEM_dek_info)(struct AmiSSLIFace *Self, char * buf, const char * type, int len, const char * str);
	APICALL X509 * (*PEM_read_bio_X509)(struct AmiSSLIFace *Self, BIO * bp, X509 ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_X509)(struct AmiSSLIFace *Self, BIO * bp, const X509 * x);
	APICALL X509 * (*PEM_read_bio_X509_AUX)(struct AmiSSLIFace *Self, BIO * bp, X509 ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_X509_AUX)(struct AmiSSLIFace *Self, BIO * bp, const X509 * x);
	APICALL X509_REQ * (*PEM_read_bio_X509_REQ)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_X509_REQ)(struct AmiSSLIFace *Self, BIO * bp, const X509_REQ * x);
	APICALL int (*PEM_write_bio_X509_REQ_NEW)(struct AmiSSLIFace *Self, BIO * bp, const X509_REQ * x);
	APICALL X509_CRL * (*PEM_read_bio_X509_CRL)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_X509_CRL)(struct AmiSSLIFace *Self, BIO * bp, const X509_CRL * x);
	APICALL PKCS7 * (*PEM_read_bio_PKCS7)(struct AmiSSLIFace *Self, BIO * bp, PKCS7 ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_PKCS7)(struct AmiSSLIFace *Self, BIO * bp, const PKCS7 * x);
	APICALL NETSCAPE_CERT_SEQUENCE * (*PEM_read_bio_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, BIO * bp, NETSCAPE_CERT_SEQUENCE ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, BIO * bp, const NETSCAPE_CERT_SEQUENCE * x);
	APICALL X509_SIG * (*PEM_read_bio_PKCS8)(struct AmiSSLIFace *Self, BIO * bp, X509_SIG ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_PKCS8)(struct AmiSSLIFace *Self, BIO * bp, const X509_SIG * x);
	APICALL PKCS8_PRIV_KEY_INFO * (*PEM_read_bio_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, BIO * bp, PKCS8_PRIV_KEY_INFO ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, BIO * bp, const PKCS8_PRIV_KEY_INFO * x);
	DEPRECATED APICALL RSA * (*PEM_read_bio_RSAPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, RSA ** x, pem_password_cb * cb, void * u);
	DEPRECATED APICALL int (*PEM_write_bio_RSAPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, const RSA * x, const EVP_CIPHER * enc, const unsigned char * kstr, int klen, pem_password_cb * cb, void * u);
	DEPRECATED APICALL RSA * (*PEM_read_bio_RSAPublicKey)(struct AmiSSLIFace *Self, BIO * bp, RSA ** x, pem_password_cb * cb, void * u);
	DEPRECATED APICALL int (*PEM_write_bio_RSAPublicKey)(struct AmiSSLIFace *Self, BIO * bp, const RSA * x);
	DEPRECATED APICALL RSA * (*PEM_read_bio_RSA_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, RSA ** x, pem_password_cb * cb, void * u);
	DEPRECATED APICALL int (*PEM_write_bio_RSA_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, const RSA * x);
	DEPRECATED APICALL DSA * (*PEM_read_bio_DSAPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, DSA ** x, pem_password_cb * cb, void * u);
	DEPRECATED APICALL int (*PEM_write_bio_DSAPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, const DSA * x, const EVP_CIPHER * enc, const unsigned char * kstr, int klen, pem_password_cb * cb, void * u);
	DEPRECATED APICALL DSA * (*PEM_read_bio_DSA_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, DSA ** x, pem_password_cb * cb, void * u);
	DEPRECATED APICALL int (*PEM_write_bio_DSA_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, const DSA * x);
	DEPRECATED APICALL DSA * (*PEM_read_bio_DSAparams)(struct AmiSSLIFace *Self, BIO * bp, DSA ** x, pem_password_cb * cb, void * u);
	DEPRECATED APICALL int (*PEM_write_bio_DSAparams)(struct AmiSSLIFace *Self, BIO * bp, const DSA * x);
	DEPRECATED APICALL DH * (*PEM_read_bio_DHparams)(struct AmiSSLIFace *Self, BIO * bp, DH ** x, pem_password_cb * cb, void * u);
	DEPRECATED APICALL int (*PEM_write_bio_DHparams)(struct AmiSSLIFace *Self, BIO * bp, const DH * x);
	APICALL EVP_PKEY * (*PEM_read_bio_PrivateKey)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_PrivateKey)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * x, const EVP_CIPHER * enc, const unsigned char * kstr, int klen, pem_password_cb * cb, void * u);
	APICALL EVP_PKEY * (*PEM_read_bio_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * x);
	APICALL int (*PEM_write_bio_PKCS8PrivateKey_nid)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * x, int nid, const char * kstr, int klen, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_PKCS8PrivateKey)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * x, const EVP_CIPHER * enc, const char * kstr, int klen, pem_password_cb * cb, void * u);
	APICALL int (*i2d_PKCS8PrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * x, const EVP_CIPHER * enc, const char * kstr, int klen, pem_password_cb * cb, void * u);
	APICALL int (*i2d_PKCS8PrivateKey_nid_bio)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * x, int nid, const char * kstr, int klen, pem_password_cb * cb, void * u);
	APICALL EVP_PKEY * (*d2i_PKCS8PrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** x, pem_password_cb * cb, void * u);
	DEPRECATED APICALL int (*ERR_load_PEM_strings)(struct AmiSSLIFace *Self);
	APICALL PKCS12_SAFEBAG * (*OBSOLETE_PKCS12_x5092certbag)(struct AmiSSLIFace *Self, X509 * x509);
	APICALL PKCS12_SAFEBAG * (*OBSOLETE_PKCS12_x509crl2certbag)(struct AmiSSLIFace *Self, X509_CRL * crl);
	APICALL X509 * (*OBSOLETE_PKCS12_certbag2x509)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag);
	APTR PKCS12_certbag2x509crl_UNIMPLEMENTED;
	APICALL PKCS12_SAFEBAG * (*PKCS12_item_pack_safebag)(struct AmiSSLIFace *Self, void * obj, const ASN1_ITEM * it, int nid1, int nid2);
	APICALL PKCS12_SAFEBAG * (*OBSOLETE_PKCS12_MAKE_KEYBAG)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8);
	APICALL PKCS8_PRIV_KEY_INFO * (*PKCS8_decrypt)(struct AmiSSLIFace *Self, const X509_SIG * p8, const char * pass, int passlen);
	APICALL PKCS8_PRIV_KEY_INFO * (*PKCS12_decrypt_skey)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag, const char * pass, int passlen);
	APICALL X509_SIG * (*PKCS8_encrypt)(struct AmiSSLIFace *Self, int pbe_nid, const EVP_CIPHER * cipher, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, PKCS8_PRIV_KEY_INFO * p8);
	APICALL PKCS12_SAFEBAG * (*OBSOLETE_PKCS12_MAKE_SHKEYBAG)(struct AmiSSLIFace *Self, int pbe_nid, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, PKCS8_PRIV_KEY_INFO * p8);
	APICALL PKCS7 * (*PKCS12_pack_p7data)(struct AmiSSLIFace *Self, STACK_OF(PKCS12_SAFEBAG) * sk);
	APICALL STACK_OF(PKCS12_SAFEBAG) * (*PKCS12_unpack_p7data)(struct AmiSSLIFace *Self, PKCS7 * p7);
	APICALL PKCS7 * (*PKCS12_pack_p7encdata)(struct AmiSSLIFace *Self, int pbe_nid, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, STACK_OF(PKCS12_SAFEBAG) * bags);
	APICALL STACK_OF(PKCS12_SAFEBAG) * (*PKCS12_unpack_p7encdata)(struct AmiSSLIFace *Self, PKCS7 * p7, const char * pass, int passlen);
	APICALL int (*PKCS12_pack_authsafes)(struct AmiSSLIFace *Self, PKCS12 * p12, STACK_OF(PKCS7) * safes);
	APICALL STACK_OF(PKCS7) * (*PKCS12_unpack_authsafes)(struct AmiSSLIFace *Self, const PKCS12 * p12);
	APICALL int (*PKCS12_add_localkeyid)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, unsigned char * name, int namelen);
	APICALL int (*PKCS12_add_friendlyname_asc)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, const char * name, int namelen);
	APICALL int (*PKCS12_add_CSPName_asc)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, const char * name, int namelen);
	APICALL int (*PKCS12_add_friendlyname_uni)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, const unsigned char * name, int namelen);
	APICALL int (*PKCS8_add_keyusage)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8, int usage);
	APICALL ASN1_TYPE * (*PKCS12_get_attr_gen)(struct AmiSSLIFace *Self, const STACK_OF(X509_ATTRIBUTE) * attrs, int attr_nid);
	APICALL char * (*PKCS12_get_friendlyname)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag);
	APICALL unsigned char * (*PKCS12_pbe_crypt)(struct AmiSSLIFace *Self, const X509_ALGOR * algor, const char * pass, int passlen, const unsigned char * in, int inlen, unsigned char ** data, int * datalen, int en_de);
	APICALL void * (*PKCS12_item_decrypt_d2i)(struct AmiSSLIFace *Self, const X509_ALGOR * algor, const ASN1_ITEM * it, const char * pass, int passlen, const ASN1_OCTET_STRING * oct, int zbuf);
	APICALL ASN1_OCTET_STRING * (*PKCS12_item_i2d_encrypt)(struct AmiSSLIFace *Self, X509_ALGOR * algor, const ASN1_ITEM * it, const char * pass, int passlen, void * obj, int zbuf);
	APICALL PKCS12 * (*PKCS12_init)(struct AmiSSLIFace *Self, int mode);
	APICALL int (*PKCS12_key_gen_asc)(struct AmiSSLIFace *Self, const char * pass, int passlen, unsigned char * salt, int saltlen, int id, int iter, int n, unsigned char * out, const EVP_MD * md_type);
	APICALL int (*PKCS12_key_gen_uni)(struct AmiSSLIFace *Self, unsigned char * pass, int passlen, unsigned char * salt, int saltlen, int id, int iter, int n, unsigned char * out, const EVP_MD * md_type);
	APICALL int (*PKCS12_PBE_keyivgen)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, const EVP_CIPHER * cipher, const EVP_MD * md_type, int en_de);
	APICALL int (*PKCS12_gen_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, int passlen, unsigned char * mac, unsigned int * maclen);
	APICALL int (*PKCS12_verify_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, int passlen);
	APICALL int (*PKCS12_set_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, const EVP_MD * md_type);
	APICALL int (*PKCS12_setup_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, int iter, unsigned char * salt, int saltlen, const EVP_MD * md_type);
	APICALL unsigned char * (*OPENSSL_asc2uni)(struct AmiSSLIFace *Self, const char * asc, int asclen, unsigned char ** uni, int * unilen);
	APICALL char * (*OPENSSL_uni2asc)(struct AmiSSLIFace *Self, const unsigned char * uni, int unilen);
	APICALL PKCS12 * (*PKCS12_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS12_free)(struct AmiSSLIFace *Self, PKCS12 * a);
	APICALL PKCS12 * (*d2i_PKCS12)(struct AmiSSLIFace *Self, PKCS12 ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS12)(struct AmiSSLIFace *Self, const PKCS12 * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS12_it)(struct AmiSSLIFace *Self);
	APICALL PKCS12_MAC_DATA * (*PKCS12_MAC_DATA_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS12_MAC_DATA_free)(struct AmiSSLIFace *Self, PKCS12_MAC_DATA * a);
	APICALL PKCS12_MAC_DATA * (*d2i_PKCS12_MAC_DATA)(struct AmiSSLIFace *Self, PKCS12_MAC_DATA ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS12_MAC_DATA)(struct AmiSSLIFace *Self, const PKCS12_MAC_DATA * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS12_MAC_DATA_it)(struct AmiSSLIFace *Self);
	APICALL PKCS12_SAFEBAG * (*PKCS12_SAFEBAG_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS12_SAFEBAG_free)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * a);
	APICALL PKCS12_SAFEBAG * (*d2i_PKCS12_SAFEBAG)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS12_SAFEBAG)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS12_SAFEBAG_it)(struct AmiSSLIFace *Self);
	APICALL PKCS12_BAGS * (*PKCS12_BAGS_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS12_BAGS_free)(struct AmiSSLIFace *Self, PKCS12_BAGS * a);
	APICALL PKCS12_BAGS * (*d2i_PKCS12_BAGS)(struct AmiSSLIFace *Self, PKCS12_BAGS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS12_BAGS)(struct AmiSSLIFace *Self, const PKCS12_BAGS * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS12_BAGS_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*PKCS12_SAFEBAGS_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*PKCS12_AUTHSAFES_it)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS12_PBE_add)(struct AmiSSLIFace *Self);
	APICALL int (*PKCS12_parse)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, EVP_PKEY ** pkey, X509 ** cert, STACK_OF(X509) ** ca);
	APICALL PKCS12 * (*PKCS12_create)(struct AmiSSLIFace *Self, const char * pass, const char * name, EVP_PKEY * pkey, X509 * cert, STACK_OF(X509) * ca, int nid_key, int nid_cert, int iter, int mac_iter, int keytype);
	APICALL int (*i2d_PKCS12_bio)(struct AmiSSLIFace *Self, BIO * bp, const PKCS12 * p12);
	APICALL PKCS12 * (*d2i_PKCS12_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS12 ** p12);
	APICALL int (*PKCS12_newpass)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * oldpass, const char * newpass);
	DEPRECATED APICALL int (*ERR_load_PKCS12_strings)(struct AmiSSLIFace *Self);
	APICALL int (*PKCS7_ISSUER_AND_SERIAL_digest)(struct AmiSSLIFace *Self, PKCS7_ISSUER_AND_SERIAL * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
	APICALL PKCS7 * (*PKCS7_dup)(struct AmiSSLIFace *Self, const PKCS7 * p7);
	APICALL PKCS7 * (*d2i_PKCS7_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS7 ** p7);
	APICALL int (*i2d_PKCS7_bio)(struct AmiSSLIFace *Self, BIO * bp, const PKCS7 * p7);
	APICALL PKCS7_ISSUER_AND_SERIAL * (*PKCS7_ISSUER_AND_SERIAL_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS7_ISSUER_AND_SERIAL_free)(struct AmiSSLIFace *Self, PKCS7_ISSUER_AND_SERIAL * a);
	APICALL PKCS7_ISSUER_AND_SERIAL * (*d2i_PKCS7_ISSUER_AND_SERIAL)(struct AmiSSLIFace *Self, PKCS7_ISSUER_AND_SERIAL ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS7_ISSUER_AND_SERIAL)(struct AmiSSLIFace *Self, const PKCS7_ISSUER_AND_SERIAL * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS7_ISSUER_AND_SERIAL_it)(struct AmiSSLIFace *Self);
	APICALL PKCS7_SIGNER_INFO * (*PKCS7_SIGNER_INFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS7_SIGNER_INFO_free)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * a);
	APICALL PKCS7_SIGNER_INFO * (*d2i_PKCS7_SIGNER_INFO)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS7_SIGNER_INFO)(struct AmiSSLIFace *Self, const PKCS7_SIGNER_INFO * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS7_SIGNER_INFO_it)(struct AmiSSLIFace *Self);
	APICALL PKCS7_RECIP_INFO * (*PKCS7_RECIP_INFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS7_RECIP_INFO_free)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO * a);
	APICALL PKCS7_RECIP_INFO * (*d2i_PKCS7_RECIP_INFO)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS7_RECIP_INFO)(struct AmiSSLIFace *Self, const PKCS7_RECIP_INFO * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS7_RECIP_INFO_it)(struct AmiSSLIFace *Self);
	APICALL PKCS7_SIGNED * (*PKCS7_SIGNED_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS7_SIGNED_free)(struct AmiSSLIFace *Self, PKCS7_SIGNED * a);
	APICALL PKCS7_SIGNED * (*d2i_PKCS7_SIGNED)(struct AmiSSLIFace *Self, PKCS7_SIGNED ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS7_SIGNED)(struct AmiSSLIFace *Self, const PKCS7_SIGNED * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS7_SIGNED_it)(struct AmiSSLIFace *Self);
	APICALL PKCS7_ENC_CONTENT * (*PKCS7_ENC_CONTENT_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS7_ENC_CONTENT_free)(struct AmiSSLIFace *Self, PKCS7_ENC_CONTENT * a);
	APICALL PKCS7_ENC_CONTENT * (*d2i_PKCS7_ENC_CONTENT)(struct AmiSSLIFace *Self, PKCS7_ENC_CONTENT ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS7_ENC_CONTENT)(struct AmiSSLIFace *Self, const PKCS7_ENC_CONTENT * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS7_ENC_CONTENT_it)(struct AmiSSLIFace *Self);
	APICALL PKCS7_ENVELOPE * (*PKCS7_ENVELOPE_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS7_ENVELOPE_free)(struct AmiSSLIFace *Self, PKCS7_ENVELOPE * a);
	APICALL PKCS7_ENVELOPE * (*d2i_PKCS7_ENVELOPE)(struct AmiSSLIFace *Self, PKCS7_ENVELOPE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS7_ENVELOPE)(struct AmiSSLIFace *Self, const PKCS7_ENVELOPE * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS7_ENVELOPE_it)(struct AmiSSLIFace *Self);
	APICALL PKCS7_SIGN_ENVELOPE * (*PKCS7_SIGN_ENVELOPE_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS7_SIGN_ENVELOPE_free)(struct AmiSSLIFace *Self, PKCS7_SIGN_ENVELOPE * a);
	APICALL PKCS7_SIGN_ENVELOPE * (*d2i_PKCS7_SIGN_ENVELOPE)(struct AmiSSLIFace *Self, PKCS7_SIGN_ENVELOPE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS7_SIGN_ENVELOPE)(struct AmiSSLIFace *Self, const PKCS7_SIGN_ENVELOPE * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS7_SIGN_ENVELOPE_it)(struct AmiSSLIFace *Self);
	APICALL PKCS7_DIGEST * (*PKCS7_DIGEST_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS7_DIGEST_free)(struct AmiSSLIFace *Self, PKCS7_DIGEST * a);
	APICALL PKCS7_DIGEST * (*d2i_PKCS7_DIGEST)(struct AmiSSLIFace *Self, PKCS7_DIGEST ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS7_DIGEST)(struct AmiSSLIFace *Self, const PKCS7_DIGEST * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS7_DIGEST_it)(struct AmiSSLIFace *Self);
	APICALL PKCS7_ENCRYPT * (*PKCS7_ENCRYPT_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS7_ENCRYPT_free)(struct AmiSSLIFace *Self, PKCS7_ENCRYPT * a);
	APICALL PKCS7_ENCRYPT * (*d2i_PKCS7_ENCRYPT)(struct AmiSSLIFace *Self, PKCS7_ENCRYPT ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS7_ENCRYPT)(struct AmiSSLIFace *Self, const PKCS7_ENCRYPT * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS7_ENCRYPT_it)(struct AmiSSLIFace *Self);
	APICALL PKCS7 * (*PKCS7_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS7_free)(struct AmiSSLIFace *Self, PKCS7 * a);
	APICALL PKCS7 * (*d2i_PKCS7)(struct AmiSSLIFace *Self, PKCS7 ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS7)(struct AmiSSLIFace *Self, const PKCS7 * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS7_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*PKCS7_ATTR_SIGN_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*PKCS7_ATTR_VERIFY_it)(struct AmiSSLIFace *Self);
	APICALL long (*PKCS7_ctrl)(struct AmiSSLIFace *Self, PKCS7 * p7, int cmd, long larg, char * parg);
	APICALL int (*PKCS7_set_type)(struct AmiSSLIFace *Self, PKCS7 * p7, int type);
	APICALL int (*PKCS7_set_content)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7 * p7_data);
	APICALL int (*PKCS7_SIGNER_INFO_set)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7i, X509 * x509, EVP_PKEY * pkey, const EVP_MD * dgst);
	APICALL int (*PKCS7_add_signer)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7_SIGNER_INFO * p7i);
	APICALL int (*PKCS7_add_certificate)(struct AmiSSLIFace *Self, PKCS7 * p7, X509 * cert);
	APICALL int (*PKCS7_add_crl)(struct AmiSSLIFace *Self, PKCS7 * p7, X509_CRL * crl);
	APICALL int (*PKCS7_content_new)(struct AmiSSLIFace *Self, PKCS7 * p7, int nid);
	APICALL int (*PKCS7_dataVerify)(struct AmiSSLIFace *Self, X509_STORE * cert_store, X509_STORE_CTX * ctx, BIO * bio, PKCS7 * p7, PKCS7_SIGNER_INFO * si);
	APICALL int (*PKCS7_signatureVerify)(struct AmiSSLIFace *Self, BIO * bio, PKCS7 * p7, PKCS7_SIGNER_INFO * si, X509 * signer);
	APICALL BIO * (*PKCS7_dataInit)(struct AmiSSLIFace *Self, PKCS7 * p7, BIO * bio);
	APICALL int (*PKCS7_dataFinal)(struct AmiSSLIFace *Self, PKCS7 * p7, BIO * bio);
	APICALL BIO * (*PKCS7_dataDecode)(struct AmiSSLIFace *Self, PKCS7 * p7, EVP_PKEY * pkey, BIO * in_bio, X509 * pcert);
	APICALL PKCS7_SIGNER_INFO * (*PKCS7_add_signature)(struct AmiSSLIFace *Self, PKCS7 * p7, X509 * x509, EVP_PKEY * pkey, const EVP_MD * dgst);
	APICALL X509 * (*PKCS7_cert_from_signer_info)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7_SIGNER_INFO * si);
	APICALL STACK_OF(PKCS7_SIGNER_INFO) * (*PKCS7_get_signer_info)(struct AmiSSLIFace *Self, PKCS7 * p7);
	APICALL PKCS7_RECIP_INFO * (*PKCS7_add_recipient)(struct AmiSSLIFace *Self, PKCS7 * p7, X509 * x509);
	APICALL int (*PKCS7_add_recipient_info)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7_RECIP_INFO * ri);
	APICALL int (*PKCS7_RECIP_INFO_set)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO * p7i, X509 * x509);
	APICALL int (*PKCS7_set_cipher)(struct AmiSSLIFace *Self, PKCS7 * p7, const EVP_CIPHER * cipher);
	APICALL PKCS7_ISSUER_AND_SERIAL * (*PKCS7_get_issuer_and_serial)(struct AmiSSLIFace *Self, PKCS7 * p7, int idx);
	APICALL ASN1_OCTET_STRING * (*PKCS7_digest_from_attributes)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) * sk);
	APICALL int (*PKCS7_add_signed_attribute)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, int nid, int type, void * data);
	APICALL int (*PKCS7_add_attribute)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, int nid, int atrtype, void * value);
	APICALL ASN1_TYPE * (*PKCS7_get_attribute)(struct AmiSSLIFace *Self, const PKCS7_SIGNER_INFO * si, int nid);
	APICALL ASN1_TYPE * (*PKCS7_get_signed_attribute)(struct AmiSSLIFace *Self, const PKCS7_SIGNER_INFO * si, int nid);
	APICALL int (*PKCS7_set_signed_attributes)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, STACK_OF(X509_ATTRIBUTE) * sk);
	APICALL int (*PKCS7_set_attributes)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, STACK_OF(X509_ATTRIBUTE) * sk);
	APICALL PKCS7 * (*PKCS7_sign)(struct AmiSSLIFace *Self, X509 * signcert, EVP_PKEY * pkey, STACK_OF(X509) * certs, BIO * data, int flags);
	APICALL int (*PKCS7_verify)(struct AmiSSLIFace *Self, PKCS7 * p7, STACK_OF(X509) * certs, X509_STORE * store, BIO * indata, BIO * out, int flags);
	APICALL STACK_OF(X509) * (*PKCS7_get0_signers)(struct AmiSSLIFace *Self, PKCS7 * p7, STACK_OF(X509) * certs, int flags);
	APICALL PKCS7 * (*PKCS7_encrypt)(struct AmiSSLIFace *Self, STACK_OF(X509) * certs, BIO * in, const EVP_CIPHER * cipher, int flags);
	APICALL int (*PKCS7_decrypt)(struct AmiSSLIFace *Self, PKCS7 * p7, EVP_PKEY * pkey, X509 * cert, BIO * data, int flags);
	APICALL int (*PKCS7_add_attrib_smimecap)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si, STACK_OF(X509_ALGOR) * cap);
	APICALL STACK_OF(X509_ALGOR) * (*PKCS7_get_smimecap)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si);
	APICALL int (*PKCS7_simple_smimecap)(struct AmiSSLIFace *Self, STACK_OF(X509_ALGOR) * sk, int nid, int arg);
	APICALL int (*SMIME_write_PKCS7)(struct AmiSSLIFace *Self, BIO * bio, PKCS7 * p7, BIO * data, int flags);
	APICALL PKCS7 * (*SMIME_read_PKCS7)(struct AmiSSLIFace *Self, BIO * bio, BIO ** bcont);
	APICALL int (*SMIME_crlf_copy)(struct AmiSSLIFace *Self, BIO * in, BIO * out, int flags);
	APICALL int (*SMIME_text)(struct AmiSSLIFace *Self, BIO * in, BIO * out);
	DEPRECATED APICALL int (*ERR_load_PKCS7_strings)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*RAND_set_rand_method)(struct AmiSSLIFace *Self, const RAND_METHOD * meth);
	DEPRECATED APICALL const RAND_METHOD * (*RAND_get_rand_method)(struct AmiSSLIFace *Self);
	APTR RAND_SSLeay_UNIMPLEMENTED;
	APTR RAND_cleanup_UNIMPLEMENTED;
	APICALL int (*RAND_bytes)(struct AmiSSLIFace *Self, unsigned char * buf, int num);
	DEPRECATED APICALL int (*RAND_pseudo_bytes)(struct AmiSSLIFace *Self, unsigned char * buf, int num);
	APICALL void (*RAND_seed)(struct AmiSSLIFace *Self, const void * buf, int num);
	APICALL void (*RAND_add)(struct AmiSSLIFace *Self, const void * buf, int num, double randomness);
	APICALL int (*RAND_load_file)(struct AmiSSLIFace *Self, const char * file, long max_bytes);
	APICALL int (*RAND_write_file)(struct AmiSSLIFace *Self, const char * file);
	APICALL const char * (*RAND_file_name)(struct AmiSSLIFace *Self, char * file, size_t num);
	APICALL int (*RAND_status)(struct AmiSSLIFace *Self);
	APTR RAND_query_egd_bytes_UNIMPLEMENTED;
	APTR RAND_egd_UNIMPLEMENTED;
	APTR RAND_egd_bytes_UNIMPLEMENTED;
	APICALL int (*RAND_poll)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ERR_load_RAND_strings)(struct AmiSSLIFace *Self);
	APICALL void (*SSL_CTX_set_msg_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, void (*cb)(int write_p, int version, int content_type, const void *buf, size_t len, SSL *ssl, void *arg));
	APICALL void (*SSL_set_msg_callback)(struct AmiSSLIFace *Self, SSL * ssl, void (*cb)(int write_p, int version, int content_type, const void *buf, size_t len, SSL *ssl, void *arg));
	APICALL LHASH_OF(SSL_SESSION) * (*SSL_CTX_sessions)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL size_t (*SSL_get_finished)(struct AmiSSLIFace *Self, const SSL * s, void * buf, size_t count);
	APICALL size_t (*SSL_get_peer_finished)(struct AmiSSLIFace *Self, const SSL * s, void * buf, size_t count);
	APICALL const BIO_METHOD * (*BIO_f_ssl)(struct AmiSSLIFace *Self);
	APICALL BIO * (*BIO_new_ssl)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int client);
	APICALL BIO * (*BIO_new_ssl_connect)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL BIO * (*BIO_new_buffer_ssl_connect)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL int (*BIO_ssl_copy_session_id)(struct AmiSSLIFace *Self, BIO * to, BIO * from);
	APICALL void (*BIO_ssl_shutdown)(struct AmiSSLIFace *Self, BIO * ssl_bio);
	APICALL int (*SSL_CTX_set_cipher_list)(struct AmiSSLIFace *Self, SSL_CTX * a, const char * str);
	APICALL SSL_CTX * (*SSL_CTX_new)(struct AmiSSLIFace *Self, const SSL_METHOD * meth);
	APICALL void (*SSL_CTX_free)(struct AmiSSLIFace *Self, SSL_CTX * a);
	APICALL long (*SSL_CTX_set_timeout)(struct AmiSSLIFace *Self, SSL_CTX * ctx, long t);
	APICALL long (*SSL_CTX_get_timeout)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL X509_STORE * (*SSL_CTX_get_cert_store)(struct AmiSSLIFace *Self, const SSL_CTX * a);
	APICALL void (*SSL_CTX_set_cert_store)(struct AmiSSLIFace *Self, SSL_CTX * a, X509_STORE * b);
	APICALL int (*SSL_want)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_clear)(struct AmiSSLIFace *Self, SSL * s);
	DEPRECATED APICALL void (*SSL_CTX_flush_sessions)(struct AmiSSLIFace *Self, SSL_CTX * ctx, long tm);
	APICALL const SSL_CIPHER * (*SSL_get_current_cipher)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_CIPHER_get_bits)(struct AmiSSLIFace *Self, const SSL_CIPHER * c, int * alg_bits);
	APICALL const char * (*SSL_CIPHER_get_version)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
	APICALL const char * (*SSL_CIPHER_get_name)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
	APICALL const char * (*SSL_CIPHER_get_mac)(struct AmiSSLIFace *Self, const SSL_CIPHER * cipher);
	APICALL const char * (*SSL_CIPHER_get_encryption)(struct AmiSSLIFace *Self, const SSL_CIPHER * cipher);
	APICALL const char * (*SSL_CIPHER_get_authentication)(struct AmiSSLIFace *Self, const SSL_CIPHER * cipher);
	APICALL const char * (*SSL_CIPHER_get_key_exchange)(struct AmiSSLIFace *Self, const SSL_CIPHER * cipher);
	APTR SSL_CIPHER_get_export_UNIMPLEMENTED;
	APICALL int (*SSL_get_fd)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_get_rfd)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_get_wfd)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL const char * (*SSL_get_cipher_list)(struct AmiSSLIFace *Self, const SSL * s, int n);
	APICALL char * (*SSL_get_shared_ciphers)(struct AmiSSLIFace *Self, const SSL * s, char * buf, int size);
	APICALL int (*SSL_get_read_ahead)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_pending)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_set_fd)(struct AmiSSLIFace *Self, SSL * s, int fd);
	APICALL int (*SSL_set_rfd)(struct AmiSSLIFace *Self, SSL * s, int fd);
	APICALL int (*SSL_set_wfd)(struct AmiSSLIFace *Self, SSL * s, int fd);
	APICALL void (*SSL_set_bio)(struct AmiSSLIFace *Self, SSL * s, BIO * rbio, BIO * wbio);
	APICALL BIO * (*SSL_get_rbio)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL BIO * (*SSL_get_wbio)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_set_cipher_list)(struct AmiSSLIFace *Self, SSL * s, const char * str);
	APICALL void (*SSL_set_read_ahead)(struct AmiSSLIFace *Self, SSL * s, int yes);
	APICALL int (*SSL_get_verify_mode)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_get_verify_depth)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*(*SSL_get_verify_callback)(struct AmiSSLIFace *Self, const SSL * s))(int, X509_STORE_CTX *);
	APICALL void (*SSL_set_verify)(struct AmiSSLIFace *Self, SSL * s, int mode, int (*callback)(int, X509_STORE_CTX *));
	APICALL void (*SSL_set_verify_depth)(struct AmiSSLIFace *Self, SSL * s, int depth);
	DEPRECATED APICALL int (*SSL_use_RSAPrivateKey)(struct AmiSSLIFace *Self, SSL * ssl, RSA * rsa);
	DEPRECATED APICALL int (*SSL_use_RSAPrivateKey_ASN1)(struct AmiSSLIFace *Self, SSL * ssl, const unsigned char * d, long len);
	APICALL int (*SSL_use_PrivateKey)(struct AmiSSLIFace *Self, SSL * ssl, EVP_PKEY * pkey);
	APICALL int (*SSL_use_PrivateKey_ASN1)(struct AmiSSLIFace *Self, int pk, SSL * ssl, const unsigned char * d, long len);
	APICALL int (*SSL_use_certificate)(struct AmiSSLIFace *Self, SSL * ssl, X509 * x);
	APICALL int (*SSL_use_certificate_ASN1)(struct AmiSSLIFace *Self, SSL * ssl, const unsigned char * d, int len);
	DEPRECATED APICALL int (*SSL_use_RSAPrivateKey_file)(struct AmiSSLIFace *Self, SSL * ssl, const char * file, int type);
	APICALL int (*SSL_use_PrivateKey_file)(struct AmiSSLIFace *Self, SSL * ssl, const char * file, int type);
	APICALL int (*SSL_use_certificate_file)(struct AmiSSLIFace *Self, SSL * ssl, const char * file, int type);
	DEPRECATED APICALL int (*SSL_CTX_use_RSAPrivateKey_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file, int type);
	APICALL int (*SSL_CTX_use_PrivateKey_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file, int type);
	APICALL int (*SSL_CTX_use_certificate_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file, int type);
	APICALL int (*SSL_CTX_use_certificate_chain_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file);
	APICALL STACK_OF(X509_NAME) * (*SSL_load_client_CA_file)(struct AmiSSLIFace *Self, const char * file);
	APICALL int (*SSL_add_file_cert_subjects_to_stack)(struct AmiSSLIFace *Self, STACK_OF(X509_NAME) * stackCAs, const char * file);
	APICALL int (*SSL_add_dir_cert_subjects_to_stack)(struct AmiSSLIFace *Self, STACK_OF(X509_NAME) * stackCAs, const char * dir);
	APICALL void (*OBSOLETE_SSL_load_error_strings)(struct AmiSSLIFace *Self);
	APICALL const char * (*SSL_state_string)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL const char * (*SSL_rstate_string)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL const char * (*SSL_state_string_long)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL const char * (*SSL_rstate_string_long)(struct AmiSSLIFace *Self, const SSL * s);
	DEPRECATED APICALL long (*SSL_SESSION_get_time)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
	DEPRECATED APICALL long (*SSL_SESSION_set_time)(struct AmiSSLIFace *Self, SSL_SESSION * s, long t);
	APICALL long (*SSL_SESSION_get_timeout)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
	APICALL long (*SSL_SESSION_set_timeout)(struct AmiSSLIFace *Self, SSL_SESSION * s, long t);
	APICALL int (*SSL_copy_session_id)(struct AmiSSLIFace *Self, SSL * to, const SSL * from);
	APICALL SSL_SESSION * (*SSL_SESSION_new)(struct AmiSSLIFace *Self);
	APTR SSL_SESSION_hash_UNIMPLEMENTED;
	APTR SSL_SESSION_cmp_UNIMPLEMENTED;
	APICALL int (*SSL_SESSION_print)(struct AmiSSLIFace *Self, BIO * fp, const SSL_SESSION * ses);
	APICALL void (*SSL_SESSION_free)(struct AmiSSLIFace *Self, SSL_SESSION * ses);
	APICALL int (*i2d_SSL_SESSION)(struct AmiSSLIFace *Self, const SSL_SESSION * in, unsigned char ** pp);
	APICALL int (*SSL_set_session)(struct AmiSSLIFace *Self, SSL * to, SSL_SESSION * session);
	APICALL int (*SSL_CTX_add_session)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_SESSION * session);
	APICALL int (*SSL_CTX_remove_session)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_SESSION * session);
	APICALL int (*SSL_CTX_set_generate_session_id)(struct AmiSSLIFace *Self, SSL_CTX * ctx, GEN_SESSION_CB cb);
	APICALL int (*SSL_set_generate_session_id)(struct AmiSSLIFace *Self, SSL * s, GEN_SESSION_CB cb);
	APICALL int (*SSL_has_matching_session_id)(struct AmiSSLIFace *Self, const SSL * s, const unsigned char * id, unsigned int id_len);
	APICALL SSL_SESSION * (*d2i_SSL_SESSION)(struct AmiSSLIFace *Self, SSL_SESSION ** a, const unsigned char ** pp, long length);
	APICALL X509 * (*SSL_get1_peer_certificate)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL STACK_OF(X509) * (*SSL_get_peer_cert_chain)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_CTX_get_verify_mode)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL int (*SSL_CTX_get_verify_depth)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL int (*(*SSL_CTX_get_verify_callback)(struct AmiSSLIFace *Self, const SSL_CTX * ctx))(int, X509_STORE_CTX *);
	APICALL void (*SSL_CTX_set_verify)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int mode, int (*callback)(int, X509_STORE_CTX *));
	APICALL void (*SSL_CTX_set_verify_depth)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int depth);
	APICALL void (*SSL_CTX_set_cert_verify_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*cb)(X509_STORE_CTX *, void *), void * arg);
	DEPRECATED APICALL int (*SSL_CTX_use_RSAPrivateKey)(struct AmiSSLIFace *Self, SSL_CTX * ctx, RSA * rsa);
	DEPRECATED APICALL int (*SSL_CTX_use_RSAPrivateKey_ASN1)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const unsigned char * d, long len);
	APICALL int (*SSL_CTX_use_PrivateKey)(struct AmiSSLIFace *Self, SSL_CTX * ctx, EVP_PKEY * pkey);
	APICALL int (*SSL_CTX_use_PrivateKey_ASN1)(struct AmiSSLIFace *Self, int pk, SSL_CTX * ctx, const unsigned char * d, long len);
	APICALL int (*SSL_CTX_use_certificate)(struct AmiSSLIFace *Self, SSL_CTX * ctx, X509 * x);
	APICALL int (*SSL_CTX_use_certificate_ASN1)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int len, const unsigned char * d);
	APICALL void (*SSL_CTX_set_default_passwd_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, pem_password_cb * cb);
	APICALL void (*SSL_CTX_set_default_passwd_cb_userdata)(struct AmiSSLIFace *Self, SSL_CTX * ctx, void * u);
	APICALL int (*SSL_CTX_check_private_key)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL int (*SSL_check_private_key)(struct AmiSSLIFace *Self, const SSL * ctx);
	APICALL int (*SSL_CTX_set_session_id_context)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const unsigned char * sid_ctx, unsigned int sid_ctx_len);
	APICALL SSL * (*SSL_new)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL int (*SSL_set_session_id_context)(struct AmiSSLIFace *Self, SSL * ssl, const unsigned char * sid_ctx, unsigned int sid_ctx_len);
	APICALL int (*SSL_CTX_set_purpose)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int purpose);
	APICALL int (*SSL_set_purpose)(struct AmiSSLIFace *Self, SSL * ssl, int purpose);
	APICALL int (*SSL_CTX_set_trust)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int trust);
	APICALL int (*SSL_set_trust)(struct AmiSSLIFace *Self, SSL * ssl, int trust);
	APICALL void (*SSL_free)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL int (*SSL_accept)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL int (*SSL_connect)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL int (*SSL_read)(struct AmiSSLIFace *Self, SSL * ssl, void * buf, int num);
	APICALL int (*SSL_peek)(struct AmiSSLIFace *Self, SSL * ssl, void * buf, int num);
	APICALL int (*SSL_write)(struct AmiSSLIFace *Self, SSL * ssl, const void * buf, int num);
	APICALL long (*SSL_ctrl)(struct AmiSSLIFace *Self, SSL * ssl, int cmd, long larg, void * parg);
	APICALL long (*SSL_callback_ctrl)(struct AmiSSLIFace *Self, SSL * a, int a1, void (*b)());
	APICALL long (*SSL_CTX_ctrl)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int cmd, long larg, void * parg);
	APICALL long (*SSL_CTX_callback_ctrl)(struct AmiSSLIFace *Self, SSL_CTX * a1, int a2, void (*a3)(void));
	APICALL int (*SSL_get_error)(struct AmiSSLIFace *Self, const SSL * s, int ret_code);
	APICALL const char * (*SSL_get_version)(struct AmiSSLIFace *Self, const SSL * s);
	DEPRECATED APICALL int (*SSL_CTX_set_ssl_version)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const SSL_METHOD * meth);
	APTR SSLv2_method_UNIMPLEMENTED;
	APTR SSLv2_server_method_UNIMPLEMENTED;
	APTR SSLv2_client_method_UNIMPLEMENTED;
	APTR SSLv3_method_UNIMPLEMENTED;
	APTR SSLv3_server_method_UNIMPLEMENTED;
	APTR SSLv3_client_method_UNIMPLEMENTED;
	APTR SSLv23_method_UNIMPLEMENTED;
	APTR SSLv23_server_method_UNIMPLEMENTED;
	APTR SSLv23_client_method_UNIMPLEMENTED;
	DEPRECATED APICALL const SSL_METHOD * (*TLSv1_method)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const SSL_METHOD * (*TLSv1_server_method)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const SSL_METHOD * (*TLSv1_client_method)(struct AmiSSLIFace *Self);
	APICALL STACK_OF(SSL_CIPHER) * (*SSL_get_ciphers)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_do_handshake)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_renegotiate)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_renegotiate_pending)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_shutdown)(struct AmiSSLIFace *Self, SSL * s);
	APICALL const SSL_METHOD * (*SSL_get_ssl_method)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_set_ssl_method)(struct AmiSSLIFace *Self, SSL * s, const SSL_METHOD * method);
	APICALL const char * (*SSL_alert_type_string_long)(struct AmiSSLIFace *Self, int value);
	APICALL const char * (*SSL_alert_type_string)(struct AmiSSLIFace *Self, int value);
	APICALL const char * (*SSL_alert_desc_string_long)(struct AmiSSLIFace *Self, int value);
	APICALL const char * (*SSL_alert_desc_string)(struct AmiSSLIFace *Self, int value);
	APICALL void (*SSL_set_client_CA_list)(struct AmiSSLIFace *Self, SSL * s, STACK_OF(X509_NAME) * name_list);
	APICALL void (*SSL_CTX_set_client_CA_list)(struct AmiSSLIFace *Self, SSL_CTX * ctx, STACK_OF(X509_NAME) * name_list);
	APICALL STACK_OF(X509_NAME) * (*SSL_get_client_CA_list)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL STACK_OF(X509_NAME) * (*SSL_CTX_get_client_CA_list)(struct AmiSSLIFace *Self, const SSL_CTX * s);
	APICALL int (*SSL_add_client_CA)(struct AmiSSLIFace *Self, SSL * ssl, X509 * x);
	APICALL int (*SSL_CTX_add_client_CA)(struct AmiSSLIFace *Self, SSL_CTX * ctx, X509 * x);
	APICALL void (*SSL_set_connect_state)(struct AmiSSLIFace *Self, SSL * s);
	APICALL void (*SSL_set_accept_state)(struct AmiSSLIFace *Self, SSL * s);
	APICALL long (*SSL_get_default_timeout)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*OBSOLETE_SSL_library_init)(struct AmiSSLIFace *Self);
	APICALL char * (*SSL_CIPHER_description)(struct AmiSSLIFace *Self, const SSL_CIPHER * a1, char * buf, int size);
	APICALL STACK_OF(X509_NAME) * (*SSL_dup_CA_list)(struct AmiSSLIFace *Self, const STACK_OF(X509_NAME) * sk);
	APICALL SSL * (*SSL_dup)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL X509 * (*SSL_get_certificate)(struct AmiSSLIFace *Self, const SSL * ssl);
	APICALL struct evp_pkey_st * (*SSL_get_privatekey)(struct AmiSSLIFace *Self, const SSL * ssl);
	APICALL void (*SSL_CTX_set_quiet_shutdown)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int mode);
	APICALL int (*SSL_CTX_get_quiet_shutdown)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL void (*SSL_set_quiet_shutdown)(struct AmiSSLIFace *Self, SSL * ssl, int mode);
	APICALL int (*SSL_get_quiet_shutdown)(struct AmiSSLIFace *Self, const SSL * ssl);
	APICALL void (*SSL_set_shutdown)(struct AmiSSLIFace *Self, SSL * ssl, int mode);
	APICALL int (*SSL_get_shutdown)(struct AmiSSLIFace *Self, const SSL * ssl);
	APICALL int (*SSL_version)(struct AmiSSLIFace *Self, const SSL * ssl);
	APICALL int (*SSL_CTX_set_default_verify_paths)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL int (*SSL_CTX_load_verify_locations)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * CAfile, const char * CApath);
	APICALL SSL_SESSION * (*SSL_get_session)(struct AmiSSLIFace *Self, const SSL * ssl);
	APICALL SSL_SESSION * (*SSL_get1_session)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL SSL_CTX * (*SSL_get_SSL_CTX)(struct AmiSSLIFace *Self, const SSL * ssl);
	APICALL void (*SSL_set_info_callback)(struct AmiSSLIFace *Self, SSL * ssl, void (*cb)(const SSL *ssl, int type, int val));
	APICALL void (*(*SSL_get_info_callback)(struct AmiSSLIFace *Self, const SSL * ssl))(const SSL *ssl, int type, int val);
	APTR SSL_state_UNIMPLEMENTED;
	APICALL void (*SSL_set_verify_result)(struct AmiSSLIFace *Self, SSL * ssl, long v);
	APICALL long (*SSL_get_verify_result)(struct AmiSSLIFace *Self, const SSL * ssl);
	APICALL int (*SSL_set_ex_data)(struct AmiSSLIFace *Self, SSL * ssl, int idx, void * data);
	APICALL void * (*SSL_get_ex_data)(struct AmiSSLIFace *Self, const SSL * ssl, int idx);
	APICALL int (*OBSOLETE_SSL_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dup_func, CRYPTO_EX_free * free_func);
	APICALL int (*SSL_SESSION_set_ex_data)(struct AmiSSLIFace *Self, SSL_SESSION * ss, int idx, void * data);
	APICALL void * (*SSL_SESSION_get_ex_data)(struct AmiSSLIFace *Self, const SSL_SESSION * ss, int idx);
	APICALL int (*OBSOLETE_SSL_SESSION_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dup_func, CRYPTO_EX_free * free_func);
	APICALL int (*SSL_CTX_set_ex_data)(struct AmiSSLIFace *Self, SSL_CTX * ssl, int idx, void * data);
	APICALL void * (*SSL_CTX_get_ex_data)(struct AmiSSLIFace *Self, const SSL_CTX * ssl, int idx);
	APICALL int (*OBSOLETE_SSL_CTX_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dup_func, CRYPTO_EX_free * free_func);
	APICALL int (*SSL_get_ex_data_X509_STORE_CTX_idx)(struct AmiSSLIFace *Self);
	APTR SSL_CTX_set_tmp_rsa_callback_UNIMPLEMENTED;
	APTR SSL_set_tmp_rsa_callback_UNIMPLEMENTED;
	DEPRECATED APICALL void (*SSL_CTX_set_tmp_dh_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, DH * (*dh)(SSL *ssl, int is_export, int keylength));
	DEPRECATED APICALL void (*SSL_set_tmp_dh_callback)(struct AmiSSLIFace *Self, SSL * ssl, DH * (*dh)(SSL *ssl, int is_export, int keylength));
	APICALL int (*SSL_COMP_add_compression_method)(struct AmiSSLIFace *Self, int id, COMP_METHOD * cm);
	DEPRECATED APICALL int (*ERR_load_SSL_strings)(struct AmiSSLIFace *Self);
	APICALL int (*OPENSSL_sk_num)(struct AmiSSLIFace *Self, const OPENSSL_STACK * a);
	APICALL void * (*OPENSSL_sk_value)(struct AmiSSLIFace *Self, const OPENSSL_STACK * a, int b);
	APICALL void * (*OPENSSL_sk_set)(struct AmiSSLIFace *Self, OPENSSL_STACK * a, int b, const void * c);
	APICALL OPENSSL_STACK * (*OPENSSL_sk_new)(struct AmiSSLIFace *Self, int (*cmp)(const void *, const void *));
	APICALL OPENSSL_STACK * (*OPENSSL_sk_new_null)(struct AmiSSLIFace *Self);
	APICALL void (*OPENSSL_sk_free)(struct AmiSSLIFace *Self, OPENSSL_STACK * a);
	APICALL void (*OPENSSL_sk_pop_free)(struct AmiSSLIFace *Self, OPENSSL_STACK * st, void (*func)(void *));
	APICALL int (*OPENSSL_sk_insert)(struct AmiSSLIFace *Self, OPENSSL_STACK * sk, const void * data, int where);
	APICALL void * (*OPENSSL_sk_delete)(struct AmiSSLIFace *Self, OPENSSL_STACK * st, int loc);
	APICALL void * (*OPENSSL_sk_delete_ptr)(struct AmiSSLIFace *Self, OPENSSL_STACK * st, const void * p);
	APICALL int (*OPENSSL_sk_find)(struct AmiSSLIFace *Self, OPENSSL_STACK * st, const void * data);
	APICALL int (*OPENSSL_sk_push)(struct AmiSSLIFace *Self, OPENSSL_STACK * st, const void * data);
	APICALL int (*OPENSSL_sk_unshift)(struct AmiSSLIFace *Self, OPENSSL_STACK * st, const void * data);
	APICALL void * (*OPENSSL_sk_shift)(struct AmiSSLIFace *Self, OPENSSL_STACK * st);
	APICALL void * (*OPENSSL_sk_pop)(struct AmiSSLIFace *Self, OPENSSL_STACK * st);
	APICALL void (*OPENSSL_sk_zero)(struct AmiSSLIFace *Self, OPENSSL_STACK * st);
	APICALL int (*(*OPENSSL_sk_set_cmp_func)(struct AmiSSLIFace *Self, OPENSSL_STACK * sk, int (*c)(const void *, const void *)))(const void *, const void *);
	APICALL OPENSSL_STACK * (*OPENSSL_sk_dup)(struct AmiSSLIFace *Self, const OPENSSL_STACK * st);
	APICALL void (*OPENSSL_sk_sort)(struct AmiSSLIFace *Self, OPENSSL_STACK * st);
	APICALL int (*OPENSSL_sk_is_sorted)(struct AmiSSLIFace *Self, const OPENSSL_STACK * st);
	APTR ms_time_new_UNIMPLEMENTED;
	APTR ms_time_free_UNIMPLEMENTED;
	APTR ms_time_get_UNIMPLEMENTED;
	APTR ms_time_diff_UNIMPLEMENTED;
	APTR ms_time_cmp_UNIMPLEMENTED;
	APICALL TXT_DB * (*TXT_DB_read)(struct AmiSSLIFace *Self, BIO * in, int num);
	APICALL long (*TXT_DB_write)(struct AmiSSLIFace *Self, BIO * out, TXT_DB * db);
	APICALL int (*TXT_DB_create_index)(struct AmiSSLIFace *Self, TXT_DB * db, int field, int (*qual)(OPENSSL_STRING *), OPENSSL_LH_HASHFUNC hash, OPENSSL_LH_COMPFUNC cmp);
	APICALL void (*TXT_DB_free)(struct AmiSSLIFace *Self, TXT_DB * db);
	APICALL char ** (*TXT_DB_get_by_index)(struct AmiSSLIFace *Self, TXT_DB * db, int idx, char ** value);
	APICALL int (*TXT_DB_insert)(struct AmiSSLIFace *Self, TXT_DB * db, char ** value);
	APICALL UI * (*UI_new)(struct AmiSSLIFace *Self);
	APICALL UI * (*UI_new_method)(struct AmiSSLIFace *Self, const UI_METHOD * method);
	APICALL void (*UI_free)(struct AmiSSLIFace *Self, UI * ui);
	APICALL int (*UI_add_input_string)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, int flags, char * result_buf, int minsize, int maxsize);
	APICALL int (*UI_dup_input_string)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, int flags, char * result_buf, int minsize, int maxsize);
	APICALL int (*UI_add_verify_string)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, int flags, char * result_buf, int minsize, int maxsize, const char * test_buf);
	APICALL int (*UI_dup_verify_string)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, int flags, char * result_buf, int minsize, int maxsize, const char * test_buf);
	APICALL int (*UI_add_input_boolean)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, const char * action_desc, const char * ok_chars, const char * cancel_chars, int flags, char * result_buf);
	APICALL int (*UI_dup_input_boolean)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, const char * action_desc, const char * ok_chars, const char * cancel_chars, int flags, char * result_buf);
	APICALL int (*UI_add_info_string)(struct AmiSSLIFace *Self, UI * ui, const char * text);
	APICALL int (*UI_dup_info_string)(struct AmiSSLIFace *Self, UI * ui, const char * text);
	APICALL int (*UI_add_error_string)(struct AmiSSLIFace *Self, UI * ui, const char * text);
	APICALL int (*UI_dup_error_string)(struct AmiSSLIFace *Self, UI * ui, const char * text);
	APICALL char * (*UI_construct_prompt)(struct AmiSSLIFace *Self, UI * ui_method, const char * object_desc, const char * object_name);
	APICALL void * (*UI_add_user_data)(struct AmiSSLIFace *Self, UI * ui, void * user_data);
	APICALL void * (*UI_get0_user_data)(struct AmiSSLIFace *Self, UI * ui);
	APICALL const char * (*UI_get0_result)(struct AmiSSLIFace *Self, UI * ui, int i);
	APICALL int (*UI_process)(struct AmiSSLIFace *Self, UI * ui);
	APICALL int (*UI_ctrl)(struct AmiSSLIFace *Self, UI * ui, int cmd, long i, void * p, void (*f)());
	APICALL int (*OBSOLETE_UI_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dup_func, CRYPTO_EX_free * free_func);
	APICALL int (*UI_set_ex_data)(struct AmiSSLIFace *Self, UI * r, int idx, void * arg);
	APICALL void * (*UI_get_ex_data)(struct AmiSSLIFace *Self, const UI * r, int idx);
	APICALL void (*UI_set_default_method)(struct AmiSSLIFace *Self, const UI_METHOD * meth);
	APICALL const UI_METHOD * (*UI_get_default_method)(struct AmiSSLIFace *Self);
	APICALL const UI_METHOD * (*UI_get_method)(struct AmiSSLIFace *Self, UI * ui);
	APICALL const UI_METHOD * (*UI_set_method)(struct AmiSSLIFace *Self, UI * ui, const UI_METHOD * meth);
	APICALL UI_METHOD * (*UI_OpenSSL)(struct AmiSSLIFace *Self);
	APICALL UI_METHOD * (*UI_create_method)(struct AmiSSLIFace *Self, const char * name);
	APICALL void (*UI_destroy_method)(struct AmiSSLIFace *Self, UI_METHOD * ui_method);
	APICALL int (*UI_method_set_opener)(struct AmiSSLIFace *Self, UI_METHOD * method, int (*opener)(UI *ui));
	APICALL int (*UI_method_set_writer)(struct AmiSSLIFace *Self, UI_METHOD * method, int (*writer)(UI *ui, UI_STRING *uis));
	APICALL int (*UI_method_set_flusher)(struct AmiSSLIFace *Self, UI_METHOD * method, int (*flusher)(UI *ui));
	APICALL int (*UI_method_set_reader)(struct AmiSSLIFace *Self, UI_METHOD * method, int (*reader)(UI *ui, UI_STRING *uis));
	APICALL int (*UI_method_set_closer)(struct AmiSSLIFace *Self, UI_METHOD * method, int (*closer)(UI *ui));
	APICALL int (*(*UI_method_get_opener)(struct AmiSSLIFace *Self, const UI_METHOD * method))(UI *);
	APICALL int (*(*UI_method_get_writer)(struct AmiSSLIFace *Self, const UI_METHOD * method))(UI *, UI_STRING *);
	APICALL int (*(*UI_method_get_flusher)(struct AmiSSLIFace *Self, const UI_METHOD * method))(UI *);
	APICALL int (*(*UI_method_get_reader)(struct AmiSSLIFace *Self, const UI_METHOD * method))(UI *, UI_STRING *);
	APICALL int (*(*UI_method_get_closer)(struct AmiSSLIFace *Self, const UI_METHOD * method))(UI *);
	APICALL enum UI_string_types (*UI_get_string_type)(struct AmiSSLIFace *Self, UI_STRING * uis);
	APICALL int (*UI_get_input_flags)(struct AmiSSLIFace *Self, UI_STRING * uis);
	APICALL const char * (*UI_get0_output_string)(struct AmiSSLIFace *Self, UI_STRING * uis);
	APICALL const char * (*UI_get0_action_string)(struct AmiSSLIFace *Self, UI_STRING * uis);
	APICALL const char * (*UI_get0_result_string)(struct AmiSSLIFace *Self, UI_STRING * uis);
	APICALL const char * (*UI_get0_test_string)(struct AmiSSLIFace *Self, UI_STRING * uis);
	APICALL int (*UI_get_result_minsize)(struct AmiSSLIFace *Self, UI_STRING * uis);
	APICALL int (*UI_get_result_maxsize)(struct AmiSSLIFace *Self, UI_STRING * uis);
	APICALL int (*UI_set_result)(struct AmiSSLIFace *Self, UI * ui, UI_STRING * uis, const char * result);
	APICALL int (*UI_UTIL_read_pw_string)(struct AmiSSLIFace *Self, char * buf, int length, const char * prompt, int verify);
	APICALL int (*UI_UTIL_read_pw)(struct AmiSSLIFace *Self, char * buf, char * buff, int size, const char * prompt, int verify);
	DEPRECATED APICALL int (*ERR_load_UI_strings)(struct AmiSSLIFace *Self);
	APTR _ossl_old_des_read_pw_string_UNIMPLEMENTED;
	APTR _ossl_old_des_read_pw_UNIMPLEMENTED;
	APICALL const char * (*X509_verify_cert_error_string)(struct AmiSSLIFace *Self, long n);
	APICALL int (*X509_verify)(struct AmiSSLIFace *Self, X509 * a, EVP_PKEY * r);
	APICALL int (*X509_REQ_verify)(struct AmiSSLIFace *Self, X509_REQ * a, EVP_PKEY * r);
	APICALL int (*X509_CRL_verify)(struct AmiSSLIFace *Self, X509_CRL * a, EVP_PKEY * r);
	APICALL int (*NETSCAPE_SPKI_verify)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * a, EVP_PKEY * r);
	APICALL NETSCAPE_SPKI * (*NETSCAPE_SPKI_b64_decode)(struct AmiSSLIFace *Self, const char * str, int len);
	APICALL char * (*NETSCAPE_SPKI_b64_encode)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * x);
	APICALL EVP_PKEY * (*NETSCAPE_SPKI_get_pubkey)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * x);
	APICALL int (*NETSCAPE_SPKI_set_pubkey)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * x, EVP_PKEY * pkey);
	APICALL int (*NETSCAPE_SPKI_print)(struct AmiSSLIFace *Self, BIO * out, NETSCAPE_SPKI * spki);
	APICALL int (*X509_signature_print)(struct AmiSSLIFace *Self, BIO * bp, const X509_ALGOR * alg, const ASN1_STRING * sig);
	APICALL int (*X509_sign)(struct AmiSSLIFace *Self, X509 * x, EVP_PKEY * pkey, const EVP_MD * md);
	APICALL int (*X509_REQ_sign)(struct AmiSSLIFace *Self, X509_REQ * x, EVP_PKEY * pkey, const EVP_MD * md);
	APICALL int (*X509_CRL_sign)(struct AmiSSLIFace *Self, X509_CRL * x, EVP_PKEY * pkey, const EVP_MD * md);
	APICALL int (*NETSCAPE_SPKI_sign)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * x, EVP_PKEY * pkey, const EVP_MD * md);
	APICALL int (*X509_pubkey_digest)(struct AmiSSLIFace *Self, const X509 * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
	APICALL int (*X509_digest)(struct AmiSSLIFace *Self, const X509 * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
	APICALL int (*X509_CRL_digest)(struct AmiSSLIFace *Self, const X509_CRL * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
	APICALL int (*X509_REQ_digest)(struct AmiSSLIFace *Self, const X509_REQ * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
	APICALL int (*X509_NAME_digest)(struct AmiSSLIFace *Self, const X509_NAME * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
	APICALL X509 * (*d2i_X509_bio)(struct AmiSSLIFace *Self, BIO * bp, X509 ** x509);
	APICALL int (*i2d_X509_bio)(struct AmiSSLIFace *Self, BIO * bp, const X509 * x509);
	APICALL X509_CRL * (*d2i_X509_CRL_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL ** crl);
	APICALL int (*i2d_X509_CRL_bio)(struct AmiSSLIFace *Self, BIO * bp, const X509_CRL * crl);
	APICALL X509_REQ * (*d2i_X509_REQ_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ ** req);
	APICALL int (*i2d_X509_REQ_bio)(struct AmiSSLIFace *Self, BIO * bp, const X509_REQ * req);
	DEPRECATED APICALL RSA * (*d2i_RSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA ** rsa);
	DEPRECATED APICALL int (*i2d_RSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, const RSA * rsa);
	DEPRECATED APICALL RSA * (*d2i_RSAPublicKey_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA ** rsa);
	DEPRECATED APICALL int (*i2d_RSAPublicKey_bio)(struct AmiSSLIFace *Self, BIO * bp, const RSA * rsa);
	DEPRECATED APICALL RSA * (*d2i_RSA_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA ** rsa);
	DEPRECATED APICALL int (*i2d_RSA_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, const RSA * rsa);
	DEPRECATED APICALL DSA * (*d2i_DSA_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, DSA ** dsa);
	DEPRECATED APICALL int (*i2d_DSA_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, const DSA * dsa);
	DEPRECATED APICALL DSA * (*d2i_DSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, DSA ** dsa);
	DEPRECATED APICALL int (*i2d_DSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, const DSA * dsa);
	APICALL X509_SIG * (*d2i_PKCS8_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_SIG ** p8);
	APICALL int (*i2d_PKCS8_bio)(struct AmiSSLIFace *Self, BIO * bp, const X509_SIG * p8);
	APICALL PKCS8_PRIV_KEY_INFO * (*d2i_PKCS8_PRIV_KEY_INFO_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS8_PRIV_KEY_INFO ** p8inf);
	APICALL int (*i2d_PKCS8_PRIV_KEY_INFO_bio)(struct AmiSSLIFace *Self, BIO * bp, const PKCS8_PRIV_KEY_INFO * p8inf);
	APICALL int (*i2d_PKCS8PrivateKeyInfo_bio)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * key);
	APICALL int (*i2d_PrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * pkey);
	APICALL EVP_PKEY * (*d2i_PrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** a);
	APICALL int (*i2d_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * pkey);
	APICALL EVP_PKEY * (*d2i_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** a);
	APICALL X509 * (*X509_dup)(struct AmiSSLIFace *Self, const X509 * x509);
	APICALL X509_ATTRIBUTE * (*X509_ATTRIBUTE_dup)(struct AmiSSLIFace *Self, const X509_ATTRIBUTE * xa);
	APICALL X509_EXTENSION * (*X509_EXTENSION_dup)(struct AmiSSLIFace *Self, const X509_EXTENSION * ex);
	APICALL X509_CRL * (*X509_CRL_dup)(struct AmiSSLIFace *Self, const X509_CRL * crl);
	APICALL X509_REQ * (*X509_REQ_dup)(struct AmiSSLIFace *Self, const X509_REQ * req);
	APICALL X509_ALGOR * (*X509_ALGOR_dup)(struct AmiSSLIFace *Self, const X509_ALGOR * xn);
	APICALL X509_NAME * (*X509_NAME_dup)(struct AmiSSLIFace *Self, const X509_NAME * xn);
	APICALL X509_NAME_ENTRY * (*X509_NAME_ENTRY_dup)(struct AmiSSLIFace *Self, const X509_NAME_ENTRY * ne);
	APICALL int (*X509_cmp_time)(struct AmiSSLIFace *Self, const ASN1_TIME * s, time_t * t);
	APICALL int (*X509_cmp_current_time)(struct AmiSSLIFace *Self, const ASN1_TIME * s);
	APICALL ASN1_TIME * (*X509_time_adj)(struct AmiSSLIFace *Self, ASN1_TIME * s, long adj, time_t * t);
	APICALL ASN1_TIME * (*X509_gmtime_adj)(struct AmiSSLIFace *Self, ASN1_TIME * s, long adj);
	APICALL const char * (*X509_get_default_cert_area)(struct AmiSSLIFace *Self);
	APICALL const char * (*X509_get_default_cert_dir)(struct AmiSSLIFace *Self);
	APICALL const char * (*X509_get_default_cert_file)(struct AmiSSLIFace *Self);
	APICALL const char * (*X509_get_default_cert_dir_env)(struct AmiSSLIFace *Self);
	APICALL const char * (*X509_get_default_cert_file_env)(struct AmiSSLIFace *Self);
	APICALL const char * (*X509_get_default_private_dir)(struct AmiSSLIFace *Self);
	APICALL X509_REQ * (*X509_to_X509_REQ)(struct AmiSSLIFace *Self, X509 * x, EVP_PKEY * pkey, const EVP_MD * md);
	APICALL X509 * (*X509_REQ_to_X509)(struct AmiSSLIFace *Self, X509_REQ * r, int days, EVP_PKEY * pkey);
	APICALL X509_ALGOR * (*X509_ALGOR_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_ALGOR_free)(struct AmiSSLIFace *Self, X509_ALGOR * a);
	APICALL X509_ALGOR * (*d2i_X509_ALGOR)(struct AmiSSLIFace *Self, X509_ALGOR ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_ALGOR)(struct AmiSSLIFace *Self, const X509_ALGOR * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_ALGOR_it)(struct AmiSSLIFace *Self);
	APICALL X509_VAL * (*X509_VAL_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_VAL_free)(struct AmiSSLIFace *Self, X509_VAL * a);
	APICALL X509_VAL * (*d2i_X509_VAL)(struct AmiSSLIFace *Self, X509_VAL ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_VAL)(struct AmiSSLIFace *Self, const X509_VAL * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_VAL_it)(struct AmiSSLIFace *Self);
	APICALL X509_PUBKEY * (*X509_PUBKEY_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_PUBKEY_free)(struct AmiSSLIFace *Self, X509_PUBKEY * a);
	APICALL X509_PUBKEY * (*d2i_X509_PUBKEY)(struct AmiSSLIFace *Self, X509_PUBKEY ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_PUBKEY)(struct AmiSSLIFace *Self, const X509_PUBKEY * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_PUBKEY_it)(struct AmiSSLIFace *Self);
	APICALL int (*X509_PUBKEY_set)(struct AmiSSLIFace *Self, X509_PUBKEY ** x, EVP_PKEY * pkey);
	APICALL EVP_PKEY * (*X509_PUBKEY_get)(struct AmiSSLIFace *Self, const X509_PUBKEY * key);
	APICALL int (*X509_get_pubkey_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, STACK_OF(X509) * chain);
	APICALL int (*i2d_PUBKEY)(struct AmiSSLIFace *Self, const EVP_PKEY * a, unsigned char ** pp);
	APICALL EVP_PKEY * (*d2i_PUBKEY)(struct AmiSSLIFace *Self, EVP_PKEY ** a, const unsigned char ** pp, long length);
	DEPRECATED APICALL int (*i2d_RSA_PUBKEY)(struct AmiSSLIFace *Self, const RSA * a, unsigned char ** pp);
	DEPRECATED APICALL RSA * (*d2i_RSA_PUBKEY)(struct AmiSSLIFace *Self, RSA ** a, const unsigned char ** pp, long length);
	DEPRECATED APICALL int (*i2d_DSA_PUBKEY)(struct AmiSSLIFace *Self, const DSA * a, unsigned char ** pp);
	DEPRECATED APICALL DSA * (*d2i_DSA_PUBKEY)(struct AmiSSLIFace *Self, DSA ** a, const unsigned char ** pp, long length);
	APICALL X509_SIG * (*X509_SIG_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_SIG_free)(struct AmiSSLIFace *Self, X509_SIG * a);
	APICALL X509_SIG * (*d2i_X509_SIG)(struct AmiSSLIFace *Self, X509_SIG ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_SIG)(struct AmiSSLIFace *Self, const X509_SIG * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_SIG_it)(struct AmiSSLIFace *Self);
	APICALL X509_REQ_INFO * (*X509_REQ_INFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_REQ_INFO_free)(struct AmiSSLIFace *Self, X509_REQ_INFO * a);
	APICALL X509_REQ_INFO * (*d2i_X509_REQ_INFO)(struct AmiSSLIFace *Self, X509_REQ_INFO ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_REQ_INFO)(struct AmiSSLIFace *Self, const X509_REQ_INFO * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_REQ_INFO_it)(struct AmiSSLIFace *Self);
	APICALL X509_REQ * (*X509_REQ_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_REQ_free)(struct AmiSSLIFace *Self, X509_REQ * a);
	APICALL X509_REQ * (*d2i_X509_REQ)(struct AmiSSLIFace *Self, X509_REQ ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_REQ)(struct AmiSSLIFace *Self, const X509_REQ * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_REQ_it)(struct AmiSSLIFace *Self);
	APICALL X509_ATTRIBUTE * (*X509_ATTRIBUTE_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_ATTRIBUTE_free)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * a);
	APICALL X509_ATTRIBUTE * (*d2i_X509_ATTRIBUTE)(struct AmiSSLIFace *Self, X509_ATTRIBUTE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_ATTRIBUTE)(struct AmiSSLIFace *Self, const X509_ATTRIBUTE * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_ATTRIBUTE_it)(struct AmiSSLIFace *Self);
	APICALL X509_ATTRIBUTE * (*X509_ATTRIBUTE_create)(struct AmiSSLIFace *Self, int nid, int atrtype, void * value);
	APICALL X509_EXTENSION * (*X509_EXTENSION_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_EXTENSION_free)(struct AmiSSLIFace *Self, X509_EXTENSION * a);
	APICALL X509_EXTENSION * (*d2i_X509_EXTENSION)(struct AmiSSLIFace *Self, X509_EXTENSION ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_EXTENSION)(struct AmiSSLIFace *Self, const X509_EXTENSION * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_EXTENSION_it)(struct AmiSSLIFace *Self);
	APICALL X509_NAME_ENTRY * (*X509_NAME_ENTRY_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_NAME_ENTRY_free)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * a);
	APICALL X509_NAME_ENTRY * (*d2i_X509_NAME_ENTRY)(struct AmiSSLIFace *Self, X509_NAME_ENTRY ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_NAME_ENTRY)(struct AmiSSLIFace *Self, const X509_NAME_ENTRY * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_NAME_ENTRY_it)(struct AmiSSLIFace *Self);
	APICALL X509_NAME * (*X509_NAME_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_NAME_free)(struct AmiSSLIFace *Self, X509_NAME * a);
	APICALL X509_NAME * (*d2i_X509_NAME)(struct AmiSSLIFace *Self, X509_NAME ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_NAME)(struct AmiSSLIFace *Self, const X509_NAME * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_NAME_it)(struct AmiSSLIFace *Self);
	APICALL int (*X509_NAME_set)(struct AmiSSLIFace *Self, X509_NAME ** xn, const X509_NAME * name);
	APICALL X509_CINF * (*X509_CINF_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_CINF_free)(struct AmiSSLIFace *Self, X509_CINF * a);
	APICALL X509_CINF * (*d2i_X509_CINF)(struct AmiSSLIFace *Self, X509_CINF ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_CINF)(struct AmiSSLIFace *Self, const X509_CINF * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_CINF_it)(struct AmiSSLIFace *Self);
	APICALL X509 * (*X509_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_free)(struct AmiSSLIFace *Self, X509 * a);
	APICALL X509 * (*d2i_X509)(struct AmiSSLIFace *Self, X509 ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509)(struct AmiSSLIFace *Self, const X509 * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_it)(struct AmiSSLIFace *Self);
	APICALL X509_CERT_AUX * (*X509_CERT_AUX_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_CERT_AUX_free)(struct AmiSSLIFace *Self, X509_CERT_AUX * a);
	APICALL X509_CERT_AUX * (*d2i_X509_CERT_AUX)(struct AmiSSLIFace *Self, X509_CERT_AUX ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_CERT_AUX)(struct AmiSSLIFace *Self, const X509_CERT_AUX * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_CERT_AUX_it)(struct AmiSSLIFace *Self);
	APICALL int (*OBSOLETE_X509_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dup_func, CRYPTO_EX_free * free_func);
	APICALL int (*X509_set_ex_data)(struct AmiSSLIFace *Self, X509 * r, int idx, void * arg);
	APICALL void * (*X509_get_ex_data)(struct AmiSSLIFace *Self, const X509 * r, int idx);
	APICALL int (*i2d_X509_AUX)(struct AmiSSLIFace *Self, const X509 * a, unsigned char ** pp);
	APICALL X509 * (*d2i_X509_AUX)(struct AmiSSLIFace *Self, X509 ** a, const unsigned char ** pp, long length);
	APICALL int (*X509_alias_set1)(struct AmiSSLIFace *Self, X509 * x, const unsigned char * name, int len);
	APICALL int (*X509_keyid_set1)(struct AmiSSLIFace *Self, X509 * x, const unsigned char * id, int len);
	APICALL unsigned char * (*X509_alias_get0)(struct AmiSSLIFace *Self, X509 * x, int * len);
	APICALL int (*(*X509_TRUST_set_default)(struct AmiSSLIFace *Self, int (*trust)(int, X509 *, int)))(int, X509 *, int);
	APICALL int (*X509_TRUST_set)(struct AmiSSLIFace *Self, int * t, int trust);
	APICALL int (*X509_add1_trust_object)(struct AmiSSLIFace *Self, X509 * x, const ASN1_OBJECT * obj);
	APICALL int (*X509_add1_reject_object)(struct AmiSSLIFace *Self, X509 * x, const ASN1_OBJECT * obj);
	APICALL void (*X509_trust_clear)(struct AmiSSLIFace *Self, X509 * x);
	APICALL void (*X509_reject_clear)(struct AmiSSLIFace *Self, X509 * x);
	APICALL X509_REVOKED * (*X509_REVOKED_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_REVOKED_free)(struct AmiSSLIFace *Self, X509_REVOKED * a);
	APICALL X509_REVOKED * (*d2i_X509_REVOKED)(struct AmiSSLIFace *Self, X509_REVOKED ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_REVOKED)(struct AmiSSLIFace *Self, const X509_REVOKED * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_REVOKED_it)(struct AmiSSLIFace *Self);
	APICALL X509_CRL_INFO * (*X509_CRL_INFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_CRL_INFO_free)(struct AmiSSLIFace *Self, X509_CRL_INFO * a);
	APICALL X509_CRL_INFO * (*d2i_X509_CRL_INFO)(struct AmiSSLIFace *Self, X509_CRL_INFO ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_CRL_INFO)(struct AmiSSLIFace *Self, const X509_CRL_INFO * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_CRL_INFO_it)(struct AmiSSLIFace *Self);
	APICALL X509_CRL * (*X509_CRL_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_CRL_free)(struct AmiSSLIFace *Self, X509_CRL * a);
	APICALL X509_CRL * (*d2i_X509_CRL)(struct AmiSSLIFace *Self, X509_CRL ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_CRL)(struct AmiSSLIFace *Self, const X509_CRL * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*X509_CRL_it)(struct AmiSSLIFace *Self);
	APICALL int (*X509_CRL_add0_revoked)(struct AmiSSLIFace *Self, X509_CRL * crl, X509_REVOKED * rev);
	APICALL X509_PKEY * (*X509_PKEY_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_PKEY_free)(struct AmiSSLIFace *Self, X509_PKEY * a);
	APTR i2d_X509_PKEY_UNIMPLEMENTED;
	APTR d2i_X509_PKEY_UNIMPLEMENTED;
	APICALL NETSCAPE_SPKI * (*NETSCAPE_SPKI_new)(struct AmiSSLIFace *Self);
	APICALL void (*NETSCAPE_SPKI_free)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * a);
	APICALL NETSCAPE_SPKI * (*d2i_NETSCAPE_SPKI)(struct AmiSSLIFace *Self, NETSCAPE_SPKI ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_NETSCAPE_SPKI)(struct AmiSSLIFace *Self, const NETSCAPE_SPKI * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*NETSCAPE_SPKI_it)(struct AmiSSLIFace *Self);
	APICALL NETSCAPE_SPKAC * (*NETSCAPE_SPKAC_new)(struct AmiSSLIFace *Self);
	APICALL void (*NETSCAPE_SPKAC_free)(struct AmiSSLIFace *Self, NETSCAPE_SPKAC * a);
	APICALL NETSCAPE_SPKAC * (*d2i_NETSCAPE_SPKAC)(struct AmiSSLIFace *Self, NETSCAPE_SPKAC ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_NETSCAPE_SPKAC)(struct AmiSSLIFace *Self, const NETSCAPE_SPKAC * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*NETSCAPE_SPKAC_it)(struct AmiSSLIFace *Self);
	APICALL NETSCAPE_CERT_SEQUENCE * (*NETSCAPE_CERT_SEQUENCE_new)(struct AmiSSLIFace *Self);
	APICALL void (*NETSCAPE_CERT_SEQUENCE_free)(struct AmiSSLIFace *Self, NETSCAPE_CERT_SEQUENCE * a);
	APICALL NETSCAPE_CERT_SEQUENCE * (*d2i_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, NETSCAPE_CERT_SEQUENCE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, const NETSCAPE_CERT_SEQUENCE * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*NETSCAPE_CERT_SEQUENCE_it)(struct AmiSSLIFace *Self);
	APICALL X509_INFO * (*X509_INFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_INFO_free)(struct AmiSSLIFace *Self, X509_INFO * a);
	APICALL char * (*X509_NAME_oneline)(struct AmiSSLIFace *Self, const X509_NAME * a, char * buf, int size);
	DEPRECATED APICALL int (*ASN1_verify)(struct AmiSSLIFace *Self, int (*i2d)(), X509_ALGOR * algor1, ASN1_BIT_STRING * signature, char * data, EVP_PKEY * pkey);
	DEPRECATED APICALL int (*ASN1_digest)(struct AmiSSLIFace *Self, int (*i2d)(), const EVP_MD * type, char * data, unsigned char * md, unsigned int * len);
	DEPRECATED APICALL int (*ASN1_sign)(struct AmiSSLIFace *Self, int (*i2d)(), X509_ALGOR * algor1, X509_ALGOR * algor2, ASN1_BIT_STRING * signature, char * data, EVP_PKEY * pkey, const EVP_MD * type);
	APICALL int (*ASN1_item_digest)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, const EVP_MD * type, void * data, unsigned char * md, unsigned int * len);
	APICALL int (*ASN1_item_verify)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, const X509_ALGOR * alg, const ASN1_BIT_STRING * signature, const void * data, EVP_PKEY * pkey);
	APICALL int (*ASN1_item_sign)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, X509_ALGOR * algor1, X509_ALGOR * algor2, ASN1_BIT_STRING * signature, const void * data, EVP_PKEY * pkey, const EVP_MD * type);
	APICALL int (*X509_set_version)(struct AmiSSLIFace *Self, X509 * x, long version);
	APICALL int (*X509_set_serialNumber)(struct AmiSSLIFace *Self, X509 * x, ASN1_INTEGER * serial);
	APICALL ASN1_INTEGER * (*X509_get_serialNumber)(struct AmiSSLIFace *Self, X509 * x);
	APICALL int (*X509_set_issuer_name)(struct AmiSSLIFace *Self, X509 * x, const X509_NAME * name);
	APICALL X509_NAME * (*X509_get_issuer_name)(struct AmiSSLIFace *Self, const X509 * a);
	APICALL int (*X509_set_subject_name)(struct AmiSSLIFace *Self, X509 * x, const X509_NAME * name);
	APICALL X509_NAME * (*X509_get_subject_name)(struct AmiSSLIFace *Self, const X509 * a);
	APICALL int (*X509_set1_notBefore)(struct AmiSSLIFace *Self, X509 * x, const ASN1_TIME * tm);
	APICALL int (*X509_set1_notAfter)(struct AmiSSLIFace *Self, X509 * x, const ASN1_TIME * tm);
	APICALL int (*X509_set_pubkey)(struct AmiSSLIFace *Self, X509 * x, EVP_PKEY * pkey);
	APICALL EVP_PKEY * (*X509_get_pubkey)(struct AmiSSLIFace *Self, X509 * x);
	APICALL ASN1_BIT_STRING * (*X509_get0_pubkey_bitstr)(struct AmiSSLIFace *Self, const X509 * x);
	DEPRECATED APICALL int (*X509_certificate_type)(struct AmiSSLIFace *Self, const X509 * x, const EVP_PKEY * pubkey);
	APICALL int (*X509_REQ_set_version)(struct AmiSSLIFace *Self, X509_REQ * x, long version);
	APICALL int (*X509_REQ_set_subject_name)(struct AmiSSLIFace *Self, X509_REQ * req, const X509_NAME * name);
	APICALL int (*X509_REQ_set_pubkey)(struct AmiSSLIFace *Self, X509_REQ * x, EVP_PKEY * pkey);
	APICALL EVP_PKEY * (*X509_REQ_get_pubkey)(struct AmiSSLIFace *Self, X509_REQ * req);
	APICALL int (*X509_REQ_extension_nid)(struct AmiSSLIFace *Self, int nid);
	APICALL int * (*X509_REQ_get_extension_nids)(struct AmiSSLIFace *Self);
	APICALL void (*X509_REQ_set_extension_nids)(struct AmiSSLIFace *Self, int * nids);
	APICALL STACK_OF(X509_EXTENSION) * (*X509_REQ_get_extensions)(struct AmiSSLIFace *Self, X509_REQ * req);
	APICALL int (*X509_REQ_add_extensions_nid)(struct AmiSSLIFace *Self, X509_REQ * req, const STACK_OF(X509_EXTENSION) * exts, int nid);
	APICALL int (*X509_REQ_add_extensions)(struct AmiSSLIFace *Self, X509_REQ * req, const STACK_OF(X509_EXTENSION) * exts);
	APICALL int (*X509_REQ_get_attr_count)(struct AmiSSLIFace *Self, const X509_REQ * req);
	APICALL int (*X509_REQ_get_attr_by_NID)(struct AmiSSLIFace *Self, const X509_REQ * req, int nid, int lastpos);
	APICALL int (*X509_REQ_get_attr_by_OBJ)(struct AmiSSLIFace *Self, const X509_REQ * req, const ASN1_OBJECT * obj, int lastpos);
	APICALL X509_ATTRIBUTE * (*X509_REQ_get_attr)(struct AmiSSLIFace *Self, const X509_REQ * req, int loc);
	APICALL X509_ATTRIBUTE * (*X509_REQ_delete_attr)(struct AmiSSLIFace *Self, X509_REQ * req, int loc);
	APICALL int (*X509_REQ_add1_attr)(struct AmiSSLIFace *Self, X509_REQ * req, X509_ATTRIBUTE * attr);
	APICALL int (*X509_REQ_add1_attr_by_OBJ)(struct AmiSSLIFace *Self, X509_REQ * req, const ASN1_OBJECT * obj, int type, const unsigned char * bytes, int len);
	APICALL int (*X509_REQ_add1_attr_by_NID)(struct AmiSSLIFace *Self, X509_REQ * req, int nid, int type, const unsigned char * bytes, int len);
	APICALL int (*X509_REQ_add1_attr_by_txt)(struct AmiSSLIFace *Self, X509_REQ * req, const char * attrname, int type, const unsigned char * bytes, int len);
	APICALL int (*X509_CRL_set_version)(struct AmiSSLIFace *Self, X509_CRL * x, long version);
	APICALL int (*X509_CRL_set_issuer_name)(struct AmiSSLIFace *Self, X509_CRL * x, const X509_NAME * name);
	APICALL int (*X509_CRL_set1_lastUpdate)(struct AmiSSLIFace *Self, X509_CRL * x, const ASN1_TIME * tm);
	APICALL int (*X509_CRL_set1_nextUpdate)(struct AmiSSLIFace *Self, X509_CRL * x, const ASN1_TIME * tm);
	APICALL int (*X509_CRL_sort)(struct AmiSSLIFace *Self, X509_CRL * crl);
	APICALL int (*X509_REVOKED_set_serialNumber)(struct AmiSSLIFace *Self, X509_REVOKED * x, ASN1_INTEGER * serial);
	APICALL int (*X509_REVOKED_set_revocationDate)(struct AmiSSLIFace *Self, X509_REVOKED * r, ASN1_TIME * tm);
	APICALL int (*X509_check_private_key)(struct AmiSSLIFace *Self, const X509 * cert, const EVP_PKEY * pkey);
	APICALL int (*X509_issuer_and_serial_cmp)(struct AmiSSLIFace *Self, const X509 * a, const X509 * b);
	APICALL unsigned long (*X509_issuer_and_serial_hash)(struct AmiSSLIFace *Self, X509 * a);
	APICALL int (*X509_issuer_name_cmp)(struct AmiSSLIFace *Self, const X509 * a, const X509 * b);
	APICALL unsigned long (*X509_issuer_name_hash)(struct AmiSSLIFace *Self, X509 * a);
	APICALL int (*X509_subject_name_cmp)(struct AmiSSLIFace *Self, const X509 * a, const X509 * b);
	APICALL unsigned long (*X509_subject_name_hash)(struct AmiSSLIFace *Self, X509 * x);
	APICALL int (*X509_cmp)(struct AmiSSLIFace *Self, const X509 * a, const X509 * b);
	APICALL int (*X509_NAME_cmp)(struct AmiSSLIFace *Self, const X509_NAME * a, const X509_NAME * b);
	APICALL unsigned long (*OBSOLETE_X509_NAME_hash)(struct AmiSSLIFace *Self, X509_NAME * x);
	APICALL int (*X509_CRL_cmp)(struct AmiSSLIFace *Self, const X509_CRL * a, const X509_CRL * b);
	APICALL int (*X509_NAME_print)(struct AmiSSLIFace *Self, BIO * bp, const X509_NAME * name, int obase);
	APICALL int (*X509_NAME_print_ex)(struct AmiSSLIFace *Self, BIO * out, const X509_NAME * nm, int indent, unsigned long flags);
	APICALL int (*X509_print_ex)(struct AmiSSLIFace *Self, BIO * bp, X509 * x, unsigned long nmflag, unsigned long cflag);
	APICALL int (*X509_print)(struct AmiSSLIFace *Self, BIO * bp, X509 * x);
	APICALL int (*X509_ocspid_print)(struct AmiSSLIFace *Self, BIO * bp, X509 * x);
	APTR X509_CERT_AUX_print_UNIMPLEMENTED;
	APICALL int (*X509_CRL_print)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL * x);
	APICALL int (*X509_REQ_print_ex)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ * x, unsigned long nmflag, unsigned long cflag);
	APICALL int (*X509_REQ_print)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ * req);
	APICALL int (*X509_NAME_entry_count)(struct AmiSSLIFace *Self, const X509_NAME * name);
	APICALL int (*X509_NAME_get_text_by_NID)(struct AmiSSLIFace *Self, const X509_NAME * name, int nid, char * buf, int len);
	APICALL int (*X509_NAME_get_text_by_OBJ)(struct AmiSSLIFace *Self, const X509_NAME * name, const ASN1_OBJECT * obj, char * buf, int len);
	APICALL int (*X509_NAME_get_index_by_NID)(struct AmiSSLIFace *Self, const X509_NAME * name, int nid, int lastpos);
	APICALL int (*X509_NAME_get_index_by_OBJ)(struct AmiSSLIFace *Self, const X509_NAME * name, const ASN1_OBJECT * obj, int lastpos);
	APICALL X509_NAME_ENTRY * (*X509_NAME_get_entry)(struct AmiSSLIFace *Self, const X509_NAME * name, int loc);
	APICALL X509_NAME_ENTRY * (*X509_NAME_delete_entry)(struct AmiSSLIFace *Self, X509_NAME * name, int loc);
	APICALL int (*X509_NAME_add_entry)(struct AmiSSLIFace *Self, X509_NAME * name, const X509_NAME_ENTRY * ne, int loc, int set);
	APICALL int (*X509_NAME_add_entry_by_OBJ)(struct AmiSSLIFace *Self, X509_NAME * name, const ASN1_OBJECT * obj, int type, const unsigned char * bytes, int len, int loc, int set);
	APICALL int (*X509_NAME_add_entry_by_NID)(struct AmiSSLIFace *Self, X509_NAME * name, int nid, int type, const unsigned char * bytes, int len, int loc, int set);
	APICALL X509_NAME_ENTRY * (*X509_NAME_ENTRY_create_by_txt)(struct AmiSSLIFace *Self, X509_NAME_ENTRY ** ne, const char * field, int type, const unsigned char * bytes, int len);
	APICALL X509_NAME_ENTRY * (*X509_NAME_ENTRY_create_by_NID)(struct AmiSSLIFace *Self, X509_NAME_ENTRY ** ne, int nid, int type, const unsigned char * bytes, int len);
	APICALL int (*X509_NAME_add_entry_by_txt)(struct AmiSSLIFace *Self, X509_NAME * name, const char * field, int type, const unsigned char * bytes, int len, int loc, int set);
	APICALL X509_NAME_ENTRY * (*X509_NAME_ENTRY_create_by_OBJ)(struct AmiSSLIFace *Self, X509_NAME_ENTRY ** ne, const ASN1_OBJECT * obj, int type, const unsigned char * bytes, int len);
	APICALL int (*X509_NAME_ENTRY_set_object)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne, const ASN1_OBJECT * obj);
	APICALL int (*X509_NAME_ENTRY_set_data)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne, int type, const unsigned char * bytes, int len);
	APICALL ASN1_OBJECT * (*X509_NAME_ENTRY_get_object)(struct AmiSSLIFace *Self, const X509_NAME_ENTRY * ne);
	APICALL ASN1_STRING * (*X509_NAME_ENTRY_get_data)(struct AmiSSLIFace *Self, const X509_NAME_ENTRY * ne);
	APICALL int (*X509v3_get_ext_count)(struct AmiSSLIFace *Self, const STACK_OF(X509_EXTENSION) * x);
	APICALL int (*X509v3_get_ext_by_NID)(struct AmiSSLIFace *Self, const STACK_OF(X509_EXTENSION) * x, int nid, int lastpos);
	APICALL int (*X509v3_get_ext_by_OBJ)(struct AmiSSLIFace *Self, const STACK_OF(X509_EXTENSION) * x, const ASN1_OBJECT * obj, int lastpos);
	APICALL int (*X509v3_get_ext_by_critical)(struct AmiSSLIFace *Self, const STACK_OF(X509_EXTENSION) * x, int crit, int lastpos);
	APICALL X509_EXTENSION * (*X509v3_get_ext)(struct AmiSSLIFace *Self, const STACK_OF(X509_EXTENSION) * x, int loc);
	APICALL X509_EXTENSION * (*X509v3_delete_ext)(struct AmiSSLIFace *Self, STACK_OF(X509_EXTENSION) * x, int loc);
	APICALL STACK_OF(X509_EXTENSION) * (*X509v3_add_ext)(struct AmiSSLIFace *Self, STACK_OF(X509_EXTENSION) ** x, X509_EXTENSION * ex, int loc);
	APICALL int (*X509_get_ext_count)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL int (*X509_get_ext_by_NID)(struct AmiSSLIFace *Self, const X509 * x, int nid, int lastpos);
	APICALL int (*X509_get_ext_by_OBJ)(struct AmiSSLIFace *Self, const X509 * x, const ASN1_OBJECT * obj, int lastpos);
	APICALL int (*X509_get_ext_by_critical)(struct AmiSSLIFace *Self, const X509 * x, int crit, int lastpos);
	APICALL X509_EXTENSION * (*X509_get_ext)(struct AmiSSLIFace *Self, const X509 * x, int loc);
	APICALL X509_EXTENSION * (*X509_delete_ext)(struct AmiSSLIFace *Self, X509 * x, int loc);
	APICALL int (*X509_add_ext)(struct AmiSSLIFace *Self, X509 * x, X509_EXTENSION * ex, int loc);
	APICALL void * (*X509_get_ext_d2i)(struct AmiSSLIFace *Self, const X509 * x, int nid, int * crit, int * idx);
	APICALL int (*X509_add1_ext_i2d)(struct AmiSSLIFace *Self, X509 * x, int nid, void * value, int crit, unsigned long flags);
	APICALL int (*X509_CRL_get_ext_count)(struct AmiSSLIFace *Self, const X509_CRL * x);
	APICALL int (*X509_CRL_get_ext_by_NID)(struct AmiSSLIFace *Self, const X509_CRL * x, int nid, int lastpos);
	APICALL int (*X509_CRL_get_ext_by_OBJ)(struct AmiSSLIFace *Self, const X509_CRL * x, const ASN1_OBJECT * obj, int lastpos);
	APICALL int (*X509_CRL_get_ext_by_critical)(struct AmiSSLIFace *Self, const X509_CRL * x, int crit, int lastpos);
	APICALL X509_EXTENSION * (*X509_CRL_get_ext)(struct AmiSSLIFace *Self, const X509_CRL * x, int loc);
	APICALL X509_EXTENSION * (*X509_CRL_delete_ext)(struct AmiSSLIFace *Self, X509_CRL * x, int loc);
	APICALL int (*X509_CRL_add_ext)(struct AmiSSLIFace *Self, X509_CRL * x, X509_EXTENSION * ex, int loc);
	APICALL void * (*X509_CRL_get_ext_d2i)(struct AmiSSLIFace *Self, const X509_CRL * x, int nid, int * crit, int * idx);
	APICALL int (*X509_CRL_add1_ext_i2d)(struct AmiSSLIFace *Self, X509_CRL * x, int nid, void * value, int crit, unsigned long flags);
	APICALL int (*X509_REVOKED_get_ext_count)(struct AmiSSLIFace *Self, const X509_REVOKED * x);
	APICALL int (*X509_REVOKED_get_ext_by_NID)(struct AmiSSLIFace *Self, const X509_REVOKED * x, int nid, int lastpos);
	APICALL int (*X509_REVOKED_get_ext_by_OBJ)(struct AmiSSLIFace *Self, const X509_REVOKED * x, const ASN1_OBJECT * obj, int lastpos);
	APICALL int (*X509_REVOKED_get_ext_by_critical)(struct AmiSSLIFace *Self, const X509_REVOKED * x, int crit, int lastpos);
	APICALL X509_EXTENSION * (*X509_REVOKED_get_ext)(struct AmiSSLIFace *Self, const X509_REVOKED * x, int loc);
	APICALL X509_EXTENSION * (*X509_REVOKED_delete_ext)(struct AmiSSLIFace *Self, X509_REVOKED * x, int loc);
	APICALL int (*X509_REVOKED_add_ext)(struct AmiSSLIFace *Self, X509_REVOKED * x, X509_EXTENSION * ex, int loc);
	APICALL void * (*X509_REVOKED_get_ext_d2i)(struct AmiSSLIFace *Self, const X509_REVOKED * x, int nid, int * crit, int * idx);
	APICALL int (*X509_REVOKED_add1_ext_i2d)(struct AmiSSLIFace *Self, X509_REVOKED * x, int nid, void * value, int crit, unsigned long flags);
	APICALL X509_EXTENSION * (*X509_EXTENSION_create_by_NID)(struct AmiSSLIFace *Self, X509_EXTENSION ** ex, int nid, int crit, ASN1_OCTET_STRING * data);
	APICALL X509_EXTENSION * (*X509_EXTENSION_create_by_OBJ)(struct AmiSSLIFace *Self, X509_EXTENSION ** ex, const ASN1_OBJECT * obj, int crit, ASN1_OCTET_STRING * data);
	APICALL int (*X509_EXTENSION_set_object)(struct AmiSSLIFace *Self, X509_EXTENSION * ex, const ASN1_OBJECT * obj);
	APICALL int (*X509_EXTENSION_set_critical)(struct AmiSSLIFace *Self, X509_EXTENSION * ex, int crit);
	APICALL int (*X509_EXTENSION_set_data)(struct AmiSSLIFace *Self, X509_EXTENSION * ex, ASN1_OCTET_STRING * data);
	APICALL ASN1_OBJECT * (*X509_EXTENSION_get_object)(struct AmiSSLIFace *Self, X509_EXTENSION * ex);
	APICALL ASN1_OCTET_STRING * (*X509_EXTENSION_get_data)(struct AmiSSLIFace *Self, X509_EXTENSION * ne);
	APICALL int (*X509_EXTENSION_get_critical)(struct AmiSSLIFace *Self, const X509_EXTENSION * ex);
	APICALL int (*X509at_get_attr_count)(struct AmiSSLIFace *Self, const STACK_OF(X509_ATTRIBUTE) * x);
	APICALL int (*X509at_get_attr_by_NID)(struct AmiSSLIFace *Self, const STACK_OF(X509_ATTRIBUTE) * x, int nid, int lastpos);
	APICALL int (*X509at_get_attr_by_OBJ)(struct AmiSSLIFace *Self, const STACK_OF(X509_ATTRIBUTE) * sk, const ASN1_OBJECT * obj, int lastpos);
	APICALL X509_ATTRIBUTE * (*X509at_get_attr)(struct AmiSSLIFace *Self, const STACK_OF(X509_ATTRIBUTE) * x, int loc);
	APICALL X509_ATTRIBUTE * (*X509at_delete_attr)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) * x, int loc);
	APICALL STACK_OF(X509_ATTRIBUTE) * (*X509at_add1_attr)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) ** x, X509_ATTRIBUTE * attr);
	APICALL STACK_OF(X509_ATTRIBUTE) * (*X509at_add1_attr_by_OBJ)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) ** x, const ASN1_OBJECT * obj, int type, const unsigned char * bytes, int len);
	APICALL STACK_OF(X509_ATTRIBUTE) * (*X509at_add1_attr_by_NID)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) ** x, int nid, int type, const unsigned char * bytes, int len);
	APICALL STACK_OF(X509_ATTRIBUTE) * (*X509at_add1_attr_by_txt)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) ** x, const char * attrname, int type, const unsigned char * bytes, int len);
	APICALL X509_ATTRIBUTE * (*X509_ATTRIBUTE_create_by_NID)(struct AmiSSLIFace *Self, X509_ATTRIBUTE ** attr, int nid, int atrtype, const void * data, int len);
	APICALL X509_ATTRIBUTE * (*X509_ATTRIBUTE_create_by_OBJ)(struct AmiSSLIFace *Self, X509_ATTRIBUTE ** attr, const ASN1_OBJECT * obj, int atrtype, const void * data, int len);
	APICALL X509_ATTRIBUTE * (*X509_ATTRIBUTE_create_by_txt)(struct AmiSSLIFace *Self, X509_ATTRIBUTE ** attr, const char * atrname, int type, const unsigned char * bytes, int len);
	APICALL int (*X509_ATTRIBUTE_set1_object)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * attr, const ASN1_OBJECT * obj);
	APICALL int (*X509_ATTRIBUTE_set1_data)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * attr, int attrtype, const void * data, int len);
	APICALL void * (*X509_ATTRIBUTE_get0_data)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * attr, int idx, int atrtype, void * data);
	APICALL int (*X509_ATTRIBUTE_count)(struct AmiSSLIFace *Self, const X509_ATTRIBUTE * attr);
	APICALL ASN1_OBJECT * (*X509_ATTRIBUTE_get0_object)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * attr);
	APICALL ASN1_TYPE * (*X509_ATTRIBUTE_get0_type)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * attr, int idx);
	APICALL int (*X509_verify_cert)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	APICALL X509 * (*X509_find_by_issuer_and_serial)(struct AmiSSLIFace *Self, STACK_OF(X509) * sk, const X509_NAME * name, const ASN1_INTEGER * serial);
	APICALL X509 * (*X509_find_by_subject)(struct AmiSSLIFace *Self, STACK_OF(X509) * sk, const X509_NAME * name);
	APICALL PBEPARAM * (*PBEPARAM_new)(struct AmiSSLIFace *Self);
	APICALL void (*PBEPARAM_free)(struct AmiSSLIFace *Self, PBEPARAM * a);
	APICALL PBEPARAM * (*d2i_PBEPARAM)(struct AmiSSLIFace *Self, PBEPARAM ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PBEPARAM)(struct AmiSSLIFace *Self, const PBEPARAM * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PBEPARAM_it)(struct AmiSSLIFace *Self);
	APICALL PBE2PARAM * (*PBE2PARAM_new)(struct AmiSSLIFace *Self);
	APICALL void (*PBE2PARAM_free)(struct AmiSSLIFace *Self, PBE2PARAM * a);
	APICALL PBE2PARAM * (*d2i_PBE2PARAM)(struct AmiSSLIFace *Self, PBE2PARAM ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PBE2PARAM)(struct AmiSSLIFace *Self, const PBE2PARAM * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PBE2PARAM_it)(struct AmiSSLIFace *Self);
	APICALL PBKDF2PARAM * (*PBKDF2PARAM_new)(struct AmiSSLIFace *Self);
	APICALL void (*PBKDF2PARAM_free)(struct AmiSSLIFace *Self, PBKDF2PARAM * a);
	APICALL PBKDF2PARAM * (*d2i_PBKDF2PARAM)(struct AmiSSLIFace *Self, PBKDF2PARAM ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PBKDF2PARAM)(struct AmiSSLIFace *Self, const PBKDF2PARAM * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PBKDF2PARAM_it)(struct AmiSSLIFace *Self);
	APICALL X509_ALGOR * (*PKCS5_pbe_set)(struct AmiSSLIFace *Self, int alg, int iter, const unsigned char * salt, int saltlen);
	APICALL X509_ALGOR * (*PKCS5_pbe2_set)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher, int iter, unsigned char * salt, int saltlen);
	APICALL PKCS8_PRIV_KEY_INFO * (*PKCS8_PRIV_KEY_INFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKCS8_PRIV_KEY_INFO_free)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * a);
	APICALL PKCS8_PRIV_KEY_INFO * (*d2i_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, const PKCS8_PRIV_KEY_INFO * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKCS8_PRIV_KEY_INFO_it)(struct AmiSSLIFace *Self);
	APICALL EVP_PKEY * (*EVP_PKCS82PKEY)(struct AmiSSLIFace *Self, const PKCS8_PRIV_KEY_INFO * p8);
	APICALL PKCS8_PRIV_KEY_INFO * (*EVP_PKEY2PKCS8)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APTR EVP_PKEY2PKCS8_broken_UNIMPLEMENTED;
	APTR PKCS8_set_broken_UNIMPLEMENTED;
	APICALL int (*X509_check_trust)(struct AmiSSLIFace *Self, X509 * x, int id, int flags);
	APICALL int (*X509_TRUST_get_count)(struct AmiSSLIFace *Self);
	APICALL X509_TRUST * (*X509_TRUST_get0)(struct AmiSSLIFace *Self, int idx);
	APICALL int (*X509_TRUST_get_by_id)(struct AmiSSLIFace *Self, int id);
	APICALL int (*X509_TRUST_add)(struct AmiSSLIFace *Self, int id, int flags, int (*ck)(X509_TRUST *, X509 *, int), const char * name, int arg1, void * arg2);
	APICALL void (*X509_TRUST_cleanup)(struct AmiSSLIFace *Self);
	APICALL int (*X509_TRUST_get_flags)(struct AmiSSLIFace *Self, const X509_TRUST * xp);
	APICALL char * (*X509_TRUST_get0_name)(struct AmiSSLIFace *Self, const X509_TRUST * xp);
	APICALL int (*X509_TRUST_get_trust)(struct AmiSSLIFace *Self, const X509_TRUST * xp);
	DEPRECATED APICALL int (*ERR_load_X509_strings)(struct AmiSSLIFace *Self);
	APICALL int (*X509_OBJECT_idx_by_subject)(struct AmiSSLIFace *Self, STACK_OF(X509_OBJECT) * h, X509_LOOKUP_TYPE type, const X509_NAME * name);
	APICALL X509_OBJECT * (*X509_OBJECT_retrieve_by_subject)(struct AmiSSLIFace *Self, STACK_OF(X509_OBJECT) * h, X509_LOOKUP_TYPE type, const X509_NAME * name);
	APICALL X509_OBJECT * (*X509_OBJECT_retrieve_match)(struct AmiSSLIFace *Self, STACK_OF(X509_OBJECT) * h, X509_OBJECT * x);
	APICALL int (*X509_OBJECT_up_ref_count)(struct AmiSSLIFace *Self, X509_OBJECT * a);
	APICALL X509_STORE * (*X509_STORE_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_STORE_free)(struct AmiSSLIFace *Self, X509_STORE * xs);
	APICALL int (*X509_STORE_set_flags)(struct AmiSSLIFace *Self, X509_STORE * xs, unsigned long flags);
	APICALL int (*X509_STORE_set_purpose)(struct AmiSSLIFace *Self, X509_STORE * xs, int purpose);
	APICALL int (*X509_STORE_set_trust)(struct AmiSSLIFace *Self, X509_STORE * xs, int trust);
	APICALL X509_STORE_CTX * (*X509_STORE_CTX_new)(struct AmiSSLIFace *Self);
	APICALL int (*X509_STORE_CTX_get1_issuer)(struct AmiSSLIFace *Self, X509 ** issuer, X509_STORE_CTX * ctx, X509 * x);
	APICALL void (*X509_STORE_CTX_free)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	APICALL int (*X509_STORE_CTX_init)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, X509_STORE * trust_store, X509 * target, STACK_OF(X509) * untrusted);
	APICALL void (*X509_STORE_CTX_set0_trusted_stack)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, STACK_OF(X509) * sk);
	APICALL void (*X509_STORE_CTX_cleanup)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	APICALL X509_LOOKUP * (*X509_STORE_add_lookup)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_LOOKUP_METHOD * m);
	APICALL X509_LOOKUP_METHOD * (*X509_LOOKUP_hash_dir)(struct AmiSSLIFace *Self);
	APICALL X509_LOOKUP_METHOD * (*X509_LOOKUP_file)(struct AmiSSLIFace *Self);
	APICALL int (*X509_STORE_add_cert)(struct AmiSSLIFace *Self, X509_STORE * xs, X509 * x);
	APICALL int (*X509_STORE_add_crl)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_CRL * x);
	APICALL int (*X509_STORE_CTX_get_by_subject)(struct AmiSSLIFace *Self, const X509_STORE_CTX * vs, X509_LOOKUP_TYPE type, const X509_NAME * name, X509_OBJECT * ret);
	APICALL int (*X509_LOOKUP_ctrl)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int cmd, const char * argc, long argl, char ** ret);
	APICALL int (*X509_load_cert_file)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, const char * file, int type);
	APICALL int (*X509_load_crl_file)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, const char * file, int type);
	APICALL int (*X509_load_cert_crl_file)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, const char * file, int type);
	APICALL X509_LOOKUP * (*X509_LOOKUP_new)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method);
	APICALL void (*X509_LOOKUP_free)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx);
	APICALL int (*X509_LOOKUP_init)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx);
	APICALL int (*X509_LOOKUP_by_subject)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, X509_LOOKUP_TYPE type, const X509_NAME * name, X509_OBJECT * ret);
	APICALL int (*X509_LOOKUP_by_issuer_serial)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, X509_LOOKUP_TYPE type, const X509_NAME * name, const ASN1_INTEGER * serial, X509_OBJECT * ret);
	APICALL int (*X509_LOOKUP_by_fingerprint)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, X509_LOOKUP_TYPE type, const unsigned char * bytes, int len, X509_OBJECT * ret);
	APICALL int (*X509_LOOKUP_by_alias)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, X509_LOOKUP_TYPE type, const char * str, int len, X509_OBJECT * ret);
	APICALL int (*X509_LOOKUP_shutdown)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx);
	APICALL int (*X509_STORE_load_locations)(struct AmiSSLIFace *Self, X509_STORE * xs, const char * file, const char * dir);
	APICALL int (*X509_STORE_set_default_paths)(struct AmiSSLIFace *Self, X509_STORE * xs);
	APICALL int (*OBSOLETE_X509_STORE_CTX_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dup_func, CRYPTO_EX_free * free_func);
	APICALL int (*X509_STORE_CTX_set_ex_data)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int idx, void * data);
	APICALL void * (*X509_STORE_CTX_get_ex_data)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx, int idx);
	APICALL int (*X509_STORE_CTX_get_error)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL void (*X509_STORE_CTX_set_error)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int s);
	APICALL int (*X509_STORE_CTX_get_error_depth)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509 * (*X509_STORE_CTX_get_current_cert)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL STACK_OF(X509) * (*X509_STORE_CTX_get0_chain)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL STACK_OF(X509) * (*X509_STORE_CTX_get1_chain)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL void (*X509_STORE_CTX_set_cert)(struct AmiSSLIFace *Self, X509_STORE_CTX * c, X509 * x);
	APICALL int (*X509_STORE_CTX_set_purpose)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int purpose);
	APICALL int (*X509_STORE_CTX_set_trust)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int trust);
	APICALL int (*X509_STORE_CTX_purpose_inherit)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int def_purpose, int purpose, int trust);
	APICALL void (*X509_STORE_CTX_set_flags)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, unsigned long flags);
	APICALL void (*X509_STORE_CTX_set_time)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, unsigned long flags, time_t t);
	APICALL void (*X509_STORE_CTX_set_verify_cb)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int (*verify_cb)(int, X509_STORE_CTX *));
	APICALL BASIC_CONSTRAINTS * (*BASIC_CONSTRAINTS_new)(struct AmiSSLIFace *Self);
	APICALL void (*BASIC_CONSTRAINTS_free)(struct AmiSSLIFace *Self, BASIC_CONSTRAINTS * a);
	APICALL BASIC_CONSTRAINTS * (*d2i_BASIC_CONSTRAINTS)(struct AmiSSLIFace *Self, BASIC_CONSTRAINTS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_BASIC_CONSTRAINTS)(struct AmiSSLIFace *Self, const BASIC_CONSTRAINTS * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*BASIC_CONSTRAINTS_it)(struct AmiSSLIFace *Self);
	APICALL SXNET * (*SXNET_new)(struct AmiSSLIFace *Self);
	APICALL void (*SXNET_free)(struct AmiSSLIFace *Self, SXNET * a);
	APICALL SXNET * (*d2i_SXNET)(struct AmiSSLIFace *Self, SXNET ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_SXNET)(struct AmiSSLIFace *Self, const SXNET * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*SXNET_it)(struct AmiSSLIFace *Self);
	APICALL SXNETID * (*SXNETID_new)(struct AmiSSLIFace *Self);
	APICALL void (*SXNETID_free)(struct AmiSSLIFace *Self, SXNETID * a);
	APICALL SXNETID * (*d2i_SXNETID)(struct AmiSSLIFace *Self, SXNETID ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_SXNETID)(struct AmiSSLIFace *Self, const SXNETID * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*SXNETID_it)(struct AmiSSLIFace *Self);
	APICALL int (*SXNET_add_id_asc)(struct AmiSSLIFace *Self, SXNET ** psx, const char * zone, const char * user, int userlen);
	APICALL int (*SXNET_add_id_ulong)(struct AmiSSLIFace *Self, SXNET ** psx, unsigned long lzone, const char * user, int userlen);
	APICALL int (*SXNET_add_id_INTEGER)(struct AmiSSLIFace *Self, SXNET ** psx, ASN1_INTEGER * izone, const char * user, int userlen);
	APICALL ASN1_OCTET_STRING * (*SXNET_get_id_asc)(struct AmiSSLIFace *Self, SXNET * sx, const char * zone);
	APICALL ASN1_OCTET_STRING * (*SXNET_get_id_ulong)(struct AmiSSLIFace *Self, SXNET * sx, unsigned long lzone);
	APICALL ASN1_OCTET_STRING * (*SXNET_get_id_INTEGER)(struct AmiSSLIFace *Self, SXNET * sx, ASN1_INTEGER * zone);
	APICALL AUTHORITY_KEYID * (*AUTHORITY_KEYID_new)(struct AmiSSLIFace *Self);
	APICALL void (*AUTHORITY_KEYID_free)(struct AmiSSLIFace *Self, AUTHORITY_KEYID * a);
	APICALL AUTHORITY_KEYID * (*d2i_AUTHORITY_KEYID)(struct AmiSSLIFace *Self, AUTHORITY_KEYID ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_AUTHORITY_KEYID)(struct AmiSSLIFace *Self, const AUTHORITY_KEYID * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*AUTHORITY_KEYID_it)(struct AmiSSLIFace *Self);
	APICALL PKEY_USAGE_PERIOD * (*PKEY_USAGE_PERIOD_new)(struct AmiSSLIFace *Self);
	APICALL void (*PKEY_USAGE_PERIOD_free)(struct AmiSSLIFace *Self, PKEY_USAGE_PERIOD * a);
	APICALL PKEY_USAGE_PERIOD * (*d2i_PKEY_USAGE_PERIOD)(struct AmiSSLIFace *Self, PKEY_USAGE_PERIOD ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PKEY_USAGE_PERIOD)(struct AmiSSLIFace *Self, const PKEY_USAGE_PERIOD * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PKEY_USAGE_PERIOD_it)(struct AmiSSLIFace *Self);
	APICALL GENERAL_NAME * (*GENERAL_NAME_new)(struct AmiSSLIFace *Self);
	APICALL void (*GENERAL_NAME_free)(struct AmiSSLIFace *Self, GENERAL_NAME * a);
	APICALL GENERAL_NAME * (*d2i_GENERAL_NAME)(struct AmiSSLIFace *Self, GENERAL_NAME ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_GENERAL_NAME)(struct AmiSSLIFace *Self, const GENERAL_NAME * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*GENERAL_NAME_it)(struct AmiSSLIFace *Self);
	APICALL STACK_OF(CONF_VALUE) * (*i2v_GENERAL_NAME)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, GENERAL_NAME * gen, STACK_OF(CONF_VALUE) * ret);
	APICALL int (*GENERAL_NAME_print)(struct AmiSSLIFace *Self, BIO * out, GENERAL_NAME * gen);
	APICALL GENERAL_NAMES * (*GENERAL_NAMES_new)(struct AmiSSLIFace *Self);
	APICALL void (*GENERAL_NAMES_free)(struct AmiSSLIFace *Self, GENERAL_NAMES * a);
	APICALL GENERAL_NAMES * (*d2i_GENERAL_NAMES)(struct AmiSSLIFace *Self, GENERAL_NAMES ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_GENERAL_NAMES)(struct AmiSSLIFace *Self, const GENERAL_NAMES * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*GENERAL_NAMES_it)(struct AmiSSLIFace *Self);
	APICALL STACK_OF(CONF_VALUE) * (*i2v_GENERAL_NAMES)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, GENERAL_NAMES * gen, STACK_OF(CONF_VALUE) * extlist);
	APICALL GENERAL_NAMES * (*v2i_GENERAL_NAMES)(struct AmiSSLIFace *Self, const X509V3_EXT_METHOD * method, X509V3_CTX * ctx, STACK_OF(CONF_VALUE) * nval);
	APICALL OTHERNAME * (*OTHERNAME_new)(struct AmiSSLIFace *Self);
	APICALL void (*OTHERNAME_free)(struct AmiSSLIFace *Self, OTHERNAME * a);
	APICALL OTHERNAME * (*d2i_OTHERNAME)(struct AmiSSLIFace *Self, OTHERNAME ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OTHERNAME)(struct AmiSSLIFace *Self, const OTHERNAME * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OTHERNAME_it)(struct AmiSSLIFace *Self);
	APICALL EDIPARTYNAME * (*EDIPARTYNAME_new)(struct AmiSSLIFace *Self);
	APICALL void (*EDIPARTYNAME_free)(struct AmiSSLIFace *Self, EDIPARTYNAME * a);
	APICALL EDIPARTYNAME * (*d2i_EDIPARTYNAME)(struct AmiSSLIFace *Self, EDIPARTYNAME ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_EDIPARTYNAME)(struct AmiSSLIFace *Self, const EDIPARTYNAME * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*EDIPARTYNAME_it)(struct AmiSSLIFace *Self);
	APICALL char * (*i2s_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, const ASN1_OCTET_STRING * ia5);
	APICALL ASN1_OCTET_STRING * (*s2i_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, X509V3_CTX * ctx, const char * str);
	APICALL EXTENDED_KEY_USAGE * (*EXTENDED_KEY_USAGE_new)(struct AmiSSLIFace *Self);
	APICALL void (*EXTENDED_KEY_USAGE_free)(struct AmiSSLIFace *Self, EXTENDED_KEY_USAGE * a);
	APICALL EXTENDED_KEY_USAGE * (*d2i_EXTENDED_KEY_USAGE)(struct AmiSSLIFace *Self, EXTENDED_KEY_USAGE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_EXTENDED_KEY_USAGE)(struct AmiSSLIFace *Self, const EXTENDED_KEY_USAGE * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*EXTENDED_KEY_USAGE_it)(struct AmiSSLIFace *Self);
	APICALL int (*i2a_ACCESS_DESCRIPTION)(struct AmiSSLIFace *Self, BIO * bp, const ACCESS_DESCRIPTION * a);
	APICALL CERTIFICATEPOLICIES * (*CERTIFICATEPOLICIES_new)(struct AmiSSLIFace *Self);
	APICALL void (*CERTIFICATEPOLICIES_free)(struct AmiSSLIFace *Self, CERTIFICATEPOLICIES * a);
	APICALL CERTIFICATEPOLICIES * (*d2i_CERTIFICATEPOLICIES)(struct AmiSSLIFace *Self, CERTIFICATEPOLICIES ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_CERTIFICATEPOLICIES)(struct AmiSSLIFace *Self, const CERTIFICATEPOLICIES * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*CERTIFICATEPOLICIES_it)(struct AmiSSLIFace *Self);
	APICALL POLICYINFO * (*POLICYINFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*POLICYINFO_free)(struct AmiSSLIFace *Self, POLICYINFO * a);
	APICALL POLICYINFO * (*d2i_POLICYINFO)(struct AmiSSLIFace *Self, POLICYINFO ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_POLICYINFO)(struct AmiSSLIFace *Self, const POLICYINFO * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*POLICYINFO_it)(struct AmiSSLIFace *Self);
	APICALL POLICYQUALINFO * (*POLICYQUALINFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*POLICYQUALINFO_free)(struct AmiSSLIFace *Self, POLICYQUALINFO * a);
	APICALL POLICYQUALINFO * (*d2i_POLICYQUALINFO)(struct AmiSSLIFace *Self, POLICYQUALINFO ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_POLICYQUALINFO)(struct AmiSSLIFace *Self, const POLICYQUALINFO * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*POLICYQUALINFO_it)(struct AmiSSLIFace *Self);
	APICALL USERNOTICE * (*USERNOTICE_new)(struct AmiSSLIFace *Self);
	APICALL void (*USERNOTICE_free)(struct AmiSSLIFace *Self, USERNOTICE * a);
	APICALL USERNOTICE * (*d2i_USERNOTICE)(struct AmiSSLIFace *Self, USERNOTICE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_USERNOTICE)(struct AmiSSLIFace *Self, const USERNOTICE * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*USERNOTICE_it)(struct AmiSSLIFace *Self);
	APICALL NOTICEREF * (*NOTICEREF_new)(struct AmiSSLIFace *Self);
	APICALL void (*NOTICEREF_free)(struct AmiSSLIFace *Self, NOTICEREF * a);
	APICALL NOTICEREF * (*d2i_NOTICEREF)(struct AmiSSLIFace *Self, NOTICEREF ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_NOTICEREF)(struct AmiSSLIFace *Self, const NOTICEREF * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*NOTICEREF_it)(struct AmiSSLIFace *Self);
	APICALL CRL_DIST_POINTS * (*CRL_DIST_POINTS_new)(struct AmiSSLIFace *Self);
	APICALL void (*CRL_DIST_POINTS_free)(struct AmiSSLIFace *Self, CRL_DIST_POINTS * a);
	APICALL CRL_DIST_POINTS * (*d2i_CRL_DIST_POINTS)(struct AmiSSLIFace *Self, CRL_DIST_POINTS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_CRL_DIST_POINTS)(struct AmiSSLIFace *Self, const CRL_DIST_POINTS * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*CRL_DIST_POINTS_it)(struct AmiSSLIFace *Self);
	APICALL DIST_POINT * (*DIST_POINT_new)(struct AmiSSLIFace *Self);
	APICALL void (*DIST_POINT_free)(struct AmiSSLIFace *Self, DIST_POINT * a);
	APICALL DIST_POINT * (*d2i_DIST_POINT)(struct AmiSSLIFace *Self, DIST_POINT ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_DIST_POINT)(struct AmiSSLIFace *Self, const DIST_POINT * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*DIST_POINT_it)(struct AmiSSLIFace *Self);
	APICALL DIST_POINT_NAME * (*DIST_POINT_NAME_new)(struct AmiSSLIFace *Self);
	APICALL void (*DIST_POINT_NAME_free)(struct AmiSSLIFace *Self, DIST_POINT_NAME * a);
	APICALL DIST_POINT_NAME * (*d2i_DIST_POINT_NAME)(struct AmiSSLIFace *Self, DIST_POINT_NAME ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_DIST_POINT_NAME)(struct AmiSSLIFace *Self, const DIST_POINT_NAME * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*DIST_POINT_NAME_it)(struct AmiSSLIFace *Self);
	APICALL ACCESS_DESCRIPTION * (*ACCESS_DESCRIPTION_new)(struct AmiSSLIFace *Self);
	APICALL void (*ACCESS_DESCRIPTION_free)(struct AmiSSLIFace *Self, ACCESS_DESCRIPTION * a);
	APICALL ACCESS_DESCRIPTION * (*d2i_ACCESS_DESCRIPTION)(struct AmiSSLIFace *Self, ACCESS_DESCRIPTION ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ACCESS_DESCRIPTION)(struct AmiSSLIFace *Self, const ACCESS_DESCRIPTION * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ACCESS_DESCRIPTION_it)(struct AmiSSLIFace *Self);
	APICALL AUTHORITY_INFO_ACCESS * (*AUTHORITY_INFO_ACCESS_new)(struct AmiSSLIFace *Self);
	APICALL void (*AUTHORITY_INFO_ACCESS_free)(struct AmiSSLIFace *Self, AUTHORITY_INFO_ACCESS * a);
	APICALL AUTHORITY_INFO_ACCESS * (*d2i_AUTHORITY_INFO_ACCESS)(struct AmiSSLIFace *Self, AUTHORITY_INFO_ACCESS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_AUTHORITY_INFO_ACCESS)(struct AmiSSLIFace *Self, const AUTHORITY_INFO_ACCESS * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*AUTHORITY_INFO_ACCESS_it)(struct AmiSSLIFace *Self);
	APICALL GENERAL_NAME * (*v2i_GENERAL_NAME)(struct AmiSSLIFace *Self, const X509V3_EXT_METHOD * method, X509V3_CTX * ctx, CONF_VALUE * cnf);
	APICALL void (*X509V3_conf_free)(struct AmiSSLIFace *Self, CONF_VALUE * val);
	APICALL X509_EXTENSION * (*X509V3_EXT_nconf_nid)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, int ext_nid, const char * value);
	APICALL X509_EXTENSION * (*X509V3_EXT_nconf)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, const char * name, const char * value);
	APICALL int (*X509V3_EXT_add_nconf_sk)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, const char * section, STACK_OF(X509_EXTENSION) ** sk);
	APICALL int (*X509V3_EXT_add_nconf)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, const char * section, X509 * cert);
	APICALL int (*X509V3_EXT_REQ_add_nconf)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, const char * section, X509_REQ * req);
	APICALL int (*X509V3_EXT_CRL_add_nconf)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, const char * section, X509_CRL * crl);
	APICALL X509_EXTENSION * (*X509V3_EXT_conf_nid)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf, X509V3_CTX * ctx, int ext_nid, const char * value);
	APICALL X509_EXTENSION * (*X509V3_EXT_conf)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf, X509V3_CTX * ctx, const char * name, const char * value);
	APICALL int (*X509V3_EXT_add_conf)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf, X509V3_CTX * ctx, const char * section, X509 * cert);
	APICALL int (*X509V3_EXT_REQ_add_conf)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf, X509V3_CTX * ctx, const char * section, X509_REQ * req);
	APICALL int (*X509V3_EXT_CRL_add_conf)(struct AmiSSLIFace *Self, LHASH_OF(CONF_VALUE) * conf, X509V3_CTX * ctx, const char * section, X509_CRL * crl);
	APICALL int (*X509V3_add_value_bool_nf)(struct AmiSSLIFace *Self, const char * name, int asn1_bool, STACK_OF(CONF_VALUE) ** extlist);
	APICALL int (*X509V3_get_value_bool)(struct AmiSSLIFace *Self, const CONF_VALUE * value, int * asn1_bool);
	APICALL int (*X509V3_get_value_int)(struct AmiSSLIFace *Self, const CONF_VALUE * value, ASN1_INTEGER ** aint);
	APICALL void (*X509V3_set_nconf)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, CONF * conf);
	APICALL void (*X509V3_set_conf_lhash)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, LHASH_OF(CONF_VALUE) * lhash);
	APICALL char * (*X509V3_get_string)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, const char * name, const char * section);
	APICALL STACK_OF(CONF_VALUE) * (*X509V3_get_section)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, const char * section);
	APICALL void (*X509V3_string_free)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, char * str);
	APICALL void (*X509V3_section_free)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, STACK_OF(CONF_VALUE) * section);
	APICALL void (*X509V3_set_ctx)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, X509 * issuer, X509 * subject, X509_REQ * req, X509_CRL * crl, int flags);
	APICALL int (*X509V3_add_value)(struct AmiSSLIFace *Self, const char * name, const char * value, STACK_OF(CONF_VALUE) ** extlist);
	APICALL int (*X509V3_add_value_uchar)(struct AmiSSLIFace *Self, const char * name, const unsigned char * value, STACK_OF(CONF_VALUE) ** extlist);
	APICALL int (*X509V3_add_value_bool)(struct AmiSSLIFace *Self, const char * name, int asn1_bool, STACK_OF(CONF_VALUE) ** extlist);
	APICALL int (*X509V3_add_value_int)(struct AmiSSLIFace *Self, const char * name, const ASN1_INTEGER * aint, STACK_OF(CONF_VALUE) ** extlist);
	APICALL char * (*i2s_ASN1_INTEGER)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, const ASN1_INTEGER * aint);
	APICALL ASN1_INTEGER * (*s2i_ASN1_INTEGER)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, const char * value);
	APICALL char * (*i2s_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, const ASN1_ENUMERATED * aint);
	APICALL char * (*i2s_ASN1_ENUMERATED_TABLE)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, const ASN1_ENUMERATED * aint);
	APICALL int (*X509V3_EXT_add)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * ext);
	APICALL int (*X509V3_EXT_add_list)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * extlist);
	APICALL int (*X509V3_EXT_add_alias)(struct AmiSSLIFace *Self, int nid_to, int nid_from);
	APICALL void (*X509V3_EXT_cleanup)(struct AmiSSLIFace *Self);
	APICALL const X509V3_EXT_METHOD * (*X509V3_EXT_get)(struct AmiSSLIFace *Self, X509_EXTENSION * ext);
	APICALL const X509V3_EXT_METHOD * (*X509V3_EXT_get_nid)(struct AmiSSLIFace *Self, int nid);
	APICALL int (*X509V3_add_standard_extensions)(struct AmiSSLIFace *Self);
	APICALL STACK_OF(CONF_VALUE) * (*X509V3_parse_list)(struct AmiSSLIFace *Self, const char * line);
	APICALL void * (*X509V3_EXT_d2i)(struct AmiSSLIFace *Self, X509_EXTENSION * ext);
	APICALL void * (*X509V3_get_d2i)(struct AmiSSLIFace *Self, const STACK_OF(X509_EXTENSION) * x, int nid, int * crit, int * idx);
	APICALL X509_EXTENSION * (*X509V3_EXT_i2d)(struct AmiSSLIFace *Self, int ext_nid, int crit, void * ext_struc);
	APICALL int (*X509V3_add1_i2d)(struct AmiSSLIFace *Self, STACK_OF(X509_EXTENSION) ** x, int nid, void * value, int crit, unsigned long flags);
	APICALL char * (*OPENSSL_buf2hexstr)(struct AmiSSLIFace *Self, const unsigned char * buffer, long len);
	APICALL unsigned char * (*OPENSSL_hexstr2buf)(struct AmiSSLIFace *Self, const char * str, long * len);
	APICALL void (*X509V3_EXT_val_prn)(struct AmiSSLIFace *Self, BIO * out, STACK_OF(CONF_VALUE) * val, int indent, int ml);
	APICALL int (*X509V3_EXT_print)(struct AmiSSLIFace *Self, BIO * out, X509_EXTENSION * ext, unsigned long flag, int indent);
	APICALL int (*X509V3_extensions_print)(struct AmiSSLIFace *Self, BIO * out, const char * title, const STACK_OF(X509_EXTENSION) * exts, unsigned long flag, int indent);
	APICALL int (*X509_check_purpose)(struct AmiSSLIFace *Self, X509 * x, int id, int ca);
	APICALL int (*X509_supported_extension)(struct AmiSSLIFace *Self, X509_EXTENSION * ex);
	APICALL int (*X509_PURPOSE_set)(struct AmiSSLIFace *Self, int * p, int purpose);
	APICALL int (*X509_check_issued)(struct AmiSSLIFace *Self, X509 * issuer, X509 * subject);
	APICALL int (*X509_PURPOSE_get_count)(struct AmiSSLIFace *Self);
	APICALL X509_PURPOSE * (*X509_PURPOSE_get0)(struct AmiSSLIFace *Self, int idx);
	APICALL int (*X509_PURPOSE_get_by_sname)(struct AmiSSLIFace *Self, const char * sname);
	APICALL int (*X509_PURPOSE_get_by_id)(struct AmiSSLIFace *Self, int id);
	APICALL int (*X509_PURPOSE_add)(struct AmiSSLIFace *Self, int id, int trust, int flags, int (*ck)(const X509_PURPOSE *, const X509 *, int), const char * name, const char * sname, void * arg);
	APICALL char * (*X509_PURPOSE_get0_name)(struct AmiSSLIFace *Self, const X509_PURPOSE * xp);
	APICALL char * (*X509_PURPOSE_get0_sname)(struct AmiSSLIFace *Self, const X509_PURPOSE * xp);
	APICALL int (*X509_PURPOSE_get_trust)(struct AmiSSLIFace *Self, const X509_PURPOSE * xp);
	APICALL void (*X509_PURPOSE_cleanup)(struct AmiSSLIFace *Self);
	APICALL int (*X509_PURPOSE_get_id)(struct AmiSSLIFace *Self, const X509_PURPOSE * a);
	APICALL STACK_OF(OPENSSL_STRING) * (*X509_get1_email)(struct AmiSSLIFace *Self, X509 * x);
	APICALL STACK_OF(OPENSSL_STRING) * (*X509_REQ_get1_email)(struct AmiSSLIFace *Self, X509_REQ * x);
	APICALL void (*X509_email_free)(struct AmiSSLIFace *Self, STACK_OF(OPENSSL_STRING) * sk);
	DEPRECATED APICALL int (*ERR_load_X509V3_strings)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const char * (*AES_options)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*AES_set_encrypt_key)(struct AmiSSLIFace *Self, const unsigned char * userKey, const int bits, AES_KEY * key);
	DEPRECATED APICALL int (*AES_set_decrypt_key)(struct AmiSSLIFace *Self, const unsigned char * userKey, const int bits, AES_KEY * key);
	DEPRECATED APICALL void (*AES_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const AES_KEY * key);
	DEPRECATED APICALL void (*AES_decrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const AES_KEY * key);
	DEPRECATED APICALL void (*AES_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const AES_KEY * key, const int enc);
	DEPRECATED APICALL void (*AES_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const AES_KEY * key, unsigned char * ivec, const int enc);
	DEPRECATED APICALL void (*AES_cfb128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const AES_KEY * key, unsigned char * ivec, int * num, const int enc);
	DEPRECATED APICALL void (*AES_cfb1_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const AES_KEY * key, unsigned char * ivec, int * num, const int enc);
	DEPRECATED APICALL void (*AES_cfb8_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const AES_KEY * key, unsigned char * ivec, int * num, const int enc);
	APTR AES_cfbr_encrypt_block_UNIMPLEMENTED;
	DEPRECATED APICALL void (*AES_ofb128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const AES_KEY * key, unsigned char * ivec, int * num);
	APTR AES_ctr128_encrypt_UNIMPLEMENTED;
	DEPRECATED APICALL void (*BF_set_key)(struct AmiSSLIFace *Self, BF_KEY * key, int len, const unsigned char * data);
	DEPRECATED APICALL void (*BF_encrypt)(struct AmiSSLIFace *Self, BF_LONG * data, const BF_KEY * key);
	DEPRECATED APICALL void (*BF_decrypt)(struct AmiSSLIFace *Self, BF_LONG * data, const BF_KEY * key);
	DEPRECATED APICALL void (*BF_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const BF_KEY * key, int enc);
	DEPRECATED APICALL void (*BF_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, const BF_KEY * schedule, unsigned char * ivec, int enc);
	DEPRECATED APICALL void (*BF_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, const BF_KEY * schedule, unsigned char * ivec, int * num, int enc);
	DEPRECATED APICALL void (*BF_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, const BF_KEY * schedule, unsigned char * ivec, int * num);
	DEPRECATED APICALL const char * (*BF_options)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*CAST_set_key)(struct AmiSSLIFace *Self, CAST_KEY * key, int len, const unsigned char * data);
	DEPRECATED APICALL void (*CAST_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const CAST_KEY * key, int enc);
	DEPRECATED APICALL void (*CAST_encrypt)(struct AmiSSLIFace *Self, CAST_LONG * data, const CAST_KEY * key);
	DEPRECATED APICALL void (*CAST_decrypt)(struct AmiSSLIFace *Self, CAST_LONG * data, const CAST_KEY * key);
	DEPRECATED APICALL void (*CAST_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, const CAST_KEY * ks, unsigned char * iv, int enc);
	DEPRECATED APICALL void (*CAST_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, const CAST_KEY * schedule, unsigned char * ivec, int * num, int enc);
	DEPRECATED APICALL void (*CAST_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, const CAST_KEY * schedule, unsigned char * ivec, int * num);
	APTR _shadow_DES_check_key_UNIMPLEMENTED;
	DEPRECATED APICALL const char * (*DES_options)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*DES_ecb3_encrypt)(struct AmiSSLIFace *Self, const_DES_cblock * input, DES_cblock * output, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3, int enc);
	DEPRECATED APICALL DES_LONG (*DES_cbc_cksum)(struct AmiSSLIFace *Self, const unsigned char * input, DES_cblock * output, long length, DES_key_schedule * schedule, const_DES_cblock * ivec);
	DEPRECATED APICALL void (*DES_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * input, unsigned char * output, long length, DES_key_schedule * schedule, DES_cblock * ivec, int enc);
	DEPRECATED APICALL void (*DES_ncbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * input, unsigned char * output, long length, DES_key_schedule * schedule, DES_cblock * ivec, int enc);
	DEPRECATED APICALL void (*DES_xcbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * input, unsigned char * output, long length, DES_key_schedule * schedule, DES_cblock * ivec, const_DES_cblock * inw, const_DES_cblock * outw, int enc);
	DEPRECATED APICALL void (*DES_cfb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, int numbits, long length, DES_key_schedule * schedule, DES_cblock * ivec, int enc);
	DEPRECATED APICALL void (*DES_ecb_encrypt)(struct AmiSSLIFace *Self, const_DES_cblock * input, DES_cblock * output, DES_key_schedule * ks, int enc);
	DEPRECATED APICALL void (*DES_encrypt1)(struct AmiSSLIFace *Self, DES_LONG * data, DES_key_schedule * ks, int enc);
	DEPRECATED APICALL void (*DES_encrypt2)(struct AmiSSLIFace *Self, DES_LONG * data, DES_key_schedule * ks, int enc);
	DEPRECATED APICALL void (*DES_encrypt3)(struct AmiSSLIFace *Self, DES_LONG * data, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3);
	DEPRECATED APICALL void (*DES_decrypt3)(struct AmiSSLIFace *Self, DES_LONG * data, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3);
	DEPRECATED APICALL void (*DES_ede3_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * input, unsigned char * output, long length, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3, DES_cblock * ivec, int enc);
	APTR DES_ede3_cbcm_encrypt_UNIMPLEMENTED;
	DEPRECATED APICALL void (*DES_ede3_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3, DES_cblock * ivec, int * num, int enc);
	DEPRECATED APICALL void (*DES_ede3_cfb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, int numbits, long length, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3, DES_cblock * ivec, int enc);
	DEPRECATED APICALL void (*DES_ede3_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3, DES_cblock * ivec, int * num);
	APTR DES_xwhite_in2out_UNIMPLEMENTED;
	DEPRECATED APICALL char * (*DES_fcrypt)(struct AmiSSLIFace *Self, const char * buf, const char * salt, char * ret);
	DEPRECATED APICALL char * (*DES_crypt)(struct AmiSSLIFace *Self, const char * buf, const char * salt);
	DEPRECATED APICALL void (*DES_ofb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, int numbits, long length, DES_key_schedule * schedule, DES_cblock * ivec);
	DEPRECATED APICALL void (*DES_pcbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * input, unsigned char * output, long length, DES_key_schedule * schedule, DES_cblock * ivec, int enc);
	DEPRECATED APICALL DES_LONG (*DES_quad_cksum)(struct AmiSSLIFace *Self, const unsigned char * input, DES_cblock * output, long length, int out_count, DES_cblock * seed);
	DEPRECATED APICALL int (*DES_random_key)(struct AmiSSLIFace *Self, DES_cblock * ret);
	DEPRECATED APICALL void (*DES_set_odd_parity)(struct AmiSSLIFace *Self, DES_cblock * key);
	DEPRECATED APICALL int (*DES_check_key_parity)(struct AmiSSLIFace *Self, const_DES_cblock * key);
	DEPRECATED APICALL int (*DES_is_weak_key)(struct AmiSSLIFace *Self, const_DES_cblock * key);
	DEPRECATED APICALL int (*DES_set_key)(struct AmiSSLIFace *Self, const_DES_cblock * key, DES_key_schedule * schedule);
	DEPRECATED APICALL int (*DES_key_sched)(struct AmiSSLIFace *Self, const_DES_cblock * key, DES_key_schedule * schedule);
	DEPRECATED APICALL int (*DES_set_key_checked)(struct AmiSSLIFace *Self, const_DES_cblock * key, DES_key_schedule * schedule);
	DEPRECATED APICALL void (*DES_set_key_unchecked)(struct AmiSSLIFace *Self, const_DES_cblock * key, DES_key_schedule * schedule);
	DEPRECATED APICALL void (*DES_string_to_key)(struct AmiSSLIFace *Self, const char * str, DES_cblock * key);
	DEPRECATED APICALL void (*DES_string_to_2keys)(struct AmiSSLIFace *Self, const char * str, DES_cblock * key1, DES_cblock * key2);
	DEPRECATED APICALL void (*DES_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, DES_key_schedule * schedule, DES_cblock * ivec, int * num, int enc);
	DEPRECATED APICALL void (*DES_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, DES_key_schedule * schedule, DES_cblock * ivec, int * num);
	APTR _ossl_old_des_options_UNIMPLEMENTED;
	APTR _ossl_old_des_ecb3_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_cbc_cksum_UNIMPLEMENTED;
	APTR _ossl_old_des_cbc_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_ncbc_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_xcbc_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_cfb_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_ecb_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_encrypt2_UNIMPLEMENTED;
	APTR _ossl_old_des_encrypt3_UNIMPLEMENTED;
	APTR _ossl_old_des_decrypt3_UNIMPLEMENTED;
	APTR _ossl_old_des_ede3_cbc_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_ede3_cfb64_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_ede3_ofb64_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_xwhite_in2out_UNIMPLEMENTED;
	APTR _ossl_old_des_enc_read_UNIMPLEMENTED;
	APTR _ossl_old_des_enc_write_UNIMPLEMENTED;
	APTR _ossl_old_des_fcrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_crypt_UNIMPLEMENTED;
	APTR _ossl_old_crypt_UNIMPLEMENTED;
	APTR _ossl_old_des_ofb_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_pcbc_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_quad_cksum_UNIMPLEMENTED;
	APTR _ossl_old_des_random_seed_UNIMPLEMENTED;
	APTR _ossl_old_des_random_key_UNIMPLEMENTED;
	APTR _ossl_old_des_read_password_UNIMPLEMENTED;
	APTR _ossl_old_des_read_2passwords_UNIMPLEMENTED;
	APTR _ossl_old_des_set_odd_parity_UNIMPLEMENTED;
	APTR _ossl_old_des_is_weak_key_UNIMPLEMENTED;
	APTR _ossl_old_des_set_key_UNIMPLEMENTED;
	APTR _ossl_old_des_key_sched_UNIMPLEMENTED;
	APTR _ossl_old_des_string_to_key_UNIMPLEMENTED;
	APTR _ossl_old_des_string_to_2keys_UNIMPLEMENTED;
	APTR _ossl_old_des_cfb64_encrypt_UNIMPLEMENTED;
	APTR _ossl_old_des_ofb64_encrypt_UNIMPLEMENTED;
	APTR _ossl_096_des_random_seed_UNIMPLEMENTED;
	DEPRECATED APICALL const DH_METHOD * (*DH_OpenSSL)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*DH_set_default_method)(struct AmiSSLIFace *Self, const DH_METHOD * meth);
	DEPRECATED APICALL const DH_METHOD * (*DH_get_default_method)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*DH_set_method)(struct AmiSSLIFace *Self, DH * dh, const DH_METHOD * meth);
	DEPRECATED APICALL DH * (*DH_new_method)(struct AmiSSLIFace *Self, ENGINE * engine);
	DEPRECATED APICALL DH * (*DH_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*DH_free)(struct AmiSSLIFace *Self, DH * dh);
	DEPRECATED APICALL int (*DH_up_ref)(struct AmiSSLIFace *Self, DH * dh);
	DEPRECATED APICALL int (*DH_size)(struct AmiSSLIFace *Self, const DH * dh);
	APICALL int (*OBSOLETE_DH_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dup_func, CRYPTO_EX_free * free_func);
	DEPRECATED APICALL int (*DH_set_ex_data)(struct AmiSSLIFace *Self, DH * d, int idx, void * arg);
	DEPRECATED APICALL void * (*DH_get_ex_data)(struct AmiSSLIFace *Self, const DH * d, int idx);
	DEPRECATED APICALL DH * (*DH_generate_parameters)(struct AmiSSLIFace *Self, int prime_len, int generator, void (*callback)(int, int, void *), void * cb_arg);
	DEPRECATED APICALL int (*DH_check)(struct AmiSSLIFace *Self, const DH * dh, int * codes);
	DEPRECATED APICALL int (*DH_generate_key)(struct AmiSSLIFace *Self, DH * dh);
	DEPRECATED APICALL int (*DH_compute_key)(struct AmiSSLIFace *Self, unsigned char * key, const BIGNUM * pub_key, DH * dh);
	DEPRECATED APICALL DH * (*d2i_DHparams)(struct AmiSSLIFace *Self, DH ** a, const unsigned char ** pp, long length);
	DEPRECATED APICALL int (*i2d_DHparams)(struct AmiSSLIFace *Self, const DH * a, unsigned char ** pp);
	DEPRECATED APICALL int (*DHparams_print)(struct AmiSSLIFace *Self, BIO * bp, const DH * x);
	DEPRECATED APICALL int (*ERR_load_DH_strings)(struct AmiSSLIFace *Self);
	APICALL DSA_SIG * (*DSA_SIG_new)(struct AmiSSLIFace *Self);
	APICALL void (*DSA_SIG_free)(struct AmiSSLIFace *Self, DSA_SIG * a);
	APICALL int (*i2d_DSA_SIG)(struct AmiSSLIFace *Self, const DSA_SIG * a, unsigned char ** pp);
	APICALL DSA_SIG * (*d2i_DSA_SIG)(struct AmiSSLIFace *Self, DSA_SIG ** v, const unsigned char ** pp, long length);
	DEPRECATED APICALL DSA_SIG * (*DSA_do_sign)(struct AmiSSLIFace *Self, const unsigned char * dgst, int dlen, DSA * dsa);
	DEPRECATED APICALL int (*DSA_do_verify)(struct AmiSSLIFace *Self, const unsigned char * dgst, int dgst_len, DSA_SIG * sig, DSA * dsa);
	DEPRECATED APICALL const DSA_METHOD * (*DSA_OpenSSL)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*DSA_set_default_method)(struct AmiSSLIFace *Self, const DSA_METHOD * a);
	DEPRECATED APICALL const DSA_METHOD * (*DSA_get_default_method)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*DSA_set_method)(struct AmiSSLIFace *Self, DSA * dsa, const DSA_METHOD * a);
	DEPRECATED APICALL DSA * (*DSA_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL DSA * (*DSA_new_method)(struct AmiSSLIFace *Self, ENGINE * engine);
	DEPRECATED APICALL void (*DSA_free)(struct AmiSSLIFace *Self, DSA * r);
	DEPRECATED APICALL int (*DSA_up_ref)(struct AmiSSLIFace *Self, DSA * r);
	DEPRECATED APICALL int (*DSA_size)(struct AmiSSLIFace *Self, const DSA * a);
	DEPRECATED APICALL int (*DSA_sign_setup)(struct AmiSSLIFace *Self, DSA * dsa, BN_CTX * ctx_in, BIGNUM ** kinvp, BIGNUM ** rp);
	DEPRECATED APICALL int (*DSA_sign)(struct AmiSSLIFace *Self, int type, const unsigned char * dgst, int dlen, unsigned char * sig, unsigned int * siglen, DSA * dsa);
	DEPRECATED APICALL int (*DSA_verify)(struct AmiSSLIFace *Self, int type, const unsigned char * dgst, int dgst_len, const unsigned char * sigbuf, int siglen, DSA * dsa);
	APICALL int (*OBSOLETE_DSA_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dup_func, CRYPTO_EX_free * free_func);
	DEPRECATED APICALL int (*DSA_set_ex_data)(struct AmiSSLIFace *Self, DSA * d, int idx, void * arg);
	DEPRECATED APICALL void * (*DSA_get_ex_data)(struct AmiSSLIFace *Self, const DSA * d, int idx);
	DEPRECATED APICALL DSA * (*d2i_DSAPublicKey)(struct AmiSSLIFace *Self, DSA ** a, const unsigned char ** pp, long length);
	DEPRECATED APICALL DSA * (*d2i_DSAPrivateKey)(struct AmiSSLIFace *Self, DSA ** a, const unsigned char ** pp, long length);
	DEPRECATED APICALL DSA * (*d2i_DSAparams)(struct AmiSSLIFace *Self, DSA ** a, const unsigned char ** pp, long length);
	DEPRECATED APICALL DSA * (*DSA_generate_parameters)(struct AmiSSLIFace *Self, int bits, unsigned char * seed, int seed_len, int * counter_ret, unsigned long * h_ret, void (*callback)(int, int, void *), void * cb_arg);
	DEPRECATED APICALL int (*DSA_generate_key)(struct AmiSSLIFace *Self, DSA * a);
	DEPRECATED APICALL int (*i2d_DSAPublicKey)(struct AmiSSLIFace *Self, const DSA * a, unsigned char ** pp);
	DEPRECATED APICALL int (*i2d_DSAPrivateKey)(struct AmiSSLIFace *Self, const DSA * a, unsigned char ** pp);
	DEPRECATED APICALL int (*i2d_DSAparams)(struct AmiSSLIFace *Self, const DSA * a, unsigned char ** pp);
	DEPRECATED APICALL int (*DSAparams_print)(struct AmiSSLIFace *Self, BIO * bp, const DSA * x);
	DEPRECATED APICALL int (*DSA_print)(struct AmiSSLIFace *Self, BIO * bp, const DSA * x, int off);
	DEPRECATED APICALL DH * (*DSA_dup_DH)(struct AmiSSLIFace *Self, const DSA * r);
	DEPRECATED APICALL int (*ERR_load_DSA_strings)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const char * (*IDEA_options)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*IDEA_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, IDEA_KEY_SCHEDULE * ks);
	DEPRECATED APICALL void (*IDEA_set_encrypt_key)(struct AmiSSLIFace *Self, const unsigned char * key, IDEA_KEY_SCHEDULE * ks);
	DEPRECATED APICALL void (*IDEA_set_decrypt_key)(struct AmiSSLIFace *Self, IDEA_KEY_SCHEDULE * ek, IDEA_KEY_SCHEDULE * dk);
	DEPRECATED APICALL void (*IDEA_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, IDEA_KEY_SCHEDULE * ks, unsigned char * iv, int enc);
	DEPRECATED APICALL void (*IDEA_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, IDEA_KEY_SCHEDULE * ks, unsigned char * iv, int * num, int enc);
	DEPRECATED APICALL void (*IDEA_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, IDEA_KEY_SCHEDULE * ks, unsigned char * iv, int * num);
	DEPRECATED APICALL void (*IDEA_encrypt)(struct AmiSSLIFace *Self, unsigned long * in, IDEA_KEY_SCHEDULE * ks);
	DEPRECATED APICALL const char * (*MD2_options)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*MD2_Init)(struct AmiSSLIFace *Self, MD2_CTX * c);
	DEPRECATED APICALL int (*MD2_Update)(struct AmiSSLIFace *Self, MD2_CTX * c, const unsigned char * data, size_t len);
	DEPRECATED APICALL int (*MD2_Final)(struct AmiSSLIFace *Self, unsigned char * md, MD2_CTX * c);
	DEPRECATED APICALL unsigned char * (*MD2)(struct AmiSSLIFace *Self, const unsigned char * d, size_t n, unsigned char * md);
	DEPRECATED APICALL int (*MD4_Init)(struct AmiSSLIFace *Self, MD4_CTX * c);
	DEPRECATED APICALL int (*MD4_Update)(struct AmiSSLIFace *Self, MD4_CTX * c, const void * data, size_t len);
	DEPRECATED APICALL int (*MD4_Final)(struct AmiSSLIFace *Self, unsigned char * md, MD4_CTX * c);
	DEPRECATED APICALL unsigned char * (*MD4)(struct AmiSSLIFace *Self, const unsigned char * d, size_t n, unsigned char * md);
	DEPRECATED APICALL void (*MD4_Transform)(struct AmiSSLIFace *Self, MD4_CTX * c, const unsigned char * b);
	DEPRECATED APICALL int (*MD5_Init)(struct AmiSSLIFace *Self, MD5_CTX * c);
	DEPRECATED APICALL int (*MD5_Update)(struct AmiSSLIFace *Self, MD5_CTX * c, const void * data, size_t len);
	DEPRECATED APICALL int (*MD5_Final)(struct AmiSSLIFace *Self, unsigned char * md, MD5_CTX * c);
	DEPRECATED APICALL unsigned char * (*MD5)(struct AmiSSLIFace *Self, const unsigned char * d, size_t n, unsigned char * md);
	DEPRECATED APICALL void (*MD5_Transform)(struct AmiSSLIFace *Self, MD5_CTX * c, const unsigned char * b);
	DEPRECATED APICALL int (*MDC2_Init)(struct AmiSSLIFace *Self, MDC2_CTX * c);
	DEPRECATED APICALL int (*MDC2_Update)(struct AmiSSLIFace *Self, MDC2_CTX * c, const unsigned char * data, size_t len);
	DEPRECATED APICALL int (*MDC2_Final)(struct AmiSSLIFace *Self, unsigned char * md, MDC2_CTX * c);
	DEPRECATED APICALL unsigned char * (*MDC2)(struct AmiSSLIFace *Self, const unsigned char * d, size_t n, unsigned char * md);
	DEPRECATED APICALL void (*RC2_set_key)(struct AmiSSLIFace *Self, RC2_KEY * key, int len, const unsigned char * data, int bits);
	DEPRECATED APICALL void (*RC2_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, RC2_KEY * key, int enc);
	DEPRECATED APICALL void (*RC2_encrypt)(struct AmiSSLIFace *Self, unsigned long * data, RC2_KEY * key);
	DEPRECATED APICALL void (*RC2_decrypt)(struct AmiSSLIFace *Self, unsigned long * data, RC2_KEY * key);
	DEPRECATED APICALL void (*RC2_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC2_KEY * ks, unsigned char * iv, int enc);
	DEPRECATED APICALL void (*RC2_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC2_KEY * schedule, unsigned char * ivec, int * num, int enc);
	DEPRECATED APICALL void (*RC2_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC2_KEY * schedule, unsigned char * ivec, int * num);
	DEPRECATED APICALL const char * (*RC4_options)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*RC4_set_key)(struct AmiSSLIFace *Self, RC4_KEY * key, int len, const unsigned char * data);
	DEPRECATED APICALL void (*RC4)(struct AmiSSLIFace *Self, RC4_KEY * key, size_t len, const unsigned char * indata, unsigned char * outdata);
	DEPRECATED APICALL int (*RC5_32_set_key)(struct AmiSSLIFace *Self, RC5_32_KEY * key, int len, const unsigned char * data, int rounds);
	DEPRECATED APICALL void (*RC5_32_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, RC5_32_KEY * key, int enc);
	DEPRECATED APICALL void (*RC5_32_encrypt)(struct AmiSSLIFace *Self, unsigned long * data, RC5_32_KEY * key);
	DEPRECATED APICALL void (*RC5_32_decrypt)(struct AmiSSLIFace *Self, unsigned long * data, RC5_32_KEY * key);
	DEPRECATED APICALL void (*RC5_32_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC5_32_KEY * ks, unsigned char * iv, int enc);
	DEPRECATED APICALL void (*RC5_32_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC5_32_KEY * schedule, unsigned char * ivec, int * num, int enc);
	DEPRECATED APICALL void (*RC5_32_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC5_32_KEY * schedule, unsigned char * ivec, int * num);
	DEPRECATED APICALL int (*RIPEMD160_Init)(struct AmiSSLIFace *Self, RIPEMD160_CTX * c);
	DEPRECATED APICALL int (*RIPEMD160_Update)(struct AmiSSLIFace *Self, RIPEMD160_CTX * c, const void * data, size_t len);
	DEPRECATED APICALL int (*RIPEMD160_Final)(struct AmiSSLIFace *Self, unsigned char * md, RIPEMD160_CTX * c);
	DEPRECATED APICALL unsigned char * (*RIPEMD160)(struct AmiSSLIFace *Self, const unsigned char * d, size_t n, unsigned char * md);
	DEPRECATED APICALL void (*RIPEMD160_Transform)(struct AmiSSLIFace *Self, RIPEMD160_CTX * c, const unsigned char * b);
	DEPRECATED APICALL RSA * (*RSA_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL RSA * (*RSA_new_method)(struct AmiSSLIFace *Self, ENGINE * engine);
	DEPRECATED APICALL int (*RSA_size)(struct AmiSSLIFace *Self, const RSA * a);
	DEPRECATED APICALL RSA * (*RSA_generate_key)(struct AmiSSLIFace *Self, int bits, unsigned long e, void (*callback)(int, int, void *), void * cb_arg);
	DEPRECATED APICALL int (*RSA_check_key)(struct AmiSSLIFace *Self, const RSA * a);
	DEPRECATED APICALL int (*RSA_public_encrypt)(struct AmiSSLIFace *Self, int flen, const unsigned char * from, unsigned char * to, RSA * rsa, int padding);
	DEPRECATED APICALL int (*RSA_private_encrypt)(struct AmiSSLIFace *Self, int flen, const unsigned char * from, unsigned char * to, RSA * rsa, int padding);
	DEPRECATED APICALL int (*RSA_public_decrypt)(struct AmiSSLIFace *Self, int flen, const unsigned char * from, unsigned char * to, RSA * rsa, int padding);
	DEPRECATED APICALL int (*RSA_private_decrypt)(struct AmiSSLIFace *Self, int flen, const unsigned char * from, unsigned char * to, RSA * rsa, int padding);
	DEPRECATED APICALL void (*RSA_free)(struct AmiSSLIFace *Self, RSA * r);
	DEPRECATED APICALL int (*RSA_up_ref)(struct AmiSSLIFace *Self, RSA * r);
	DEPRECATED APICALL int (*RSA_flags)(struct AmiSSLIFace *Self, const RSA * r);
	DEPRECATED APICALL void (*RSA_set_default_method)(struct AmiSSLIFace *Self, const RSA_METHOD * meth);
	DEPRECATED APICALL const RSA_METHOD * (*RSA_get_default_method)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const RSA_METHOD * (*RSA_get_method)(struct AmiSSLIFace *Self, const RSA * rsa);
	DEPRECATED APICALL int (*RSA_set_method)(struct AmiSSLIFace *Self, RSA * rsa, const RSA_METHOD * meth);
	APTR RSA_PKCS1_SSLeay_UNIMPLEMENTED;
	DEPRECATED APICALL const RSA_METHOD * (*RSA_null_method)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL RSA * (*d2i_RSAPublicKey)(struct AmiSSLIFace *Self, RSA ** a, const unsigned char ** in, long len);
	DEPRECATED APICALL int (*i2d_RSAPublicKey)(struct AmiSSLIFace *Self, const RSA * a, unsigned char ** out);
	DEPRECATED APICALL const ASN1_ITEM * (*RSAPublicKey_it)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL RSA * (*d2i_RSAPrivateKey)(struct AmiSSLIFace *Self, RSA ** a, const unsigned char ** in, long len);
	DEPRECATED APICALL int (*i2d_RSAPrivateKey)(struct AmiSSLIFace *Self, const RSA * a, unsigned char ** out);
	DEPRECATED APICALL const ASN1_ITEM * (*RSAPrivateKey_it)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*RSA_print)(struct AmiSSLIFace *Self, BIO * bp, const RSA * r, int offset);
	APTR i2d_RSA_NET_UNIMPLEMENTED;
	APTR d2i_RSA_NET_UNIMPLEMENTED;
	APTR i2d_Netscape_RSA_UNIMPLEMENTED;
	APTR d2i_Netscape_RSA_UNIMPLEMENTED;
	DEPRECATED APICALL int (*RSA_sign)(struct AmiSSLIFace *Self, int type, const unsigned char * m, unsigned int m_length, unsigned char * sigret, unsigned int * siglen, RSA * rsa);
	DEPRECATED APICALL int (*RSA_verify)(struct AmiSSLIFace *Self, int type, const unsigned char * m, unsigned int m_length, const unsigned char * sigbuf, unsigned int siglen, RSA * rsa);
	DEPRECATED APICALL int (*RSA_sign_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, int type, const unsigned char * m, unsigned int m_length, unsigned char * sigret, unsigned int * siglen, RSA * rsa);
	DEPRECATED APICALL int (*RSA_verify_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, int type, const unsigned char * m, unsigned int m_length, unsigned char * sigbuf, unsigned int siglen, RSA * rsa);
	DEPRECATED APICALL int (*RSA_blinding_on)(struct AmiSSLIFace *Self, RSA * rsa, BN_CTX * ctx);
	DEPRECATED APICALL void (*RSA_blinding_off)(struct AmiSSLIFace *Self, RSA * rsa);
	DEPRECATED APICALL int (*RSA_padding_add_PKCS1_type_1)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl);
	DEPRECATED APICALL int (*RSA_padding_check_PKCS1_type_1)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl, int rsa_len);
	DEPRECATED APICALL int (*RSA_padding_add_PKCS1_type_2)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl);
	DEPRECATED APICALL int (*RSA_padding_check_PKCS1_type_2)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl, int rsa_len);
	DEPRECATED APICALL int (*RSA_padding_add_PKCS1_OAEP)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl, const unsigned char * p, int pl);
	DEPRECATED APICALL int (*RSA_padding_check_PKCS1_OAEP)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl, int rsa_len, const unsigned char * p, int pl);
	APTR RSA_padding_add_SSLv23_UNIMPLEMENTED;
	APTR RSA_padding_check_SSLv23_UNIMPLEMENTED;
	DEPRECATED APICALL int (*RSA_padding_add_none)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl);
	DEPRECATED APICALL int (*RSA_padding_check_none)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl, int rsa_len);
	APICALL int (*OBSOLETE_RSA_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dup_func, CRYPTO_EX_free * free_func);
	DEPRECATED APICALL int (*RSA_set_ex_data)(struct AmiSSLIFace *Self, RSA * r, int idx, void * arg);
	DEPRECATED APICALL void * (*RSA_get_ex_data)(struct AmiSSLIFace *Self, const RSA * r, int idx);
	DEPRECATED APICALL RSA * (*RSAPublicKey_dup)(struct AmiSSLIFace *Self, const RSA * rsa);
	DEPRECATED APICALL RSA * (*RSAPrivateKey_dup)(struct AmiSSLIFace *Self, const RSA * rsa);
	DEPRECATED APICALL int (*ERR_load_RSA_strings)(struct AmiSSLIFace *Self);
	APTR SHA_Init_UNIMPLEMENTED;
	APTR SHA_Update_UNIMPLEMENTED;
	APTR SHA_Final_UNIMPLEMENTED;
	APTR SHA_UNIMPLEMENTED;
	APTR SHA_Transform_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SHA1_Init)(struct AmiSSLIFace *Self, SHA_CTX * c);
	DEPRECATED APICALL int (*SHA1_Update)(struct AmiSSLIFace *Self, SHA_CTX * c, const void * data, size_t len);
	DEPRECATED APICALL int (*SHA1_Final)(struct AmiSSLIFace *Self, unsigned char * md, SHA_CTX * c);
	APICALL unsigned char * (*SHA1)(struct AmiSSLIFace *Self, const unsigned char * d, size_t n, unsigned char * md);
	DEPRECATED APICALL void (*SHA1_Transform)(struct AmiSSLIFace *Self, SHA_CTX * c, const unsigned char * data);
	APICALL int (*UI_read_string_lib)(struct AmiSSLIFace *Self, UI * ui, UI_STRING * uis);
	APICALL int (*UI_write_string_lib)(struct AmiSSLIFace *Self, UI * ui, UI_STRING * uis);
	DEPRECATED APICALL void (*HMAC_CTX_set_flags)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, unsigned long flags);
	APICALL int (*X509_check_ca)(struct AmiSSLIFace *Self, X509 * x);
	APICALL PROXY_POLICY * (*PROXY_POLICY_new)(struct AmiSSLIFace *Self);
	APICALL void (*PROXY_POLICY_free)(struct AmiSSLIFace *Self, PROXY_POLICY * a);
	APICALL PROXY_POLICY * (*d2i_PROXY_POLICY)(struct AmiSSLIFace *Self, PROXY_POLICY ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PROXY_POLICY)(struct AmiSSLIFace *Self, const PROXY_POLICY * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PROXY_POLICY_it)(struct AmiSSLIFace *Self);
	APICALL PROXY_CERT_INFO_EXTENSION * (*PROXY_CERT_INFO_EXTENSION_new)(struct AmiSSLIFace *Self);
	APICALL void (*PROXY_CERT_INFO_EXTENSION_free)(struct AmiSSLIFace *Self, PROXY_CERT_INFO_EXTENSION * a);
	APICALL PROXY_CERT_INFO_EXTENSION * (*d2i_PROXY_CERT_INFO_EXTENSION)(struct AmiSSLIFace *Self, PROXY_CERT_INFO_EXTENSION ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PROXY_CERT_INFO_EXTENSION)(struct AmiSSLIFace *Self, const PROXY_CERT_INFO_EXTENSION * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*PROXY_CERT_INFO_EXTENSION_it)(struct AmiSSLIFace *Self);
	APTR FIPS_mode_UNIMPLEMENTED;
	APTR private_RC4_set_key_UNIMPLEMENTED;
	APICALL int (*BN_mod_exp_mont_consttime)(struct AmiSSLIFace *Self, BIGNUM * rr, const BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx, BN_MONT_CTX * in_mont);
	APICALL BN_MONT_CTX * (*BN_MONT_CTX_set_locked)(struct AmiSSLIFace *Self, BN_MONT_CTX ** pmont, CRYPTO_RWLOCK * lock, const BIGNUM * mod, BN_CTX * ctx);
	DEPRECATED APICALL int (*PKCS1_MGF1)(struct AmiSSLIFace *Self, unsigned char * mask, long len, const unsigned char * seed, long seedlen, const EVP_MD * dgst);
	DEPRECATED APICALL int (*RSA_padding_add_X931)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * from, int flen);
	DEPRECATED APICALL int (*RSA_padding_check_X931)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * from, int flen, int num);
	DEPRECATED APICALL int (*RSA_X931_hash_id)(struct AmiSSLIFace *Self, int nid);
	DEPRECATED APICALL int (*RSA_verify_PKCS1_PSS)(struct AmiSSLIFace *Self, RSA * rsa, const unsigned char * mHash, const EVP_MD * Hash, const unsigned char * EM, int sLen);
	DEPRECATED APICALL int (*RSA_padding_add_PKCS1_PSS)(struct AmiSSLIFace *Self, RSA * rsa, unsigned char * EM, const unsigned char * mHash, const EVP_MD * Hash, int sLen);
	APICALL const EVP_MD * (*EVP_sha224)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_sha256)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_sha384)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_sha512)(struct AmiSSLIFace *Self);
	APICALL int (*BN_GF2m_add)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
	APICALL int (*BN_GF2m_arr2poly)(struct AmiSSLIFace *Self, const int * p, BIGNUM * a);
	APICALL int (*BN_GF2m_mod)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p);
	APICALL int (*BN_GF2m_mod_mul)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * p, BN_CTX * ctx);
	APICALL int (*BN_GF2m_mod_sqr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx);
	APICALL int (*BN_GF2m_mod_inv)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * b, const BIGNUM * p, BN_CTX * ctx);
	APICALL int (*BN_GF2m_mod_div)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * p, BN_CTX * ctx);
	APICALL int (*BN_GF2m_mod_exp)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * p, BN_CTX * ctx);
	APICALL int (*BN_GF2m_mod_sqrt)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx);
	APICALL int (*BN_GF2m_mod_solve_quad)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx);
	APICALL int (*BN_generate_prime_ex)(struct AmiSSLIFace *Self, BIGNUM * ret, int bits, int safe, const BIGNUM * add, const BIGNUM * rem, BN_GENCB * cb);
	DEPRECATED APICALL int (*BN_is_prime_ex)(struct AmiSSLIFace *Self, const BIGNUM * p, int nchecks, BN_CTX * ctx, BN_GENCB * cb);
	APICALL void (*BN_set_negative)(struct AmiSSLIFace *Self, BIGNUM * b, int n);
	APICALL int (*EC_GROUP_get_degree)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	DEPRECATED APICALL const EC_METHOD * (*EC_GF2m_simple_method)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*EC_GROUP_set_curve_GF2m)(struct AmiSSLIFace *Self, EC_GROUP * group, const BIGNUM * p, const BIGNUM * a, const BIGNUM * b, BN_CTX * ctx);
	DEPRECATED APICALL int (*EC_GROUP_get_curve_GF2m)(struct AmiSSLIFace *Self, const EC_GROUP * group, BIGNUM * p, BIGNUM * a, BIGNUM * b, BN_CTX * ctx);
	DEPRECATED APICALL int (*EC_POINT_set_affine_coordinates_GF2m)(struct AmiSSLIFace *Self, const EC_GROUP * group, EC_POINT * point, const BIGNUM * x, const BIGNUM * y, BN_CTX * ctx);
	DEPRECATED APICALL int (*EC_POINT_get_affine_coordinates_GF2m)(struct AmiSSLIFace *Self, const EC_GROUP * group, const EC_POINT * point, BIGNUM * x, BIGNUM * y, BN_CTX * ctx);
	APICALL size_t (*EC_get_builtin_curves)(struct AmiSSLIFace *Self, EC_builtin_curve * r, size_t nitems);
	APICALL EC_GROUP * (*EC_GROUP_new_by_curve_name)(struct AmiSSLIFace *Self, int nid);
	APICALL int (*EC_GROUP_check)(struct AmiSSLIFace *Self, const EC_GROUP * group, BN_CTX * ctx);
	APTR ENGINE_cleanup_UNIMPLEMENTED;
	DEPRECATED APICALL int (*DSA_generate_parameters_ex)(struct AmiSSLIFace *Self, DSA * dsa, int bits, const unsigned char * seed, int seed_len, int * counter_ret, unsigned long * h_ret, BN_GENCB * cb);
	APTR EVP_ecdsa_UNIMPLEMENTED;
	DEPRECATED APICALL EC_KEY * (*EC_KEY_new_by_curve_name)(struct AmiSSLIFace *Self, int nid);
	DEPRECATED APICALL int (*EC_KEY_generate_key)(struct AmiSSLIFace *Self, EC_KEY * key);
	DEPRECATED APICALL void (*EC_KEY_free)(struct AmiSSLIFace *Self, EC_KEY * key);
	APICALL void (*ECDSA_SIG_free)(struct AmiSSLIFace *Self, ECDSA_SIG * a);
	DEPRECATED APICALL ECDSA_SIG * (*ECDSA_do_sign)(struct AmiSSLIFace *Self, const unsigned char * dgst, int dlen, EC_KEY * eckey);
	DEPRECATED APICALL int (*ECDSA_do_verify)(struct AmiSSLIFace *Self, const unsigned char * dgst, int dgst_len, const ECDSA_SIG * sig, EC_KEY * eckey);
	DEPRECATED APICALL EC_KEY * (*EC_KEY_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*EC_KEY_set_group)(struct AmiSSLIFace *Self, EC_KEY * eckey, const EC_GROUP * group);
	DEPRECATED APICALL const EC_GROUP * (*EC_KEY_get0_group)(struct AmiSSLIFace *Self, const EC_KEY * key);
	DEPRECATED APICALL int (*EC_KEY_check_key)(struct AmiSSLIFace *Self, const EC_KEY * eckey);
	DEPRECATED APICALL int (*ECDSA_size)(struct AmiSSLIFace *Self, const EC_KEY * eckey);
	DEPRECATED APICALL int (*ECDSA_sign)(struct AmiSSLIFace *Self, int type, const unsigned char * dgst, int dgstlen, unsigned char * sig, unsigned int * siglen, EC_KEY * eckey);
	DEPRECATED APICALL int (*ECDSA_verify)(struct AmiSSLIFace *Self, int type, const unsigned char * dgst, int dgstlen, const unsigned char * sig, int siglen, EC_KEY * eckey);
	APICALL ECDSA_SIG * (*d2i_ECDSA_SIG)(struct AmiSSLIFace *Self, ECDSA_SIG ** v, const unsigned char ** pp, long len);
	APICALL int (*i2d_ECDSA_SIG)(struct AmiSSLIFace *Self, const ECDSA_SIG * a, unsigned char ** pp);
	DEPRECATED APICALL int (*DH_generate_parameters_ex)(struct AmiSSLIFace *Self, DH * ret, int prime_len, int generator, BN_GENCB * cb);
	DEPRECATED APICALL int (*EC_METHOD_get_field_type)(struct AmiSSLIFace *Self, const EC_METHOD * meth);
	DEPRECATED APICALL const EC_POINT * (*EC_KEY_get0_public_key)(struct AmiSSLIFace *Self, const EC_KEY * eckey);
	DEPRECATED APICALL int (*ECDH_compute_key)(struct AmiSSLIFace *Self, void * out, size_t outlen, const EC_POINT * pub_key, const EC_KEY * eckey, void *(*KDF)(const void *, size_t, void *, size_t *));
	DEPRECATED APICALL const BIGNUM * (*EC_KEY_get0_private_key)(struct AmiSSLIFace *Self, const EC_KEY * eckey);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_first)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const char * (*ENGINE_get_id)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL const char * (*ENGINE_get_name)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_next)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_free)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL ENGINE * (*ENGINE_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_set_id)(struct AmiSSLIFace *Self, ENGINE * e, const char * id);
	DEPRECATED APICALL int (*ENGINE_set_name)(struct AmiSSLIFace *Self, ENGINE * e, const char * name);
	DEPRECATED APICALL int (*ENGINE_add)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_remove)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL void (*ENGINE_load_builtin_engines)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*ENGINE_register_all_ciphers)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_CIPHER_get_nid)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL int (*EVP_MD_get_type)(struct AmiSSLIFace *Self, const EVP_MD * md);
	DEPRECATED APICALL void (*ENGINE_register_all_digests)(struct AmiSSLIFace *Self);
	APICALL int (*BIO_test_flags)(struct AmiSSLIFace *Self, const BIO * b, int flags);
	APICALL STACK_OF(SSL_COMP) * (*SSL_COMP_get_compression_methods)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*RSA_generate_key_ex)(struct AmiSSLIFace *Self, RSA * rsa, int bits, BIGNUM * e, BN_GENCB * cb);
	APICALL void (*X509_VERIFY_PARAM_free)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param);
	APICALL int (*X509_STORE_set1_param)(struct AmiSSLIFace *Self, X509_STORE * xs, const X509_VERIFY_PARAM * pm);
	APICALL ASN1_TYPE * (*ASN1_generate_nconf)(struct AmiSSLIFace *Self, const char * str, CONF * nconf);
	DEPRECATED APICALL EC_GROUP * (*PEM_read_bio_ECPKParameters)(struct AmiSSLIFace *Self, BIO * bp, EC_GROUP ** x, pem_password_cb * cb, void * u);
	DEPRECATED APICALL EC_KEY * (*EC_KEY_dup)(struct AmiSSLIFace *Self, const EC_KEY * ec_key);
	DEPRECATED APICALL void (*BIO_set_callback)(struct AmiSSLIFace *Self, BIO * b, BIO_callback_fn callback);
	APICALL void (*BIO_set_callback_arg)(struct AmiSSLIFace *Self, BIO * b, char * arg);
	APICALL void (*EVP_MD_CTX_set_flags)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, int flags);
	APICALL void (*BIO_set_flags)(struct AmiSSLIFace *Self, BIO * b, int flags);
	APICALL void (*EVP_CIPHER_CTX_set_flags)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, int flags);
	APICALL int (*EVP_CIPHER_get_iv_length)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL int (*X509_REQ_check_private_key)(struct AmiSSLIFace *Self, const X509_REQ * req, EVP_PKEY * pkey);
	DEPRECATED APICALL EC_KEY * (*PEM_read_bio_EC_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, EC_KEY ** x, pem_password_cb * cb, void * u);
	DEPRECATED APICALL EC_KEY * (*PEM_read_bio_ECPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, EC_KEY ** x, pem_password_cb * cb, void * u);
	DEPRECATED APICALL int (*PEM_write_bio_EC_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, const EC_KEY * x);
	DEPRECATED APICALL EC_KEY * (*d2i_EC_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, EC_KEY ** eckey);
	DEPRECATED APICALL void (*EC_KEY_set_asn1_flag)(struct AmiSSLIFace *Self, EC_KEY * key, int flag);
	DEPRECATED APICALL void (*EC_KEY_set_conv_form)(struct AmiSSLIFace *Self, EC_KEY * key, point_conversion_form_t cform);
	DEPRECATED APICALL int (*EC_KEY_print)(struct AmiSSLIFace *Self, BIO * bp, const EC_KEY * x, int off);
	DEPRECATED APICALL EC_KEY * (*d2i_ECPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, EC_KEY ** eckey);
	DEPRECATED APICALL int (*i2d_EC_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, const EC_KEY * eckey);
	DEPRECATED APICALL int (*PEM_write_bio_ECPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, const EC_KEY * x, const EVP_CIPHER * enc, const unsigned char * kstr, int klen, pem_password_cb * cb, void * u);
	DEPRECATED APICALL int (*PEM_write_bio_ECPKParameters)(struct AmiSSLIFace *Self, BIO * bp, const EC_GROUP * x);
	DEPRECATED APICALL int (*i2d_ECPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, const EC_KEY * eckey);
	APICALL int (*i2d_ECPKParameters)(struct AmiSSLIFace *Self, const EC_GROUP * a, unsigned char ** out);
	APICALL void (*EC_GROUP_set_asn1_flag)(struct AmiSSLIFace *Self, EC_GROUP * group, int flag);
	APICALL void (*EC_GROUP_set_point_conversion_form)(struct AmiSSLIFace *Self, EC_GROUP * group, point_conversion_form_t form);
	APICALL point_conversion_form_t (*EC_GROUP_get_point_conversion_form)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	DEPRECATED APICALL int (*ECPKParameters_print)(struct AmiSSLIFace *Self, BIO * bp, const EC_GROUP * x, int off);
	APICALL size_t (*EC_GROUP_set_seed)(struct AmiSSLIFace *Self, EC_GROUP * group, const unsigned char * p, size_t len);
	APICALL EC_GROUP * (*d2i_ECPKParameters)(struct AmiSSLIFace *Self, EC_GROUP ** a, const unsigned char ** in, long len);
	DEPRECATED APICALL BIGNUM * (*EC_POINT_point2bn)(struct AmiSSLIFace *Self, const EC_GROUP * group, const EC_POINT * point, point_conversion_form_t form, BIGNUM * ret, BN_CTX * ctx);
	APICALL STACK_OF(OPENSSL_STRING) * (*X509_get1_ocsp)(struct AmiSSLIFace *Self, X509 * x);
	APICALL const char * (*SSL_get_servername)(struct AmiSSLIFace *Self, const SSL * s, const int type);
	APICALL SSL_CTX * (*SSL_set_SSL_CTX)(struct AmiSSLIFace *Self, SSL * ssl, SSL_CTX * ctx);
	APICALL void (*SSL_CTX_set_cookie_generate_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*app_gen_cookie_cb)(SSL *ssl, unsigned char *cookie, unsigned int *cookie_len));
	APICALL void (*SSL_CTX_set_cookie_verify_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*app_verify_cookie_cb)(SSL *, const unsigned char *, unsigned int));
	APICALL void (*SSL_CTX_set_info_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, void (*cb)(const SSL *ssl, int type, int val));
	APTR DTLSv1_server_method_UNIMPLEMENTED;
	APICALL BIO * (*BIO_new_dgram)(struct AmiSSLIFace *Self, int fd, int close_flag);
	APICALL int (*SSL_get_servername_type)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL const COMP_METHOD * (*SSL_get_current_compression)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL const COMP_METHOD * (*SSL_get_current_expansion)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL const char * (*SSL_COMP_get_name)(struct AmiSSLIFace *Self, const COMP_METHOD * comp);
	DEPRECATED APICALL ENGINE * (*ENGINE_by_id)(struct AmiSSLIFace *Self, const char * id);
	APICALL int (*SSL_CTX_set_client_cert_engine)(struct AmiSSLIFace *Self, SSL_CTX * ctx, ENGINE * e);
	APTR DTLSv1_client_method_UNIMPLEMENTED;
	APTR DTLSv1_method_UNIMPLEMENTED;
	APICALL unsigned char * (*SHA256)(struct AmiSSLIFace *Self, const unsigned char * d, size_t n, unsigned char * md);
	APICALL unsigned char * (*SHA512)(struct AmiSSLIFace *Self, const unsigned char * d, size_t n, unsigned char * md);
	DEPRECATED APICALL void (*AES_ige_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const AES_KEY * key, unsigned char * ivec, const int enc);
	DEPRECATED APICALL int (*EC_KEY_precompute_mult)(struct AmiSSLIFace *Self, EC_KEY * key, BN_CTX * ctx);
	DEPRECATED APICALL EVP_PKEY * (*ENGINE_load_private_key)(struct AmiSSLIFace *Self, ENGINE * e, const char * key_id, UI_METHOD * ui_method, void * callback_data);
	DEPRECATED APICALL EVP_PKEY * (*ENGINE_load_public_key)(struct AmiSSLIFace *Self, ENGINE * e, const char * key_id, UI_METHOD * ui_method, void * callback_data);
	DEPRECATED APICALL int (*ENGINE_ctrl_cmd)(struct AmiSSLIFace *Self, ENGINE * e, const char * cmd_name, long i, void * p, void (*f)(void), int cmd_optional);
	DEPRECATED APICALL int (*ENGINE_set_default)(struct AmiSSLIFace *Self, ENGINE * e, unsigned int flags);
	DEPRECATED APICALL int (*ENGINE_ctrl)(struct AmiSSLIFace *Self, ENGINE * e, int cmd, long i, void * p, void (*f)(void));
	DEPRECATED APICALL int (*ENGINE_register_all_complete)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_ctrl_cmd_string)(struct AmiSSLIFace *Self, ENGINE * e, const char * cmd_name, const char * arg, int cmd_optional);
	APICALL int (*X509_VERIFY_PARAM_add0_policy)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, ASN1_OBJECT * policy);
	APICALL int (*X509_VERIFY_PARAM_set_purpose)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, int purpose);
	APICALL int (*X509_VERIFY_PARAM_set_flags)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, unsigned long flags);
	APICALL X509_VERIFY_PARAM * (*X509_VERIFY_PARAM_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_POLICY_NODE_print)(struct AmiSSLIFace *Self, BIO * out, X509_POLICY_NODE * node, int indent);
	APICALL X509_POLICY_TREE * (*X509_STORE_CTX_get0_policy_tree)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL int (*X509_STORE_CTX_get_explicit_policy)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL STACK_OF(X509_POLICY_NODE) * (*X509_policy_tree_get0_policies)(struct AmiSSLIFace *Self, const X509_POLICY_TREE * tree);
	APICALL STACK_OF(X509_POLICY_NODE) * (*X509_policy_tree_get0_user_policies)(struct AmiSSLIFace *Self, const X509_POLICY_TREE * tree);
	APICALL char * (*BIO_get_callback_arg)(struct AmiSSLIFace *Self, const BIO * b);
	APICALL int (*EVP_PKEY_add1_attr_by_NID)(struct AmiSSLIFace *Self, EVP_PKEY * key, int nid, int type, const unsigned char * bytes, int len);
	DEPRECATED APICALL const RSA_METHOD * (*ENGINE_get_RSA)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL const DSA_METHOD * (*ENGINE_get_DSA)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL const DH_METHOD * (*ENGINE_get_DH)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL const RAND_METHOD * (*ENGINE_get_RAND)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL ENGINE_CIPHERS_PTR (*ENGINE_get_ciphers)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL ENGINE_DIGESTS_PTR (*ENGINE_get_digests)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_init)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_finish)(struct AmiSSLIFace *Self, ENGINE * e);
	APICALL OSSL_HTTP_REQ_CTX * (*OCSP_sendreq_new)(struct AmiSSLIFace *Self, BIO * io, const char * path, const OCSP_REQUEST * req, int maxline);
	APICALL int (*OBSOLETE_OCSP_sendreq_nbio)(struct AmiSSLIFace *Self, OCSP_RESPONSE ** presp, OSSL_HTTP_REQ_CTX * rctx);
	APICALL void (*OSSL_HTTP_REQ_CTX_free)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx);
	APICALL int (*SSL_CTX_use_psk_identity_hint)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * identity_hint);
	APICALL void (*SSL_CTX_set_psk_client_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_psk_client_cb_func cb);
	APICALL const char * (*SSL_get_psk_identity_hint)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL void (*SSL_set_psk_server_callback)(struct AmiSSLIFace *Self, SSL * ssl, SSL_psk_server_cb_func cb);
	APICALL int (*SSL_use_psk_identity_hint)(struct AmiSSLIFace *Self, SSL * s, const char * identity_hint);
	APICALL void (*SSL_set_psk_client_callback)(struct AmiSSLIFace *Self, SSL * ssl, SSL_psk_client_cb_func cb);
	APICALL void (*SSL_CTX_set_psk_server_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_psk_server_cb_func cb);
	APICALL const char * (*SSL_get_psk_identity)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_set_session_ticket_ext)(struct AmiSSLIFace *Self, SSL * s, void * ext_data, int ext_len);
	APICALL int (*SSL_set_session_secret_cb)(struct AmiSSLIFace *Self, SSL * s, int (*tls_session_secret_cb)(SSL *, void *, int *, STACK_OF(SSL_CIPHER) *, const SSL_CIPHER **, void *), void * arg);
	APICALL int (*SSL_set_session_ticket_ext_cb)(struct AmiSSLIFace *Self, SSL * s, tls_session_ticket_ext_cb_fn cb, void * arg);
	APICALL int (*SSL_set1_param)(struct AmiSSLIFace *Self, SSL * ssl, X509_VERIFY_PARAM * vpm);
	APICALL int (*SSL_CTX_set1_param)(struct AmiSSLIFace *Self, SSL_CTX * ctx, X509_VERIFY_PARAM * vpm);
	APICALL int (*SSL_renegotiate_abbreviated)(struct AmiSSLIFace *Self, SSL * s);
	APTR TLSv1_1_method_UNIMPLEMENTED;
	APTR TLSv1_1_client_method_UNIMPLEMENTED;
	APTR TLSv1_1_server_method_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SSL_CTX_set_srp_client_pwd_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, char * (*cb)(SSL *, void *));
	DEPRECATED APICALL BIGNUM * (*SSL_get_srp_g)(struct AmiSSLIFace *Self, SSL * s);
	DEPRECATED APICALL int (*SSL_CTX_set_srp_username_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*cb)(SSL *, int *, void *));
	DEPRECATED APICALL char * (*SSL_get_srp_userinfo)(struct AmiSSLIFace *Self, SSL * s);
	DEPRECATED APICALL int (*SSL_set_srp_server_param)(struct AmiSSLIFace *Self, SSL * s, const BIGNUM * N, const BIGNUM * g, BIGNUM * sa, BIGNUM * v, char * info);
	DEPRECATED APICALL int (*SSL_set_srp_server_param_pw)(struct AmiSSLIFace *Self, SSL * s, const char * user, const char * pass, const char * grp);
	DEPRECATED APICALL BIGNUM * (*SSL_get_srp_N)(struct AmiSSLIFace *Self, SSL * s);
	DEPRECATED APICALL char * (*SSL_get_srp_username)(struct AmiSSLIFace *Self, SSL * s);
	DEPRECATED APICALL int (*SSL_CTX_set_srp_password)(struct AmiSSLIFace *Self, SSL_CTX * ctx, char * password);
	DEPRECATED APICALL int (*SSL_CTX_set_srp_strength)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int strength);
	DEPRECATED APICALL int (*SSL_CTX_set_srp_verify_param_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*cb)(SSL *, void *));
	DEPRECATED APICALL int (*SSL_CTX_set_srp_cb_arg)(struct AmiSSLIFace *Self, SSL_CTX * ctx, void * arg);
	DEPRECATED APICALL int (*SSL_CTX_set_srp_username)(struct AmiSSLIFace *Self, SSL_CTX * ctx, char * name);
	DEPRECATED APICALL int (*SSL_CTX_SRP_CTX_init)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	DEPRECATED APICALL int (*SRP_Calc_A_param)(struct AmiSSLIFace *Self, SSL * s);
	APTR SRP_generate_server_master_secret_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SSL_CTX_SRP_CTX_free)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APTR SRP_generate_client_master_secret_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SSL_srp_server_param_with_username)(struct AmiSSLIFace *Self, SSL * s, int * ad);
	DEPRECATED APICALL int (*SSL_SRP_CTX_free)(struct AmiSSLIFace *Self, SSL * ctx);
	DEPRECATED APICALL void (*SSL_set_debug)(struct AmiSSLIFace *Self, SSL * s, int debug);
	APICALL X509 * (*SSL_SESSION_get0_peer)(struct AmiSSLIFace *Self, SSL_SESSION * s);
	APTR TLSv1_2_client_method_UNIMPLEMENTED;
	APICALL int (*SSL_SESSION_set1_id_context)(struct AmiSSLIFace *Self, SSL_SESSION * s, const unsigned char * sid_ctx, unsigned int sid_ctx_len);
	APTR TLSv1_2_server_method_UNIMPLEMENTED;
	APICALL int (*OBSOLETE_SSL_cache_hit)(struct AmiSSLIFace *Self, SSL * s);
	APTR SSL_set_state_UNIMPLEMENTED;
	APICALL uint32_t (*SSL_CIPHER_get_id)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
	APTR TLSv1_2_method_UNIMPLEMENTED;
	APICALL int (*SSL_export_keying_material)(struct AmiSSLIFace *Self, SSL * s, unsigned char * out, size_t olen, const char * label, size_t llen, const unsigned char * context, size_t contextlen, int use_context);
	APICALL int (*SSL_set_tlsext_use_srtp)(struct AmiSSLIFace *Self, SSL * ssl, const char * profiles);
	APICALL void (*SSL_CTX_set_next_protos_advertised_cb)(struct AmiSSLIFace *Self, SSL_CTX * s, SSL_CTX_npn_advertised_cb_func cb, void * arg);
	APICALL void (*SSL_get0_next_proto_negotiated)(struct AmiSSLIFace *Self, const SSL * s, const unsigned char ** data, unsigned * len);
	APICALL SRTP_PROTECTION_PROFILE * (*SSL_get_selected_srtp_profile)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_CTX_set_tlsext_use_srtp)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * profiles);
	APICALL int (*SSL_select_next_proto)(struct AmiSSLIFace *Self, unsigned char ** out, unsigned char * outlen, const unsigned char * in, unsigned int inlen, const unsigned char * client, unsigned int client_len);
	APICALL STACK_OF(SRTP_PROTECTION_PROFILE) * (*SSL_get_srtp_profiles)(struct AmiSSLIFace *Self, SSL * s);
	APICALL void (*SSL_CTX_set_next_proto_select_cb)(struct AmiSSLIFace *Self, SSL_CTX * s, SSL_CTX_npn_select_cb_func cb, void * arg);
	APICALL unsigned int (*SSL_SESSION_get_compress_id)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
	APTR SSL_CTX_set_tmp_ecdh_callback_UNIMPLEMENTED;
	APTR SSL_set_tmp_ecdh_callback_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SSL_SRP_CTX_init)(struct AmiSSLIFace *Self, SSL * s);
	APTR ASN1_d2i_fp_UNIMPLEMENTED;
	APTR ASN1_i2d_fp_UNIMPLEMENTED;
	APTR BIO_new_fp_UNIMPLEMENTED;
	APTR BN_print_fp_UNIMPLEMENTED;
	APTR CRYPTO_mem_leaks_fp_UNIMPLEMENTED;
	APTR DHparams_print_fp_UNIMPLEMENTED;
	APTR DSA_print_fp_UNIMPLEMENTED;
	APTR DSAparams_print_fp_UNIMPLEMENTED;
	APTR ERR_print_errors_fp_UNIMPLEMENTED;
	APTR PEM_read_DHparams_UNIMPLEMENTED;
	APTR PEM_read_DSAPrivateKey_UNIMPLEMENTED;
	APTR PEM_read_DSAparams_UNIMPLEMENTED;
	APTR PEM_write_DHparams_UNIMPLEMENTED;
	APTR PEM_write_DSAPrivateKey_UNIMPLEMENTED;
	APTR PEM_write_DSAparams_UNIMPLEMENTED;
	APTR RSA_print_fp_UNIMPLEMENTED;
	APTR X509_REQ_print_fp_UNIMPLEMENTED;
	APTR X509_print_fp_UNIMPLEMENTED;
	APTR d2i_DSAPrivateKey_fp_UNIMPLEMENTED;
	APTR d2i_PKCS7_fp_UNIMPLEMENTED;
	APTR d2i_RSAPrivateKey_fp_UNIMPLEMENTED;
	APTR d2i_X509_CRL_fp_UNIMPLEMENTED;
	APTR d2i_X509_REQ_fp_UNIMPLEMENTED;
	APTR d2i_X509_fp_UNIMPLEMENTED;
	APTR i2d_DSAPrivateKey_fp_UNIMPLEMENTED;
	APTR i2d_PKCS7_fp_UNIMPLEMENTED;
	APTR i2d_RSAPrivateKey_fp_UNIMPLEMENTED;
	APTR i2d_X509_CRL_fp_UNIMPLEMENTED;
	APTR i2d_X509_REQ_fp_UNIMPLEMENTED;
	APTR i2d_X509_fp_UNIMPLEMENTED;
	APTR OPENSSL_LH_node_stats_UNIMPLEMENTED;
	APTR OPENSSL_LH_node_usage_stats_UNIMPLEMENTED;
	APTR OPENSSL_LH_stats_UNIMPLEMENTED;
	APTR d2i_RSAPublicKey_fp_UNIMPLEMENTED;
	APTR i2d_RSAPublicKey_fp_UNIMPLEMENTED;
	APTR X509_CRL_print_fp_UNIMPLEMENTED;
	APTR i2d_PKCS8_fp_UNIMPLEMENTED;
	APTR d2i_PKCS8_PRIV_KEY_INFO_fp_UNIMPLEMENTED;
	APTR d2i_PKCS8_fp_UNIMPLEMENTED;
	APTR i2d_PKCS8_PRIV_KEY_INFO_fp_UNIMPLEMENTED;
	APTR CONF_load_fp_UNIMPLEMENTED;
	APTR d2i_RSA_PUBKEY_fp_UNIMPLEMENTED;
	APTR i2d_DSA_PUBKEY_fp_UNIMPLEMENTED;
	APTR PEM_read_DSA_PUBKEY_UNIMPLEMENTED;
	APTR d2i_DSA_PUBKEY_fp_UNIMPLEMENTED;
	APTR PEM_write_DSA_PUBKEY_UNIMPLEMENTED;
	APTR i2d_RSA_PUBKEY_fp_UNIMPLEMENTED;
	APTR i2d_PKCS8PrivateKeyInfo_fp_UNIMPLEMENTED;
	APTR i2d_PrivateKey_fp_UNIMPLEMENTED;
	APTR d2i_PrivateKey_fp_UNIMPLEMENTED;
	APTR NCONF_load_fp_UNIMPLEMENTED;
	APTR X509_NAME_print_ex_fp_UNIMPLEMENTED;
	APTR ASN1_STRING_print_ex_fp_UNIMPLEMENTED;
	APTR i2d_PUBKEY_fp_UNIMPLEMENTED;
	APTR d2i_PUBKEY_fp_UNIMPLEMENTED;
	DEPRECATED APICALL int (*ERR_load_ENGINE_strings)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_set_DSA)(struct AmiSSLIFace *Self, ENGINE * e, const DSA_METHOD * dsa_meth);
	DEPRECATED APICALL ENGINE_GEN_INT_FUNC_PTR (*ENGINE_get_finish_function)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_default_RSA)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_set_DH)(struct AmiSSLIFace *Self, ENGINE * e, const DH_METHOD * dh_meth);
	DEPRECATED APICALL ENGINE_GEN_INT_FUNC_PTR (*ENGINE_get_init_function)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_set_init_function)(struct AmiSSLIFace *Self, ENGINE * e, ENGINE_GEN_INT_FUNC_PTR init_f);
	DEPRECATED APICALL int (*ENGINE_set_default_DSA)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_last)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_prev)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_default_DH)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_set_finish_function)(struct AmiSSLIFace *Self, ENGINE * e, ENGINE_GEN_INT_FUNC_PTR finish_f);
	DEPRECATED APICALL int (*ENGINE_set_RSA)(struct AmiSSLIFace *Self, ENGINE * e, const RSA_METHOD * rsa_meth);
	DEPRECATED APICALL int (*ENGINE_set_default_RAND)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_default_DSA)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_set_default_RSA)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_default_RAND)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_set_RAND)(struct AmiSSLIFace *Self, ENGINE * e, const RAND_METHOD * rand_meth);
	DEPRECATED APICALL int (*ENGINE_set_default_DH)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL ENGINE_CTRL_FUNC_PTR (*ENGINE_get_ctrl_function)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_set_ctrl_function)(struct AmiSSLIFace *Self, ENGINE * e, ENGINE_CTRL_FUNC_PTR ctrl_f);
	DEPRECATED APICALL void (*ENGINE_unregister_ciphers)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL void (*ENGINE_unregister_RSA)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL void (*ENGINE_register_all_RAND)(struct AmiSSLIFace *Self);
	APICALL void (*OBSOLETE_ENGINE_load_dynamic)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_digest_engine)(struct AmiSSLIFace *Self, int nid);
	DEPRECATED APICALL int (*ENGINE_register_DH)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_register_RAND)(struct AmiSSLIFace *Self, ENGINE * e);
	APICALL void (*OBSOLETE_ENGINE_load_cryptodev)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_register_ciphers)(struct AmiSSLIFace *Self, ENGINE * e);
	APTR ENGINE_load_ubsec_UNIMPLEMENTED;
	APICALL void (*OBSOLETE_ENGINE_load_openssl)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const ENGINE_CMD_DEFN * (*ENGINE_get_cmd_defns)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_set_load_privkey_function)(struct AmiSSLIFace *Self, ENGINE * e, ENGINE_LOAD_KEY_PTR loadpriv_f);
	DEPRECATED APICALL int (*ENGINE_set_default_digests)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_register_RSA)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL void (*ENGINE_unregister_DSA)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_set_ciphers)(struct AmiSSLIFace *Self, ENGINE * e, ENGINE_CIPHERS_PTR f);
	DEPRECATED APICALL int (*RAND_set_rand_engine)(struct AmiSSLIFace *Self, ENGINE * engine);
	DEPRECATED APICALL const EVP_MD * (*ENGINE_get_digest)(struct AmiSSLIFace *Self, ENGINE * e, int nid);
	DEPRECATED APICALL const EVP_CIPHER * (*ENGINE_get_cipher)(struct AmiSSLIFace *Self, ENGINE * e, int nid);
	DEPRECATED APICALL int (*ENGINE_cmd_is_executable)(struct AmiSSLIFace *Self, ENGINE * e, int cmd);
	DEPRECATED APICALL int (*ENGINE_register_DSA)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_set_load_pubkey_function)(struct AmiSSLIFace *Self, ENGINE * e, ENGINE_LOAD_KEY_PTR loadpub_f);
	DEPRECATED APICALL ENGINE_LOAD_KEY_PTR (*ENGINE_get_load_pubkey_function)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL void (*ENGINE_register_all_RSA)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*ENGINE_unregister_digests)(struct AmiSSLIFace *Self, ENGINE * e);
	APICALL int (*OBSOLETE_ENGINE_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * new_func, CRYPTO_EX_dup * dep_func, CRYPTO_EX_free * free_func);
	DEPRECATED APICALL void * (*ENGINE_get_ex_data)(struct AmiSSLIFace *Self, const ENGINE * e, int idx);
	APTR ASN1_item_d2i_fp_UNIMPLEMENTED;
	DEPRECATED APICALL int (*ENGINE_set_cmd_defns)(struct AmiSSLIFace *Self, ENGINE * e, const ENGINE_CMD_DEFN * defns);
	DEPRECATED APICALL int (*ENGINE_register_digests)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL void (*ENGINE_register_all_DH)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_get_flags)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL void (*ENGINE_unregister_DH)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL void (*ENGINE_register_all_DSA)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_set_digests)(struct AmiSSLIFace *Self, ENGINE * e, ENGINE_DIGESTS_PTR f);
	DEPRECATED APICALL int (*ENGINE_register_complete)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_set_ex_data)(struct AmiSSLIFace *Self, ENGINE * e, int idx, void * arg);
	DEPRECATED APICALL int (*ENGINE_set_destroy_function)(struct AmiSSLIFace *Self, ENGINE * e, ENGINE_GEN_INT_FUNC_PTR destroy_f);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_cipher_engine)(struct AmiSSLIFace *Self, int nid);
	APTR X509_print_ex_fp_UNIMPLEMENTED;
	APTR ENGINE_load_cswift_UNIMPLEMENTED;
	DEPRECATED APICALL int (*ENGINE_set_default_ciphers)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL void (*ENGINE_unregister_RAND)(struct AmiSSLIFace *Self, ENGINE * e);
	APTR ENGINE_load_nuron_UNIMPLEMENTED;
	DEPRECATED APICALL void (*ENGINE_set_table_flags)(struct AmiSSLIFace *Self, unsigned int flags);
	APTR ENGINE_load_chil_UNIMPLEMENTED;
	DEPRECATED APICALL ENGINE_GEN_INT_FUNC_PTR (*ENGINE_get_destroy_function)(struct AmiSSLIFace *Self, const ENGINE * e);
	APTR ASN1_item_i2d_fp_UNIMPLEMENTED;
	APTR ENGINE_load_atalla_UNIMPLEMENTED;
	DEPRECATED APICALL unsigned int (*ENGINE_get_table_flags)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_set_flags)(struct AmiSSLIFace *Self, ENGINE * e, int flags);
	DEPRECATED APICALL ENGINE_LOAD_KEY_PTR (*ENGINE_get_load_privkey_function)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_set_default_string)(struct AmiSSLIFace *Self, ENGINE * e, const char * def_list);
	DEPRECATED APICALL void (*ENGINE_add_conf_module)(struct AmiSSLIFace *Self);
	APTR ENGINE_load_aep_UNIMPLEMENTED;
	APTR ENGINE_load_sureware_UNIMPLEMENTED;
	APTR ENGINE_load_4758cca_UNIMPLEMENTED;
	DEPRECATED APICALL int (*ENGINE_up_ref)(struct AmiSSLIFace *Self, ENGINE * e);
	APTR ENGINE_set_STORE_UNIMPLEMENTED;
	APTR ENGINE_register_ECDSA_UNIMPLEMENTED;
	APTR BN_BLINDING_get_thread_id_UNIMPLEMENTED;
	APICALL int (*EC_GROUP_get_trinomial_basis)(struct AmiSSLIFace *Self, const EC_GROUP * eg, unsigned int * k);
	APTR ECDH_get_default_method_UNIMPLEMENTED;
	APTR ENGINE_register_ECDH_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SHA512_Update)(struct AmiSSLIFace *Self, SHA512_CTX * c, const void * data, size_t len);
	DEPRECATED APICALL int (*i2d_ECPrivateKey)(struct AmiSSLIFace *Self, const EC_KEY * key, unsigned char ** out);
	APICALL int (*BN_GF2m_mod_exp_arr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const int * p, BN_CTX * ctx);
	APICALL int (*BN_GF2m_mod_mul_arr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const int * p, BN_CTX * ctx);
	DEPRECATED APICALL EC_KEY * (*o2i_ECPublicKey)(struct AmiSSLIFace *Self, EC_KEY ** key, const unsigned char ** in, long len);
	DEPRECATED APICALL EC_KEY * (*EC_KEY_copy)(struct AmiSSLIFace *Self, EC_KEY * dst, const EC_KEY * src);
	APTR BIO_dump_fp_UNIMPLEMENTED;
	APICALL int (*EC_GROUP_check_discriminant)(struct AmiSSLIFace *Self, const EC_GROUP * group, BN_CTX * ctx);
	DEPRECATED APICALL int (*i2o_ECPublicKey)(struct AmiSSLIFace *Self, const EC_KEY * key, unsigned char ** out);
	APICALL EC_GROUP * (*EC_GROUP_new_curve_GF2m)(struct AmiSSLIFace *Self, const BIGNUM * p, const BIGNUM * a, const BIGNUM * b, BN_CTX * ctx);
	APTR ENGINE_unregister_STORE_UNIMPLEMENTED;
	DEPRECATED APICALL struct ec_key_st * (*EVP_PKEY_get1_EC_KEY)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	APTR ENGINE_get_default_ECDH_UNIMPLEMENTED;
	DEPRECATED APICALL point_conversion_form_t (*EC_KEY_get_conv_form)(struct AmiSSLIFace *Self, const EC_KEY * key);
	APICALL void * (*ENGINE_get_static_state)(struct AmiSSLIFace *Self);
	APICALL ECDSA_SIG * (*ECDSA_SIG_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL EC_POINT * (*EC_POINT_bn2point)(struct AmiSSLIFace *Self, const EC_GROUP * g, const BIGNUM * b, EC_POINT * p, BN_CTX * ctx);
	APTR EC_KEY_get_key_method_data_UNIMPLEMENTED;
	DEPRECATED APICALL int (*ECDSA_sign_ex)(struct AmiSSLIFace *Self, int type, const unsigned char * dgst, int dgstlen, unsigned char * sig, unsigned int * siglen, const BIGNUM * kinv, const BIGNUM * rp, EC_KEY * eckey);
	APICALL int (*EC_GROUP_get_pentanomial_basis)(struct AmiSSLIFace *Self, const EC_GROUP * ecgroup, unsigned int * k1, unsigned int * k2, unsigned int * k3);
	DEPRECATED APICALL int (*ECDSA_sign_setup)(struct AmiSSLIFace *Self, EC_KEY * eckey, BN_CTX * ctx, BIGNUM ** kinv, BIGNUM ** rp);
	APICALL int (*BN_GF2m_mod_solve_quad_arr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const int * p, BN_CTX * ctx);
	DEPRECATED APICALL int (*EC_KEY_up_ref)(struct AmiSSLIFace *Self, EC_KEY * key);
	DEPRECATED APICALL EC_KEY * (*d2i_EC_PUBKEY)(struct AmiSSLIFace *Self, EC_KEY ** a, const unsigned char ** pp, long length);
	DEPRECATED APICALL int (*EC_GROUP_have_precompute_mult)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	APTR EC_KEY_print_fp_UNIMPLEMENTED;
	APICALL int (*BN_GF2m_mod_arr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const int * p);
	APTR ECDH_get_ex_data_UNIMPLEMENTED;
	APTR ENGINE_unregister_ECDH_UNIMPLEMENTED;
	APTR ECDH_OpenSSL_UNIMPLEMENTED;
	APICALL EC_POINT * (*EC_POINT_dup)(struct AmiSSLIFace *Self, const EC_POINT * src, const EC_GROUP * group);
	DEPRECATED APICALL int (*EVP_PKEY_set1_EC_KEY)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, struct ec_key_st * key);
	APICALL int (*BN_GF2m_mod_sqrt_arr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const int * p, BN_CTX * ctx);
	APTR ECPKParameters_print_fp_UNIMPLEMENTED;
	DEPRECATED APICALL int (*EC_KEY_set_private_key)(struct AmiSSLIFace *Self, EC_KEY * key, const BIGNUM * prv);
	APICALL int (*BN_GF2m_poly2arr)(struct AmiSSLIFace *Self, const BIGNUM * a, int * p, int max);
	DEPRECATED APICALL int (*i2d_ECParameters)(struct AmiSSLIFace *Self, const EC_KEY * key, unsigned char ** out);
	APTR ENGINE_set_ECDH_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SHA256_Init)(struct AmiSSLIFace *Self, SHA256_CTX * c);
	APTR ECDSA_get_ex_data_UNIMPLEMENTED;
	APICALL unsigned char * (*SHA224)(struct AmiSSLIFace *Self, const unsigned char * d, size_t n, unsigned char * md);
	APTR BIO_dump_indent_fp_UNIMPLEMENTED;
	APICALL size_t (*EC_GROUP_get_seed_len)(struct AmiSSLIFace *Self, const EC_GROUP * ecgroup);
	DEPRECATED APICALL int (*i2d_EC_PUBKEY)(struct AmiSSLIFace *Self, const EC_KEY * a, unsigned char ** pp);
	APTR ECDSA_get_default_method_UNIMPLEMENTED;
	DEPRECATED APICALL const EC_METHOD * (*EC_GFp_nist_method)(struct AmiSSLIFace *Self);
	APICALL void (*OBSOLETE_ENGINE_load_padlock)(struct AmiSSLIFace *Self);
	APICALL void (*EC_GROUP_set_curve_name)(struct AmiSSLIFace *Self, EC_GROUP * group, int nid);
	APICALL int (*BN_GF2m_mod_sqr_arr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const int * p, BN_CTX * ctx);
	APICALL const BIO_METHOD * (*BIO_s_datagram)(struct AmiSSLIFace *Self);
	APTR ENGINE_set_default_ECDSA_UNIMPLEMENTED;
	APTR ECDH_set_default_method_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SHA384_Update)(struct AmiSSLIFace *Self, SHA512_CTX * c, const void * data, size_t len);
	APTR EC_KEY_insert_key_method_data_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SHA224_Final)(struct AmiSSLIFace *Self, unsigned char * md, SHA256_CTX * c);
	DEPRECATED APICALL int (*SHA224_Update)(struct AmiSSLIFace *Self, SHA256_CTX * c, const void * data, size_t len);
	DEPRECATED APICALL EC_KEY * (*d2i_ECPrivateKey)(struct AmiSSLIFace *Self, EC_KEY ** key, const unsigned char ** in, long len);
	APTR ENGINE_register_all_STORE_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SHA512_Final)(struct AmiSSLIFace *Self, unsigned char * md, SHA512_CTX * c);
	APICALL int (*EC_GROUP_get_asn1_flag)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	APTR ECDH_get_ex_new_index_UNIMPLEMENTED;
	APICALL unsigned char * (*EC_GROUP_get0_seed)(struct AmiSSLIFace *Self, const EC_GROUP * x);
	APICALL int (*BN_GF2m_mod_div_arr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const int * p, BN_CTX * ctx);
	APTR ENGINE_set_ECDSA_UNIMPLEMENTED;
	APTR PEM_write_EC_PUBKEY_UNIMPLEMENTED;
	APTR ECDH_set_method_UNIMPLEMENTED;
	APTR ECDH_set_ex_data_UNIMPLEMENTED;
	APTR PEM_read_EC_PUBKEY_UNIMPLEMENTED;
	APTR ECDSA_OpenSSL_UNIMPLEMENTED;
	DEPRECATED APICALL unsigned (*EC_KEY_get_enc_flags)(struct AmiSSLIFace *Self, const EC_KEY * key);
	APTR ECDSA_set_default_method_UNIMPLEMENTED;
	DEPRECATED APICALL int (*EC_POINT_set_compressed_coordinates_GF2m)(struct AmiSSLIFace *Self, const EC_GROUP * group, EC_POINT * p, const BIGNUM * x, int y_bit, BN_CTX * ctx);
	APICALL int (*EC_GROUP_cmp)(struct AmiSSLIFace *Self, const EC_GROUP * a, const EC_GROUP * b, BN_CTX * ctx);
	DEPRECATED APICALL int (*SHA224_Init)(struct AmiSSLIFace *Self, SHA256_CTX * c);
	APTR PEM_read_ECPrivateKey_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SHA512_Init)(struct AmiSSLIFace *Self, SHA512_CTX * c);
	APTR ERR_load_ECDSA_strings_UNIMPLEMENTED;
	APICALL int (*EC_GROUP_get_basis_type)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	APTR PEM_write_ECPKParameters_UNIMPLEMENTED;
	APTR ENGINE_register_all_ECDH_UNIMPLEMENTED;
	APTR i2d_ECPrivateKey_fp_UNIMPLEMENTED;
	APTR ENGINE_register_all_ECDSA_UNIMPLEMENTED;
	APICALL EC_GROUP * (*EC_GROUP_dup)(struct AmiSSLIFace *Self, const EC_GROUP * src);
	APTR ENGINE_get_default_ECDSA_UNIMPLEMENTED;
	DEPRECATED APICALL void (*SHA256_Transform)(struct AmiSSLIFace *Self, SHA256_CTX * c, const unsigned char * data);
	DEPRECATED APICALL void (*EC_KEY_set_enc_flags)(struct AmiSSLIFace *Self, EC_KEY * eckey, unsigned int flags);
	APICALL char * (*EC_POINT_point2hex)(struct AmiSSLIFace *Self, const EC_GROUP * group, const EC_POINT * point, point_conversion_form_t form, BN_CTX * ctx);
	APTR ENGINE_get_STORE_UNIMPLEMENTED;
	DEPRECATED APICALL ECDSA_SIG * (*ECDSA_do_sign_ex)(struct AmiSSLIFace *Self, const unsigned char * dgst, int dgstlen, const BIGNUM * kinv, const BIGNUM * rp, EC_KEY * eckey);
	APTR d2i_ECPrivateKey_fp_UNIMPLEMENTED;
	DEPRECATED APICALL void (*SHA512_Transform)(struct AmiSSLIFace *Self, SHA512_CTX * c, const unsigned char * data);
	APTR PEM_write_ECPrivateKey_UNIMPLEMENTED;
	DEPRECATED APICALL int (*EC_KEY_set_public_key)(struct AmiSSLIFace *Self, EC_KEY * key, const EC_POINT * pub);
	APTR PEM_read_ECPKParameters_UNIMPLEMENTED;
	APTR ENGINE_register_STORE_UNIMPLEMENTED;
	APTR ECParameters_print_fp_UNIMPLEMENTED;
	APICALL int (*EC_GROUP_get_curve_name)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	APTR i2d_EC_PUBKEY_fp_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SHA256_Final)(struct AmiSSLIFace *Self, unsigned char * md, SHA256_CTX * c);
	APTR ENGINE_get_ECDH_UNIMPLEMENTED;
	APTR ENGINE_get_ECDSA_UNIMPLEMENTED;
	APTR ERR_load_ECDH_strings_UNIMPLEMENTED;
	APTR ECDSA_set_method_UNIMPLEMENTED;
	DEPRECATED APICALL EC_KEY * (*d2i_ECParameters)(struct AmiSSLIFace *Self, EC_KEY ** key, const unsigned char ** in, long len);
	DEPRECATED APICALL int (*SHA384_Init)(struct AmiSSLIFace *Self, SHA512_CTX * c);
	APTR ECDSA_set_ex_data_UNIMPLEMENTED;
	DEPRECATED APICALL int (*SHA384_Final)(struct AmiSSLIFace *Self, unsigned char * md, SHA512_CTX * c);
	APTR ECDSA_get_ex_new_index_UNIMPLEMENTED;
	APICALL unsigned char * (*SHA384)(struct AmiSSLIFace *Self, const unsigned char * d, size_t n, unsigned char * md);
	APTR d2i_EC_PUBKEY_fp_UNIMPLEMENTED;
	APTR ENGINE_set_default_ECDH_UNIMPLEMENTED;
	APICALL EC_POINT * (*EC_POINT_hex2point)(struct AmiSSLIFace *Self, const EC_GROUP * group, const char * c, EC_POINT * p, BN_CTX * ctx);
	DEPRECATED APICALL int (*SHA256_Update)(struct AmiSSLIFace *Self, SHA256_CTX * c, const void * data, size_t len);
	APICALL int (*BN_GF2m_mod_inv_arr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * b, const int * p, BN_CTX * ctx);
	APTR ENGINE_unregister_ECDSA_UNIMPLEMENTED;
	APTR BN_BLINDING_set_thread_id_UNIMPLEMENTED;
	DEPRECATED APICALL int (*DH_check_pub_key)(struct AmiSSLIFace *Self, const DH * dh, const BIGNUM * pub_key, int * codes);
	DEPRECATED APICALL void (*Camellia_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const CAMELLIA_KEY * key, unsigned char * ivec, const int enc);
	DEPRECATED APICALL void (*Camellia_cfb128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const CAMELLIA_KEY * key, unsigned char * ivec, int * num, const int enc);
	DEPRECATED APICALL void (*Camellia_cfb1_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const CAMELLIA_KEY * key, unsigned char * ivec, int * num, const int enc);
	DEPRECATED APICALL void (*Camellia_cfb8_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const CAMELLIA_KEY * key, unsigned char * ivec, int * num, const int enc);
	DEPRECATED APICALL void (*Camellia_ctr128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const CAMELLIA_KEY * key, unsigned char * ivec, unsigned char * ecount_buf, unsigned int * num);
	DEPRECATED APICALL void (*Camellia_decrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const CAMELLIA_KEY * key);
	DEPRECATED APICALL void (*Camellia_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const CAMELLIA_KEY * key, const int enc);
	DEPRECATED APICALL void (*Camellia_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const CAMELLIA_KEY * key);
	DEPRECATED APICALL void (*Camellia_ofb128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const CAMELLIA_KEY * key, unsigned char * ivec, int * num);
	DEPRECATED APICALL int (*Camellia_set_key)(struct AmiSSLIFace *Self, const unsigned char * userKey, const int bits, CAMELLIA_KEY * key);
	APICALL const EVP_CIPHER * (*EVP_camellia_128_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_128_cfb128)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_128_cfb1)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_128_cfb8)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_128_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_128_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_192_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_192_cfb128)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_192_cfb1)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_192_cfb8)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_192_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_192_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_256_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_256_cfb128)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_256_cfb1)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_256_cfb8)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_256_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_256_ofb)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*AES_bi_ige_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const AES_KEY * key, const AES_KEY * key2, const unsigned char * ivec, const int enc);
	DEPRECATED APICALL void (*SEED_decrypt)(struct AmiSSLIFace *Self, const unsigned char * s, unsigned char * d, const SEED_KEY_SCHEDULE * ks);
	DEPRECATED APICALL void (*SEED_encrypt)(struct AmiSSLIFace *Self, const unsigned char * s, unsigned char * d, const SEED_KEY_SCHEDULE * ks);
	DEPRECATED APICALL void (*SEED_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const SEED_KEY_SCHEDULE * ks, unsigned char * ivec, int enc);
	APICALL const EVP_CIPHER * (*EVP_seed_ofb)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*SEED_cfb128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const SEED_KEY_SCHEDULE * ks, unsigned char * ivec, int * num, int enc);
	DEPRECATED APICALL void (*SEED_ofb128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const SEED_KEY_SCHEDULE * ks, unsigned char * ivec, int * num);
	APICALL const EVP_CIPHER * (*EVP_seed_cbc)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*SEED_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const SEED_KEY_SCHEDULE * ks, int enc);
	APICALL const EVP_CIPHER * (*EVP_seed_ecb)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*SEED_set_key)(struct AmiSSLIFace *Self, const unsigned char * rawkey, SEED_KEY_SCHEDULE * ks);
	APICALL const EVP_CIPHER * (*EVP_seed_cfb128)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*AES_unwrap_key)(struct AmiSSLIFace *Self, AES_KEY * key, const unsigned char * iv, unsigned char * out, const unsigned char * in, unsigned int inlen);
	DEPRECATED APICALL int (*AES_wrap_key)(struct AmiSSLIFace *Self, AES_KEY * key, const unsigned char * iv, unsigned char * out, const unsigned char * in, unsigned int inlen);
	APICALL void (*CMS_ReceiptRequest_free)(struct AmiSSLIFace *Self, CMS_ReceiptRequest * rr);
	APTR PEM_write_CMS_UNIMPLEMENTED;
	APICALL CMS_CertificateChoices * (*CMS_add0_CertificateChoices)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL int (*CMS_unsigned_add1_attr_by_OBJ)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, const ASN1_OBJECT * obj, int type, const void * bytes, int len);
	DEPRECATED APICALL int (*ERR_load_CMS_strings)(struct AmiSSLIFace *Self);
	APICALL CMS_ContentInfo * (*CMS_sign_receipt)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, X509 * signcert, EVP_PKEY * pkey, STACK_OF(X509) * certs, unsigned int flags);
	APICALL int (*i2d_CMS_ContentInfo)(struct AmiSSLIFace *Self, const CMS_ContentInfo * a, unsigned char ** out);
	APICALL X509_ATTRIBUTE * (*CMS_signed_delete_attr)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, int loc);
	APICALL CMS_ContentInfo * (*d2i_CMS_bio)(struct AmiSSLIFace *Self, BIO * bp, CMS_ContentInfo ** cms);
	APICALL int (*CMS_unsigned_get_attr_by_NID)(struct AmiSSLIFace *Self, const CMS_SignerInfo * si, int nid, int lastpos);
	APICALL int (*CMS_verify)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, STACK_OF(X509) * certs, X509_STORE * store, BIO * dcont, BIO * out, unsigned int flags);
	APICALL CMS_ContentInfo * (*SMIME_read_CMS)(struct AmiSSLIFace *Self, BIO * bio, BIO ** biocont);
	APICALL int (*CMS_decrypt_set1_key)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, unsigned char * key, size_t keylen, const unsigned char * id, size_t idlen);
	APICALL void (*CMS_SignerInfo_get0_algs)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, EVP_PKEY ** pk, X509 ** signer, X509_ALGOR ** pdig, X509_ALGOR ** psig);
	APICALL int (*CMS_add1_cert)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, X509 * cert);
	APICALL int (*CMS_set_detached)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, int detached);
	APICALL CMS_ContentInfo * (*CMS_encrypt)(struct AmiSSLIFace *Self, STACK_OF(X509) * certs, BIO * in, const EVP_CIPHER * cipher, unsigned int flags);
	APICALL CMS_ContentInfo * (*CMS_EnvelopedData_create)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL int (*CMS_uncompress)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, BIO * dcont, BIO * out, unsigned int flags);
	APICALL int (*CMS_add0_crl)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, X509_CRL * crl);
	APICALL int (*CMS_SignerInfo_verify_content)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, BIO * chain);
	APICALL void * (*CMS_unsigned_get0_data_by_OBJ)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, ASN1_OBJECT * oid, int lastpos, int type);
	APICALL int (*PEM_write_bio_CMS)(struct AmiSSLIFace *Self, BIO * out, const CMS_ContentInfo * cms);
	APICALL X509_ATTRIBUTE * (*CMS_unsigned_get_attr)(struct AmiSSLIFace *Self, const CMS_SignerInfo * si, int loc);
	APICALL int (*CMS_RecipientInfo_ktri_cert_cmp)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, X509 * cert);
	APICALL int (*CMS_RecipientInfo_ktri_get0_algs)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, EVP_PKEY ** pk, X509 ** recip, X509_ALGOR ** palg);
	APICALL void (*CMS_ContentInfo_free)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL int (*CMS_final)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, BIO * data, BIO * dcont, unsigned int flags);
	APICALL int (*CMS_add_simple_smimecap)(struct AmiSSLIFace *Self, STACK_OF(X509_ALGOR) ** algs, int algnid, int keysize);
	APICALL int (*CMS_SignerInfo_verify)(struct AmiSSLIFace *Self, CMS_SignerInfo * si);
	APICALL int (*CMS_data)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, BIO * out, unsigned int flags);
	APICALL CMS_ReceiptRequest * (*d2i_CMS_ReceiptRequest)(struct AmiSSLIFace *Self, CMS_ReceiptRequest ** a, unsigned char const ** in, long len);
	APICALL CMS_ContentInfo * (*CMS_compress)(struct AmiSSLIFace *Self, BIO * in, int comp_nid, unsigned int flags);
	APICALL CMS_ContentInfo * (*CMS_digest_create)(struct AmiSSLIFace *Self, BIO * in, const EVP_MD * md, unsigned int flags);
	APICALL int (*CMS_SignerInfo_cert_cmp)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, X509 * cert);
	APICALL int (*CMS_SignerInfo_sign)(struct AmiSSLIFace *Self, CMS_SignerInfo * si);
	APICALL CMS_ContentInfo * (*CMS_data_create)(struct AmiSSLIFace *Self, BIO * in, unsigned int flags);
	APICALL int (*i2d_CMS_bio)(struct AmiSSLIFace *Self, BIO * bp, CMS_ContentInfo * cms);
	APICALL int (*CMS_EncryptedData_set1_key)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, const EVP_CIPHER * ciph, const unsigned char * key, size_t keylen);
	APICALL int (*CMS_decrypt)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, EVP_PKEY * pkey, X509 * cert, BIO * dcont, BIO * out, unsigned int flags);
	APICALL X509_ATTRIBUTE * (*CMS_unsigned_delete_attr)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, int loc);
	APICALL int (*CMS_unsigned_get_attr_count)(struct AmiSSLIFace *Self, const CMS_SignerInfo * si);
	APICALL int (*CMS_add_smimecap)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, STACK_OF(X509_ALGOR) * algs);
	APTR PEM_read_CMS_UNIMPLEMENTED;
	APICALL int (*CMS_signed_get_attr_by_OBJ)(struct AmiSSLIFace *Self, const CMS_SignerInfo * si, const ASN1_OBJECT * obj, int lastpos);
	APICALL CMS_ContentInfo * (*d2i_CMS_ContentInfo)(struct AmiSSLIFace *Self, CMS_ContentInfo ** a, unsigned char const ** in, long len);
	APICALL int (*CMS_add_standard_smimecap)(struct AmiSSLIFace *Self, STACK_OF(X509_ALGOR) ** smcap);
	APICALL CMS_ContentInfo * (*CMS_ContentInfo_new)(struct AmiSSLIFace *Self);
	APICALL int (*CMS_RecipientInfo_type)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri);
	APICALL const ASN1_OBJECT * (*CMS_get0_type)(struct AmiSSLIFace *Self, const CMS_ContentInfo * cms);
	APICALL int (*CMS_is_detached)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL CMS_ContentInfo * (*CMS_sign)(struct AmiSSLIFace *Self, X509 * signcert, EVP_PKEY * pkey, STACK_OF(X509) * certs, BIO * data, unsigned int flags);
	APICALL int (*CMS_signed_add1_attr)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, X509_ATTRIBUTE * attr);
	APICALL int (*CMS_unsigned_get_attr_by_OBJ)(struct AmiSSLIFace *Self, const CMS_SignerInfo * si, const ASN1_OBJECT * obj, int lastpos);
	APICALL int (*SMIME_write_CMS)(struct AmiSSLIFace *Self, BIO * bio, CMS_ContentInfo * cms, BIO * data, int flags);
	APICALL int (*CMS_EncryptedData_decrypt)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, const unsigned char * key, size_t keylen, BIO * dcont, BIO * out, unsigned int flags);
	APICALL STACK_OF(CMS_RecipientInfo) * (*CMS_get0_RecipientInfos)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL CMS_RevocationInfoChoice * (*CMS_add0_RevocationInfoChoice)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL int (*CMS_decrypt_set1_pkey)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, EVP_PKEY * pk, X509 * cert);
	APICALL void (*CMS_SignerInfo_set1_signer_cert)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, X509 * signer);
	APICALL STACK_OF(X509) * (*CMS_get0_signers)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL void (*CMS_ReceiptRequest_get0_values)(struct AmiSSLIFace *Self, CMS_ReceiptRequest * rr, ASN1_STRING ** pcid, int * pallorfirst, STACK_OF(GENERAL_NAMES) ** plist, STACK_OF(GENERAL_NAMES) ** prto);
	APICALL void * (*CMS_signed_get0_data_by_OBJ)(struct AmiSSLIFace *Self, const CMS_SignerInfo * si, const ASN1_OBJECT * oid, int lastpos, int type);
	APICALL STACK_OF(CMS_SignerInfo) * (*CMS_get0_SignerInfos)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL int (*CMS_add0_cert)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, X509 * cert);
	APICALL CMS_ContentInfo * (*CMS_EncryptedData_encrypt)(struct AmiSSLIFace *Self, BIO * in, const EVP_CIPHER * cipher, const unsigned char * key, size_t keylen, unsigned int flags);
	APICALL int (*CMS_digest_verify)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, BIO * dcont, BIO * out, unsigned int flags);
	APICALL int (*CMS_set1_signers_certs)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, STACK_OF(X509) * certs, unsigned int flags);
	APICALL X509_ATTRIBUTE * (*CMS_signed_get_attr)(struct AmiSSLIFace *Self, const CMS_SignerInfo * si, int loc);
	APICALL int (*CMS_RecipientInfo_set0_key)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, unsigned char * key, size_t keylen);
	APICALL int (*CMS_SignedData_init)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL int (*CMS_RecipientInfo_kekri_get0_id)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, X509_ALGOR ** palg, ASN1_OCTET_STRING ** pid, ASN1_GENERALIZEDTIME ** pdate, ASN1_OBJECT ** potherid, ASN1_TYPE ** pothertype);
	APICALL int (*CMS_verify_receipt)(struct AmiSSLIFace *Self, CMS_ContentInfo * rcms, CMS_ContentInfo * ocms, STACK_OF(X509) * certs, X509_STORE * store, unsigned int flags);
	APICALL CMS_ContentInfo * (*PEM_read_bio_CMS)(struct AmiSSLIFace *Self, BIO * bp, CMS_ContentInfo ** x, pem_password_cb * cb, void * u);
	APICALL STACK_OF(X509_CRL) * (*CMS_get1_crls)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL CMS_RecipientInfo * (*CMS_add0_recipient_key)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, int nid, unsigned char * key, size_t keylen, unsigned char * id, size_t idlen, ASN1_GENERALIZEDTIME * date, ASN1_OBJECT * otherTypeId, ASN1_TYPE * otherType);
	APICALL CMS_ReceiptRequest * (*CMS_ReceiptRequest_new)(struct AmiSSLIFace *Self);
	APICALL ASN1_OCTET_STRING ** (*CMS_get0_content)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL int (*CMS_get1_ReceiptRequest)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, CMS_ReceiptRequest ** prr);
	APICALL int (*CMS_signed_add1_attr_by_OBJ)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, const ASN1_OBJECT * obj, int type, const void * bytes, int len);
	APICALL int (*CMS_RecipientInfo_kekri_id_cmp)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, const unsigned char * id, size_t idlen);
	APICALL int (*CMS_add1_ReceiptRequest)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, CMS_ReceiptRequest * rr);
	APICALL int (*CMS_SignerInfo_get0_signer_id)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, ASN1_OCTET_STRING ** keyid, X509_NAME ** issuer, ASN1_INTEGER ** sno);
	APICALL int (*CMS_unsigned_add1_attr_by_NID)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, int nid, int type, const void * bytes, int len);
	APICALL int (*CMS_unsigned_add1_attr)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, X509_ATTRIBUTE * attr);
	APICALL int (*CMS_signed_get_attr_by_NID)(struct AmiSSLIFace *Self, const CMS_SignerInfo * si, int nid, int lastpos);
	APICALL STACK_OF(X509) * (*CMS_get1_certs)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL int (*CMS_signed_add1_attr_by_NID)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, int nid, int type, const void * bytes, int len);
	APICALL int (*CMS_unsigned_add1_attr_by_txt)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, const char * attrname, int type, const void * bytes, int len);
	APICALL int (*CMS_dataFinal)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, BIO * bio);
	APICALL int (*CMS_RecipientInfo_ktri_get0_signer_id)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, ASN1_OCTET_STRING ** keyid, X509_NAME ** issuer, ASN1_INTEGER ** sno);
	APICALL int (*i2d_CMS_ReceiptRequest)(struct AmiSSLIFace *Self, const CMS_ReceiptRequest * a, unsigned char ** out);
	APICALL CMS_RecipientInfo * (*CMS_add1_recipient_cert)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, X509 * recip, unsigned int flags);
	APICALL BIO * (*CMS_dataInit)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, BIO * icont);
	APICALL int (*CMS_signed_add1_attr_by_txt)(struct AmiSSLIFace *Self, CMS_SignerInfo * si, const char * attrname, int type, const void * bytes, int len);
	APICALL int (*CMS_RecipientInfo_decrypt)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, CMS_RecipientInfo * ri);
	APICALL int (*CMS_signed_get_attr_count)(struct AmiSSLIFace *Self, const CMS_SignerInfo * si);
	APICALL const ASN1_OBJECT * (*CMS_get0_eContentType)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms);
	APICALL int (*CMS_set1_eContentType)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, const ASN1_OBJECT * oid);
	APICALL CMS_ReceiptRequest * (*CMS_ReceiptRequest_create0)(struct AmiSSLIFace *Self, unsigned char * id, int idlen, int allorfirst, STACK_OF(GENERAL_NAMES) * receiptList, STACK_OF(GENERAL_NAMES) * receiptsTo);
	APICALL CMS_SignerInfo * (*CMS_add1_signer)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, X509 * signer, EVP_PKEY * pk, const EVP_MD * md, unsigned int flags);
	APICALL int (*CMS_RecipientInfo_set0_pkey)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, EVP_PKEY * pkey);
	DEPRECATED APICALL int (*ENGINE_set_load_ssl_client_cert_function)(struct AmiSSLIFace *Self, ENGINE * e, ENGINE_SSL_CLIENT_CERT_PTR loadssl_f);
	DEPRECATED APICALL ENGINE_SSL_CLIENT_CERT_PTR (*ENGINE_get_ssl_client_cert_function)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_load_ssl_client_cert)(struct AmiSSLIFace *Self, ENGINE * e, SSL * s, STACK_OF(X509_NAME) * ca_dn, X509 ** pcert, EVP_PKEY ** ppkey, STACK_OF(X509) ** pother, UI_METHOD * ui_method, void * callback_data);
	APICALL void (*OBSOLETE_ENGINE_load_capi)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_register_pkey_meths)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_pkey_asn1_meth_engine)(struct AmiSSLIFace *Self, int nid);
	DEPRECATED APICALL int (*WHIRLPOOL_Init)(struct AmiSSLIFace *Self, WHIRLPOOL_CTX * c);
	DEPRECATED APICALL unsigned char * (*WHIRLPOOL)(struct AmiSSLIFace *Self, const void * inp, size_t bytes, unsigned char * md);
	DEPRECATED APICALL const EVP_PKEY_ASN1_METHOD * (*ENGINE_get_pkey_asn1_meth)(struct AmiSSLIFace *Self, ENGINE * e, int nid);
	DEPRECATED APICALL const EVP_PKEY_METHOD * (*ENGINE_get_pkey_meth)(struct AmiSSLIFace *Self, ENGINE * e, int nid);
	APICALL BIO * (*BIO_new_CMS)(struct AmiSSLIFace *Self, BIO * out, CMS_ContentInfo * cms);
	DEPRECATED APICALL int (*ENGINE_set_default_pkey_asn1_meths)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL void (*WHIRLPOOL_BitUpdate)(struct AmiSSLIFace *Self, WHIRLPOOL_CTX * ctx, const void * inp, size_t bits);
	APICALL int (*i2d_CMS_bio_stream)(struct AmiSSLIFace *Self, BIO * out, CMS_ContentInfo * cms, BIO * in, int flags);
	APICALL int (*CMS_stream)(struct AmiSSLIFace *Self, unsigned char *** boundary, CMS_ContentInfo * cms);
	DEPRECATED APICALL const EVP_PKEY_ASN1_METHOD * (*ENGINE_pkey_asn1_find_str)(struct AmiSSLIFace *Self, ENGINE ** pe, const char * str, int len);
	DEPRECATED APICALL ENGINE_PKEY_METHS_PTR (*ENGINE_get_pkey_meths)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_register_pkey_asn1_meths)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_set_default_pkey_meths)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*HMAC_CTX_copy)(struct AmiSSLIFace *Self, HMAC_CTX * dctx, HMAC_CTX * sctx);
	DEPRECATED APICALL ENGINE_PKEY_ASN1_METHS_PTR (*ENGINE_get_pkey_asn1_meths)(struct AmiSSLIFace *Self, const ENGINE * e);
	APICALL const EVP_MD * (*EVP_whirlpool)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*ENGINE_register_all_pkey_meths)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*WHIRLPOOL_Final)(struct AmiSSLIFace *Self, unsigned char * md, WHIRLPOOL_CTX * c);
	DEPRECATED APICALL const EVP_PKEY_ASN1_METHOD * (*ENGINE_get_pkey_asn1_meth_str)(struct AmiSSLIFace *Self, ENGINE * e, const char * str, int len);
	DEPRECATED APICALL void (*ENGINE_register_all_pkey_asn1_meths)(struct AmiSSLIFace *Self);
	APICALL int (*CMS_ContentInfo_print_ctx)(struct AmiSSLIFace *Self, BIO * out, const CMS_ContentInfo * x, int indent, const ASN1_PCTX * pctx);
	APICALL int (*CMS_add1_crl)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, X509_CRL * crl);
	DEPRECATED APICALL int (*ENGINE_set_pkey_asn1_meths)(struct AmiSSLIFace *Self, ENGINE * e, ENGINE_PKEY_ASN1_METHS_PTR f);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_pkey_meth_engine)(struct AmiSSLIFace *Self, int nid);
	DEPRECATED APICALL int (*WHIRLPOOL_Update)(struct AmiSSLIFace *Self, WHIRLPOOL_CTX * c, const void * inp, size_t bytes);
	APICALL int (*PEM_write_bio_CMS_stream)(struct AmiSSLIFace *Self, BIO * out, CMS_ContentInfo * cms, BIO * in, int flags);
	DEPRECATED APICALL void (*ENGINE_unregister_pkey_meths)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL void (*ENGINE_unregister_pkey_asn1_meths)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_set_pkey_meths)(struct AmiSSLIFace *Self, ENGINE * e, ENGINE_PKEY_METHS_PTR f);
	DEPRECATED APICALL DSA * (*DSAparams_dup)(struct AmiSSLIFace *Self, const DSA * x);
	DEPRECATED APICALL DH * (*DHparams_dup)(struct AmiSSLIFace *Self, const DH * d);
	APICALL unsigned long (*X509_issuer_name_hash_old)(struct AmiSSLIFace *Self, X509 * a);
	APICALL unsigned long (*X509_subject_name_hash_old)(struct AmiSSLIFace *Self, X509 * x);
	DEPRECATED APICALL SRP_user_pwd * (*SRP_VBASE_get_by_user)(struct AmiSSLIFace *Self, SRP_VBASE * vb, char * username);
	DEPRECATED APICALL BIGNUM * (*SRP_Calc_server_key)(struct AmiSSLIFace *Self, const BIGNUM * A, const BIGNUM * v, const BIGNUM * u, const BIGNUM * b, const BIGNUM * N);
	DEPRECATED APICALL char * (*SRP_create_verifier)(struct AmiSSLIFace *Self, const char * user, const char * pass, char ** salt, char ** verifier, const char * N, const char * g);
	DEPRECATED APICALL int (*SRP_create_verifier_BN)(struct AmiSSLIFace *Self, const char * user, const char * pass, BIGNUM ** salt, BIGNUM ** verifier, const BIGNUM * N, const BIGNUM * g);
	DEPRECATED APICALL BIGNUM * (*SRP_Calc_u)(struct AmiSSLIFace *Self, const BIGNUM * A, const BIGNUM * B, const BIGNUM * N);
	DEPRECATED APICALL void (*SRP_VBASE_free)(struct AmiSSLIFace *Self, SRP_VBASE * vb);
	DEPRECATED APICALL BIGNUM * (*SRP_Calc_client_key)(struct AmiSSLIFace *Self, const BIGNUM * N, const BIGNUM * B, const BIGNUM * g, const BIGNUM * x, const BIGNUM * a, const BIGNUM * u);
	DEPRECATED APICALL SRP_gN * (*SRP_get_default_gN)(struct AmiSSLIFace *Self, const char * id);
	DEPRECATED APICALL BIGNUM * (*SRP_Calc_x)(struct AmiSSLIFace *Self, const BIGNUM * s, const char * user, const char * pass);
	DEPRECATED APICALL BIGNUM * (*SRP_Calc_B)(struct AmiSSLIFace *Self, const BIGNUM * b, const BIGNUM * N, const BIGNUM * g, const BIGNUM * v);
	DEPRECATED APICALL SRP_VBASE * (*SRP_VBASE_new)(struct AmiSSLIFace *Self, char * seed_key);
	DEPRECATED APICALL char * (*SRP_check_known_gN_param)(struct AmiSSLIFace *Self, const BIGNUM * g, const BIGNUM * N);
	DEPRECATED APICALL BIGNUM * (*SRP_Calc_A)(struct AmiSSLIFace *Self, const BIGNUM * a, const BIGNUM * N, const BIGNUM * g);
	DEPRECATED APICALL int (*SRP_Verify_A_mod_N)(struct AmiSSLIFace *Self, const BIGNUM * A, const BIGNUM * N);
	DEPRECATED APICALL int (*SRP_VBASE_init)(struct AmiSSLIFace *Self, SRP_VBASE * vb, char * verifier_file);
	DEPRECATED APICALL int (*SRP_Verify_B_mod_N)(struct AmiSSLIFace *Self, const BIGNUM * B, const BIGNUM * N);
	DEPRECATED APICALL int (*EC_KEY_set_public_key_affine_coordinates)(struct AmiSSLIFace *Self, EC_KEY * key, BIGNUM * x, BIGNUM * y);
	APICALL const EVP_CIPHER * (*EVP_aes_192_ctr)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_128_ctr)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_ctr)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*EC_KEY_get_flags)(struct AmiSSLIFace *Self, const EC_KEY * key);
	APICALL const EVP_CIPHER * (*EVP_aes_128_xts)(struct AmiSSLIFace *Self);
	APTR private_AES_set_decrypt_key_UNIMPLEMENTED;
	APICALL const EVP_CIPHER * (*EVP_aes_256_xts)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_128_gcm)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*EC_KEY_clear_flags)(struct AmiSSLIFace *Self, EC_KEY * key, int flags);
	DEPRECATED APICALL void (*EC_KEY_set_flags)(struct AmiSSLIFace *Self, EC_KEY * key, int flags);
	APICALL const EVP_CIPHER * (*EVP_aes_256_ccm)(struct AmiSSLIFace *Self);
	APTR private_AES_set_encrypt_key_UNIMPLEMENTED;
	APICALL const EVP_CIPHER * (*EVP_aes_128_ccm)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_192_gcm)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_gcm)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_192_ccm)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_rc4_hmac_md5)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_128_cbc_hmac_sha1)(struct AmiSSLIFace *Self);
	APICALL void (*OBSOLETE_ENGINE_load_rdrand)(struct AmiSSLIFace *Self);
	APTR ENGINE_load_rsax_UNIMPLEMENTED;
	APICALL const EVP_CIPHER * (*EVP_aes_256_cbc_hmac_sha1)(struct AmiSSLIFace *Self);
	APICALL CMS_RecipientInfo * (*CMS_add0_recipient_password)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, int iter, int wrap_nid, int pbe_nid, unsigned char * pass, ossl_ssize_t passlen, const EVP_CIPHER * kekciph);
	APICALL int (*CMS_decrypt_set1_password)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, unsigned char * pass, ossl_ssize_t passlen);
	APICALL int (*CMS_RecipientInfo_set0_password)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, unsigned char * pass, ossl_ssize_t passlen);
	APICALL int (*X509_REQ_sign_ctx)(struct AmiSSLIFace *Self, X509_REQ * x, EVP_MD_CTX * ctx);
	APICALL int (*X509_CRL_sign_ctx)(struct AmiSSLIFace *Self, X509_CRL * x, EVP_MD_CTX * ctx);
	APICALL int (*X509_signature_dump)(struct AmiSSLIFace *Self, BIO * bp, const ASN1_STRING * sig, int indent);
	APICALL int (*X509_sign_ctx)(struct AmiSSLIFace *Self, X509 * x, EVP_MD_CTX * ctx);
	APICALL int (*ASN1_item_sign_ctx)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, X509_ALGOR * algor1, X509_ALGOR * algor2, ASN1_BIT_STRING * signature, const void * data, EVP_MD_CTX * ctx);
	APTR OPENSSL_cpuid_setup_UNIMPLEMENTED;
	APTR ERR_remove_thread_state_UNIMPLEMENTED;
	APICALL void (*X509_STORE_CTX_set0_crls)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, STACK_OF(X509_CRL) * sk);
	APICALL const unsigned char * (*SSL_SESSION_get_id)(struct AmiSSLIFace *Self, const SSL_SESSION * s, unsigned int * len);
	APICALL void (*SSL_CTX_sess_set_new_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*new_session_cb)(struct ssl_st *ssl, SSL_SESSION *sess));
	APICALL SSL_SESSION *(*(*SSL_CTX_sess_get_get_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx))(SSL *, const unsigned char *, int, int *);
	APICALL void (*SSL_CTX_sess_set_get_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_SESSION *(*get_session_cb)(SSL *, const unsigned char *, int, int *));
	APICALL void (*(*SSL_CTX_get_info_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx))(const SSL *ssl,int type,int val);
	APICALL void (*SSL_CTX_set_client_cert_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*client_cert_cb)(SSL *ssl, X509 **x509, EVP_PKEY **pkey));
	APICALL void (*SSL_CTX_sess_set_remove_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, void (*remove_session_cb)(struct ssl_ctx_st *ctx,SSL_SESSION *sess));
	APICALL int (*(*SSL_CTX_sess_get_new_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx))(struct ssl_st *ssl, SSL_SESSION *sess);
	APICALL int (*(*SSL_CTX_get_client_cert_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx))(SSL *ssl, X509 **x509, EVP_PKEY **pkey);
	APICALL void (*(*SSL_CTX_sess_get_remove_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx))(struct ssl_ctx_st *ctx, SSL_SESSION *sess);
	APICALL int (*PEM_write_bio_SSL_SESSION)(struct AmiSSLIFace *Self, BIO * bp, const SSL_SESSION * x);
	APTR PEM_read_SSL_SESSION_UNIMPLEMENTED;
	APICALL SSL_SESSION * (*PEM_read_bio_SSL_SESSION)(struct AmiSSLIFace *Self, BIO * bp, SSL_SESSION ** x, pem_password_cb * cb, void * u);
	APTR PEM_write_SSL_SESSION_UNIMPLEMENTED;
	APTR PEM_read_PKCS7_UNIMPLEMENTED;
	APTR PEM_read_PrivateKey_UNIMPLEMENTED;
	APTR PEM_read_RSAPrivateKey_UNIMPLEMENTED;
	APTR PEM_read_X509_UNIMPLEMENTED;
	APTR PEM_read_X509_CRL_UNIMPLEMENTED;
	APTR PEM_read_X509_REQ_UNIMPLEMENTED;
	APTR PEM_write_PKCS7_UNIMPLEMENTED;
	APTR PEM_write_PrivateKey_UNIMPLEMENTED;
	APTR PEM_write_RSAPrivateKey_UNIMPLEMENTED;
	APTR PEM_write_X509_UNIMPLEMENTED;
	APTR PEM_write_X509_CRL_UNIMPLEMENTED;
	APTR PEM_write_X509_REQ_UNIMPLEMENTED;
	APTR PEM_read_RSAPublicKey_UNIMPLEMENTED;
	APTR PEM_write_RSAPublicKey_UNIMPLEMENTED;
	APTR PEM_read_NETSCAPE_CERT_SEQUENCE_UNIMPLEMENTED;
	APTR PEM_write_NETSCAPE_CERT_SEQUENCE_UNIMPLEMENTED;
	APTR X509V3_EXT_print_fp_UNIMPLEMENTED;
	APTR i2d_PKCS12_fp_UNIMPLEMENTED;
	APTR d2i_PKCS12_fp_UNIMPLEMENTED;
	APTR PEM_read_PKCS8_UNIMPLEMENTED;
	APTR PEM_write_PKCS8_UNIMPLEMENTED;
	APTR PEM_read_PKCS8_PRIV_KEY_INFO_UNIMPLEMENTED;
	APTR PEM_write_PKCS8_PRIV_KEY_INFO_UNIMPLEMENTED;
	APTR PEM_write_PKCS8PrivateKey_UNIMPLEMENTED;
	APTR PEM_read_X509_AUX_UNIMPLEMENTED;
	APTR PEM_write_PUBKEY_UNIMPLEMENTED;
	APTR PEM_read_RSA_PUBKEY_UNIMPLEMENTED;
	APTR PEM_read_PUBKEY_UNIMPLEMENTED;
	APTR PEM_write_X509_AUX_UNIMPLEMENTED;
	APTR PEM_write_RSA_PUBKEY_UNIMPLEMENTED;
	APTR PEM_write_PKCS8PrivateKey_nid_UNIMPLEMENTED;
	APTR i2d_PKCS8PrivateKey_fp_UNIMPLEMENTED;
	APTR i2d_PKCS8PrivateKey_nid_fp_UNIMPLEMENTED;
	APTR d2i_PKCS8PrivateKey_fp_UNIMPLEMENTED;
	APTR PEM_write_X509_REQ_NEW_UNIMPLEMENTED;
	APTR CONF_dump_fp_UNIMPLEMENTED;
	APTR NCONF_dump_fp_UNIMPLEMENTED;
	APTR FIPS_mode_set_UNIMPLEMENTED;
	DEPRECATED APICALL int (*BN_X931_generate_Xpq)(struct AmiSSLIFace *Self, BIGNUM * Xp, BIGNUM * Xq, int nbits, BN_CTX * ctx);
	APICALL const BIGNUM * (*BN_get0_nist_prime_384)(struct AmiSSLIFace *Self);
	APICALL int (*ERR_set_mark)(struct AmiSSLIFace *Self);
	APICALL int (*BN_BLINDING_invert_ex)(struct AmiSSLIFace *Self, BIGNUM * n, const BIGNUM * r, BN_BLINDING * b, BN_CTX * ctx);
	APICALL void (*NAME_CONSTRAINTS_free)(struct AmiSSLIFace *Self, NAME_CONSTRAINTS * ncons);
	APICALL void (*X509_STORE_CTX_set0_param)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, X509_VERIFY_PARAM * param);
	APICALL void (*POLICY_CONSTRAINTS_free)(struct AmiSSLIFace *Self, POLICY_CONSTRAINTS * pcons);
	APICALL int (*BN_nist_mod_192)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx);
	APICALL void (*GENERAL_SUBTREE_free)(struct AmiSSLIFace *Self, GENERAL_SUBTREE * sub);
	APICALL int (*PKCS12_add_safe)(struct AmiSSLIFace *Self, STACK_OF(PKCS7) ** psafes, STACK_OF(PKCS12_SAFEBAG) * bags, int safe_nid, int iter, const char * pass);
	APICALL const BIGNUM * (*BN_get0_nist_prime_192)(struct AmiSSLIFace *Self);
	APICALL unsigned char * (*X509_keyid_get0)(struct AmiSSLIFace *Self, X509 * x, int * len);
	APTR pitem_new_UNIMPLEMENTED;
	APICALL const X509_POLICY_NODE * (*X509_policy_node_get0_parent)(struct AmiSSLIFace *Self, const X509_POLICY_NODE * node);
	APICALL ASN1_OCTET_STRING * (*a2i_IPADDRESS)(struct AmiSSLIFace *Self, const char * ipasc);
	APICALL void (*X509_STORE_CTX_set_depth)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int depth);
	APICALL int (*X509_VERIFY_PARAM_inherit)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * to, const X509_VERIFY_PARAM * from);
	APTR pqueue_iterator_UNIMPLEMENTED;
	APICALL void (*X509_VERIFY_PARAM_set_depth)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, int depth);
	APICALL int (*EVP_PKEY_add1_attr_by_txt)(struct AmiSSLIFace *Self, EVP_PKEY * key, const char * attrname, int type, const unsigned char * bytes, int len);
	APICALL void (*BN_BLINDING_set_flags)(struct AmiSSLIFace *Self, BN_BLINDING * b, unsigned long l);
	APICALL int (*X509_VERIFY_PARAM_set1_policies)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, STACK_OF(ASN1_OBJECT) * policies);
	APICALL int (*X509_VERIFY_PARAM_set1_name)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, const char * name);
	APICALL void (*POLICY_MAPPING_free)(struct AmiSSLIFace *Self, POLICY_MAPPING * pmap);
	APTR pqueue_print_UNIMPLEMENTED;
	APTR PEM_write_bio_X509_CERT_PAIR_UNIMPLEMENTED;
	DEPRECATED APICALL int (*EVP_PKEY_cmp)(struct AmiSSLIFace *Self, const EVP_PKEY * a, const EVP_PKEY * b);
	APICALL int (*X509_policy_level_node_count)(struct AmiSSLIFace *Self, X509_POLICY_LEVEL * level);
	APICALL X509_ATTRIBUTE * (*EVP_PKEY_get_attr)(struct AmiSSLIFace *Self, const EVP_PKEY * key, int loc);
	APICALL GENERAL_SUBTREE * (*GENERAL_SUBTREE_new)(struct AmiSSLIFace *Self);
	APICALL STACK_OF(POLICYQUALINFO) * (*X509_policy_node_get0_qualifiers)(struct AmiSSLIFace *Self, const X509_POLICY_NODE * node);
	APTR pqueue_find_UNIMPLEMENTED;
	APTR pqueue_peek_UNIMPLEMENTED;
	APICALL const ASN1_OBJECT * (*X509_policy_node_get0_policy)(struct AmiSSLIFace *Self, const X509_POLICY_NODE * node);
	APICALL PKCS12 * (*PKCS12_add_safes)(struct AmiSSLIFace *Self, STACK_OF(PKCS7) * safes, int p7_nid);
	APICALL int (*BN_BLINDING_convert_ex)(struct AmiSSLIFace *Self, BIGNUM * n, BIGNUM * r, BN_BLINDING * b, BN_CTX * ctx);
	APICALL void (*X509_policy_tree_free)(struct AmiSSLIFace *Self, X509_POLICY_TREE * tree);
	APTR OPENSSL_ia32cap_loc_UNIMPLEMENTED;
	APICALL const BIGNUM * (*BN_get0_nist_prime_224)(struct AmiSSLIFace *Self);
	APICALL int (*BN_GENCB_call)(struct AmiSSLIFace *Self, BN_GENCB * cb, int a, int b);
	APICALL NAME_CONSTRAINTS * (*NAME_CONSTRAINTS_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ECParameters_print)(struct AmiSSLIFace *Self, BIO * bp, const EC_KEY * key);
	APICALL void * (*OBSOLETE_BUF_memdup)(struct AmiSSLIFace *Self, const void * data, size_t siz);
	APICALL int (*X509_VERIFY_PARAM_set_trust)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, int trust);
	APICALL int (*EVP_PKEY_get_attr_count)(struct AmiSSLIFace *Self, const EVP_PKEY * key);
	APICALL X509_VERIFY_PARAM * (*X509_STORE_CTX_get0_param)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APTR PEM_read_X509_CERT_PAIR_UNIMPLEMENTED;
	APICALL int (*X509_STORE_set_depth)(struct AmiSSLIFace *Self, X509_STORE * store, int depth);
	APICALL char * (*OBSOLETE_BUF_strndup)(struct AmiSSLIFace *Self, const char * str, size_t siz);
	APICALL int (*ASN1_put_eoc)(struct AmiSSLIFace *Self, unsigned char ** pp);
	APICALL void (*X509_VERIFY_PARAM_table_cleanup)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL BN_BLINDING * (*RSA_setup_blinding)(struct AmiSSLIFace *Self, RSA * rsa, BN_CTX * ctx);
	APICALL int (*OPENSSL_sk_find_ex)(struct AmiSSLIFace *Self, OPENSSL_STACK * st, const void * data);
	APICALL POLICY_CONSTRAINTS * (*POLICY_CONSTRAINTS_new)(struct AmiSSLIFace *Self);
	APICALL int (*X509_VERIFY_PARAM_get_depth)(struct AmiSSLIFace *Self, const X509_VERIFY_PARAM * param);
	APICALL int (*ASN1_item_ndef_i2d)(struct AmiSSLIFace *Self, const ASN1_VALUE * val, unsigned char ** out, const ASN1_ITEM * it);
	APICALL int (*ERR_pop_to_mark)(struct AmiSSLIFace *Self);
	APICALL X509_POLICY_NODE * (*X509_policy_level_get0_node)(struct AmiSSLIFace *Self, const X509_POLICY_LEVEL * level, int i);
	APICALL int (*i2d_PKCS7_NDEF)(struct AmiSSLIFace *Self, const PKCS7 * a, unsigned char ** out);
	APICALL ASN1_TYPE * (*ASN1_generate_v3)(struct AmiSSLIFace *Self, const char * str, X509V3_CTX * cnf);
	APICALL int (*X509_policy_tree_level_count)(struct AmiSSLIFace *Self, const X509_POLICY_TREE * tree);
	APTR X509_CERT_PAIR_free_UNIMPLEMENTED;
	APICALL int (*BN_nist_mod_224)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx);
	APICALL int (*BIO_dgram_non_fatal_error)(struct AmiSSLIFace *Self, int error);
	APICALL ASN1_BIT_STRING * (*v2i_ASN1_BIT_STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, X509V3_CTX * ctx, STACK_OF(CONF_VALUE) * nval);
	APICALL int (*X509_STORE_CTX_set_default)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, const char * name);
	APICALL int (*X509_VERIFY_PARAM_set1)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * to, const X509_VERIFY_PARAM * from);
	APICALL GENERAL_NAME * (*v2i_GENERAL_NAME_ex)(struct AmiSSLIFace *Self, GENERAL_NAME * out, const X509V3_EXT_METHOD * method, X509V3_CTX * ctx, CONF_VALUE * cnf, int is_nc);
	APICALL int (*BN_nist_mod_521)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx);
	APICALL X509_POLICY_LEVEL * (*X509_policy_tree_get0_level)(struct AmiSSLIFace *Self, const X509_POLICY_TREE * tree, int i);
	APICALL int (*ASN1_const_check_infinite_end)(struct AmiSSLIFace *Self, const unsigned char ** p, long len);
	APICALL X509_ATTRIBUTE * (*EVP_PKEY_delete_attr)(struct AmiSSLIFace *Self, EVP_PKEY * key, int loc);
	APICALL const BIGNUM * (*BN_get0_nist_prime_256)(struct AmiSSLIFace *Self);
	APICALL STACK_OF(CONF_VALUE) * (*i2v_ASN1_BIT_STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, ASN1_BIT_STRING * bits, STACK_OF(CONF_VALUE) * extlist);
	APICALL int (*BN_nist_mod_384)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx);
	APTR i2d_X509_CERT_PAIR_UNIMPLEMENTED;
	APTR pqueue_pop_UNIMPLEMENTED;
	APICALL int (*EVP_PKEY_get_attr_by_OBJ)(struct AmiSSLIFace *Self, const EVP_PKEY * key, const ASN1_OBJECT * obj, int lastpos);
	APICALL const X509_VERIFY_PARAM * (*X509_VERIFY_PARAM_lookup)(struct AmiSSLIFace *Self, const char * name);
	APTR X509_CERT_PAIR_new_UNIMPLEMENTED;
	APICALL int (*X509V3_NAME_from_section)(struct AmiSSLIFace *Self, X509_NAME * nm, STACK_OF(CONF_VALUE) * dn_sk, unsigned long chtype);
	APICALL int (*EVP_PKEY_add1_attr)(struct AmiSSLIFace *Self, EVP_PKEY * key, X509_ATTRIBUTE * attr);
	APTR PEM_write_X509_CERT_PAIR_UNIMPLEMENTED;
	APICALL int (*BIO_dump_indent_cb)(struct AmiSSLIFace *Self, int (*cb)(const void *data, size_t len, void *u), void * u, const void * s, int len, int indent);
	APTR d2i_X509_CERT_PAIR_UNIMPLEMENTED;
	APTR asn1_const_Finish_UNIMPLEMENTED;
	APICALL int (*BN_nist_mod_256)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx);
	APICALL int (*X509_VERIFY_PARAM_add0_table)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param);
	APTR pqueue_free_UNIMPLEMENTED;
	APICALL BN_BLINDING * (*BN_BLINDING_create_param)(struct AmiSSLIFace *Self, BN_BLINDING * b, const BIGNUM * e, BIGNUM * m, BN_CTX * ctx, int (*bn_mod_exp)(BIGNUM *r, const BIGNUM *a, const BIGNUM *p, const BIGNUM *m, BN_CTX *ctx, BN_MONT_CTX *m_ctx), BN_MONT_CTX * m_ctx);
	APICALL const BIGNUM * (*BN_get0_nist_prime_521)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*BN_is_prime_fasttest_ex)(struct AmiSSLIFace *Self, const BIGNUM * p, int nchecks, BN_CTX * ctx, int do_trial_devision, BN_GENCB * cb);
	APICALL int (*X509_policy_check)(struct AmiSSLIFace *Self, X509_POLICY_TREE ** ptree, int * pexplicit_policy, STACK_OF(X509) * certs, STACK_OF(ASN1_OBJECT) * policy_oids, unsigned int flags);
	APICALL int (*EVP_PKEY_get_attr_by_NID)(struct AmiSSLIFace *Self, const EVP_PKEY * key, int nid, int lastpos);
	APICALL unsigned long (*BN_BLINDING_get_flags)(struct AmiSSLIFace *Self, const BN_BLINDING * b);
	APICALL PKCS12_SAFEBAG * (*PKCS12_add_cert)(struct AmiSSLIFace *Self, STACK_OF(PKCS12_SAFEBAG) ** pbags, X509 * cert);
	APICALL int (*EVP_CIPHER_CTX_rand_key)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * key);
	APICALL ASN1_OCTET_STRING * (*a2i_IPADDRESS_NC)(struct AmiSSLIFace *Self, const char * ipasc);
	APICALL int (*PKCS7_set_digest)(struct AmiSSLIFace *Self, PKCS7 * p7, const EVP_MD * md);
	APICALL POLICY_MAPPING * (*POLICY_MAPPING_new)(struct AmiSSLIFace *Self);
	APICALL int (*PKCS7_set0_type_other)(struct AmiSSLIFace *Self, PKCS7 * p7, int type, ASN1_TYPE * other);
	APTR PEM_read_bio_X509_CERT_PAIR_UNIMPLEMENTED;
	APTR pqueue_next_UNIMPLEMENTED;
	APICALL int (*EVP_PKEY_add1_attr_by_OBJ)(struct AmiSSLIFace *Self, EVP_PKEY * key, const ASN1_OBJECT * obj, int type, const unsigned char * bytes, int len);
	APICALL void (*X509_VERIFY_PARAM_set_time)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, time_t t);
	APTR pqueue_new_UNIMPLEMENTED;
	APICALL PKCS12_SAFEBAG * (*PKCS12_add_key)(struct AmiSSLIFace *Self, STACK_OF(PKCS12_SAFEBAG) ** pbags, EVP_PKEY * key, int key_usage, int iter, int key_nid, const char * pass);
	APTR DSO_merge_UNIMPLEMENTED;
	APICALL int (*BIO_dump_cb)(struct AmiSSLIFace *Self, int (*cb)(const void *data, size_t len, void *u), void * u, const void * s, int len);
	APTR pqueue_insert_UNIMPLEMENTED;
	APTR pitem_free_UNIMPLEMENTED;
	APICALL BIGNUM * (*BN_get_rfc3526_prime_8192)(struct AmiSSLIFace *Self, BIGNUM * bn);
	APICALL int (*X509_VERIFY_PARAM_clear_flags)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, unsigned long flags);
	APICALL BIGNUM * (*BN_get_rfc2409_prime_1024)(struct AmiSSLIFace *Self, BIGNUM * bn);
	APICALL BIGNUM * (*BN_get_rfc3526_prime_2048)(struct AmiSSLIFace *Self, BIGNUM * bn);
	APICALL BIGNUM * (*BN_get_rfc3526_prime_6144)(struct AmiSSLIFace *Self, BIGNUM * bn);
	APICALL BIGNUM * (*BN_get_rfc3526_prime_1536)(struct AmiSSLIFace *Self, BIGNUM * bn);
	APICALL BIGNUM * (*BN_get_rfc3526_prime_3072)(struct AmiSSLIFace *Self, BIGNUM * bn);
	APICALL BIGNUM * (*BN_get_rfc3526_prime_4096)(struct AmiSSLIFace *Self, BIGNUM * bn);
	APICALL BIGNUM * (*BN_get_rfc2409_prime_768)(struct AmiSSLIFace *Self, BIGNUM * bn);
	APICALL unsigned long (*X509_VERIFY_PARAM_get_flags)(struct AmiSSLIFace *Self, const X509_VERIFY_PARAM * param);
	APICALL EVP_CIPHER_CTX * (*EVP_CIPHER_CTX_new)(struct AmiSSLIFace *Self);
	APICALL void (*EVP_CIPHER_CTX_free)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * a);
	APICALL int (*EVP_CIPHER_get_block_size)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL void (*EVP_CIPHER_CTX_set_app_data)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, void * data);
	APICALL int (*BIO_method_type)(struct AmiSSLIFace *Self, const BIO * b);
	APICALL int (*EVP_CIPHER_CTX_get_nid)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	APICALL int (*EVP_CIPHER_CTX_get_key_length)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	APICALL int (*EVP_MD_get_size)(struct AmiSSLIFace *Self, const EVP_MD * md);
	APICALL int (*EVP_MD_CTX_test_flags)(struct AmiSSLIFace *Self, const EVP_MD_CTX * ctx, int flags);
	APICALL void (*BIO_clear_flags)(struct AmiSSLIFace *Self, BIO * b, int flags);
	APICALL int (*EVP_MD_get_pkey_type)(struct AmiSSLIFace *Self, const EVP_MD * md);
	APICALL void (*EVP_MD_CTX_clear_flags)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, int flags);
	APICALL unsigned long (*EVP_CIPHER_get_flags)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	DEPRECATED APICALL BIO_callback_fn (*BIO_get_callback)(struct AmiSSLIFace *Self, const BIO * b);
	APICALL int (*EVP_CIPHER_get_key_length)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL int (*EVP_Cipher)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, unsigned char * out, const unsigned char * in, unsigned int inl);
	APICALL int (*EVP_CIPHER_CTX_get_block_size)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	DEPRECATED APICALL const EVP_CIPHER * (*EVP_CIPHER_CTX_cipher)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	APICALL void * (*EVP_CIPHER_CTX_get_app_data)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	APICALL int (*EVP_MD_get_block_size)(struct AmiSSLIFace *Self, const EVP_MD * md);
	APICALL unsigned long (*OBSOLETE_EVP_CIPHER_CTX_flags)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	DEPRECATED APICALL const EVP_MD * (*EVP_MD_CTX_md)(struct AmiSSLIFace *Self, const EVP_MD_CTX * ctx);
	APICALL const char * (*BIO_method_name)(struct AmiSSLIFace *Self, const BIO * b);
	APICALL int (*EVP_CIPHER_CTX_get_iv_length)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	APICALL int (*CRYPTO_memcmp)(struct AmiSSLIFace *Self, const void * in_a, const void * in_b, size_t len);
	APICALL void (*BN_consttime_swap)(struct AmiSSLIFace *Self, BN_ULONG swap, BIGNUM * a, BIGNUM * b, int nwords);
	APICALL int (*i2d_X509_EXTENSIONS)(struct AmiSSLIFace *Self, const X509_EXTENSIONS * a, unsigned char ** out);
	APICALL X509_EXTENSIONS * (*d2i_X509_EXTENSIONS)(struct AmiSSLIFace *Self, X509_EXTENSIONS ** a, const unsigned char ** in, long len);
	APICALL void (*X509_ALGOR_get0)(struct AmiSSLIFace *Self, const ASN1_OBJECT ** pobj, int * pptype, const void ** ppval, const X509_ALGOR * algor);
	APICALL int (*X509_ALGOR_set0)(struct AmiSSLIFace *Self, X509_ALGOR * alg, ASN1_OBJECT * aobj, int ptype, void * pval);
	APICALL void * (*X509at_get0_data_by_OBJ)(struct AmiSSLIFace *Self, const STACK_OF(X509_ATTRIBUTE) * x, const ASN1_OBJECT * obj, int lastpos, int type);
	APICALL int (*ASN1_TYPE_set1)(struct AmiSSLIFace *Self, ASN1_TYPE * a, int type, const void * value);
	APICALL void (*ASN1_STRING_set0)(struct AmiSSLIFace *Self, ASN1_STRING * str, void * data, int len);
	APICALL int (*i2d_X509_ALGORS)(struct AmiSSLIFace *Self, const X509_ALGORS * a, unsigned char ** out);
	APTR COMP_zlib_cleanup_UNIMPLEMENTED;
	APICALL X509_ALGORS * (*d2i_X509_ALGORS)(struct AmiSSLIFace *Self, X509_ALGORS ** a, const unsigned char ** in, long len);
	APICALL ASN1_VALUE * (*SMIME_read_ASN1)(struct AmiSSLIFace *Self, BIO * bio, BIO ** bcont, const ASN1_ITEM * it);
	APICALL int (*OPENSSL_isservice)(struct AmiSSLIFace *Self);
	APICALL void (*EVP_CIPHER_CTX_clear_flags)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, int flags);
	DEPRECATED APICALL int (*BN_X931_generate_prime_ex)(struct AmiSSLIFace *Self, BIGNUM * p, BIGNUM * p1, BIGNUM * p2, BIGNUM * Xp1, BIGNUM * Xp2, const BIGNUM * Xp, const BIGNUM * e, BN_CTX * ctx, BN_GENCB * cb);
	APICALL int (*EVP_CIPHER_CTX_test_flags)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx, int flags);
	APICALL void (*EVP_add_alg_module)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*BN_X931_derive_prime_ex)(struct AmiSSLIFace *Self, BIGNUM * p, BIGNUM * p1, BIGNUM * p2, const BIGNUM * Xp, const BIGNUM * Xp1, const BIGNUM * Xp2, const BIGNUM * e, BN_CTX * ctx, BN_GENCB * cb);
	APICALL void (*OPENSSL_init)(struct AmiSSLIFace *Self);
	APICALL char * (*CRYPTO_strdup)(struct AmiSSLIFace *Self, const char * str, const char * file, int line);
	APTR pqueue_size_UNIMPLEMENTED;
	APICALL int (*i2d_TS_ACCURACY)(struct AmiSSLIFace *Self, const TS_ACCURACY * a, unsigned char ** pp);
	APTR i2d_TS_MSG_IMPRINT_fp_UNIMPLEMENTED;
	APICALL int (*i2d_TS_MSG_IMPRINT)(struct AmiSSLIFace *Self, const TS_MSG_IMPRINT * a, unsigned char ** pp);
	APICALL int (*EVP_PKEY_print_public)(struct AmiSSLIFace *Self, BIO * out, const EVP_PKEY * pkey, int indent, ASN1_PCTX * pctx);
	APICALL EVP_PKEY_CTX * (*EVP_PKEY_CTX_new)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, ENGINE * e);
	APICALL int (*i2d_TS_TST_INFO)(struct AmiSSLIFace *Self, const TS_TST_INFO * a, unsigned char ** pp);
	DEPRECATED APICALL const EVP_PKEY_ASN1_METHOD * (*EVP_PKEY_asn1_find)(struct AmiSSLIFace *Self, ENGINE ** pe, int type);
	APTR DSO_METHOD_beos_UNIMPLEMENTED;
	APICALL X509 * (*TS_CONF_load_cert)(struct AmiSSLIFace *Self, const char * file);
	APICALL X509_EXTENSION * (*TS_REQ_get_ext)(struct AmiSSLIFace *Self, TS_REQ * a, int loc);
	APICALL int (*EVP_PKEY_sign_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*ASN1_item_print)(struct AmiSSLIFace *Self, BIO * out, const ASN1_VALUE * ifld, int indent, const ASN1_ITEM * it, const ASN1_PCTX * ctx);
	APICALL int (*TS_TST_INFO_set_nonce)(struct AmiSSLIFace *Self, TS_TST_INFO * a, const ASN1_INTEGER * nonce);
	APICALL TS_RESP * (*TS_RESP_dup)(struct AmiSSLIFace *Self, const TS_RESP * a);
	DEPRECATED APICALL int (*EVP_PKEY_asn1_add0)(struct AmiSSLIFace *Self, const EVP_PKEY_ASN1_METHOD * ameth);
	APICALL int (*PKCS7_add0_attrib_signing_time)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si, ASN1_TIME * t);
	APTR i2d_TS_TST_INFO_fp_UNIMPLEMENTED;
	APICALL int (*BIO_asn1_get_prefix)(struct AmiSSLIFace *Self, BIO * b, asn1_ps_func ** pprefix, asn1_ps_func ** pprefix_free);
	APICALL int (*TS_TST_INFO_set_time)(struct AmiSSLIFace *Self, TS_TST_INFO * a, const ASN1_GENERALIZEDTIME * gtime);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_decrypt)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*decrypt_init)(EVP_PKEY_CTX *ctx), int (*decrypt)(EVP_PKEY_CTX *ctx, unsigned char *out, size_t *outlen, const unsigned char *in, size_t inlen));
	APICALL int (*EVP_PKEY_set_type_str)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, const char * str, int len);
	APICALL int (*EVP_PKEY_CTX_get_keygen_info)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int idx);
	APICALL int (*TS_REQ_set_policy_id)(struct AmiSSLIFace *Self, TS_REQ * a, const ASN1_OBJECT * policy);
	APTR d2i_TS_RESP_fp_UNIMPLEMENTED;
	APICALL int (*TS_RESP_set_status_info)(struct AmiSSLIFace *Self, TS_RESP * a, TS_STATUS_INFO * info);
	APICALL int (*EVP_PKEY_keygen)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_PKEY ** ppkey);
	APICALL int (*EVP_DigestSignInit)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, EVP_PKEY_CTX ** pctx, const EVP_MD * type, ENGINE * e, EVP_PKEY * pkey);
	APICALL int (*TS_ACCURACY_set_millis)(struct AmiSSLIFace *Self, TS_ACCURACY * a, const ASN1_INTEGER * millis);
	APICALL TS_REQ * (*TS_REQ_dup)(struct AmiSSLIFace *Self, const TS_REQ * a);
	APICALL GENERAL_NAME * (*GENERAL_NAME_dup)(struct AmiSSLIFace *Self, const GENERAL_NAME * a);
	APICALL STACK_OF(X509_CRL) * (*X509_STORE_CTX_get1_crls)(struct AmiSSLIFace *Self, const X509_STORE_CTX * st, const X509_NAME * nm);
	DEPRECATED APICALL EVP_PKEY_ASN1_METHOD * (*EVP_PKEY_asn1_new)(struct AmiSSLIFace *Self, int id, int flags, const char * pem_str, const char * info);
	APICALL BIO * (*BIO_new_NDEF)(struct AmiSSLIFace *Self, BIO * out, ASN1_VALUE * val, const ASN1_ITEM * it);
	APICALL int (*TS_MSG_IMPRINT_set_algo)(struct AmiSSLIFace *Self, TS_MSG_IMPRINT * a, X509_ALGOR * alg);
	APICALL int (*i2d_TS_TST_INFO_bio)(struct AmiSSLIFace *Self, BIO * fp, const TS_TST_INFO * a);
	APICALL int (*TS_TST_INFO_set_ordering)(struct AmiSSLIFace *Self, TS_TST_INFO * a, int ordering);
	APICALL int (*TS_TST_INFO_get_ext_by_OBJ)(struct AmiSSLIFace *Self, TS_TST_INFO * a, const ASN1_OBJECT * obj, int lastpos);
	APTR CRYPTO_THREADID_set_pointer_UNIMPLEMENTED;
	APICALL const char * (*TS_CONF_get_tsa_section)(struct AmiSSLIFace *Self, CONF * conf, const char * section);
	APICALL int (*SMIME_write_ASN1)(struct AmiSSLIFace *Self, BIO * bio, ASN1_VALUE * val, BIO * data, int flags, int ctype_nid, int econt_nid, STACK_OF(X509_ALGOR) * mdalgs, const ASN1_ITEM * it);
	APICALL int (*TS_RESP_CTX_set_signer_key)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, EVP_PKEY * key);
	DEPRECATED APICALL int (*EVP_PKEY_encrypt_old)(struct AmiSSLIFace *Self, unsigned char * enc_key, const unsigned char * key, int key_len, EVP_PKEY * pub_key);
	APICALL int (*EVP_PKEY_encrypt_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APTR CRYPTO_THREADID_cpy_UNIMPLEMENTED;
	APICALL unsigned long (*ASN1_PCTX_get_cert_flags)(struct AmiSSLIFace *Self, const ASN1_PCTX * p);
	APICALL int (*i2d_ESS_SIGNING_CERT)(struct AmiSSLIFace *Self, const ESS_SIGNING_CERT * a, unsigned char ** pp);
	APICALL EVP_PKEY * (*TS_CONF_load_key)(struct AmiSSLIFace *Self, const char * file, const char * pass);
	APICALL int (*i2d_ASN1_SEQUENCE_ANY)(struct AmiSSLIFace *Self, const ASN1_SEQUENCE_ANY * a, unsigned char ** pp);
	APICALL TS_MSG_IMPRINT * (*d2i_TS_MSG_IMPRINT_bio)(struct AmiSSLIFace *Self, BIO * fp, TS_MSG_IMPRINT ** a);
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_public)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*pub_decode)(EVP_PKEY *pk, const X509_PUBKEY *pub), int (*pub_encode)(X509_PUBKEY *pub, const EVP_PKEY *pk), int (*pub_cmp)(const EVP_PKEY *a, const EVP_PKEY *b), int (*pub_print)(BIO *out, const EVP_PKEY *pkey, int indent, ASN1_PCTX *pctx), int (*pkey_size)(const EVP_PKEY *pk), int (*pkey_bits)(const EVP_PKEY *pk));
	APICALL EVP_PKEY * (*b2i_PublicKey_bio)(struct AmiSSLIFace *Self, BIO * in);
	APICALL int (*BIO_asn1_set_prefix)(struct AmiSSLIFace *Self, BIO * b, asn1_ps_func * prefix, asn1_ps_func * prefix_free);
	APICALL EVP_PKEY * (*EVP_PKEY_new_mac_key)(struct AmiSSLIFace *Self, int type, ENGINE * e, const unsigned char * key, int keylen);
	APTR CRYPTO_THREADID_cmp_UNIMPLEMENTED;
	APICALL void (*TS_REQ_ext_free)(struct AmiSSLIFace *Self, TS_REQ * a);
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_free)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, void (*pkey_free)(EVP_PKEY *pkey));
	DEPRECATED APICALL const EVP_PKEY_ASN1_METHOD * (*EVP_PKEY_get0_asn1)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APTR d2i_NETSCAPE_X509_UNIMPLEMENTED;
	APICALL int (*EVP_PKEY_verify_recover_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL void (*EVP_PKEY_CTX_set_data)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, void * data);
	APICALL int (*EVP_PKEY_keygen_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*TS_RESP_CTX_set_status_info)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, int status, const char * text);
	APICALL X509_ALGOR * (*TS_MSG_IMPRINT_get_algo)(struct AmiSSLIFace *Self, TS_MSG_IMPRINT * a);
	APICALL int (*TS_REQ_print_bio)(struct AmiSSLIFace *Self, BIO * bio, TS_REQ * a);
	APICALL int (*EVP_PKEY_CTX_ctrl_str)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const char * type, const char * value);
	APICALL int (*EVP_PKEY_get_default_digest_nid)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, int * pnid);
	APICALL int (*PEM_write_bio_PKCS7_stream)(struct AmiSSLIFace *Self, BIO * out, PKCS7 * p7, BIO * in, int flags);
	APICALL int (*TS_MSG_IMPRINT_print_bio)(struct AmiSSLIFace *Self, BIO * bio, TS_MSG_IMPRINT * msg);
	APICALL int (*BN_asc2bn)(struct AmiSSLIFace *Self, BIGNUM ** a, const char * str);
	APICALL ASN1_OBJECT * (*TS_REQ_get_policy_id)(struct AmiSSLIFace *Self, TS_REQ * a);
	APICALL TS_ACCURACY * (*d2i_TS_ACCURACY)(struct AmiSSLIFace *Self, TS_ACCURACY ** a, const unsigned char ** pp, long length);
	APICALL void * (*DSO_global_lookup)(struct AmiSSLIFace *Self, const char * name);
	APICALL int (*TS_CONF_set_tsa_name)(struct AmiSSLIFace *Self, CONF * conf, const char * section, TS_RESP_CTX * ctx);
	APICALL int (*i2d_ASN1_SET_ANY)(struct AmiSSLIFace *Self, const ASN1_SEQUENCE_ANY * a, unsigned char ** pp);
	APICALL unsigned long (*ASN1_PCTX_get_flags)(struct AmiSSLIFace *Self, const ASN1_PCTX * p);
	APICALL int (*TS_TST_INFO_get_ext_by_NID)(struct AmiSSLIFace *Self, TS_TST_INFO * a, int nid, int lastpos);
	APICALL TS_RESP * (*TS_RESP_new)(struct AmiSSLIFace *Self);
	APICALL ESS_CERT_ID * (*ESS_CERT_ID_dup)(struct AmiSSLIFace *Self, const ESS_CERT_ID * a);
	APICALL TS_STATUS_INFO * (*TS_STATUS_INFO_dup)(struct AmiSSLIFace *Self, const TS_STATUS_INFO * a);
	APICALL X509_EXTENSION * (*TS_REQ_delete_ext)(struct AmiSSLIFace *Self, TS_REQ * a, int loc);
	APICALL int (*EVP_DigestVerifyFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const unsigned char * sig, size_t siglen);
	APICALL int (*EVP_PKEY_print_params)(struct AmiSSLIFace *Self, BIO * out, const EVP_PKEY * pkey, int inden, ASN1_PCTX * pctx);
	APICALL TS_MSG_IMPRINT * (*TS_REQ_get_msg_imprint)(struct AmiSSLIFace *Self, TS_REQ * a);
	APICALL int (*OBJ_find_sigid_by_algs)(struct AmiSSLIFace *Self, int * psignid, int dig_nid, int pkey_nid);
	APICALL const ASN1_INTEGER * (*TS_TST_INFO_get_serial)(struct AmiSSLIFace *Self, const TS_TST_INFO * a);
	APICALL const ASN1_INTEGER * (*TS_REQ_get_nonce)(struct AmiSSLIFace *Self, const TS_REQ * a);
	APICALL int (*X509_PUBKEY_set0_param)(struct AmiSSLIFace *Self, X509_PUBKEY * pub, ASN1_OBJECT * aobj, int ptype, void * pval, unsigned char * penc, int penclen);
	APICALL void (*EVP_PKEY_CTX_set0_keygen_info)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int * dat, int datlen);
	APICALL int (*DIST_POINT_set_dpname)(struct AmiSSLIFace *Self, DIST_POINT_NAME * dpn, const X509_NAME * iname);
	APICALL int (*i2d_ISSUING_DIST_POINT)(struct AmiSSLIFace *Self, const ISSUING_DIST_POINT * a, unsigned char ** pp);
	APICALL void * (*EVP_PKEY_CTX_get_data)(struct AmiSSLIFace *Self, const EVP_PKEY_CTX * ctx);
	APICALL int (*TS_STATUS_INFO_print_bio)(struct AmiSSLIFace *Self, BIO * bio, TS_STATUS_INFO * a);
	APICALL int (*EVP_PKEY_derive_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL TS_TST_INFO * (*d2i_TS_TST_INFO)(struct AmiSSLIFace *Self, TS_TST_INFO ** a, const unsigned char ** pp, long length);
	DEPRECATED APICALL int (*EVP_PKEY_asn1_add_alias)(struct AmiSSLIFace *Self, int to, int from);
	APICALL TS_RESP * (*d2i_TS_RESP_bio)(struct AmiSSLIFace *Self, BIO * fp, TS_RESP ** a);
	APICALL int (*OTHERNAME_cmp)(struct AmiSSLIFace *Self, OTHERNAME * a, OTHERNAME * b);
	APICALL void (*GENERAL_NAME_set0_value)(struct AmiSSLIFace *Self, GENERAL_NAME * a, int type, void * value);
	APICALL void (*PKCS7_RECIP_INFO_get0_alg)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO * ri, X509_ALGOR ** penc);
	APICALL TS_RESP_CTX * (*TS_RESP_CTX_new)(struct AmiSSLIFace *Self);
	APICALL void (*TS_RESP_set_tst_info)(struct AmiSSLIFace *Self, TS_RESP * a, PKCS7 * p7, TS_TST_INFO * tst_info);
	APICALL int (*PKCS7_final)(struct AmiSSLIFace *Self, PKCS7 * p7, BIO * data, int flags);
	APICALL int (*EVP_PKEY_get_base_id)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL int (*TS_RESP_CTX_set_signer_cert)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, X509 * signer);
	APICALL int (*TS_REQ_set_msg_imprint)(struct AmiSSLIFace *Self, TS_REQ * a, TS_MSG_IMPRINT * msg_imprint);
	APICALL int (*EVP_PKEY_CTX_ctrl)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int keytype, int optype, int cmd, int p1, void * p2);
	APICALL int (*TS_CONF_set_digests)(struct AmiSSLIFace *Self, CONF * conf, const char * section, TS_RESP_CTX * ctx);
	APICALL TS_MSG_IMPRINT * (*d2i_TS_MSG_IMPRINT)(struct AmiSSLIFace *Self, TS_MSG_IMPRINT ** a, const unsigned char ** pp, long length);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_ctrl)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*ctrl)(EVP_PKEY_CTX *ctx, int type, int p1, void *p2), int (*ctrl_str)(EVP_PKEY_CTX *ctx, const char *type, const char *value));
	APICALL int (*TS_REQ_get_ext_by_NID)(struct AmiSSLIFace *Self, TS_REQ * a, int nid, int lastpos);
	APICALL int (*PKCS5_pbe_set0_algor)(struct AmiSSLIFace *Self, X509_ALGOR * algor, int alg, int iter, const unsigned char * salt, int saltlen);
	APTR BN_BLINDING_thread_id_UNIMPLEMENTED;
	APICALL TS_ACCURACY * (*TS_ACCURACY_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_CRL_METHOD_free)(struct AmiSSLIFace *Self, X509_CRL_METHOD * m);
	APICALL unsigned long (*ASN1_PCTX_get_nm_flags)(struct AmiSSLIFace *Self, const ASN1_PCTX * p);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_sign)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*sign_init)(EVP_PKEY_CTX *ctx), int (*sign)(EVP_PKEY_CTX *ctx, unsigned char *sig, size_t *siglen, const unsigned char *tbs, size_t tbslen));
	APTR CRYPTO_THREADID_current_UNIMPLEMENTED;
	APICALL int (*EVP_PKEY_decrypt_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APTR NETSCAPE_X509_free_UNIMPLEMENTED;
	APICALL int (*i2b_PVK_bio)(struct AmiSSLIFace *Self, BIO * out, const EVP_PKEY * pk, int enclevel, pem_password_cb * cb, void * u);
	APICALL int (*EVP_PKEY_print_private)(struct AmiSSLIFace *Self, BIO * out, const EVP_PKEY * pkey, int indent, ASN1_PCTX * pctx);
	APICALL void * (*GENERAL_NAME_get0_value)(struct AmiSSLIFace *Self, const GENERAL_NAME * a, int * ptype);
	APICALL EVP_PKEY * (*b2i_PVK_bio)(struct AmiSSLIFace *Self, BIO * in, pem_password_cb * cb, void * u);
	APICALL ASN1_UTCTIME * (*ASN1_UTCTIME_adj)(struct AmiSSLIFace *Self, ASN1_UTCTIME * s, time_t t, int offset_day, long offset_sec);
	APICALL TS_TST_INFO * (*TS_TST_INFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*EVP_MD_do_all_sorted)(struct AmiSSLIFace *Self, void (*fn)(const EVP_MD *ciph, const char *from, const char *to, void *x), void * arg);
	APICALL int (*TS_CONF_set_default_engine)(struct AmiSSLIFace *Self, const char * name);
	APICALL int (*TS_ACCURACY_set_seconds)(struct AmiSSLIFace *Self, TS_ACCURACY * a, const ASN1_INTEGER * seconds);
	APICALL const ASN1_GENERALIZEDTIME * (*TS_TST_INFO_get_time)(struct AmiSSLIFace *Self, const TS_TST_INFO * a);
	APICALL int (*PKCS8_pkey_get0)(struct AmiSSLIFace *Self, const ASN1_OBJECT ** ppkalg, const unsigned char ** pk, int * ppklen, const X509_ALGOR ** pa, const PKCS8_PRIV_KEY_INFO * p8);
	DEPRECATED APICALL const EVP_PKEY_ASN1_METHOD * (*EVP_PKEY_asn1_get0)(struct AmiSSLIFace *Self, int idx);
	APICALL int (*OBJ_add_sigid)(struct AmiSSLIFace *Self, int signid, int dig_id, int pkey_id);
	APICALL int (*PKCS7_SIGNER_INFO_sign)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si);
	APICALL int (*EVP_PKEY_paramgen_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*EVP_PKEY_sign)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char * sig, size_t * siglen, const unsigned char * tbs, size_t tbslen);
	APICALL void (*OBJ_sigid_free)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_init)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*init)(EVP_PKEY_CTX *ctx));
	APICALL ESS_ISSUER_SERIAL * (*d2i_ESS_ISSUER_SERIAL)(struct AmiSSLIFace *Self, ESS_ISSUER_SERIAL ** a, const unsigned char ** pp, long length);
	APICALL ISSUING_DIST_POINT * (*ISSUING_DIST_POINT_new)(struct AmiSSLIFace *Self);
	APICALL ASN1_TIME * (*ASN1_TIME_adj)(struct AmiSSLIFace *Self, ASN1_TIME * s, time_t t, int offset_day, long offset_sec);
	APICALL int (*TS_OBJ_print_bio)(struct AmiSSLIFace *Self, BIO * bio, const ASN1_OBJECT * obj);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_verify_recover)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*verify_recover_init)(EVP_PKEY_CTX *ctx), int (*verify_recover)(EVP_PKEY_CTX *ctx, unsigned char *sig, size_t *siglen, const unsigned char *tbs, size_t tbslen));
	APICALL TS_STATUS_INFO * (*TS_RESP_get_status_info)(struct AmiSSLIFace *Self, TS_RESP * g);
	APICALL void (*EVP_PKEY_CTX_set_cb)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_PKEY_gen_cb * cb);
	APICALL TS_TST_INFO * (*PKCS7_to_TS_TST_INFO)(struct AmiSSLIFace *Self, PKCS7 * token);
	APICALL unsigned long (*ASN1_PCTX_get_oid_flags)(struct AmiSSLIFace *Self, const ASN1_PCTX * p);
	APICALL int (*TS_TST_INFO_add_ext)(struct AmiSSLIFace *Self, TS_TST_INFO * a, X509_EXTENSION * ex, int loc);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_derive)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*derive_init)(EVP_PKEY_CTX *ctx), int (*derive)(EVP_PKEY_CTX *ctx, unsigned char *key, size_t *keylen));
	APTR i2d_TS_RESP_fp_UNIMPLEMENTED;
	APICALL int (*i2d_TS_MSG_IMPRINT_bio)(struct AmiSSLIFace *Self, BIO * fp, const TS_MSG_IMPRINT * a);
	APICALL int (*TS_RESP_CTX_set_accuracy)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, int secs, int millis, int micros);
	APICALL int (*TS_REQ_set_nonce)(struct AmiSSLIFace *Self, TS_REQ * a, const ASN1_INTEGER * nonce);
	APICALL ESS_CERT_ID * (*ESS_CERT_ID_new)(struct AmiSSLIFace *Self);
	APICALL int (*TS_REQ_get_ext_count)(struct AmiSSLIFace *Self, TS_REQ * a);
	APICALL void (*BUF_reverse)(struct AmiSSLIFace *Self, unsigned char * out, const unsigned char * in, size_t siz);
	APICALL int (*TS_TST_INFO_print_bio)(struct AmiSSLIFace *Self, BIO * bio, TS_TST_INFO * a);
	APICALL ISSUING_DIST_POINT * (*d2i_ISSUING_DIST_POINT)(struct AmiSSLIFace *Self, ISSUING_DIST_POINT ** a, const unsigned char ** pp, long length);
	APICALL int (*i2b_PrivateKey_bio)(struct AmiSSLIFace *Self, BIO * out, const EVP_PKEY * pk);
	APICALL int (*i2d_TS_RESP)(struct AmiSSLIFace *Self, const TS_RESP * a, unsigned char ** pp);
	APICALL EVP_PKEY * (*b2i_PublicKey)(struct AmiSSLIFace *Self, const unsigned char ** in, long length);
	APICALL void (*TS_VERIFY_CTX_cleanup)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx);
	APICALL void (*TS_STATUS_INFO_free)(struct AmiSSLIFace *Self, TS_STATUS_INFO * a);
	APICALL int (*TS_RESP_verify_token)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, PKCS7 * token);
	APICALL const void * (*OBJ_bsearch_ex_)(struct AmiSSLIFace *Self, const void * key, const void * base, int num, int size, int (*cmp)(const void *, const void *), int flags);
	APICALL int (*ASN1_bn_print)(struct AmiSSLIFace *Self, BIO * bp, const char * number, const BIGNUM * num, unsigned char * ign, int indent);
	DEPRECATED APICALL int (*EVP_PKEY_asn1_get_count)(struct AmiSSLIFace *Self);
	APICALL void (*ASN1_PCTX_set_nm_flags)(struct AmiSSLIFace *Self, ASN1_PCTX * p, unsigned long flags);
	APICALL int (*EVP_DigestVerifyInit)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, EVP_PKEY_CTX ** pctx, const EVP_MD * type, ENGINE * e, EVP_PKEY * pkey);
	APICALL ASN1_OBJECT * (*TS_TST_INFO_get_policy_id)(struct AmiSSLIFace *Self, TS_TST_INFO * a);
	APICALL int (*TS_REQ_get_cert_req)(struct AmiSSLIFace *Self, const TS_REQ * a);
	APICALL void (*X509_CRL_set_meth_data)(struct AmiSSLIFace *Self, X509_CRL * crl, void * dat);
	APICALL int (*PKCS8_pkey_set0)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * priv, ASN1_OBJECT * aobj, int version, int ptype, void * pval, unsigned char * penc, int penclen);
	APICALL int (*ASN1_STRING_copy)(struct AmiSSLIFace *Self, ASN1_STRING * dst, const ASN1_STRING * str);
	APTR d2i_TS_TST_INFO_fp_UNIMPLEMENTED;
	APICALL int (*X509_CRL_match)(struct AmiSSLIFace *Self, const X509_CRL * a, const X509_CRL * b);
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_private)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*priv_decode)(EVP_PKEY *pk, const PKCS8_PRIV_KEY_INFO *p8inf), int (*priv_encode)(PKCS8_PRIV_KEY_INFO *p8, const EVP_PKEY *pk), int (*priv_print)(BIO *out, const EVP_PKEY *pkey, int indent, ASN1_PCTX *pctx));
	APICALL void * (*TS_TST_INFO_get_ext_d2i)(struct AmiSSLIFace *Self, TS_TST_INFO * a, int nid, int * crit, int * idx);
	APICALL int (*TS_RESP_CTX_add_policy)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, const ASN1_OBJECT * policy);
	APICALL TS_RESP * (*d2i_TS_RESP)(struct AmiSSLIFace *Self, TS_RESP ** a, const unsigned char ** pp, long length);
	APICALL STACK_OF(X509) * (*TS_CONF_load_certs)(struct AmiSSLIFace *Self, const char * file);
	APICALL TS_MSG_IMPRINT * (*TS_TST_INFO_get_msg_imprint)(struct AmiSSLIFace *Self, TS_TST_INFO * a);
	DEPRECATED APICALL int (*ERR_load_TS_strings)(struct AmiSSLIFace *Self);
	APICALL long (*TS_TST_INFO_get_version)(struct AmiSSLIFace *Self, const TS_TST_INFO * a);
	APICALL EVP_PKEY_CTX * (*EVP_PKEY_CTX_dup)(struct AmiSSLIFace *Self, const EVP_PKEY_CTX * ctx);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_verify)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*verify_init)(EVP_PKEY_CTX *ctx), int (*verify)(EVP_PKEY_CTX *ctx, const unsigned char *sig, size_t siglen, const unsigned char *tbs, size_t tbslen));
	APICALL int (*i2b_PublicKey_bio)(struct AmiSSLIFace *Self, BIO * out, const EVP_PKEY * pk);
	APICALL int (*TS_CONF_set_certs)(struct AmiSSLIFace *Self, CONF * conf, const char * section, const char * certs, TS_RESP_CTX * ctx);
	DEPRECATED APICALL int (*EVP_PKEY_asn1_get0_info)(struct AmiSSLIFace *Self, int * ppkey_id, int * ppkey_base_id, int * ppkey_flags, const char ** pinfo, const char ** ppem_str, const EVP_PKEY_ASN1_METHOD * ameth);
	APICALL void (*TS_VERIFY_CTX_free)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx);
	APICALL int (*TS_REQ_get_ext_by_critical)(struct AmiSSLIFace *Self, TS_REQ * a, int crit, int lastpos);
	APICALL void (*TS_RESP_CTX_set_serial_cb)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, TS_serial_cb cb, void * data);
	APICALL void * (*X509_CRL_get_meth_data)(struct AmiSSLIFace *Self, X509_CRL * crl);
	APICALL void (*TS_RESP_CTX_set_time_cb)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, TS_time_cb cb, void * data);
	APICALL ASN1_OCTET_STRING * (*TS_MSG_IMPRINT_get_msg)(struct AmiSSLIFace *Self, TS_MSG_IMPRINT * a);
	APICALL void (*TS_TST_INFO_ext_free)(struct AmiSSLIFace *Self, TS_TST_INFO * a);
	APICALL long (*TS_REQ_get_version)(struct AmiSSLIFace *Self, const TS_REQ * a);
	APICALL int (*TS_REQ_add_ext)(struct AmiSSLIFace *Self, TS_REQ * a, X509_EXTENSION * ex, int loc);
	APICALL void (*EVP_PKEY_CTX_set_app_data)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, void * data);
	APICALL const void * (*OBJ_bsearch_)(struct AmiSSLIFace *Self, const void * key, const void * base, int num, int size, int (*cmp)(const void *, const void *));
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_verifyctx)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*verifyctx_init)(EVP_PKEY_CTX *ctx, EVP_MD_CTX *mctx), int (*verifyctx)(EVP_PKEY_CTX *ctx, const unsigned char *sig,int siglen, EVP_MD_CTX *mctx));
	APICALL int (*i2d_PKCS7_bio_stream)(struct AmiSSLIFace *Self, BIO * out, PKCS7 * p7, BIO * in, int flags);
	APTR CRYPTO_THREADID_set_numeric_UNIMPLEMENTED;
	APICALL PKCS7_SIGNER_INFO * (*PKCS7_sign_add_signer)(struct AmiSSLIFace *Self, PKCS7 * p7, X509 * signcert, EVP_PKEY * pkey, const EVP_MD * md, int flags);
	APICALL TS_TST_INFO * (*d2i_TS_TST_INFO_bio)(struct AmiSSLIFace *Self, BIO * bp, TS_TST_INFO ** a);
	APICALL int (*TS_TST_INFO_get_ordering)(struct AmiSSLIFace *Self, const TS_TST_INFO * a);
	APICALL int (*TS_RESP_print_bio)(struct AmiSSLIFace *Self, BIO * bio, TS_RESP * a);
	APICALL STACK_OF(X509_EXTENSION) * (*TS_TST_INFO_get_exts)(struct AmiSSLIFace *Self, TS_TST_INFO * a);
	APICALL X509_ALGOR * (*PKCS5_pbe2_set_iv)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher, int iter, unsigned char * salt, int saltlen, unsigned char * aiv, int prf_nid);
	APICALL EVP_PKEY * (*b2i_PrivateKey)(struct AmiSSLIFace *Self, const unsigned char ** in, long length);
	APICALL void * (*EVP_PKEY_CTX_get_app_data)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*TS_REQ_set_cert_req)(struct AmiSSLIFace *Self, TS_REQ * a, int cert_req);
	APTR CRYPTO_THREADID_set_callback_UNIMPLEMENTED;
	APICALL int (*TS_CONF_set_serial)(struct AmiSSLIFace *Self, CONF * conf, const char * section, TS_serial_cb cb, TS_RESP_CTX * ctx);
	APICALL void (*TS_TST_INFO_free)(struct AmiSSLIFace *Self, TS_TST_INFO * a);
	APTR d2i_TS_REQ_fp_UNIMPLEMENTED;
	APICALL int (*TS_RESP_verify_response)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, TS_RESP * response);
	APICALL int (*i2d_ESS_ISSUER_SERIAL)(struct AmiSSLIFace *Self, const ESS_ISSUER_SERIAL * a, unsigned char ** pp);
	APICALL const ASN1_INTEGER * (*TS_ACCURACY_get_seconds)(struct AmiSSLIFace *Self, const TS_ACCURACY * a);
	APICALL void (*EVP_CIPHER_do_all)(struct AmiSSLIFace *Self, void (*fn)(const EVP_CIPHER *ciph, const char *from, const char *to, void *x), void * arg);
	APICALL EVP_PKEY * (*b2i_PrivateKey_bio)(struct AmiSSLIFace *Self, BIO * in);
	APICALL OCSP_CERTID * (*OCSP_CERTID_dup)(struct AmiSSLIFace *Self, const OCSP_CERTID * a);
	APICALL int (*X509_PUBKEY_get0_param)(struct AmiSSLIFace *Self, ASN1_OBJECT ** ppkalg, const unsigned char ** pk, int * ppklen, X509_ALGOR ** pa, const X509_PUBKEY * pub);
	APICALL TS_MSG_IMPRINT * (*TS_MSG_IMPRINT_dup)(struct AmiSSLIFace *Self, const TS_MSG_IMPRINT * a);
	APICALL int (*PKCS7_print_ctx)(struct AmiSSLIFace *Self, BIO * out, const PKCS7 * x, int indent, const ASN1_PCTX * pctx);
	APICALL int (*i2d_TS_REQ_bio)(struct AmiSSLIFace *Self, BIO * fp, const TS_REQ * a);
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_param)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*param_decode)(EVP_PKEY *pkey, const unsigned char **pder, int derlen), int (*param_encode)(const EVP_PKEY *pkey, unsigned char **pder), int (*param_missing)(const EVP_PKEY *pk), int (*param_copy)(EVP_PKEY *to, const EVP_PKEY *from), int (*param_cmp)(const EVP_PKEY *a, const EVP_PKEY *b), int (*param_print)(BIO *out, const EVP_PKEY *pkey, int indent, ASN1_PCTX *pctx));
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_encrypt)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*encrypt_init)(EVP_PKEY_CTX *ctx), int (*encryptfn)(EVP_PKEY_CTX *ctx, unsigned char *out, size_t *outlen, const unsigned char *in, size_t inlen));
	APICALL void (*ASN1_PCTX_set_flags)(struct AmiSSLIFace *Self, ASN1_PCTX * p, unsigned long flags);
	APICALL int (*i2d_ESS_CERT_ID)(struct AmiSSLIFace *Self, const ESS_CERT_ID * a, unsigned char ** pp);
	APICALL TS_VERIFY_CTX * (*TS_VERIFY_CTX_new)(struct AmiSSLIFace *Self);
	APICALL void (*TS_RESP_CTX_set_extension_cb)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, TS_extension_cb cb, void * data);
	APICALL int (*TS_RESP_CTX_set_status_info_cond)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, int status, const char * text);
	APICALL int (*EVP_PKEY_verify)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const unsigned char * sig, size_t siglen, const unsigned char * tbs, size_t tbslen);
	APICALL X509_CRL_METHOD * (*X509_CRL_METHOD_new)(struct AmiSSLIFace *Self, int (*crl_init)(X509_CRL *crl), int (*crl_free)(X509_CRL *crl), int (*crl_lookup)(X509_CRL *crl, X509_REVOKED **ret, const ASN1_INTEGER *serial, const X509_NAME *issuer), int (*crl_verify)(X509_CRL *crl, EVP_PKEY *pk));
	APICALL int (*EVP_DigestSignFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * sigret, size_t * siglen);
	APICALL int (*TS_RESP_CTX_set_def_policy)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, const ASN1_OBJECT * def_policy);
	APICALL TS_RESP * (*TS_RESP_create_response)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, BIO * req_bio);
	APICALL void (*PKCS7_SIGNER_INFO_get0_algs)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si, EVP_PKEY ** pk, X509_ALGOR ** pdig, X509_ALGOR ** psig);
	APICALL const ASN1_INTEGER * (*TS_TST_INFO_get_nonce)(struct AmiSSLIFace *Self, const TS_TST_INFO * a);
	DEPRECATED APICALL int (*EVP_PKEY_decrypt_old)(struct AmiSSLIFace *Self, unsigned char * dec_key, const unsigned char * enc_key, int enc_key_len, EVP_PKEY * private_key);
	APICALL int (*TS_TST_INFO_set_policy_id)(struct AmiSSLIFace *Self, TS_TST_INFO * a, ASN1_OBJECT * policy_id);
	APICALL int (*TS_CONF_set_ess_cert_id_chain)(struct AmiSSLIFace *Self, CONF * conf, const char * section, TS_RESP_CTX * ctx);
	APICALL EVP_PKEY * (*EVP_PKEY_CTX_get0_pkey)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL TS_REQ * (*d2i_TS_REQ)(struct AmiSSLIFace *Self, TS_REQ ** a, const unsigned char ** pp, long length);
	DEPRECATED APICALL const EVP_PKEY_ASN1_METHOD * (*EVP_PKEY_asn1_find_str)(struct AmiSSLIFace *Self, ENGINE ** pe, const char * str, int len);
	APICALL const BIO_METHOD * (*BIO_f_asn1)(struct AmiSSLIFace *Self);
	APICALL ESS_SIGNING_CERT * (*ESS_SIGNING_CERT_new)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_PBE_find)(struct AmiSSLIFace *Self, int type, int pbe_nid, int * pcnid, int * pmnid, EVP_PBE_KEYGEN ** pkeygen);
	APICALL int (*X509_CRL_get0_by_cert)(struct AmiSSLIFace *Self, X509_CRL * crl, X509_REVOKED ** ret, X509 * x);
	APICALL int (*EVP_PKEY_derive)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char * key, size_t * keylen);
	APICALL int (*i2d_TS_REQ)(struct AmiSSLIFace *Self, const TS_REQ * a, unsigned char ** pp);
	APICALL X509_EXTENSION * (*TS_TST_INFO_delete_ext)(struct AmiSSLIFace *Self, TS_TST_INFO * a, int loc);
	APICALL void (*ESS_ISSUER_SERIAL_free)(struct AmiSSLIFace *Self, ESS_ISSUER_SERIAL * a);
	APICALL void (*ASN1_PCTX_set_str_flags)(struct AmiSSLIFace *Self, ASN1_PCTX * p, unsigned long flags);
	APICALL int (*TS_CONF_set_signer_key)(struct AmiSSLIFace *Self, CONF * conf, const char * section, const char * key, const char * pass, TS_RESP_CTX * ctx);
	APICALL const ASN1_INTEGER * (*TS_ACCURACY_get_millis)(struct AmiSSLIFace *Self, const TS_ACCURACY * a);
	APICALL PKCS7 * (*TS_RESP_get_token)(struct AmiSSLIFace *Self, TS_RESP * a);
	APICALL TS_ACCURACY * (*TS_ACCURACY_dup)(struct AmiSSLIFace *Self, const TS_ACCURACY * a);
	APICALL void (*X509_CRL_set_default_method)(struct AmiSSLIFace *Self, const X509_CRL_METHOD * meth);
	APTR CRYPTO_THREADID_hash_UNIMPLEMENTED;
	APICALL void (*TS_RESP_free)(struct AmiSSLIFace *Self, TS_RESP * a);
	APICALL void (*ISSUING_DIST_POINT_free)(struct AmiSSLIFace *Self, ISSUING_DIST_POINT * a);
	APICALL ESS_ISSUER_SERIAL * (*ESS_ISSUER_SERIAL_new)(struct AmiSSLIFace *Self);
	APICALL int (*PKCS7_add1_attrib_digest)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si, const unsigned char * md, int mdlen);
	APICALL int (*TS_RESP_CTX_add_md)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, const EVP_MD * md);
	APICALL TS_TST_INFO * (*TS_TST_INFO_dup)(struct AmiSSLIFace *Self, const TS_TST_INFO * a);
	APICALL int (*PEM_write_bio_Parameters)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * x);
	APICALL TS_ACCURACY * (*TS_TST_INFO_get_accuracy)(struct AmiSSLIFace *Self, TS_TST_INFO * a);
	APICALL int (*X509_CRL_get0_by_serial)(struct AmiSSLIFace *Self, X509_CRL * crl, X509_REVOKED ** ret, const ASN1_INTEGER * serial);
	APICALL int (*TS_TST_INFO_set_version)(struct AmiSSLIFace *Self, TS_TST_INFO * a, long version);
	APICALL TS_TST_INFO * (*TS_RESP_CTX_get_tst_info)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx);
	APICALL int (*TS_RESP_verify_signature)(struct AmiSSLIFace *Self, PKCS7 * token, STACK_OF(X509) * certs, X509_STORE * store, X509 ** signer_out);
	APTR CRYPTO_THREADID_get_callback_UNIMPLEMENTED;
	APICALL GENERAL_NAME * (*TS_TST_INFO_get_tsa)(struct AmiSSLIFace *Self, TS_TST_INFO * a);
	APICALL TS_STATUS_INFO * (*TS_STATUS_INFO_new)(struct AmiSSLIFace *Self);
	APICALL int (*(*EVP_PKEY_CTX_get_cb)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx))(EVP_PKEY_CTX *ctx);
	APICALL void * (*TS_REQ_get_ext_d2i)(struct AmiSSLIFace *Self, TS_REQ * a, int nid, int * crit, int * idx);
	APICALL int (*GENERAL_NAME_set0_othername)(struct AmiSSLIFace *Self, GENERAL_NAME * gen, ASN1_OBJECT * oid, ASN1_TYPE * value);
	APICALL int (*TS_TST_INFO_get_ext_count)(struct AmiSSLIFace *Self, TS_TST_INFO * a);
	APICALL TS_REQ * (*TS_RESP_CTX_get_request)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx);
	APTR i2d_NETSCAPE_X509_UNIMPLEMENTED;
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_signctx)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*signctx_init)(EVP_PKEY_CTX *ctx, EVP_MD_CTX *mctx), int (*signctx)(EVP_PKEY_CTX *ctx, unsigned char *sig, size_t *siglen, EVP_MD_CTX *mctx));
	DEPRECATED APICALL void (*EVP_PKEY_asn1_copy)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * dst, const EVP_PKEY_ASN1_METHOD * src);
	APICALL int (*ASN1_TYPE_cmp)(struct AmiSSLIFace *Self, const ASN1_TYPE * a, const ASN1_TYPE * b);
	APICALL void (*EVP_CIPHER_do_all_sorted)(struct AmiSSLIFace *Self, void (*fn)(const EVP_CIPHER *ciph, const char *from, const char *to, void *x), void * arg);
	APICALL void (*EVP_PKEY_CTX_free)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APTR d2i_TS_MSG_IMPRINT_fp_UNIMPLEMENTED;
	APICALL STACK_OF(X509) * (*X509_STORE_CTX_get1_certs)(struct AmiSSLIFace *Self, X509_STORE_CTX * xs, const X509_NAME * nm);
	APICALL int (*EVP_PKEY_CTX_get_operation)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL ESS_SIGNING_CERT * (*d2i_ESS_SIGNING_CERT)(struct AmiSSLIFace *Self, ESS_SIGNING_CERT ** a, const unsigned char ** pp, long length);
	APICALL int (*TS_CONF_set_ordering)(struct AmiSSLIFace *Self, CONF * conf, const char * section, TS_RESP_CTX * ctx);
	APICALL int (*EVP_PBE_alg_add_type)(struct AmiSSLIFace *Self, int pbe_type, int pbe_nid, int cipher_nid, int md_nid, EVP_PBE_KEYGEN * keygen);
	APICALL int (*TS_REQ_set_version)(struct AmiSSLIFace *Self, TS_REQ * a, long version);
	DEPRECATED APICALL void * (*EVP_PKEY_get0)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL int (*BIO_asn1_set_suffix)(struct AmiSSLIFace *Self, BIO * b, asn1_ps_func * suffix, asn1_ps_func * suffix_free);
	APICALL int (*i2d_TS_STATUS_INFO)(struct AmiSSLIFace *Self, const TS_STATUS_INFO * a, unsigned char ** pp);
	APICALL void (*EVP_MD_do_all)(struct AmiSSLIFace *Self, void (*fn)(const EVP_MD *ciph, const char *from, const char *to, void *x), void * arg);
	APICALL int (*TS_TST_INFO_set_accuracy)(struct AmiSSLIFace *Self, TS_TST_INFO * a, TS_ACCURACY * accuracy);
	APICALL int (*PKCS7_add_attrib_content_type)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si, ASN1_OBJECT * coid);
	DEPRECATED APICALL int (*EVP_PKEY_meth_add0)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth);
	APICALL int (*TS_TST_INFO_set_tsa)(struct AmiSSLIFace *Self, TS_TST_INFO * a, GENERAL_NAME * tsa);
	DEPRECATED APICALL EVP_PKEY_METHOD * (*EVP_PKEY_meth_new)(struct AmiSSLIFace *Self, int id, int flags);
	APICALL int (*TS_CONF_set_accuracy)(struct AmiSSLIFace *Self, CONF * conf, const char * section, TS_RESP_CTX * ctx);
	APICALL void (*ASN1_PCTX_set_oid_flags)(struct AmiSSLIFace *Self, ASN1_PCTX * p, unsigned long flags);
	APICALL ESS_SIGNING_CERT * (*ESS_SIGNING_CERT_dup)(struct AmiSSLIFace *Self, const ESS_SIGNING_CERT * a);
	APICALL TS_REQ * (*d2i_TS_REQ_bio)(struct AmiSSLIFace *Self, BIO * fp, TS_REQ ** a);
	APICALL ASN1_TIME * (*X509_time_adj_ex)(struct AmiSSLIFace *Self, ASN1_TIME * s, int offset_day, long offset_sec, time_t * t);
	APICALL void (*TS_RESP_CTX_add_flags)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, int flags);
	APICALL TS_STATUS_INFO * (*d2i_TS_STATUS_INFO)(struct AmiSSLIFace *Self, TS_STATUS_INFO ** a, const unsigned char ** pp, long length);
	APICALL int (*TS_MSG_IMPRINT_set_msg)(struct AmiSSLIFace *Self, TS_MSG_IMPRINT * a, unsigned char * d, int len);
	APICALL int (*BIO_asn1_get_suffix)(struct AmiSSLIFace *Self, BIO * b, asn1_ps_func ** psuffix, asn1_ps_func ** psuffix_free);
	APICALL void (*TS_REQ_free)(struct AmiSSLIFace *Self, TS_REQ * a);
	DEPRECATED APICALL void (*EVP_PKEY_meth_free)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth);
	APICALL STACK_OF(X509_EXTENSION) * (*TS_REQ_get_exts)(struct AmiSSLIFace *Self, TS_REQ * a);
	APICALL int (*TS_RESP_CTX_set_clock_precision_digits)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, unsigned clock_precision_digits);
	APICALL int (*TS_RESP_CTX_add_failure_info)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, int failure);
	APICALL int (*i2d_TS_RESP_bio)(struct AmiSSLIFace *Self, BIO * fp, const TS_RESP * a);
	APICALL EVP_PKEY * (*EVP_PKEY_CTX_get0_peerkey)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL TS_REQ * (*TS_REQ_new)(struct AmiSSLIFace *Self);
	APICALL TS_MSG_IMPRINT * (*TS_MSG_IMPRINT_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const EVP_PKEY_METHOD * (*EVP_PKEY_meth_find)(struct AmiSSLIFace *Self, int type);
	APICALL int (*EVP_PKEY_get_id)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL int (*TS_TST_INFO_set_serial)(struct AmiSSLIFace *Self, TS_TST_INFO * a, const ASN1_INTEGER * serial);
	APICALL GENERAL_NAME * (*a2i_GENERAL_NAME)(struct AmiSSLIFace *Self, GENERAL_NAME * out, const X509V3_EXT_METHOD * method, X509V3_CTX * ctx, int gen_type, const char * value, int is_nc);
	APICALL int (*TS_CONF_set_crypto_device)(struct AmiSSLIFace *Self, CONF * conf, const char * section, const char * device);
	APICALL int (*EVP_PKEY_verify_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*TS_CONF_set_policies)(struct AmiSSLIFace *Self, CONF * conf, const char * section, TS_RESP_CTX * ctx);
	APICALL ASN1_PCTX * (*ASN1_PCTX_new)(struct AmiSSLIFace *Self);
	APICALL void (*ESS_CERT_ID_free)(struct AmiSSLIFace *Self, ESS_CERT_ID * a);
	APICALL void (*TS_MSG_IMPRINT_free)(struct AmiSSLIFace *Self, TS_MSG_IMPRINT * a);
	APICALL void (*TS_VERIFY_CTX_init)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx);
	APICALL int (*PKCS7_stream)(struct AmiSSLIFace *Self, unsigned char *** boundary, PKCS7 * p7);
	APICALL int (*TS_RESP_CTX_set_certs)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, STACK_OF(X509) * certs);
	APICALL int (*TS_CONF_set_def_policy)(struct AmiSSLIFace *Self, CONF * conf, const char * section, const char * policy, TS_RESP_CTX * ctx);
	APICALL ASN1_GENERALIZEDTIME * (*ASN1_GENERALIZEDTIME_adj)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * s, time_t t, int offset_day, long offset_sec);
	APTR NETSCAPE_X509_new_UNIMPLEMENTED;
	APICALL void (*TS_ACCURACY_free)(struct AmiSSLIFace *Self, TS_ACCURACY * a);
	APICALL TS_TST_INFO * (*TS_RESP_get_tst_info)(struct AmiSSLIFace *Self, TS_RESP * a);
	APICALL int (*EVP_PKEY_derive_set_peer)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_PKEY * peer);
	APICALL EVP_PKEY * (*PEM_read_bio_Parameters)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** x);
	APICALL int (*TS_CONF_set_clock_precision_digits)(struct AmiSSLIFace *Self, const CONF * conf, const char * section, TS_RESP_CTX * ctx);
	APICALL ESS_ISSUER_SERIAL * (*ESS_ISSUER_SERIAL_dup)(struct AmiSSLIFace *Self, const ESS_ISSUER_SERIAL * a);
	APICALL const ASN1_INTEGER * (*TS_ACCURACY_get_micros)(struct AmiSSLIFace *Self, const TS_ACCURACY * a);
	APICALL unsigned long (*ASN1_PCTX_get_str_flags)(struct AmiSSLIFace *Self, const ASN1_PCTX * p);
	APICALL int (*NAME_CONSTRAINTS_check)(struct AmiSSLIFace *Self, X509 * x, NAME_CONSTRAINTS * nc);
	APICALL int (*ASN1_BIT_STRING_check)(struct AmiSSLIFace *Self, const ASN1_BIT_STRING * a, const unsigned char * flags, int flags_len);
	APICALL int (*X509_check_akid)(struct AmiSSLIFace *Self, const X509 * issuer, const AUTHORITY_KEYID * akid);
	APICALL void (*ASN1_PCTX_free)(struct AmiSSLIFace *Self, ASN1_PCTX * p);
	APICALL int (*PEM_write_bio_ASN1_stream)(struct AmiSSLIFace *Self, BIO * out, ASN1_VALUE * val, BIO * in, int flags, const char * hdr, const ASN1_ITEM * it);
	APICALL int (*i2d_ASN1_bio_stream)(struct AmiSSLIFace *Self, BIO * out, ASN1_VALUE * val, BIO * in, int flags, const ASN1_ITEM * it);
	APICALL int (*TS_X509_ALGOR_print_bio)(struct AmiSSLIFace *Self, BIO * bio, const X509_ALGOR * alg);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_cleanup)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, void (*cleanup)(EVP_PKEY_CTX *ctx));
	DEPRECATED APICALL void (*EVP_PKEY_asn1_free)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth);
	APICALL void (*ESS_SIGNING_CERT_free)(struct AmiSSLIFace *Self, ESS_SIGNING_CERT * a);
	APICALL int (*TS_TST_INFO_set_msg_imprint)(struct AmiSSLIFace *Self, TS_TST_INFO * a, TS_MSG_IMPRINT * msg_imprint);
	APICALL int (*GENERAL_NAME_cmp)(struct AmiSSLIFace *Self, GENERAL_NAME * a, GENERAL_NAME * b);
	APICALL ASN1_SEQUENCE_ANY * (*d2i_ASN1_SET_ANY)(struct AmiSSLIFace *Self, ASN1_SEQUENCE_ANY ** a, const unsigned char ** pp, long length);
	APTR i2d_TS_REQ_fp_UNIMPLEMENTED;
	APICALL ASN1_SEQUENCE_ANY * (*d2i_ASN1_SEQUENCE_ANY)(struct AmiSSLIFace *Self, ASN1_SEQUENCE_ANY ** a, const unsigned char ** pp, long length);
	APICALL int (*GENERAL_NAME_get0_otherName)(struct AmiSSLIFace *Self, const GENERAL_NAME * gen, ASN1_OBJECT ** poid, ASN1_TYPE ** pvalue);
	APICALL ESS_CERT_ID * (*d2i_ESS_CERT_ID)(struct AmiSSLIFace *Self, ESS_CERT_ID ** a, const unsigned char ** pp, long length);
	APICALL int (*OBJ_find_sigid_algs)(struct AmiSSLIFace *Self, int signid, int * pdig_nid, int * ppkey_nid);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_keygen)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*keygen_init)(EVP_PKEY_CTX *ctx), int (*keygen)(EVP_PKEY_CTX *ctx, EVP_PKEY *pkey));
	APICALL int (*PKCS5_PBKDF2_HMAC)(struct AmiSSLIFace *Self, const char * pass, int passlen, const unsigned char * salt, int saltlen, int iter, const EVP_MD * digest, int keylen, unsigned char * out);
	APICALL int (*EVP_PKEY_paramgen)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_PKEY ** ppkey);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_paramgen)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*paramgen_init)(EVP_PKEY_CTX *ctx), int (*paramgen)(EVP_PKEY_CTX *ctx, EVP_PKEY *pkey));
	APICALL BIO * (*BIO_new_PKCS7)(struct AmiSSLIFace *Self, BIO * out, PKCS7 * p7);
	APICALL int (*EVP_PKEY_verify_recover)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char * rout, size_t * routlen, const unsigned char * sig, size_t siglen);
	APICALL int (*TS_ext_print_bio)(struct AmiSSLIFace *Self, BIO * bio, const STACK_OF(X509_EXTENSION) * extensions);
	APICALL int (*TS_ASN1_INTEGER_print_bio)(struct AmiSSLIFace *Self, BIO * bio, const ASN1_INTEGER * num);
	APTR check_defer_UNIMPLEMENTED;
	APTR DSO_pathbyaddr_UNIMPLEMENTED;
	APICALL int (*EVP_PKEY_set_type)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, int type);
	APICALL int (*TS_ACCURACY_set_micros)(struct AmiSSLIFace *Self, TS_ACCURACY * a, const ASN1_INTEGER * micros);
	APICALL TS_VERIFY_CTX * (*TS_REQ_to_TS_VERIFY_CTX)(struct AmiSSLIFace *Self, TS_REQ * req, TS_VERIFY_CTX * ctx);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_copy)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*copy)(EVP_PKEY_CTX *dst, const EVP_PKEY_CTX *src));
	APICALL void (*ASN1_PCTX_set_cert_flags)(struct AmiSSLIFace *Self, ASN1_PCTX * p, unsigned long flags);
	APICALL X509_EXTENSION * (*TS_TST_INFO_get_ext)(struct AmiSSLIFace *Self, TS_TST_INFO * a, int loc);
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_ctrl)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*pkey_ctrl)(EVP_PKEY *pkey, int op, long arg1, void *arg2));
	APICALL int (*TS_TST_INFO_get_ext_by_critical)(struct AmiSSLIFace *Self, TS_TST_INFO * a, int crit, int lastpos);
	APICALL EVP_PKEY_CTX * (*EVP_PKEY_CTX_new_id)(struct AmiSSLIFace *Self, int id, ENGINE * e);
	APICALL int (*TS_REQ_get_ext_by_OBJ)(struct AmiSSLIFace *Self, TS_REQ * a, const ASN1_OBJECT * obj, int lastpos);
	APICALL int (*TS_CONF_set_signer_cert)(struct AmiSSLIFace *Self, CONF * conf, const char * section, const char * cert, TS_RESP_CTX * ctx);
	APICALL unsigned long (*X509_NAME_hash_old)(struct AmiSSLIFace *Self, const X509_NAME * x);
	APICALL int (*ASN1_TIME_set_string)(struct AmiSSLIFace *Self, ASN1_TIME * s, const char * str);
	APICALL unsigned long (*EVP_MD_get_flags)(struct AmiSSLIFace *Self, const EVP_MD * md);
	APICALL void (*TS_RESP_CTX_free)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx);
	APICALL int (*OSSL_HTTP_REQ_CTX_add1_header)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, const char * name, const char * value);
	APICALL int (*OBSOLETE_OCSP_REQ_CTX_set1_req)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, OCSP_REQUEST * req);
	APICALL void (*X509_STORE_set_verify_cb)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_verify_cb verify_cb);
	APICALL X509_CRL * (*X509_STORE_CTX_get0_current_crl)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509_STORE_CTX * (*X509_STORE_CTX_get0_parent_ctx)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509 * (*X509_STORE_CTX_get0_current_issuer)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL int (*EVP_CIPHER_CTX_copy)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * out, const EVP_CIPHER_CTX * in);
	APICALL char *(*(*UI_method_get_prompt_constructor)(struct AmiSSLIFace *Self, const UI_METHOD * method))(UI*, const char*, const char*);
	APICALL int (*UI_method_set_prompt_constructor)(struct AmiSSLIFace *Self, UI_METHOD * method, char *(*prompt_constructor)(UI* ui, const char* object_desc, const char* object_name));
	APICALL int (*EVP_read_pw_string_min)(struct AmiSSLIFace *Self, char * buf, int minlen, int maxlen, const char * prompt, int verify);
	APICALL size_t (*CRYPTO_cts128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, cbc128_f cbc);
	APICALL size_t (*CRYPTO_cts128_decrypt_block)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, block128_f block);
	APICALL void (*CRYPTO_cfb128_1_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t bits, const void * key, unsigned char * ivec, int * num, int enc, block128_f block);
	APICALL void (*CRYPTO_cbc128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, block128_f block);
	APICALL void (*CRYPTO_ctr128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, unsigned char * ecount_buf, unsigned int * num, block128_f block);
	APICALL void (*CRYPTO_ofb128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, int * num, block128_f block);
	APICALL size_t (*CRYPTO_cts128_decrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, cbc128_f cbc);
	APICALL size_t (*CRYPTO_cts128_encrypt_block)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, block128_f block);
	APICALL void (*CRYPTO_cbc128_decrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, block128_f block);
	APICALL void (*CRYPTO_cfb128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, int * num, int enc, block128_f block);
	APICALL void (*CRYPTO_cfb128_8_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t length, const void * key, unsigned char * ivec, int * num, int enc, block128_f block);
	APTR OPENSSL_memcmp_UNIMPLEMENTED;
	APICALL struct tm * (*OPENSSL_gmtime)(struct AmiSSLIFace *Self, const time_t * timer, struct tm * result);
	APICALL int (*OPENSSL_gmtime_adj)(struct AmiSSLIFace *Self, struct tm * tm, int offset_day, long offset_sec);
	APICALL int (*OPENSSL_gmtime_diff)(struct AmiSSLIFace *Self, int * pday, int * psec, const struct tm * from, const struct tm * to);
	DEPRECATED APICALL void (*EVP_PKEY_meth_get0_info)(struct AmiSSLIFace *Self, int * ppkey_id, int * pflags, const EVP_PKEY_METHOD * meth);
	DEPRECATED APICALL void (*EVP_PKEY_meth_copy)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * dst, const EVP_PKEY_METHOD * src);
	DEPRECATED APICALL int (*RSA_padding_add_PKCS1_PSS_mgf1)(struct AmiSSLIFace *Self, RSA * rsa, unsigned char * EM, const unsigned char * mHash, const EVP_MD * Hash, const EVP_MD * mgf1Hash, int sLen);
	DEPRECATED APICALL int (*RSA_verify_PKCS1_PSS_mgf1)(struct AmiSSLIFace *Self, RSA * rsa, const unsigned char * mHash, const EVP_MD * Hash, const EVP_MD * mgf1Hash, const unsigned char * EM, int sLen);
	APICALL void (*X509_ALGOR_set_md)(struct AmiSSLIFace *Self, X509_ALGOR * alg, const EVP_MD * md);
	DEPRECATED APICALL int (*CMAC_CTX_copy)(struct AmiSSLIFace *Self, CMAC_CTX * out, const CMAC_CTX * in);
	DEPRECATED APICALL void (*CMAC_CTX_free)(struct AmiSSLIFace *Self, CMAC_CTX * ctx);
	DEPRECATED APICALL EVP_CIPHER_CTX * (*CMAC_CTX_get0_cipher_ctx)(struct AmiSSLIFace *Self, CMAC_CTX * ctx);
	DEPRECATED APICALL void (*CMAC_CTX_cleanup)(struct AmiSSLIFace *Self, CMAC_CTX * ctx);
	DEPRECATED APICALL int (*CMAC_Init)(struct AmiSSLIFace *Self, CMAC_CTX * ctx, const void * key, size_t keylen, const EVP_CIPHER * cipher, ENGINE * impl);
	DEPRECATED APICALL int (*CMAC_Update)(struct AmiSSLIFace *Self, CMAC_CTX * ctx, const void * data, size_t dlen);
	DEPRECATED APICALL int (*CMAC_resume)(struct AmiSSLIFace *Self, CMAC_CTX * ctx);
	DEPRECATED APICALL CMAC_CTX * (*CMAC_CTX_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*CMAC_Final)(struct AmiSSLIFace *Self, CMAC_CTX * ctx, unsigned char * out, size_t * poutlen);
	APICALL void (*CRYPTO_ctr128_encrypt_ctr32)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, unsigned char * ecount_buf, unsigned int * num, ctr128_f ctr);
	APICALL void (*CRYPTO_gcm128_release)(struct AmiSSLIFace *Self, GCM128_CONTEXT * ctx);
	APICALL int (*CRYPTO_ccm128_decrypt_ccm64)(struct AmiSSLIFace *Self, CCM128_CONTEXT * ctx, const unsigned char * inp, unsigned char * out, size_t len, ccm128_f stream);
	APICALL int (*CRYPTO_ccm128_encrypt)(struct AmiSSLIFace *Self, CCM128_CONTEXT * ctx, const unsigned char * inp, unsigned char * out, size_t len);
	APICALL int (*CRYPTO_gcm128_encrypt)(struct AmiSSLIFace *Self, GCM128_CONTEXT * ctx, const unsigned char * in, unsigned char * out, size_t len);
	APICALL int (*CRYPTO_xts128_encrypt)(struct AmiSSLIFace *Self, const XTS128_CONTEXT * ctx, const unsigned char * iv, const unsigned char * inp, unsigned char * out, size_t len, int enc);
	APICALL size_t (*CRYPTO_nistcts128_decrypt_block)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, block128_f block);
	APICALL void (*CRYPTO_gcm128_setiv)(struct AmiSSLIFace *Self, GCM128_CONTEXT * ctx, const unsigned char * iv, size_t len);
	APICALL size_t (*CRYPTO_nistcts128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, cbc128_f cbc);
	APICALL void (*CRYPTO_gcm128_tag)(struct AmiSSLIFace *Self, GCM128_CONTEXT * ctx, unsigned char * tag, size_t len);
	APICALL int (*CRYPTO_ccm128_encrypt_ccm64)(struct AmiSSLIFace *Self, CCM128_CONTEXT * ctx, const unsigned char * inp, unsigned char * out, size_t len, ccm128_f stream);
	APICALL int (*CRYPTO_ccm128_setiv)(struct AmiSSLIFace *Self, CCM128_CONTEXT * ctx, const unsigned char * nonce, size_t nlen, size_t mlen);
	APICALL size_t (*CRYPTO_nistcts128_encrypt_block)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, block128_f block);
	APICALL int (*CRYPTO_gcm128_aad)(struct AmiSSLIFace *Self, GCM128_CONTEXT * ctx, const unsigned char * aad, size_t len);
	APICALL void (*CRYPTO_ccm128_init)(struct AmiSSLIFace *Self, CCM128_CONTEXT * ctx, unsigned int M, unsigned int L, void * key, block128_f block);
	APICALL size_t (*CRYPTO_nistcts128_decrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, size_t len, const void * key, unsigned char * ivec, cbc128_f cbc);
	APICALL GCM128_CONTEXT * (*CRYPTO_gcm128_new)(struct AmiSSLIFace *Self, void * key, block128_f block);
	APICALL size_t (*CRYPTO_ccm128_tag)(struct AmiSSLIFace *Self, CCM128_CONTEXT * ctx, unsigned char * tag, size_t len);
	APICALL int (*CRYPTO_ccm128_decrypt)(struct AmiSSLIFace *Self, CCM128_CONTEXT * ctx, const unsigned char * inp, unsigned char * out, size_t len);
	APICALL void (*CRYPTO_ccm128_aad)(struct AmiSSLIFace *Self, CCM128_CONTEXT * ctx, const unsigned char * aad, size_t alen);
	APICALL void (*CRYPTO_gcm128_init)(struct AmiSSLIFace *Self, GCM128_CONTEXT * ctx, void * key, block128_f block);
	APICALL int (*CRYPTO_gcm128_decrypt)(struct AmiSSLIFace *Self, GCM128_CONTEXT * ctx, const unsigned char * in, unsigned char * out, size_t len);
	APICALL int (*CRYPTO_gcm128_decrypt_ctr32)(struct AmiSSLIFace *Self, GCM128_CONTEXT * ctx, const unsigned char * in, unsigned char * out, size_t len, ctr128_f stream);
	APICALL int (*CRYPTO_gcm128_encrypt_ctr32)(struct AmiSSLIFace *Self, GCM128_CONTEXT * ctx, const unsigned char * in, unsigned char * out, size_t len, ctr128_f stream);
	APICALL int (*CRYPTO_gcm128_finish)(struct AmiSSLIFace *Self, GCM128_CONTEXT * ctx, const unsigned char * tag, size_t len);
	APICALL X509_ALGOR * (*PKCS5_pbkdf2_set)(struct AmiSSLIFace *Self, int iter, unsigned char * salt, int saltlen, int prf_nid, int keylen);
	APICALL RSA_PSS_PARAMS * (*RSA_PSS_PARAMS_new)(struct AmiSSLIFace *Self);
	APICALL RSA_PSS_PARAMS * (*d2i_RSA_PSS_PARAMS)(struct AmiSSLIFace *Self, RSA_PSS_PARAMS ** a, const unsigned char ** pp, long length);
	APICALL void (*RSA_PSS_PARAMS_free)(struct AmiSSLIFace *Self, RSA_PSS_PARAMS * a);
	APICALL int (*i2d_RSA_PSS_PARAMS)(struct AmiSSLIFace *Self, const RSA_PSS_PARAMS * a, unsigned char ** out);
	APTR OPENSSL_stderr_UNIMPLEMENTED;
	APTR OPENSSL_showfatal_UNIMPLEMENTED;
	APICALL const ASN1_ITEM * (*POLICY_MAPPING_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*NAME_CONSTRAINTS_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ASN1_OCTET_STRING_NDEF_it)(struct AmiSSLIFace *Self);
	APTR X509_CERT_PAIR_it_UNIMPLEMENTED;
	APICALL const ASN1_ITEM * (*POLICY_CONSTRAINTS_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*POLICY_MAPPINGS_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*GENERAL_SUBTREE_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*X509_EXTENSIONS_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*X509_ALGORS_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*CMS_ContentInfo_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*CMS_ReceiptRequest_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ASN1_SEQUENCE_ANY_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ASN1_SET_ANY_it)(struct AmiSSLIFace *Self);
	APTR NETSCAPE_X509_it_UNIMPLEMENTED;
	APICALL const ASN1_ITEM * (*ISSUING_DIST_POINT_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*RSA_PSS_PARAMS_it)(struct AmiSSLIFace *Self);
	APTR ENGINE_load_gost_UNIMPLEMENTED;
	DEPRECATED APICALL int (*PEM_write_bio_DHxparams)(struct AmiSSLIFace *Self, BIO * bp, const DH * x);
	APICALL int (*X509_ALGOR_cmp)(struct AmiSSLIFace *Self, const X509_ALGOR * a, const X509_ALGOR * b);
	APICALL void (*ASN1_STRING_clear_free)(struct AmiSSLIFace *Self, ASN1_STRING * a);
	APICALL int (*ASN1_TIME_diff)(struct AmiSSLIFace *Self, int * pday, int * psec, const ASN1_TIME * from, const ASN1_TIME * to);
	APICALL int (*BIO_hex_string)(struct AmiSSLIFace *Self, BIO * out, int indent, int width, const void * data, int datalen);
	APICALL size_t (*OBSOLETE_BUF_strnlen)(struct AmiSSLIFace *Self, const char * str, size_t maxlen);
	APICALL int (*CMS_RecipientEncryptedKey_cert_cmp)(struct AmiSSLIFace *Self, CMS_RecipientEncryptedKey * rek, X509 * cert);
	APICALL int (*CMS_RecipientEncryptedKey_get0_id)(struct AmiSSLIFace *Self, CMS_RecipientEncryptedKey * rek, ASN1_OCTET_STRING ** keyid, ASN1_GENERALIZEDTIME ** tm, CMS_OtherKeyAttribute ** other, X509_NAME ** issuer, ASN1_INTEGER ** sno);
	APICALL int (*CMS_RecipientInfo_encrypt)(struct AmiSSLIFace *Self, const CMS_ContentInfo * cms, CMS_RecipientInfo * ri);
	APICALL EVP_PKEY_CTX * (*CMS_RecipientInfo_get0_pkey_ctx)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri);
	APICALL int (*CMS_RecipientInfo_kari_decrypt)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, CMS_RecipientInfo * ri, CMS_RecipientEncryptedKey * rek);
	APICALL int (*CMS_RecipientInfo_kari_get0_alg)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, X509_ALGOR ** palg, ASN1_OCTET_STRING ** pukm);
	APICALL EVP_CIPHER_CTX * (*CMS_RecipientInfo_kari_get0_ctx)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri);
	APICALL int (*CMS_RecipientInfo_kari_get0_orig_id)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, X509_ALGOR ** pubalg, ASN1_BIT_STRING ** pubkey, ASN1_OCTET_STRING ** keyid, X509_NAME ** issuer, ASN1_INTEGER ** sno);
	APICALL STACK_OF(CMS_RecipientEncryptedKey) * (*CMS_RecipientInfo_kari_get0_reks)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri);
	APICALL int (*CMS_RecipientInfo_kari_orig_id_cmp)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, X509 * cert);
	APICALL int (*CMS_RecipientInfo_kari_set0_pkey)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, EVP_PKEY * pk);
	APICALL int (*CMS_SharedInfo_encode)(struct AmiSSLIFace *Self, unsigned char ** pder, X509_ALGOR * kekalg, ASN1_OCTET_STRING * ukm, int keylen);
	APICALL EVP_MD_CTX * (*CMS_SignerInfo_get0_md_ctx)(struct AmiSSLIFace *Self, CMS_SignerInfo * si);
	APICALL EVP_PKEY_CTX * (*CMS_SignerInfo_get0_pkey_ctx)(struct AmiSSLIFace *Self, CMS_SignerInfo * si);
	APICALL ASN1_OCTET_STRING * (*CMS_SignerInfo_get0_signature)(struct AmiSSLIFace *Self, CMS_SignerInfo * si);
	DEPRECATED APICALL DH * (*d2i_DHxparams)(struct AmiSSLIFace *Self, DH ** a, const unsigned char ** pp, long length);
	DEPRECATED APICALL int (*i2d_DHxparams)(struct AmiSSLIFace *Self, const DH * dh, unsigned char ** pp);
	DEPRECATED APICALL int (*DH_compute_key_padded)(struct AmiSSLIFace *Self, unsigned char * key, const BIGNUM * pub_key, DH * dh);
	DEPRECATED APICALL DH * (*DH_get_1024_160)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL DH * (*DH_get_2048_224)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL DH * (*DH_get_2048_256)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*DH_KDF_X9_42)(struct AmiSSLIFace *Self, unsigned char * out, size_t outlen, const unsigned char * Z, size_t Zlen, ASN1_OBJECT * key_oid, const unsigned char * ukm, size_t ukmlen, const EVP_MD * md);
	APICALL const char * (*EC_curve_nid2nist)(struct AmiSSLIFace *Self, int nid);
	APICALL int (*EC_curve_nist2nid)(struct AmiSSLIFace *Self, const char * name);
	APICALL BN_MONT_CTX * (*EC_GROUP_get_mont_data)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	DEPRECATED APICALL int (*ECDH_KDF_X9_62)(struct AmiSSLIFace *Self, unsigned char * out, size_t outlen, const unsigned char * Z, size_t Zlen, const unsigned char * sinfo, size_t sinfolen, const EVP_MD * md);
	APTR ECDSA_METHOD_free_UNIMPLEMENTED;
	APTR ECDSA_METHOD_get_app_data_UNIMPLEMENTED;
	APTR ECDSA_METHOD_new_UNIMPLEMENTED;
	APTR ECDSA_METHOD_set_app_data_UNIMPLEMENTED;
	APTR ECDSA_METHOD_set_flags_UNIMPLEMENTED;
	APTR ECDSA_METHOD_set_name_UNIMPLEMENTED;
	APTR ECDSA_METHOD_set_sign_UNIMPLEMENTED;
	APTR ECDSA_METHOD_set_sign_setup_UNIMPLEMENTED;
	APTR ECDSA_METHOD_set_verify_UNIMPLEMENTED;
	APICALL const EVP_CIPHER * (*EVP_aes_128_cbc_hmac_sha256)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_128_wrap)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_192_wrap)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_cbc_hmac_sha256)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_wrap)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_des_ede3_wrap)(struct AmiSSLIFace *Self);
	APICALL size_t (*CRYPTO_128_unwrap)(struct AmiSSLIFace *Self, void * key, const unsigned char * iv, unsigned char * out, const unsigned char * in, size_t inlen, block128_f block);
	APICALL size_t (*CRYPTO_128_wrap)(struct AmiSSLIFace *Self, void * key, const unsigned char * iv, unsigned char * out, const unsigned char * in, size_t inlen, block128_f block);
	APICALL BIO * (*OSSL_HTTP_REQ_CTX_get0_mem_bio)(struct AmiSSLIFace *Self, const OSSL_HTTP_REQ_CTX * rctx);
	APICALL int (*OBSOLETE_OCSP_REQ_CTX_http)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, const char * op, const char * path);
	APICALL int (*OBSOLETE_OCSP_REQ_CTX_i2d)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, const ASN1_ITEM * it, ASN1_VALUE * val);
	APICALL int (*OSSL_HTTP_REQ_CTX_nbio)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx);
	APICALL int (*OSSL_HTTP_REQ_CTX_nbio_d2i)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, ASN1_VALUE ** pval, const ASN1_ITEM * it);
	APICALL OSSL_HTTP_REQ_CTX * (*OBSOLETE_OCSP_REQ_CTX_new)(struct AmiSSLIFace *Self, BIO * io, int maxline);
	APICALL void (*OSSL_HTTP_REQ_CTX_set_max_response_length)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, unsigned long len);
	APICALL RSA_OAEP_PARAMS * (*d2i_RSA_OAEP_PARAMS)(struct AmiSSLIFace *Self, RSA_OAEP_PARAMS ** a, const unsigned char ** in, long len);
	APICALL void (*RSA_OAEP_PARAMS_free)(struct AmiSSLIFace *Self, RSA_OAEP_PARAMS * a);
	APICALL const ASN1_ITEM * (*RSA_OAEP_PARAMS_it)(struct AmiSSLIFace *Self);
	APICALL RSA_OAEP_PARAMS * (*RSA_OAEP_PARAMS_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*RSA_padding_add_PKCS1_OAEP_mgf1)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * from, int flen, const unsigned char * param, int plen, const EVP_MD * md, const EVP_MD * mgf1md);
	DEPRECATED APICALL int (*RSA_padding_check_PKCS1_OAEP_mgf1)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * from, int flen, int num, const unsigned char * param, int plen, const EVP_MD * md, const EVP_MD * mgf1md);
	APICALL OPENSSL_STACK * (*OPENSSL_sk_deep_copy)(struct AmiSSLIFace *Self, const OPENSSL_STACK * sk, OPENSSL_sk_copyfunc c, OPENSSL_sk_freefunc f);
	APICALL int (*i2d_re_X509_tbs)(struct AmiSSLIFace *Self, X509 * x, unsigned char ** pp);
	APICALL int (*X509_chain_check_suiteb)(struct AmiSSLIFace *Self, int * perror_depth, X509 * x, STACK_OF(X509) * chain, unsigned long flags);
	APICALL STACK_OF(X509) * (*X509_chain_up_ref)(struct AmiSSLIFace *Self, STACK_OF(X509) * chain);
	APICALL int (*X509_CRL_check_suiteb)(struct AmiSSLIFace *Self, X509_CRL * crl, EVP_PKEY * pk, unsigned long flags);
	APICALL X509_CRL * (*X509_CRL_diff)(struct AmiSSLIFace *Self, X509_CRL * base, X509_CRL * newer, EVP_PKEY * skey, const EVP_MD * md, unsigned int flags);
	APICALL int (*OBSOLETE_X509_CRL_http_nbio)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, X509_CRL ** pcrl);
	APICALL void (*X509_get0_signature)(struct AmiSSLIFace *Self, const ASN1_BIT_STRING ** psig, const X509_ALGOR ** palg, const X509 * x);
	APICALL int (*X509_get_signature_nid)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL int (*OBSOLETE_X509_http_nbio)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, X509 ** pcert);
	APICALL X509_REVOKED * (*X509_REVOKED_dup)(struct AmiSSLIFace *Self, const X509_REVOKED * rev);
	APICALL X509_STORE * (*X509_STORE_CTX_get0_store)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL int (*X509_VERIFY_PARAM_add1_host)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, const char * name, size_t namelen);
	APICALL const X509_VERIFY_PARAM * (*X509_VERIFY_PARAM_get0)(struct AmiSSLIFace *Self, int id);
	APICALL const char * (*X509_VERIFY_PARAM_get0_name)(struct AmiSSLIFace *Self, const X509_VERIFY_PARAM * param);
	APICALL char * (*X509_VERIFY_PARAM_get0_peername)(struct AmiSSLIFace *Self, const X509_VERIFY_PARAM * param);
	APICALL int (*X509_VERIFY_PARAM_get_count)(struct AmiSSLIFace *Self);
	APICALL int (*X509_VERIFY_PARAM_set1_email)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, const char * email, size_t emaillen);
	APICALL int (*X509_VERIFY_PARAM_set1_host)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, const char * name, size_t namelen);
	APICALL int (*X509_VERIFY_PARAM_set1_ip)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, const unsigned char * ip, size_t iplen);
	APICALL int (*X509_VERIFY_PARAM_set1_ip_asc)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, const char * ipasc);
	APICALL void (*X509_VERIFY_PARAM_set_hostflags)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, unsigned int flags);
	APICALL int (*X509_check_email)(struct AmiSSLIFace *Self, X509 * x, const char * chk, size_t chklen, unsigned int flags);
	APICALL int (*X509_check_host)(struct AmiSSLIFace *Self, X509 * x, const char * chk, size_t chklen, unsigned int flags, char ** peername);
	APICALL int (*X509_check_ip)(struct AmiSSLIFace *Self, X509 * x, const unsigned char * chk, size_t chklen, unsigned int flags);
	APICALL int (*X509_check_ip_asc)(struct AmiSSLIFace *Self, X509 * x, const char * ipasc, unsigned int flags);
	APTR X509V3_EXT_free_UNIMPLEMENTED;
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_item)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*item_verify)(EVP_MD_CTX *, const ASN1_ITEM *, const void *, const X509_ALGOR *, const ASN1_BIT_STRING *, EVP_PKEY *), int (*item_sign)(EVP_MD_CTX *, const ASN1_ITEM *, const void *, X509_ALGOR *, X509_ALGOR *, ASN1_BIT_STRING *));
	APICALL const SSL_METHOD * (*DTLS_client_method)(struct AmiSSLIFace *Self);
	APICALL const SSL_METHOD * (*DTLS_method)(struct AmiSSLIFace *Self);
	APICALL const SSL_METHOD * (*DTLS_server_method)(struct AmiSSLIFace *Self);
	APTR DTLSv1_2_client_method_UNIMPLEMENTED;
	APTR DTLSv1_2_method_UNIMPLEMENTED;
	APTR DTLSv1_2_server_method_UNIMPLEMENTED;
	APICALL void (*SSL_certs_clear)(struct AmiSSLIFace *Self, SSL * s);
	APICALL const SSL_CIPHER * (*SSL_CIPHER_find)(struct AmiSSLIFace *Self, SSL * ssl, const unsigned char * ptr);
	APTR SSL_COMP_free_compression_methods_UNIMPLEMENTED;
	APICALL int (*SSL_CONF_cmd)(struct AmiSSLIFace *Self, SSL_CONF_CTX * ctx, const char * cmd, const char * value);
	APICALL int (*SSL_CONF_cmd_argv)(struct AmiSSLIFace *Self, SSL_CONF_CTX * cctx, int * pargc, char *** pargv);
	APICALL int (*SSL_CONF_cmd_value_type)(struct AmiSSLIFace *Self, SSL_CONF_CTX * cctx, const char * cmd);
	APICALL unsigned int (*SSL_CONF_CTX_clear_flags)(struct AmiSSLIFace *Self, SSL_CONF_CTX * cctx, unsigned int flags);
	APICALL int (*SSL_CONF_CTX_finish)(struct AmiSSLIFace *Self, SSL_CONF_CTX * cctx);
	APICALL void (*SSL_CONF_CTX_free)(struct AmiSSLIFace *Self, SSL_CONF_CTX * cctx);
	APICALL SSL_CONF_CTX * (*SSL_CONF_CTX_new)(struct AmiSSLIFace *Self);
	APICALL int (*SSL_CONF_CTX_set1_prefix)(struct AmiSSLIFace *Self, SSL_CONF_CTX * cctx, const char * pre);
	APICALL unsigned int (*SSL_CONF_CTX_set_flags)(struct AmiSSLIFace *Self, SSL_CONF_CTX * cctx, unsigned int flags);
	APICALL void (*SSL_CONF_CTX_set_ssl)(struct AmiSSLIFace *Self, SSL_CONF_CTX * cctx, SSL * ssl);
	APICALL void (*SSL_CONF_CTX_set_ssl_ctx)(struct AmiSSLIFace *Self, SSL_CONF_CTX * cctx, SSL_CTX * ctx);
	APICALL int (*SSL_CTX_add_client_custom_ext)(struct AmiSSLIFace *Self, SSL_CTX * ctx, unsigned int ext_type, custom_ext_add_cb add_cb, custom_ext_free_cb free_cb, void * add_arg, custom_ext_parse_cb parse_cb, void * parse_arg);
	APICALL int (*SSL_CTX_add_server_custom_ext)(struct AmiSSLIFace *Self, SSL_CTX * ctx, unsigned int ext_type, custom_ext_add_cb add_cb, custom_ext_free_cb free_cb, void * add_arg, custom_ext_parse_cb parse_cb, void * parse_arg);
	APICALL X509 * (*SSL_CTX_get0_certificate)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL X509_VERIFY_PARAM * (*SSL_CTX_get0_param)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL EVP_PKEY * (*SSL_CTX_get0_privatekey)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL const SSL_METHOD * (*SSL_CTX_get_ssl_method)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL int (*SSL_CTX_set_alpn_protos)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const unsigned char * protos, unsigned int protos_len);
	APICALL void (*SSL_CTX_set_alpn_select_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_CTX_alpn_select_cb_func cb, void * arg);
	APICALL void (*SSL_CTX_set_cert_cb)(struct AmiSSLIFace *Self, SSL_CTX * c, int (*cb)(SSL *ssl, void *arg), void * arg);
	APICALL int (*SSL_CTX_use_serverinfo)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const unsigned char * serverinfo, size_t serverinfo_length);
	APICALL int (*SSL_CTX_use_serverinfo_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file);
	APICALL int (*SSL_extension_supported)(struct AmiSSLIFace *Self, unsigned int ext_type);
	APICALL void (*SSL_get0_alpn_selected)(struct AmiSSLIFace *Self, const SSL * ssl, const unsigned char ** data, unsigned int * len);
	APICALL X509_VERIFY_PARAM * (*SSL_get0_param)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL int (*SSL_is_server)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_set_alpn_protos)(struct AmiSSLIFace *Self, SSL * ssl, const unsigned char * protos, unsigned int protos_len);
	APICALL void (*SSL_set_cert_cb)(struct AmiSSLIFace *Self, SSL * s, int (*cb)(SSL *ssl, void *arg), void * arg);
	APICALL int (*SSL_check_chain)(struct AmiSSLIFace *Self, SSL * s, X509 * x, EVP_PKEY * pk, STACK_OF(X509) * chain);
	APICALL int (*SSL_get_shared_sigalgs)(struct AmiSSLIFace *Self, SSL * s, int idx, int * psign, int * phash, int * psignandhash, unsigned char * rsig, unsigned char * rhash);
	APICALL int (*SSL_get_sigalgs)(struct AmiSSLIFace *Self, SSL * s, int idx, int * psign, int * phash, int * psignandhash, unsigned char * rsig, unsigned char * rhash);
	APICALL void (*ASN1_add_stable_module)(struct AmiSSLIFace *Self);
	APICALL int (*ASN1_buf_print)(struct AmiSSLIFace *Self, BIO * bp, const unsigned char * buf, size_t buflen, int off);
	APICALL int (*ASN1_ENUMERATED_get_int64)(struct AmiSSLIFace *Self, int64_t * pr, const ASN1_ENUMERATED * a);
	APICALL int (*ASN1_ENUMERATED_set_int64)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * a, int64_t r);
	APICALL int (*ASN1_INTEGER_get_int64)(struct AmiSSLIFace *Self, int64_t * pr, const ASN1_INTEGER * a);
	APICALL int (*ASN1_INTEGER_get_uint64)(struct AmiSSLIFace *Self, uint64_t * pr, const ASN1_INTEGER * a);
	APICALL int (*ASN1_INTEGER_set_int64)(struct AmiSSLIFace *Self, ASN1_INTEGER * a, int64_t r);
	APICALL int (*ASN1_INTEGER_set_uint64)(struct AmiSSLIFace *Self, ASN1_INTEGER * a, uint64_t r);
	APICALL void (*ASN1_SCTX_free)(struct AmiSSLIFace *Self, ASN1_SCTX * p);
	APICALL void * (*ASN1_SCTX_get_app_data)(struct AmiSSLIFace *Self, ASN1_SCTX * p);
	APICALL unsigned long (*ASN1_SCTX_get_flags)(struct AmiSSLIFace *Self, ASN1_SCTX * p);
	APICALL const ASN1_ITEM * (*ASN1_SCTX_get_item)(struct AmiSSLIFace *Self, ASN1_SCTX * p);
	APICALL const ASN1_TEMPLATE * (*ASN1_SCTX_get_template)(struct AmiSSLIFace *Self, ASN1_SCTX * p);
	APICALL ASN1_SCTX * (*ASN1_SCTX_new)(struct AmiSSLIFace *Self, int (*scan_cb)(ASN1_SCTX *));
	APICALL void (*ASN1_SCTX_set_app_data)(struct AmiSSLIFace *Self, ASN1_SCTX * p, void * data);
	APICALL int (*ASN1_str2mask)(struct AmiSSLIFace *Self, const char * str, unsigned long * pmask);
	APICALL ASN1_TYPE * (*ASN1_TYPE_pack_sequence)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, void * s, ASN1_TYPE ** t);
	APICALL void * (*ASN1_TYPE_unpack_sequence)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, const ASN1_TYPE * t);
	APICALL void (*ASYNC_block_pause)(struct AmiSSLIFace *Self);
	APICALL void (*ASYNC_cleanup_thread)(struct AmiSSLIFace *Self);
	APTR ASYNC_clear_wake_UNIMPLEMENTED;
	APICALL ASYNC_JOB * (*ASYNC_get_current_job)(struct AmiSSLIFace *Self);
	APTR ASYNC_get_wait_fd_UNIMPLEMENTED;
	APICALL int (*ASYNC_init_thread)(struct AmiSSLIFace *Self, size_t max_size, size_t init_size);
	APICALL int (*ASYNC_pause_job)(struct AmiSSLIFace *Self);
	APICALL int (*ASYNC_start_job)(struct AmiSSLIFace *Self, ASYNC_JOB ** job, ASYNC_WAIT_CTX * ctx, int * ret, int (*func)(void *), void * args, size_t size);
	APICALL void (*ASYNC_unblock_pause)(struct AmiSSLIFace *Self);
	APTR ASYNC_wake_UNIMPLEMENTED;
	DEPRECATED APICALL int (*ERR_load_ASYNC_strings)(struct AmiSSLIFace *Self);
	APICALL int (*BIO_accept_ex)(struct AmiSSLIFace *Self, int accept_sock, BIO_ADDR * addr, int options);
	APICALL void (*BIO_ADDR_clear)(struct AmiSSLIFace *Self, BIO_ADDR * ap);
	APICALL int (*BIO_ADDR_family)(struct AmiSSLIFace *Self, const BIO_ADDR * ap);
	APICALL void (*BIO_ADDR_free)(struct AmiSSLIFace *Self, BIO_ADDR * ap);
	APICALL char * (*BIO_ADDR_hostname_string)(struct AmiSSLIFace *Self, const BIO_ADDR * ap, int numeric);
	APICALL BIO_ADDR * (*BIO_ADDR_new)(struct AmiSSLIFace *Self);
	APICALL char * (*BIO_ADDR_path_string)(struct AmiSSLIFace *Self, const BIO_ADDR * ap);
	APICALL int (*BIO_ADDR_rawaddress)(struct AmiSSLIFace *Self, const BIO_ADDR * ap, void * p, size_t * l);
	APICALL int (*BIO_ADDR_rawmake)(struct AmiSSLIFace *Self, BIO_ADDR * ap, int family, const void * where, size_t wherelen, unsigned short port);
	APICALL unsigned short (*BIO_ADDR_rawport)(struct AmiSSLIFace *Self, const BIO_ADDR * ap);
	APICALL char * (*BIO_ADDR_service_string)(struct AmiSSLIFace *Self, const BIO_ADDR * ap, int numeric);
	APICALL const BIO_ADDR * (*BIO_ADDRINFO_address)(struct AmiSSLIFace *Self, const BIO_ADDRINFO * bai);
	APICALL int (*BIO_ADDRINFO_family)(struct AmiSSLIFace *Self, const BIO_ADDRINFO * bai);
	APICALL void (*BIO_ADDRINFO_free)(struct AmiSSLIFace *Self, BIO_ADDRINFO * bai);
	APICALL const BIO_ADDRINFO * (*BIO_ADDRINFO_next)(struct AmiSSLIFace *Self, const BIO_ADDRINFO * bai);
	APICALL int (*BIO_ADDRINFO_protocol)(struct AmiSSLIFace *Self, const BIO_ADDRINFO * bai);
	APICALL int (*BIO_ADDRINFO_socktype)(struct AmiSSLIFace *Self, const BIO_ADDRINFO * bai);
	APICALL int (*BIO_closesocket)(struct AmiSSLIFace *Self, int sock);
	APICALL int (*BIO_connect)(struct AmiSSLIFace *Self, int sock, const BIO_ADDR * addr, int options);
	APICALL int (*BIO_listen)(struct AmiSSLIFace *Self, int sock, const BIO_ADDR * addr, int options);
	APICALL int (*BIO_lookup)(struct AmiSSLIFace *Self, const char * host, const char * service, enum BIO_lookup_type lookup_type, int family, int socktype, BIO_ADDRINFO ** res);
	APICALL int (*BIO_parse_hostserv)(struct AmiSSLIFace *Self, const char * hostserv, char ** host, char ** service, enum BIO_hostserv_priorities hostserv_prio);
	APICALL const BIO_METHOD * (*BIO_s_secmem)(struct AmiSSLIFace *Self);
	APICALL int (*BIO_sock_info)(struct AmiSSLIFace *Self, int sock, enum BIO_sock_info_type type, union BIO_sock_info_u * info);
	APICALL int (*BIO_socket)(struct AmiSSLIFace *Self, int domain, int socktype, int protocol, int options);
	APICALL int (*BN_abs_is_word)(struct AmiSSLIFace *Self, const BIGNUM * a, const BN_ULONG w);
	APICALL int (*BN_bn2binpad)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to, int tolen);
	APICALL int (*BN_bn2lebinpad)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to, int tolen);
	APICALL BN_CTX * (*BN_CTX_secure_new)(struct AmiSSLIFace *Self);
	APICALL void (*BN_GENCB_free)(struct AmiSSLIFace *Self, BN_GENCB * cb);
	APICALL void * (*BN_GENCB_get_arg)(struct AmiSSLIFace *Self, BN_GENCB * cb);
	APICALL BN_GENCB * (*BN_GENCB_new)(struct AmiSSLIFace *Self);
	APICALL void (*BN_GENCB_set)(struct AmiSSLIFace *Self, BN_GENCB * gencb, int (*callback)(int, int, BN_GENCB *), void * cb_arg);
	APICALL void (*BN_GENCB_set_old)(struct AmiSSLIFace *Self, BN_GENCB * gencb, void (*callback)(int, int, void *), void * cb_arg);
	APICALL int (*BN_generate_dsa_nonce)(struct AmiSSLIFace *Self, BIGNUM * out, const BIGNUM * range, const BIGNUM * priv, const unsigned char * message, size_t message_len, BN_CTX * ctx);
	APICALL int (*BN_get_flags)(struct AmiSSLIFace *Self, const BIGNUM * b, int n);
	APICALL int (*BN_is_negative)(struct AmiSSLIFace *Self, const BIGNUM * a);
	APICALL int (*BN_is_odd)(struct AmiSSLIFace *Self, const BIGNUM * a);
	APICALL int (*BN_is_one)(struct AmiSSLIFace *Self, const BIGNUM * a);
	APICALL int (*BN_is_word)(struct AmiSSLIFace *Self, const BIGNUM * a, const BN_ULONG w);
	APICALL int (*BN_is_zero)(struct AmiSSLIFace *Self, const BIGNUM * a);
	APICALL BIGNUM * (*BN_lebin2bn)(struct AmiSSLIFace *Self, const unsigned char * s, int len, BIGNUM * ret);
	APICALL int (*(*BN_nist_mod_func)(struct AmiSSLIFace *Self, const BIGNUM * p))(BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *);
	APICALL BIGNUM * (*BN_secure_new)(struct AmiSSLIFace *Self);
	APICALL int (*BN_security_bits)(struct AmiSSLIFace *Self, int L, int N);
	APICALL void (*BN_set_flags)(struct AmiSSLIFace *Self, BIGNUM * b, int n);
	APICALL int (*BN_to_montgomery)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, BN_MONT_CTX * mont, BN_CTX * ctx);
	APICALL void (*BN_with_flags)(struct AmiSSLIFace *Self, BIGNUM * dest, const BIGNUM * b, int flags);
	APICALL void (*BN_zero_ex)(struct AmiSSLIFace *Self, BIGNUM * a);
	APICALL BUF_MEM * (*BUF_MEM_new_ex)(struct AmiSSLIFace *Self, unsigned long flags);
	APICALL const COMP_METHOD * (*COMP_CTX_get_method)(struct AmiSSLIFace *Self, const COMP_CTX * ctx);
	APICALL int (*COMP_CTX_get_type)(struct AmiSSLIFace *Self, const COMP_CTX * ctx);
	APICALL const char * (*COMP_get_name)(struct AmiSSLIFace *Self, const COMP_METHOD * meth);
	APICALL int (*COMP_get_type)(struct AmiSSLIFace *Self, const COMP_METHOD * meth);
	APICALL void (*CRYPTO_clear_free)(struct AmiSSLIFace *Self, void * str, size_t num, const char * file, int line);
	APICALL void * (*CRYPTO_clear_realloc)(struct AmiSSLIFace *Self, void * str, size_t old_len, size_t num, const char * file, int line);
	APICALL int (*CRYPTO_free_ex_index)(struct AmiSSLIFace *Self, int class_index, int idx);
	APICALL void * (*CRYPTO_memdup)(struct AmiSSLIFace *Self, const void * data, size_t siz, const char * file, int line);
	APICALL size_t (*CRYPTO_secure_actual_size)(struct AmiSSLIFace *Self, void * ptr);
	APICALL int (*CRYPTO_secure_allocated)(struct AmiSSLIFace *Self, const void * ptr);
	APICALL void (*CRYPTO_secure_free)(struct AmiSSLIFace *Self, void * ptr, const char * file, int line);
	APICALL void * (*CRYPTO_secure_malloc)(struct AmiSSLIFace *Self, size_t num, const char * file, int line);
	APICALL int (*CRYPTO_secure_malloc_done)(struct AmiSSLIFace *Self);
	APICALL int (*CRYPTO_secure_malloc_init)(struct AmiSSLIFace *Self, size_t sz, size_t minsize);
	APICALL int (*CRYPTO_secure_malloc_initialized)(struct AmiSSLIFace *Self);
	APICALL size_t (*CRYPTO_secure_used)(struct AmiSSLIFace *Self);
	APICALL void * (*CRYPTO_secure_zalloc)(struct AmiSSLIFace *Self, size_t num, const char * file, int line);
	APTR CRYPTO_set_mem_debug_UNIMPLEMENTED;
	APICALL char * (*CRYPTO_strndup)(struct AmiSSLIFace *Self, const char * str, size_t s, const char * file, int line);
	APICALL void * (*CRYPTO_zalloc)(struct AmiSSLIFace *Self, size_t num, const char * file, int line);
	APICALL int (*OPENSSL_atexit)(struct AmiSSLIFace *Self, void (*handler)(void));
	APICALL void (*OPENSSL_cleanup)(struct AmiSSLIFace *Self);
	APICALL int (*OPENSSL_init_crypto)(struct AmiSSLIFace *Self, uint64_t opts, const OPENSSL_INIT_SETTINGS * settings);
	APICALL void (*OPENSSL_INIT_free)(struct AmiSSLIFace *Self, OPENSSL_INIT_SETTINGS * settings);
	APICALL OPENSSL_INIT_SETTINGS * (*OPENSSL_INIT_new)(struct AmiSSLIFace *Self);
	APTR OPENSSL_INIT_set_config_appname_UNIMPLEMENTED;
	APICALL size_t (*OPENSSL_strlcat)(struct AmiSSLIFace *Self, char * dst, const char * src, size_t size);
	APICALL size_t (*OPENSSL_strlcpy)(struct AmiSSLIFace *Self, char * dst, const char * src, size_t size);
	APICALL size_t (*OPENSSL_strnlen)(struct AmiSSLIFace *Self, const char * str, size_t maxlen);
	APICALL void (*OPENSSL_thread_stop)(struct AmiSSLIFace *Self);
	APICALL const char * (*OpenSSL_version)(struct AmiSSLIFace *Self, int type);
	APICALL unsigned long (*OpenSSL_version_num)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*DH_bits)(struct AmiSSLIFace *Self, const DH * dh);
	DEPRECATED APICALL int (*DH_security_bits)(struct AmiSSLIFace *Self, const DH * dh);
	DEPRECATED APICALL int (*DSA_security_bits)(struct AmiSSLIFace *Self, const DSA * d);
	APICALL const BIGNUM * (*EC_GROUP_get0_cofactor)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	APICALL const BIGNUM * (*EC_GROUP_get0_order)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	APICALL int (*EC_GROUP_order_bits)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	DEPRECATED APICALL const EC_KEY_METHOD * (*EC_KEY_get_default_method)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void * (*EC_KEY_get_ex_data)(struct AmiSSLIFace *Self, const EC_KEY * key, int idx);
	DEPRECATED APICALL const EC_KEY_METHOD * (*EC_KEY_get_method)(struct AmiSSLIFace *Self, const EC_KEY * key);
	DEPRECATED APICALL size_t (*EC_KEY_key2buf)(struct AmiSSLIFace *Self, const EC_KEY * key, point_conversion_form_t form, unsigned char ** pbuf, BN_CTX * ctx);
	DEPRECATED APICALL void (*EC_KEY_METHOD_free)(struct AmiSSLIFace *Self, EC_KEY_METHOD * meth);
	DEPRECATED APICALL void (*EC_KEY_METHOD_get_compute_key)(struct AmiSSLIFace *Self, const EC_KEY_METHOD * meth, int (**pck)(unsigned char **, size_t *, const EC_POINT *, const EC_KEY *));
	DEPRECATED APICALL void (*EC_KEY_METHOD_get_init)(struct AmiSSLIFace *Self, const EC_KEY_METHOD * meth, int (**pinit)(EC_KEY *), void (**pfinish)(EC_KEY *), int (**pcopy)(EC_KEY *, const EC_KEY *), int (**pset_group)(EC_KEY *, const EC_GROUP *), int (**pset_private)(EC_KEY *, const BIGNUM *), int (**pset_public)(EC_KEY *, const EC_POINT *));
	DEPRECATED APICALL void (*EC_KEY_METHOD_get_keygen)(struct AmiSSLIFace *Self, const EC_KEY_METHOD * meth, int (**pkeygen)(EC_KEY *));
	DEPRECATED APICALL void (*EC_KEY_METHOD_get_sign)(struct AmiSSLIFace *Self, const EC_KEY_METHOD * meth, int (**psign)(int, const unsigned char *, int, unsigned char *, unsigned int *, const BIGNUM *, const BIGNUM *, EC_KEY *), int (**psign_setup)(EC_KEY *, BN_CTX *, BIGNUM **, BIGNUM **), ECDSA_SIG * (**psign_sig)(const unsigned char *, int, const BIGNUM *, const BIGNUM *, EC_KEY *));
	DEPRECATED APICALL void (*EC_KEY_METHOD_get_verify)(struct AmiSSLIFace *Self, const EC_KEY_METHOD * meth, int (**pverify)(int, const unsigned char *, int, const unsigned char *, int, EC_KEY *), int (**pverify_sig)(const unsigned char *, int, const ECDSA_SIG *, EC_KEY *));
	DEPRECATED APICALL EC_KEY_METHOD * (*EC_KEY_METHOD_new)(struct AmiSSLIFace *Self, const EC_KEY_METHOD * meth);
	DEPRECATED APICALL void (*EC_KEY_METHOD_set_compute_key)(struct AmiSSLIFace *Self, EC_KEY_METHOD * meth, int (*ckey)(unsigned char **, size_t *, const EC_POINT *, const EC_KEY *));
	DEPRECATED APICALL void (*EC_KEY_METHOD_set_init)(struct AmiSSLIFace *Self, EC_KEY_METHOD * meth, int (*init)(EC_KEY *), void (*finish)(EC_KEY *), int (*copy)(EC_KEY *, const EC_KEY *), int (*set_group)(EC_KEY *, const EC_GROUP *), int (*set_private)(EC_KEY *, const BIGNUM *), int (*set_public)(EC_KEY *, const EC_POINT *));
	DEPRECATED APICALL void (*EC_KEY_METHOD_set_keygen)(struct AmiSSLIFace *Self, EC_KEY_METHOD * meth, int (*keygen)(EC_KEY *));
	DEPRECATED APICALL void (*EC_KEY_METHOD_set_sign)(struct AmiSSLIFace *Self, EC_KEY_METHOD * meth, int (*sign)(int, const unsigned char *, int, unsigned char *, unsigned int *, const BIGNUM *, const BIGNUM *, EC_KEY *), int (*sign_setup)(EC_KEY *, BN_CTX *, BIGNUM **, BIGNUM **), ECDSA_SIG * (*sign_sig)(const unsigned char *, int, const BIGNUM *, const BIGNUM *, EC_KEY *));
	DEPRECATED APICALL void (*EC_KEY_METHOD_set_verify)(struct AmiSSLIFace *Self, EC_KEY_METHOD * meth, int (*verify)(int, const unsigned char *, int, const unsigned char *, int, EC_KEY *), int (*verify_sig)(const unsigned char *, int, const ECDSA_SIG *, EC_KEY *));
	DEPRECATED APICALL EC_KEY * (*EC_KEY_new_method)(struct AmiSSLIFace *Self, ENGINE * engine);
	DEPRECATED APICALL int (*EC_KEY_oct2key)(struct AmiSSLIFace *Self, EC_KEY * key, const unsigned char * buf, size_t len, BN_CTX * ctx);
	DEPRECATED APICALL int (*EC_KEY_oct2priv)(struct AmiSSLIFace *Self, EC_KEY * key, const unsigned char * buf, size_t len);
	DEPRECATED APICALL const EC_KEY_METHOD * (*EC_KEY_OpenSSL)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL size_t (*EC_KEY_priv2buf)(struct AmiSSLIFace *Self, const EC_KEY * eckey, unsigned char ** pbuf);
	DEPRECATED APICALL size_t (*EC_KEY_priv2oct)(struct AmiSSLIFace *Self, const EC_KEY * eckey, unsigned char * buf, size_t len);
	DEPRECATED APICALL void (*EC_KEY_set_default_method)(struct AmiSSLIFace *Self, const EC_KEY_METHOD * meth);
	DEPRECATED APICALL int (*EC_KEY_set_ex_data)(struct AmiSSLIFace *Self, EC_KEY * key, int idx, void * arg);
	DEPRECATED APICALL int (*EC_KEY_set_method)(struct AmiSSLIFace *Self, EC_KEY * key, const EC_KEY_METHOD * meth);
	APICALL size_t (*EC_POINT_point2buf)(struct AmiSSLIFace *Self, const EC_GROUP * group, const EC_POINT * point, point_conversion_form_t form, unsigned char ** pbuf, BN_CTX * ctx);
	APICALL void (*ECDSA_SIG_get0)(struct AmiSSLIFace *Self, const ECDSA_SIG * sig, const BIGNUM ** pr, const BIGNUM ** ps);
	DEPRECATED APICALL ENGINE * (*ENGINE_get_default_EC)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const EC_KEY_METHOD * (*ENGINE_get_EC)(struct AmiSSLIFace *Self, const ENGINE * e);
	DEPRECATED APICALL void (*ENGINE_register_all_EC)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*ENGINE_register_EC)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_set_default_EC)(struct AmiSSLIFace *Self, ENGINE * e);
	DEPRECATED APICALL int (*ENGINE_set_EC)(struct AmiSSLIFace *Self, ENGINE * e, const EC_KEY_METHOD * ecdsa_meth);
	DEPRECATED APICALL void (*ENGINE_unregister_EC)(struct AmiSSLIFace *Self, ENGINE * e);
	APICALL const EVP_CIPHER * (*EVP_aes_128_ocb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_128_wrap_pad)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_192_ocb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_192_wrap_pad)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_ocb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aes_256_wrap_pad)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_128_ctr)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_192_ctr)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_camellia_256_ctr)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_chacha20)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_chacha20_poly1305)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL unsigned char * (*EVP_CIPHER_CTX_buf_noconst)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx);
	APICALL void * (*EVP_CIPHER_CTX_get_cipher_data)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	APICALL void * (*EVP_CIPHER_CTX_set_cipher_data)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, void * cipher_data);
	APICALL int (*EVP_CIPHER_CTX_is_encrypting)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	DEPRECATED APICALL const unsigned char * (*EVP_CIPHER_CTX_iv)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	DEPRECATED APICALL unsigned char * (*EVP_CIPHER_CTX_iv_noconst)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx);
	APICALL int (*EVP_CIPHER_CTX_get_num)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	DEPRECATED APICALL const unsigned char * (*EVP_CIPHER_CTX_original_iv)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	APICALL int (*EVP_CIPHER_CTX_reset)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx);
	APICALL int (*EVP_CIPHER_CTX_set_num)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, int num);
	DEPRECATED APICALL int (*EVP_CIPHER_impl_ctx_size)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	DEPRECATED APICALL EVP_CIPHER * (*EVP_CIPHER_meth_dup)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	DEPRECATED APICALL void (*EVP_CIPHER_meth_free)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher);
	DEPRECATED APICALL int (*(*EVP_CIPHER_meth_get_cleanup)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher))(EVP_CIPHER_CTX *);
	DEPRECATED APICALL int (*(*EVP_CIPHER_meth_get_ctrl)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher))(EVP_CIPHER_CTX *, int, int, void *);
	DEPRECATED APICALL int (*(*EVP_CIPHER_meth_get_do_cipher)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher))(EVP_CIPHER_CTX *, unsigned char *, const unsigned char *, size_t);
	DEPRECATED APICALL int (*(*EVP_CIPHER_meth_get_get_asn1_params)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher))(EVP_CIPHER_CTX *, ASN1_TYPE *);
	DEPRECATED APICALL int (*(*EVP_CIPHER_meth_get_init)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher))(EVP_CIPHER_CTX *, const unsigned char *, const unsigned char *, int);
	DEPRECATED APICALL int (*(*EVP_CIPHER_meth_get_set_asn1_params)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher))(EVP_CIPHER_CTX *, ASN1_TYPE *);
	DEPRECATED APICALL EVP_CIPHER * (*EVP_CIPHER_meth_new)(struct AmiSSLIFace *Self, int cipher_type, int block_size, int key_len);
	DEPRECATED APICALL int (*EVP_CIPHER_meth_set_cleanup)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher, int (*cleanup)(EVP_CIPHER_CTX *));
	DEPRECATED APICALL int (*EVP_CIPHER_meth_set_ctrl)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher, int (*ctrl)(EVP_CIPHER_CTX *, int, int, void *));
	DEPRECATED APICALL int (*EVP_CIPHER_meth_set_do_cipher)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher, int (*do_cipher)(EVP_CIPHER_CTX *, unsigned char *, const unsigned char *, size_t));
	DEPRECATED APICALL int (*EVP_CIPHER_meth_set_flags)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher, unsigned long flags);
	DEPRECATED APICALL int (*EVP_CIPHER_meth_set_get_asn1_params)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher, int (*get_asn1_parameters)(EVP_CIPHER_CTX *, ASN1_TYPE *));
	DEPRECATED APICALL int (*EVP_CIPHER_meth_set_impl_ctx_size)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher, int ctx_size);
	DEPRECATED APICALL int (*EVP_CIPHER_meth_set_init)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher, int (*init)(EVP_CIPHER_CTX *, const unsigned char *, const unsigned char *, int));
	DEPRECATED APICALL int (*EVP_CIPHER_meth_set_iv_length)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher, int iv_len);
	DEPRECATED APICALL int (*EVP_CIPHER_meth_set_set_asn1_params)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher, int (*set_asn1_parameters)(EVP_CIPHER_CTX *, ASN1_TYPE *));
	APICALL void (*EVP_ENCODE_CTX_free)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx);
	APICALL EVP_ENCODE_CTX * (*EVP_ENCODE_CTX_new)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_ENCODE_CTX_num)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx);
	APICALL const EVP_MD * (*EVP_md5_sha1)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_MD_CTX_ctrl)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, int cmd, int p1, void * p2);
	APICALL void (*EVP_MD_CTX_free)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx);
	APICALL void * (*EVP_MD_CTX_get0_md_data)(struct AmiSSLIFace *Self, const EVP_MD_CTX * ctx);
	APICALL EVP_MD_CTX * (*EVP_MD_CTX_new)(struct AmiSSLIFace *Self);
	APICALL EVP_PKEY_CTX * (*EVP_MD_CTX_get_pkey_ctx)(struct AmiSSLIFace *Self, const EVP_MD_CTX * ctx);
	APICALL int (*EVP_MD_CTX_reset)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx);
	DEPRECATED APICALL void (*EVP_MD_CTX_set_update_fn)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, int (*update)(EVP_MD_CTX *, const void *, size_t));
	DEPRECATED APICALL int (*(*EVP_MD_CTX_update_fn)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx))(EVP_MD_CTX *, const void *, size_t);
	DEPRECATED APICALL EVP_MD * (*EVP_MD_meth_dup)(struct AmiSSLIFace *Self, const EVP_MD * md);
	DEPRECATED APICALL void (*EVP_MD_meth_free)(struct AmiSSLIFace *Self, EVP_MD * md);
	DEPRECATED APICALL int (*EVP_MD_meth_get_app_datasize)(struct AmiSSLIFace *Self, const EVP_MD * md);
	DEPRECATED APICALL int (*(*EVP_MD_meth_get_cleanup)(struct AmiSSLIFace *Self, const EVP_MD * md))(EVP_MD_CTX *);
	DEPRECATED APICALL int (*(*EVP_MD_meth_get_copy)(struct AmiSSLIFace *Self, const EVP_MD * md))(EVP_MD_CTX *, const EVP_MD_CTX *);
	DEPRECATED APICALL int (*(*EVP_MD_meth_get_ctrl)(struct AmiSSLIFace *Self, const EVP_MD * md))(EVP_MD_CTX *, int, int, void *);
	DEPRECATED APICALL int (*(*EVP_MD_meth_get_final)(struct AmiSSLIFace *Self, const EVP_MD * md))(EVP_MD_CTX *, unsigned char *);
	DEPRECATED APICALL unsigned long (*EVP_MD_meth_get_flags)(struct AmiSSLIFace *Self, const EVP_MD * md);
	DEPRECATED APICALL int (*(*EVP_MD_meth_get_init)(struct AmiSSLIFace *Self, const EVP_MD * md))(EVP_MD_CTX *);
	DEPRECATED APICALL int (*EVP_MD_meth_get_input_blocksize)(struct AmiSSLIFace *Self, const EVP_MD * md);
	DEPRECATED APICALL int (*EVP_MD_meth_get_result_size)(struct AmiSSLIFace *Self, const EVP_MD * md);
	DEPRECATED APICALL int (*(*EVP_MD_meth_get_update)(struct AmiSSLIFace *Self, const EVP_MD * md))(EVP_MD_CTX *, const void *, size_t);
	DEPRECATED APICALL EVP_MD * (*EVP_MD_meth_new)(struct AmiSSLIFace *Self, int md_type, int pkey_type);
	DEPRECATED APICALL int (*EVP_MD_meth_set_app_datasize)(struct AmiSSLIFace *Self, EVP_MD * md, int datasize);
	DEPRECATED APICALL int (*EVP_MD_meth_set_cleanup)(struct AmiSSLIFace *Self, EVP_MD * md, int (*cleanup)(EVP_MD_CTX *));
	DEPRECATED APICALL int (*EVP_MD_meth_set_copy)(struct AmiSSLIFace *Self, EVP_MD * md, int (*copy)(EVP_MD_CTX *, const EVP_MD_CTX *));
	DEPRECATED APICALL int (*EVP_MD_meth_set_ctrl)(struct AmiSSLIFace *Self, EVP_MD * md, int (*ctrl)(EVP_MD_CTX *, int, int, void *));
	DEPRECATED APICALL int (*EVP_MD_meth_set_final)(struct AmiSSLIFace *Self, EVP_MD * md, int (*final)(EVP_MD_CTX *, unsigned char *));
	DEPRECATED APICALL int (*EVP_MD_meth_set_flags)(struct AmiSSLIFace *Self, EVP_MD * md, unsigned long flags);
	DEPRECATED APICALL int (*EVP_MD_meth_set_init)(struct AmiSSLIFace *Self, EVP_MD * md, int (*init)(EVP_MD_CTX *));
	DEPRECATED APICALL int (*EVP_MD_meth_set_input_blocksize)(struct AmiSSLIFace *Self, EVP_MD * md, int blocksize);
	DEPRECATED APICALL int (*EVP_MD_meth_set_result_size)(struct AmiSSLIFace *Self, EVP_MD * md, int resultsize);
	DEPRECATED APICALL int (*EVP_MD_meth_set_update)(struct AmiSSLIFace *Self, EVP_MD * md, int (*update)(EVP_MD_CTX *, const void *, size_t));
	APICALL int (*EVP_PBE_get)(struct AmiSSLIFace *Self, int * ptype, int * ppbe_nid, size_t num);
	APICALL int (*OBSOLETE_EVP_PBE_scrypt)(struct AmiSSLIFace *Self, const char * pass, size_t passlen, const unsigned char * salt, size_t saltlen, unsigned long N, unsigned long r, unsigned long p, uint64_t maxmem, unsigned char * key, size_t keylen);
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_security_bits)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*pkey_security_bits)(const EVP_PKEY *));
	DEPRECATED APICALL const DH * (*EVP_PKEY_get0_DH)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	DEPRECATED APICALL const DSA * (*EVP_PKEY_get0_DSA)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	DEPRECATED APICALL const EC_KEY * (*EVP_PKEY_get0_EC_KEY)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	DEPRECATED APICALL const RSA * (*EVP_PKEY_get0_RSA)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_cleanup)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, void (**pcleanup)(EVP_PKEY_CTX *));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_copy)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pcopy)(EVP_PKEY_CTX *, const EVP_PKEY_CTX *));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_ctrl)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pctrl)(EVP_PKEY_CTX *, int, int, void *), int (**pctrl_str)(EVP_PKEY_CTX *, const char *, const char *));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_decrypt)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pdecrypt_init)(EVP_PKEY_CTX *), int (**pdecrypt)(EVP_PKEY_CTX *, unsigned char *, size_t *, const unsigned char *, size_t));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_derive)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pderive_init)(EVP_PKEY_CTX *), int (**pderive)(EVP_PKEY_CTX *, unsigned char *, size_t *));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_encrypt)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pencrypt_init)(EVP_PKEY_CTX *), int (**pencryptfn)(EVP_PKEY_CTX *, unsigned char *, size_t *, const unsigned char *, size_t));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_init)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pinit)(EVP_PKEY_CTX *));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_keygen)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pkeygen_init)(EVP_PKEY_CTX *), int (**pkeygen)(EVP_PKEY_CTX *, EVP_PKEY *));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_paramgen)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pparamgen_init)(EVP_PKEY_CTX *), int (**pparamgen)(EVP_PKEY_CTX *, EVP_PKEY *));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_sign)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**psign_init)(EVP_PKEY_CTX *), int (**psign)(EVP_PKEY_CTX *, unsigned char *, size_t *, const unsigned char *, size_t));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_signctx)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**psignctx_init)(EVP_PKEY_CTX *, EVP_MD_CTX *), int (**psignctx)(EVP_PKEY_CTX *, unsigned char *, size_t *, EVP_MD_CTX *));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_verify)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pverify_init)(EVP_PKEY_CTX *), int (**pverify)(EVP_PKEY_CTX *, const unsigned char *, size_t, const unsigned char *, size_t));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_verify_recover)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pverify_recover_init)(EVP_PKEY_CTX *), int (**pverify_recover)(EVP_PKEY_CTX *, unsigned char *, size_t *, const unsigned char *, size_t));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_verifyctx)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pverifyctx_init)(EVP_PKEY_CTX *, EVP_MD_CTX *), int (**pverifyctx)(EVP_PKEY_CTX *, const unsigned char *, int, EVP_MD_CTX *));
	APICALL int (*EVP_PKEY_get_security_bits)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL int (*EVP_PKEY_up_ref)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	APICALL int (*PKCS5_v2_scrypt_keyivgen)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, const EVP_CIPHER * c, const EVP_MD * md, int en_de);
	DEPRECATED APICALL void (*HMAC_CTX_free)(struct AmiSSLIFace *Self, HMAC_CTX * ctx);
	DEPRECATED APICALL HMAC_CTX * (*HMAC_CTX_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*HMAC_CTX_reset)(struct AmiSSLIFace *Self, HMAC_CTX * ctx);
	DEPRECATED APICALL size_t (*HMAC_size)(struct AmiSSLIFace *Self, const HMAC_CTX * ctx);
	APICALL int (*OPENSSL_LH_error)(struct AmiSSLIFace *Self, OPENSSL_LHASH * lh);
	APICALL unsigned long (*OPENSSL_LH_get_down_load)(struct AmiSSLIFace *Self, const OPENSSL_LHASH * lh);
	APICALL void (*OPENSSL_LH_set_down_load)(struct AmiSSLIFace *Self, OPENSSL_LHASH * lh, unsigned long down_load);
	APICALL size_t (*CRYPTO_128_unwrap_pad)(struct AmiSSLIFace *Self, void * key, const unsigned char * icv, unsigned char * out, const unsigned char * in, size_t inlen, block128_f block);
	APICALL size_t (*CRYPTO_128_wrap_pad)(struct AmiSSLIFace *Self, void * key, const unsigned char * icv, unsigned char * out, const unsigned char * in, size_t inlen, block128_f block);
	APICALL int (*CRYPTO_ocb128_aad)(struct AmiSSLIFace *Self, OCB128_CONTEXT * ctx, const unsigned char * aad, size_t len);
	APICALL void (*CRYPTO_ocb128_cleanup)(struct AmiSSLIFace *Self, OCB128_CONTEXT * ctx);
	APICALL int (*CRYPTO_ocb128_copy_ctx)(struct AmiSSLIFace *Self, OCB128_CONTEXT * dest, OCB128_CONTEXT * src, void * keyenc, void * keydec);
	APICALL int (*CRYPTO_ocb128_decrypt)(struct AmiSSLIFace *Self, OCB128_CONTEXT * ctx, const unsigned char * in, unsigned char * out, size_t len);
	APICALL int (*CRYPTO_ocb128_encrypt)(struct AmiSSLIFace *Self, OCB128_CONTEXT * ctx, const unsigned char * in, unsigned char * out, size_t len);
	APICALL int (*CRYPTO_ocb128_finish)(struct AmiSSLIFace *Self, OCB128_CONTEXT * ctx, const unsigned char * tag, size_t len);
	APICALL int (*CRYPTO_ocb128_init)(struct AmiSSLIFace *Self, OCB128_CONTEXT * ctx, void * keyenc, void * keydec, block128_f encrypt, block128_f decrypt, ocb128_f stream);
	APICALL OCB128_CONTEXT * (*CRYPTO_ocb128_new)(struct AmiSSLIFace *Self, void * keyenc, void * keydec, block128_f encrypt, block128_f decrypt, ocb128_f stream);
	APICALL int (*CRYPTO_ocb128_setiv)(struct AmiSSLIFace *Self, OCB128_CONTEXT * ctx, const unsigned char * iv, size_t len, size_t taglen);
	APICALL int (*CRYPTO_ocb128_tag)(struct AmiSSLIFace *Self, OCB128_CONTEXT * ctx, unsigned char * tag, size_t len);
	APICALL const unsigned char * (*OBJ_get0_data)(struct AmiSSLIFace *Self, const ASN1_OBJECT * obj);
	APICALL size_t (*OBJ_length)(struct AmiSSLIFace *Self, const ASN1_OBJECT * obj);
	APICALL const ASN1_GENERALIZEDTIME * (*OCSP_resp_get0_produced_at)(struct AmiSSLIFace *Self, const OCSP_BASICRESP * bs);
	APICALL const ASN1_OCTET_STRING * (*OCSP_resp_get0_signature)(struct AmiSSLIFace *Self, const OCSP_BASICRESP * bs);
	APICALL const OCSP_CERTID * (*OCSP_SINGLERESP_get0_id)(struct AmiSSLIFace *Self, const OCSP_SINGLERESP * bs);
	APICALL void (*PKCS12_get0_mac)(struct AmiSSLIFace *Self, const ASN1_OCTET_STRING ** pmac, const X509_ALGOR ** pmacalg, const ASN1_OCTET_STRING ** psalt, const ASN1_INTEGER ** piter, const PKCS12 * p12);
	APICALL int (*PKCS12_mac_present)(struct AmiSSLIFace *Self, const PKCS12 * p12);
	APICALL PKCS12_SAFEBAG * (*PKCS12_SAFEBAG_create0_p8inf)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8);
	APICALL PKCS12_SAFEBAG * (*PKCS12_SAFEBAG_create0_pkcs8)(struct AmiSSLIFace *Self, X509_SIG * p8);
	APICALL PKCS12_SAFEBAG * (*PKCS12_SAFEBAG_create_cert)(struct AmiSSLIFace *Self, X509 * x509);
	APICALL PKCS12_SAFEBAG * (*PKCS12_SAFEBAG_create_crl)(struct AmiSSLIFace *Self, X509_CRL * crl);
	APICALL PKCS12_SAFEBAG * (*PKCS12_SAFEBAG_create_pkcs8_encrypt)(struct AmiSSLIFace *Self, int pbe_nid, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, PKCS8_PRIV_KEY_INFO * p8inf);
	APICALL const ASN1_TYPE * (*PKCS12_SAFEBAG_get0_attr)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag, int attr_nid);
	APICALL const STACK_OF(X509_ATTRIBUTE) * (*PKCS12_SAFEBAG_get0_attrs)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag);
	APICALL const PKCS8_PRIV_KEY_INFO * (*PKCS12_SAFEBAG_get0_p8inf)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag);
	APICALL const X509_SIG * (*PKCS12_SAFEBAG_get0_pkcs8)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag);
	APICALL const STACK_OF(PKCS12_SAFEBAG) * (*PKCS12_SAFEBAG_get0_safes)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag);
	APICALL const ASN1_OBJECT * (*PKCS12_SAFEBAG_get0_type)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag);
	APICALL X509 * (*PKCS12_SAFEBAG_get1_cert)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag);
	APICALL X509_CRL * (*PKCS12_SAFEBAG_get1_crl)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag);
	APICALL int (*PKCS12_SAFEBAG_get_bag_nid)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag);
	APICALL int (*PKCS12_SAFEBAG_get_nid)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag);
	APICALL ASN1_TYPE * (*PKCS8_get_attr)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8, int attr_nid);
	APICALL X509_SIG * (*PKCS8_set0_pbe)(struct AmiSSLIFace *Self, const char * pass, int passlen, PKCS8_PRIV_KEY_INFO * p8inf, X509_ALGOR * pbe);
	DEPRECATED APICALL RAND_METHOD * (*RAND_OpenSSL)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*RSA_bits)(struct AmiSSLIFace *Self, const RSA * r);
	DEPRECATED APICALL int (*RSA_check_key_ex)(struct AmiSSLIFace *Self, const RSA * key, BN_GENCB * cb);
	DEPRECATED APICALL const RSA_METHOD * (*RSA_PKCS1_OpenSSL)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*RSA_security_bits)(struct AmiSSLIFace *Self, const RSA * rsa);
	DEPRECATED APICALL int (*OBSOLETE_RSA_X931_derive_ex)(struct AmiSSLIFace *Self, RSA * rsa, BIGNUM * p1, BIGNUM * p2, BIGNUM * q1, BIGNUM * q2, const BIGNUM * Xp1, const BIGNUM * Xp2, const BIGNUM * Xp, const BIGNUM * Xq1, const BIGNUM * Xq2, const BIGNUM * Xq, const BIGNUM * e, BN_GENCB * cb);
	DEPRECATED APICALL int (*RSA_X931_generate_key_ex)(struct AmiSSLIFace *Self, RSA * rsa, int bits, const BIGNUM * e, BN_GENCB * cb);
	APICALL int (*TS_CONF_set_signer_digest)(struct AmiSSLIFace *Self, CONF * conf, const char * section, const char * md, TS_RESP_CTX * ctx);
	APICALL int (*TS_RESP_CTX_set_signer_digest)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, const EVP_MD * md);
	APICALL const ASN1_BIT_STRING * (*TS_STATUS_INFO_get0_failure_info)(struct AmiSSLIFace *Self, const TS_STATUS_INFO * a);
	APICALL const ASN1_INTEGER * (*TS_STATUS_INFO_get0_status)(struct AmiSSLIFace *Self, const TS_STATUS_INFO * a);
	APICALL int (*TS_STATUS_INFO_set_status)(struct AmiSSLIFace *Self, TS_STATUS_INFO * a, int i);
	APICALL int (*TS_VERIFY_CTX_add_flags)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, int f);
	DEPRECATED APICALL BIO * (*TS_VERIFY_CTX_set_data)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, BIO * b);
	APICALL int (*TS_VERIFY_CTX_set_flags)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, int f);
	DEPRECATED APICALL unsigned char * (*TS_VERIFY_CTX_set_imprint)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, unsigned char * hexstr, long len);
	DEPRECATED APICALL X509_STORE * (*TS_VERIFY_CTX_set_store)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, X509_STORE * s);
	DEPRECATED APICALL STACK_OF(X509) * (*TS_VERIFY_CTX_set_certs)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, STACK_OF(X509) * certs);
	APICALL int (*i2d_re_X509_CRL_tbs)(struct AmiSSLIFace *Self, X509_CRL * req, unsigned char ** pp);
	APICALL int (*i2d_re_X509_REQ_tbs)(struct AmiSSLIFace *Self, X509_REQ * req, unsigned char ** pp);
	APICALL X509_ALGOR * (*PKCS5_pbe2_set_scrypt)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher, const unsigned char * salt, int saltlen, unsigned char * aiv, uint64_t N, uint64_t r, uint64_t p);
	APTR X509_aux_print_UNIMPLEMENTED;
	APICALL const STACK_OF(X509_EXTENSION) * (*X509_CRL_get0_extensions)(struct AmiSSLIFace *Self, const X509_CRL * crl);
	APICALL void (*X509_CRL_get0_signature)(struct AmiSSLIFace *Self, const X509_CRL * crl, const ASN1_BIT_STRING ** psig, const X509_ALGOR ** palg);
	APICALL X509_NAME * (*X509_CRL_get_issuer)(struct AmiSSLIFace *Self, const X509_CRL * crl);
	DEPRECATED APICALL ASN1_TIME * (*X509_CRL_get_lastUpdate)(struct AmiSSLIFace *Self, X509_CRL * crl);
	DEPRECATED APICALL ASN1_TIME * (*X509_CRL_get_nextUpdate)(struct AmiSSLIFace *Self, X509_CRL * crl);
	APICALL STACK_OF(X509_REVOKED) * (*X509_CRL_get_REVOKED)(struct AmiSSLIFace *Self, X509_CRL * crl);
	APICALL int (*X509_CRL_get_signature_nid)(struct AmiSSLIFace *Self, const X509_CRL * crl);
	APICALL long (*X509_CRL_get_version)(struct AmiSSLIFace *Self, const X509_CRL * crl);
	APICALL int (*X509_CRL_up_ref)(struct AmiSSLIFace *Self, X509_CRL * crl);
	APICALL const STACK_OF(X509_EXTENSION) * (*X509_get0_extensions)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL EVP_PKEY * (*X509_get0_pubkey)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL STACK_OF(ASN1_OBJECT) * (*X509_get0_reject_objects)(struct AmiSSLIFace *Self, X509 * x);
	APICALL const X509_ALGOR * (*X509_get0_tbs_sigalg)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL STACK_OF(ASN1_OBJECT) * (*X509_get0_trust_objects)(struct AmiSSLIFace *Self, X509 * x);
	APICALL void (*X509_get0_uids)(struct AmiSSLIFace *Self, const X509 * x, const ASN1_BIT_STRING ** piuid, const ASN1_BIT_STRING ** psuid);
	APICALL ASN1_TIME * (*X509_getm_notAfter)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL ASN1_TIME * (*X509_getm_notBefore)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL int (*X509_get_signature_type)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL long (*X509_get_version)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL X509_PUBKEY * (*X509_get_X509_PUBKEY)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL int (*X509_NAME_ENTRY_set)(struct AmiSSLIFace *Self, const X509_NAME_ENTRY * ne);
	APICALL int (*X509_NAME_get0_der)(struct AmiSSLIFace *Self, const X509_NAME * nm, const unsigned char ** pder, size_t * pderlen);
	APICALL EVP_PKEY * (*X509_PUBKEY_get0)(struct AmiSSLIFace *Self, const X509_PUBKEY * key);
	APICALL void (*X509_REQ_get0_signature)(struct AmiSSLIFace *Self, const X509_REQ * req, const ASN1_BIT_STRING ** psig, const X509_ALGOR ** palg);
	APICALL int (*X509_REQ_get_signature_nid)(struct AmiSSLIFace *Self, const X509_REQ * req);
	APICALL X509_NAME * (*X509_REQ_get_subject_name)(struct AmiSSLIFace *Self, const X509_REQ * req);
	APICALL long (*X509_REQ_get_version)(struct AmiSSLIFace *Self, const X509_REQ * req);
	APICALL X509_PUBKEY * (*X509_REQ_get_X509_PUBKEY)(struct AmiSSLIFace *Self, X509_REQ * req);
	APICALL const STACK_OF(X509_EXTENSION) * (*X509_REVOKED_get0_extensions)(struct AmiSSLIFace *Self, const X509_REVOKED * r);
	APICALL const ASN1_TIME * (*X509_REVOKED_get0_revocationDate)(struct AmiSSLIFace *Self, const X509_REVOKED * x);
	APICALL const ASN1_INTEGER * (*X509_REVOKED_get0_serialNumber)(struct AmiSSLIFace *Self, const X509_REVOKED * x);
	APICALL int (*X509_trusted)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL int (*X509_up_ref)(struct AmiSSLIFace *Self, X509 * x);
	APICALL int (*X509_STORE_CTX_get_num_untrusted)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL void (*X509_STORE_CTX_set0_dane)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, SSL_DANE * dane);
	APICALL void (*X509_VERIFY_PARAM_move_peername)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * to, X509_VERIFY_PARAM * from);
	APICALL char * (*i2s_ASN1_IA5STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, ASN1_IA5STRING * ia5);
	APICALL ASN1_IA5STRING * (*s2i_ASN1_IA5STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, X509V3_CTX * ctx, const char * str);
	APICALL int (*X509v3_addr_add_inherit)(struct AmiSSLIFace *Self, IPAddrBlocks * addr, const unsigned afi, const unsigned * safi);
	APICALL int (*X509v3_addr_add_prefix)(struct AmiSSLIFace *Self, IPAddrBlocks * addr, const unsigned afi, const unsigned * safi, unsigned char * a, const int prefixlen);
	APICALL int (*X509v3_addr_add_range)(struct AmiSSLIFace *Self, IPAddrBlocks * addr, const unsigned afi, const unsigned * safi, unsigned char * min, unsigned char * max);
	APICALL int (*X509v3_addr_canonize)(struct AmiSSLIFace *Self, IPAddrBlocks * addr);
	APICALL unsigned (*X509v3_addr_get_afi)(struct AmiSSLIFace *Self, const IPAddressFamily * f);
	APICALL int (*X509v3_addr_get_range)(struct AmiSSLIFace *Self, IPAddressOrRange * aor, const unsigned afi, unsigned char * min, unsigned char * max, const int length);
	APICALL int (*X509v3_addr_inherits)(struct AmiSSLIFace *Self, IPAddrBlocks * addr);
	APICALL int (*X509v3_addr_is_canonical)(struct AmiSSLIFace *Self, IPAddrBlocks * addr);
	APICALL int (*X509v3_addr_subset)(struct AmiSSLIFace *Self, IPAddrBlocks * a, IPAddrBlocks * b);
	APICALL int (*X509v3_addr_validate_path)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	APICALL int (*X509v3_addr_validate_resource_set)(struct AmiSSLIFace *Self, STACK_OF(X509) * chain, IPAddrBlocks * ext, int allow_inheritance);
	APICALL int (*X509v3_asid_add_inherit)(struct AmiSSLIFace *Self, ASIdentifiers * asid, int which);
	APICALL int (*X509v3_asid_add_id_or_range)(struct AmiSSLIFace *Self, ASIdentifiers * asid, int which, ASN1_INTEGER * min, ASN1_INTEGER * max);
	APICALL int (*X509v3_asid_canonize)(struct AmiSSLIFace *Self, ASIdentifiers * asid);
	APICALL int (*X509v3_asid_inherits)(struct AmiSSLIFace *Self, ASIdentifiers * asid);
	APICALL int (*X509v3_asid_is_canonical)(struct AmiSSLIFace *Self, ASIdentifiers * asid);
	APICALL int (*X509v3_asid_subset)(struct AmiSSLIFace *Self, ASIdentifiers * a, ASIdentifiers * b);
	APICALL int (*X509v3_asid_validate_path)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	APICALL int (*X509v3_asid_validate_resource_set)(struct AmiSSLIFace *Self, STACK_OF(X509) * chain, ASIdentifiers * ext, int allow_inheritance);
	APICALL const ASN1_OCTET_STRING * (*X509_get0_subject_key_id)(struct AmiSSLIFace *Self, X509 * x);
	APICALL uint32_t (*X509_get_extended_key_usage)(struct AmiSSLIFace *Self, X509 * x);
	APICALL uint32_t (*X509_get_extension_flags)(struct AmiSSLIFace *Self, X509 * x);
	APICALL uint32_t (*X509_get_key_usage)(struct AmiSSLIFace *Self, X509 * x);
	APICALL int (*DTLSv1_listen)(struct AmiSSLIFace *Self, SSL * s, BIO_ADDR * client);
	APICALL int (*OPENSSL_init_ssl)(struct AmiSSLIFace *Self, uint64_t opts, const OPENSSL_INIT_SETTINGS * settings);
	APICALL int (*SSL_add1_host)(struct AmiSSLIFace *Self, SSL * s, const char * host);
	APICALL void (*SSL_add_ssl_module)(struct AmiSSLIFace *Self);
	APICALL int (*SSL_CIPHER_get_cipher_nid)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
	APICALL int (*SSL_CIPHER_get_digest_nid)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
	APICALL uint64_t (*SSL_clear_options)(struct AmiSSLIFace *Self, SSL * s, uint64_t op);
	APICALL int (*SSL_config)(struct AmiSSLIFace *Self, SSL * s, const char * name);
	APICALL uint64_t (*SSL_CTX_clear_options)(struct AmiSSLIFace *Self, SSL_CTX * ctx, uint64_t op);
	APICALL int (*SSL_CTX_config)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * name);
	APICALL int (*SSL_CTX_dane_enable)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL int (*SSL_CTX_dane_mtype_set)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const EVP_MD * md, uint8_t mtype, uint8_t ord);
	APICALL void * (*SSL_CTX_get0_security_ex_data)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL uint64_t (*SSL_CTX_get_options)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL int (*(*SSL_CTX_get_security_callback)(struct AmiSSLIFace *Self, const SSL_CTX * ctx))(const SSL *, const SSL_CTX *, int, int, int, void *, void *);
	APICALL int (*SSL_CTX_get_security_level)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL void (*SSL_CTX_set0_security_ex_data)(struct AmiSSLIFace *Self, SSL_CTX * ctx, void * ex);
	APICALL int (*SSL_CTX_set_default_verify_dir)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL int (*SSL_CTX_set_default_verify_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL void (*SSL_CTX_set_not_resumable_session_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*cb)(SSL *, int));
	APICALL uint64_t (*SSL_CTX_set_options)(struct AmiSSLIFace *Self, SSL_CTX * ctx, uint64_t op);
	APICALL void (*SSL_CTX_set_security_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*cb)(const SSL *, const SSL_CTX *, int, int, int, void *, void *));
	APICALL void (*SSL_CTX_set_security_level)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int level);
	APICALL int (*SSL_CTX_up_ref)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL int (*SSL_dane_enable)(struct AmiSSLIFace *Self, SSL * s, const char * basedomain);
	APICALL int (*SSL_dane_tlsa_add)(struct AmiSSLIFace *Self, SSL * s, uint8_t usage, uint8_t selector, uint8_t mtype, unsigned const char * data, size_t dlen);
	APICALL SSL_DANE * (*SSL_get0_dane)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL int (*SSL_get0_dane_authority)(struct AmiSSLIFace *Self, SSL * s, X509 ** mcert, EVP_PKEY ** mspki);
	APICALL int (*SSL_get0_dane_tlsa)(struct AmiSSLIFace *Self, SSL * s, uint8_t * usage, uint8_t * selector, uint8_t * mtype, unsigned const char ** data, size_t * dlen);
	APICALL const char * (*SSL_get0_peername)(struct AmiSSLIFace *Self, SSL * s);
	APICALL void * (*SSL_get0_security_ex_data)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL STACK_OF(SSL_CIPHER) * (*SSL_get1_supported_ciphers)(struct AmiSSLIFace *Self, SSL * s);
	APTR SSL_get_async_wait_fd_UNIMPLEMENTED;
	APICALL size_t (*SSL_get_client_random)(struct AmiSSLIFace *Self, const SSL * s, unsigned char * out, size_t outlen);
	APICALL uint64_t (*SSL_get_options)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*(*SSL_get_security_callback)(struct AmiSSLIFace *Self, const SSL * s))(const SSL *, const SSL_CTX *, int, int, int, void *, void *);
	APICALL int (*SSL_get_security_level)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL size_t (*SSL_get_server_random)(struct AmiSSLIFace *Self, const SSL * s, unsigned char * out, size_t outlen);
	APICALL OSSL_HANDSHAKE_STATE (*SSL_get_state)(struct AmiSSLIFace *Self, const SSL * ssl);
	APICALL int (*SSL_in_before)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_in_init)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_is_init_finished)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL void (*SSL_SESSION_get0_ticket)(struct AmiSSLIFace *Self, const SSL_SESSION * s, const unsigned char ** tick, size_t * len);
	APICALL size_t (*SSL_SESSION_get_master_key)(struct AmiSSLIFace *Self, const SSL_SESSION * sess, unsigned char * out, size_t outlen);
	APICALL unsigned long (*SSL_SESSION_get_ticket_lifetime_hint)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
	APICALL int (*SSL_SESSION_has_ticket)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
	APICALL int (*SSL_SESSION_print_keylog)(struct AmiSSLIFace *Self, BIO * bp, const SSL_SESSION * x);
	APICALL int (*SSL_session_reused)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL void (*SSL_set0_security_ex_data)(struct AmiSSLIFace *Self, SSL * s, void * ex);
	APICALL int (*SSL_set1_host)(struct AmiSSLIFace *Self, SSL * s, const char * host);
	APICALL void (*SSL_set_default_passwd_cb)(struct AmiSSLIFace *Self, SSL * s, pem_password_cb * cb);
	APICALL void (*SSL_set_default_passwd_cb_userdata)(struct AmiSSLIFace *Self, SSL * s, void * u);
	APICALL void (*SSL_set_hostflags)(struct AmiSSLIFace *Self, SSL * s, unsigned int flags);
	APICALL void (*SSL_set_not_resumable_session_callback)(struct AmiSSLIFace *Self, SSL * ssl, int (*cb)(SSL *, int));
	APICALL uint64_t (*SSL_set_options)(struct AmiSSLIFace *Self, SSL * s, uint64_t op);
	APICALL void (*SSL_set0_rbio)(struct AmiSSLIFace *Self, SSL * s, BIO * rbio);
	APICALL void (*SSL_set_security_callback)(struct AmiSSLIFace *Self, SSL * s, int (*cb)(const SSL *, const SSL_CTX *, int, int, int, void *, void *));
	APICALL void (*SSL_set_security_level)(struct AmiSSLIFace *Self, SSL * s, int level);
	APICALL void (*SSL_set0_wbio)(struct AmiSSLIFace *Self, SSL * s, BIO * wbio);
	APICALL int (*SSL_up_ref)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_use_certificate_chain_file)(struct AmiSSLIFace *Self, SSL * ssl, const char * file);
	APICALL int (*SSL_waiting_for_async)(struct AmiSSLIFace *Self, SSL * s);
	APICALL const SSL_METHOD * (*TLS_client_method)(struct AmiSSLIFace *Self);
	APICALL const SSL_METHOD * (*TLS_method)(struct AmiSSLIFace *Self);
	APICALL const SSL_METHOD * (*TLS_server_method)(struct AmiSSLIFace *Self);
	APICALL ASYNC_WAIT_CTX * (*ASYNC_WAIT_CTX_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASYNC_WAIT_CTX_free)(struct AmiSSLIFace *Self, ASYNC_WAIT_CTX * ctx);
	APICALL int (*ASYNC_WAIT_CTX_set_wait_fd)(struct AmiSSLIFace *Self, ASYNC_WAIT_CTX * ctx, const void * key, OSSL_ASYNC_FD fd, void * custom_data, void (*cleanup)(ASYNC_WAIT_CTX *, const void *, OSSL_ASYNC_FD, void *));
	APICALL int (*ASYNC_WAIT_CTX_get_fd)(struct AmiSSLIFace *Self, ASYNC_WAIT_CTX * ctx, const void * key, OSSL_ASYNC_FD * fd, void ** custom_data);
	APICALL int (*ASYNC_WAIT_CTX_get_all_fds)(struct AmiSSLIFace *Self, ASYNC_WAIT_CTX * ctx, OSSL_ASYNC_FD * fd, size_t * numfds);
	APICALL int (*ASYNC_WAIT_CTX_get_changed_fds)(struct AmiSSLIFace *Self, ASYNC_WAIT_CTX * ctx, OSSL_ASYNC_FD * addfd, size_t * numaddfds, OSSL_ASYNC_FD * delfd, size_t * numdelfds);
	APICALL int (*ASYNC_WAIT_CTX_clear_fd)(struct AmiSSLIFace *Self, ASYNC_WAIT_CTX * ctx, const void * key);
	APICALL int (*ASYNC_is_capable)(struct AmiSSLIFace *Self);
	APICALL ASYNC_WAIT_CTX * (*ASYNC_get_wait_ctx)(struct AmiSSLIFace *Self, ASYNC_JOB * job);
	APICALL int (*BIO_up_ref)(struct AmiSSLIFace *Self, BIO * a);
	APICALL int (*BN_BLINDING_is_current_thread)(struct AmiSSLIFace *Self, BN_BLINDING * b);
	APICALL void (*BN_BLINDING_set_current_thread)(struct AmiSSLIFace *Self, BN_BLINDING * b);
	APICALL int (*BN_BLINDING_lock)(struct AmiSSLIFace *Self, BN_BLINDING * b);
	APICALL int (*BN_BLINDING_unlock)(struct AmiSSLIFace *Self, BN_BLINDING * b);
	APICALL int (*CRYPTO_THREAD_run_once)(struct AmiSSLIFace *Self, CRYPTO_ONCE * once, void (*init)(void));
	APICALL int (*CRYPTO_THREAD_init_local)(struct AmiSSLIFace *Self, CRYPTO_THREAD_LOCAL * key, void (*cleanup)(void *));
	APICALL void * (*CRYPTO_THREAD_get_local)(struct AmiSSLIFace *Self, CRYPTO_THREAD_LOCAL * key);
	APICALL int (*CRYPTO_THREAD_set_local)(struct AmiSSLIFace *Self, CRYPTO_THREAD_LOCAL * key, void * val);
	APICALL int (*CRYPTO_THREAD_cleanup_local)(struct AmiSSLIFace *Self, CRYPTO_THREAD_LOCAL * key);
	APICALL CRYPTO_THREAD_ID (*CRYPTO_THREAD_get_current_id)(struct AmiSSLIFace *Self);
	APICALL int (*CRYPTO_THREAD_compare_id)(struct AmiSSLIFace *Self, CRYPTO_THREAD_ID a, CRYPTO_THREAD_ID b);
	APICALL CRYPTO_RWLOCK * (*CRYPTO_THREAD_lock_new)(struct AmiSSLIFace *Self);
	APICALL int (*CRYPTO_THREAD_read_lock)(struct AmiSSLIFace *Self, CRYPTO_RWLOCK * lock);
	APICALL int (*CRYPTO_THREAD_write_lock)(struct AmiSSLIFace *Self, CRYPTO_RWLOCK * lock);
	APICALL int (*CRYPTO_THREAD_unlock)(struct AmiSSLIFace *Self, CRYPTO_RWLOCK * lock);
	APICALL void (*CRYPTO_THREAD_lock_free)(struct AmiSSLIFace *Self, CRYPTO_RWLOCK * lock);
	APICALL int (*CRYPTO_atomic_add)(struct AmiSSLIFace *Self, int * val, int amount, int * ret, CRYPTO_RWLOCK * lock);
	APICALL void (*OPENSSL_die)(struct AmiSSLIFace *Self, const char * assertion, const char * file, int line);
	APICALL CT_POLICY_EVAL_CTX * (*CT_POLICY_EVAL_CTX_new)(struct AmiSSLIFace *Self);
	APICALL void (*CT_POLICY_EVAL_CTX_free)(struct AmiSSLIFace *Self, CT_POLICY_EVAL_CTX * ctx);
	APICALL X509 * (*CT_POLICY_EVAL_CTX_get0_cert)(struct AmiSSLIFace *Self, const CT_POLICY_EVAL_CTX * ctx);
	APICALL X509 * (*CT_POLICY_EVAL_CTX_get0_issuer)(struct AmiSSLIFace *Self, const CT_POLICY_EVAL_CTX * ctx);
	APICALL const CTLOG_STORE * (*CT_POLICY_EVAL_CTX_get0_log_store)(struct AmiSSLIFace *Self, const CT_POLICY_EVAL_CTX * ctx);
	APICALL SCT * (*SCT_new)(struct AmiSSLIFace *Self);
	APICALL SCT * (*SCT_new_from_base64)(struct AmiSSLIFace *Self, unsigned char version, const char * logid_base64, ct_log_entry_type_t entry_type, uint64_t timestamp, const char * extensions_base64, const char * signature_base64);
	APICALL void (*SCT_free)(struct AmiSSLIFace *Self, SCT * sct);
	APICALL void (*SCT_LIST_free)(struct AmiSSLIFace *Self, STACK_OF(SCT) * a);
	APICALL sct_version_t (*SCT_get_version)(struct AmiSSLIFace *Self, const SCT * sct);
	APICALL int (*SCT_set_version)(struct AmiSSLIFace *Self, SCT * sct, sct_version_t version);
	APICALL ct_log_entry_type_t (*SCT_get_log_entry_type)(struct AmiSSLIFace *Self, const SCT * sct);
	APICALL int (*SCT_set_log_entry_type)(struct AmiSSLIFace *Self, SCT * sct, ct_log_entry_type_t entry_type);
	APICALL size_t (*SCT_get0_log_id)(struct AmiSSLIFace *Self, const SCT * sct, unsigned char ** log_id);
	APICALL int (*SCT_set0_log_id)(struct AmiSSLIFace *Self, SCT * sct, unsigned char * log_id, size_t log_id_len);
	APICALL int (*SCT_set1_log_id)(struct AmiSSLIFace *Self, SCT * sct, const unsigned char * log_id, size_t log_id_len);
	APICALL uint64_t (*SCT_get_timestamp)(struct AmiSSLIFace *Self, const SCT * sct);
	APICALL void (*SCT_set_timestamp)(struct AmiSSLIFace *Self, SCT * sct, uint64_t timestamp);
	APICALL int (*SCT_get_signature_nid)(struct AmiSSLIFace *Self, const SCT * sct);
	APICALL int (*SCT_set_signature_nid)(struct AmiSSLIFace *Self, SCT * sct, int nid);
	APICALL size_t (*SCT_get0_extensions)(struct AmiSSLIFace *Self, const SCT * sct, unsigned char ** ext);
	APICALL void (*SCT_set0_extensions)(struct AmiSSLIFace *Self, SCT * sct, unsigned char * ext, size_t ext_len);
	APICALL int (*SCT_set1_extensions)(struct AmiSSLIFace *Self, SCT * sct, const unsigned char * ext, size_t ext_len);
	APICALL size_t (*SCT_get0_signature)(struct AmiSSLIFace *Self, const SCT * sct, unsigned char ** sig);
	APICALL void (*SCT_set0_signature)(struct AmiSSLIFace *Self, SCT * sct, unsigned char * sig, size_t sig_len);
	APICALL int (*SCT_set1_signature)(struct AmiSSLIFace *Self, SCT * sct, const unsigned char * sig, size_t sig_len);
	APICALL sct_source_t (*SCT_get_source)(struct AmiSSLIFace *Self, const SCT * sct);
	APICALL int (*SCT_set_source)(struct AmiSSLIFace *Self, SCT * sct, sct_source_t source);
	APICALL void (*SCT_print)(struct AmiSSLIFace *Self, const SCT * sct, BIO * out, int indent, const CTLOG_STORE * logs);
	APICALL void (*SCT_LIST_print)(struct AmiSSLIFace *Self, const STACK_OF(SCT) * sct_list, BIO * out, int indent, const char * separator, const CTLOG_STORE * logs);
	APICALL sct_validation_status_t (*SCT_get_validation_status)(struct AmiSSLIFace *Self, const SCT * sct);
	APICALL int (*SCT_validate)(struct AmiSSLIFace *Self, SCT * sct, const CT_POLICY_EVAL_CTX * ctx);
	APICALL int (*SCT_LIST_validate)(struct AmiSSLIFace *Self, const STACK_OF(SCT) * scts, CT_POLICY_EVAL_CTX * ctx);
	APICALL int (*i2o_SCT_LIST)(struct AmiSSLIFace *Self, const STACK_OF(SCT) * a, unsigned char ** pp);
	APICALL STACK_OF(SCT) * (*o2i_SCT_LIST)(struct AmiSSLIFace *Self, STACK_OF(SCT) ** a, const unsigned char ** pp, size_t len);
	APICALL int (*i2d_SCT_LIST)(struct AmiSSLIFace *Self, const STACK_OF(SCT) * a, unsigned char ** pp);
	APICALL STACK_OF(SCT) * (*d2i_SCT_LIST)(struct AmiSSLIFace *Self, STACK_OF(SCT) ** a, const unsigned char ** pp, long len);
	APICALL int (*i2o_SCT)(struct AmiSSLIFace *Self, const SCT * sct, unsigned char ** out);
	APICALL SCT * (*o2i_SCT)(struct AmiSSLIFace *Self, SCT ** psct, const unsigned char ** in, size_t len);
	APICALL CTLOG * (*CTLOG_new)(struct AmiSSLIFace *Self, EVP_PKEY * public_key, const char * name);
	APICALL int (*CTLOG_new_from_base64)(struct AmiSSLIFace *Self, CTLOG ** ct_log, const char * pkey_base64, const char * name);
	APICALL void (*CTLOG_free)(struct AmiSSLIFace *Self, CTLOG * log);
	APICALL const char * (*CTLOG_get0_name)(struct AmiSSLIFace *Self, const CTLOG * log);
	APICALL void (*CTLOG_get0_log_id)(struct AmiSSLIFace *Self, const CTLOG * log, const uint8_t ** log_id, size_t * log_id_len);
	APICALL EVP_PKEY * (*CTLOG_get0_public_key)(struct AmiSSLIFace *Self, const CTLOG * log);
	APICALL CTLOG_STORE * (*CTLOG_STORE_new)(struct AmiSSLIFace *Self);
	APICALL void (*CTLOG_STORE_free)(struct AmiSSLIFace *Self, CTLOG_STORE * store);
	APICALL const CTLOG * (*CTLOG_STORE_get0_log_by_id)(struct AmiSSLIFace *Self, const CTLOG_STORE * store, const uint8_t * log_id, size_t log_id_len);
	APICALL int (*CTLOG_STORE_load_file)(struct AmiSSLIFace *Self, CTLOG_STORE * store, const char * file);
	APICALL int (*CTLOG_STORE_load_default_file)(struct AmiSSLIFace *Self, CTLOG_STORE * store);
	DEPRECATED APICALL int (*ERR_load_CT_strings)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*DHparams_it)(struct AmiSSLIFace *Self);
	APICALL void (*DSA_SIG_get0)(struct AmiSSLIFace *Self, const DSA_SIG * sig, const BIGNUM ** pr, const BIGNUM ** ps);
	APICALL EC_GROUP * (*EC_GROUP_new_from_ecparameters)(struct AmiSSLIFace *Self, const ECPARAMETERS * params);
	APICALL ECPARAMETERS * (*EC_GROUP_get_ecparameters)(struct AmiSSLIFace *Self, const EC_GROUP * group, ECPARAMETERS * params);
	APICALL EC_GROUP * (*EC_GROUP_new_from_ecpkparameters)(struct AmiSSLIFace *Self, const ECPKPARAMETERS * params);
	APICALL ECPKPARAMETERS * (*EC_GROUP_get_ecpkparameters)(struct AmiSSLIFace *Self, const EC_GROUP * group, ECPKPARAMETERS * params);
	APICALL const ASN1_ITEM * (*ECPKPARAMETERS_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ECPARAMETERS_it)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*EC_KEY_can_sign)(struct AmiSSLIFace *Self, const EC_KEY * eckey);
	APICALL const EVP_MD * (*EVP_blake2b512)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_blake2s256)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_PKEY_CTX_str2ctrl)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int cmd, const char * str);
	APICALL int (*EVP_PKEY_CTX_hex2ctrl)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int cmd, const char * hex);
	DEPRECATED APICALL int (*ERR_load_KDF_strings)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*SRP_user_pwd_free)(struct AmiSSLIFace *Self, SRP_user_pwd * user_pwd);
	DEPRECATED APICALL SRP_user_pwd * (*SRP_VBASE_get1_by_user)(struct AmiSSLIFace *Self, SRP_VBASE * vb, char * username);
	APICALL int (*SSL_CTX_has_client_custom_ext)(struct AmiSSLIFace *Self, const SSL_CTX * ctx, unsigned int ext_type);
	APICALL int (*SSL_CIPHER_get_kx_nid)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
	APICALL int (*SSL_CIPHER_get_auth_nid)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
	APICALL int (*SSL_CIPHER_is_aead)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
	APICALL int (*SSL_has_pending)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_SESSION_up_ref)(struct AmiSSLIFace *Self, SSL_SESSION * ses);
	APICALL int (*(*SSL_CTX_get_default_passwd_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx))(char *, int, int, void *);
	APICALL void * (*SSL_CTX_get_default_passwd_cb_userdata)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL int (*(*SSL_get_default_passwd_cb)(struct AmiSSLIFace *Self, SSL * ctx))(char *, int, int, void *);
	APICALL void * (*SSL_get_default_passwd_cb_userdata)(struct AmiSSLIFace *Self, SSL * ctx);
	APICALL int (*SSL_get_all_async_fds)(struct AmiSSLIFace *Self, SSL * s, OSSL_ASYNC_FD * fds, size_t * numfds);
	APICALL int (*SSL_get_changed_async_fds)(struct AmiSSLIFace *Self, SSL * s, OSSL_ASYNC_FD * addfd, size_t * numaddfds, OSSL_ASYNC_FD * delfd, size_t * numdelfds);
	APICALL void (*SSL_CTX_set_default_read_buffer_len)(struct AmiSSLIFace *Self, SSL_CTX * ctx, size_t len);
	APICALL void (*SSL_set_default_read_buffer_len)(struct AmiSSLIFace *Self, SSL * s, size_t len);
	APICALL int (*SSL_set_ct_validation_callback)(struct AmiSSLIFace *Self, SSL * s, ssl_ct_validation_cb callback, void * arg);
	APICALL int (*SSL_CTX_set_ct_validation_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, ssl_ct_validation_cb callback, void * arg);
	APICALL int (*SSL_ct_is_enabled)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_CTX_ct_is_enabled)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL const STACK_OF(SCT) * (*SSL_get0_peer_scts)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_CTX_set_default_ctlog_list_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL int (*SSL_CTX_set_ctlog_list_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * path);
	APICALL void (*SSL_CTX_set0_ctlog_store)(struct AmiSSLIFace *Self, SSL_CTX * ctx, CTLOG_STORE * logs);
	APICALL const CTLOG_STORE * (*SSL_CTX_get0_ctlog_store)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL void (*X509_SIG_get0)(struct AmiSSLIFace *Self, const X509_SIG * sig, const X509_ALGOR ** palg, const ASN1_OCTET_STRING ** pdigest);
	APICALL const STACK_OF(X509_ATTRIBUTE) * (*PKCS8_pkey_get0_attrs)(struct AmiSSLIFace *Self, const PKCS8_PRIV_KEY_INFO * p8);
	APICALL int (*PKCS8_pkey_add1_attr_by_NID)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8, int nid, int type, const unsigned char * bytes, int len);
	APICALL int (*X509_STORE_up_ref)(struct AmiSSLIFace *Self, X509_STORE * xs);
	APICALL int (*SSL_enable_ct)(struct AmiSSLIFace *Self, SSL * s, int validation_mode);
	APICALL int (*SSL_CTX_enable_ct)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int validation_mode);
	APICALL STACK_OF(SSL_CIPHER) * (*SSL_CTX_get_ciphers)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL const char * (*SSL_SESSION_get0_hostname)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
	APICALL const char * (*SCT_validation_status_string)(struct AmiSSLIFace *Self, const SCT * sct);
	APICALL BIO_METHOD * (*BIO_meth_new)(struct AmiSSLIFace *Self, int type, const char * name);
	DEPRECATED APICALL int (*(*BIO_meth_get_puts)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *, const char *);
	DEPRECATED APICALL long (*(*BIO_meth_get_ctrl)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *, int, long, void *);
	DEPRECATED APICALL int (*(*BIO_meth_get_gets)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *, char *, int);
	APICALL void * (*BIO_get_data)(struct AmiSSLIFace *Self, BIO * a);
	APICALL void (*BIO_set_init)(struct AmiSSLIFace *Self, BIO * a, int init);
	APICALL int (*BIO_meth_set_puts)(struct AmiSSLIFace *Self, BIO_METHOD * biom, int (*func)(BIO *, const char *));
	APICALL int (*BIO_get_shutdown)(struct AmiSSLIFace *Self, BIO * a);
	APICALL int (*BIO_get_init)(struct AmiSSLIFace *Self, BIO * a);
	APICALL int (*BIO_meth_set_ctrl)(struct AmiSSLIFace *Self, BIO_METHOD * biom, long (*ctrl)(BIO *, int, long, void *));
	APICALL int (*BIO_meth_set_read)(struct AmiSSLIFace *Self, BIO_METHOD * biom, int (*read)(BIO *, char *, int));
	APICALL void (*BIO_set_shutdown)(struct AmiSSLIFace *Self, BIO * a, int shut);
	APICALL int (*BIO_meth_set_create)(struct AmiSSLIFace *Self, BIO_METHOD * biom, int (*create)(BIO *));
	DEPRECATED APICALL int (*(*BIO_meth_get_write)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *, const char *, int);
	APICALL int (*BIO_meth_set_callback_ctrl)(struct AmiSSLIFace *Self, BIO_METHOD * biom, long (*callback_ctrl)(BIO *, int, BIO_info_cb *));
	DEPRECATED APICALL int (*(*BIO_meth_get_create)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *);
	APICALL void (*BIO_set_next)(struct AmiSSLIFace *Self, BIO * b, BIO * next);
	APICALL void (*BIO_set_data)(struct AmiSSLIFace *Self, BIO * a, void * ptr);
	APICALL int (*BIO_meth_set_write)(struct AmiSSLIFace *Self, BIO_METHOD * biom, int (*write)(BIO *, const char *, int));
	APICALL int (*BIO_meth_set_destroy)(struct AmiSSLIFace *Self, BIO_METHOD * biom, int (*destroy)(BIO *));
	APICALL int (*BIO_meth_set_gets)(struct AmiSSLIFace *Self, BIO_METHOD * biom, int (*ossl_gets)(BIO *, char *, int));
	DEPRECATED APICALL long (*(*BIO_meth_get_callback_ctrl)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *, int, BIO_info_cb *);
	DEPRECATED APICALL int (*(*BIO_meth_get_destroy)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *);
	DEPRECATED APICALL int (*(*BIO_meth_get_read)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *, char *, int);
	APICALL void (*BIO_set_retry_reason)(struct AmiSSLIFace *Self, BIO * bio, int reason);
	APICALL void (*BIO_meth_free)(struct AmiSSLIFace *Self, BIO_METHOD * biom);
	DEPRECATED APICALL int (*DSA_meth_set_bn_mod_exp)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, int (*bn_mod_exp)(DSA *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *));
	DEPRECATED APICALL int (*DSA_meth_set_init)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, int (*init)(DSA *));
	DEPRECATED APICALL void (*DSA_meth_free)(struct AmiSSLIFace *Self, DSA_METHOD * dsam);
	DEPRECATED APICALL int (*DSA_meth_set_mod_exp)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, int (*mod_exp)(DSA *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *));
	DEPRECATED APICALL int (*DSA_meth_set_sign)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, DSA_SIG * (*sign)(const unsigned char *, int, DSA *));
	DEPRECATED APICALL int (*(*DSA_meth_get_finish)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam))(DSA *);
	DEPRECATED APICALL void (*DSA_set_flags)(struct AmiSSLIFace *Self, DSA * d, int flags);
	DEPRECATED APICALL void (*DSA_get0_pqg)(struct AmiSSLIFace *Self, const DSA * d, const BIGNUM ** p, const BIGNUM ** q, const BIGNUM ** g);
	DEPRECATED APICALL void * (*DSA_meth_get0_app_data)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam);
	DEPRECATED APICALL int (*(*DSA_meth_get_keygen)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam))(DSA *);
	DEPRECATED APICALL void (*DSA_clear_flags)(struct AmiSSLIFace *Self, DSA * d, int flags);
	DEPRECATED APICALL const char * (*DSA_meth_get0_name)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam);
	DEPRECATED APICALL int (*(*DSA_meth_get_paramgen)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam))(DSA *, int, const unsigned char *, int, int *, unsigned long *, BN_GENCB *);
	DEPRECATED APICALL DSA_SIG * (*(*DSA_meth_get_sign)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam))(const unsigned char *, int, DSA *);
	DEPRECATED APICALL int (*DSA_meth_set_paramgen)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, int (*paramgen)(DSA *, int, const unsigned char *, int, int *, unsigned long *, BN_GENCB *));
	DEPRECATED APICALL int (*DSA_test_flags)(struct AmiSSLIFace *Self, const DSA * d, int flags);
	DEPRECATED APICALL int (*DSA_meth_set0_app_data)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, void * app_data);
	DEPRECATED APICALL int (*DSA_meth_set1_name)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, const char * name);
	DEPRECATED APICALL void (*DSA_get0_key)(struct AmiSSLIFace *Self, const DSA * d, const BIGNUM ** pub_key, const BIGNUM ** priv_key);
	DEPRECATED APICALL int (*(*DSA_meth_get_mod_exp)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam))(DSA *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *);
	DEPRECATED APICALL int (*DSA_set0_pqg)(struct AmiSSLIFace *Self, DSA * d, BIGNUM * p, BIGNUM * q, BIGNUM * g);
	DEPRECATED APICALL int (*DSA_meth_get_flags)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam);
	DEPRECATED APICALL int (*(*DSA_meth_get_verify)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam))(const unsigned char *, int, DSA_SIG *, DSA *);
	DEPRECATED APICALL int (*DSA_meth_set_verify)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, int (*verify)(const unsigned char *, int, DSA_SIG *, DSA *));
	DEPRECATED APICALL int (*DSA_meth_set_finish)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, int (*finish)(DSA *));
	DEPRECATED APICALL int (*DSA_meth_set_keygen)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, int (*keygen)(DSA *));
	DEPRECATED APICALL DSA_METHOD * (*DSA_meth_dup)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam);
	DEPRECATED APICALL int (*DSA_set0_key)(struct AmiSSLIFace *Self, DSA * d, BIGNUM * pub_key, BIGNUM * priv_key);
	DEPRECATED APICALL int (*(*DSA_meth_get_init)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam))(DSA *);
	DEPRECATED APICALL int (*DSA_meth_set_sign_setup)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, int (*sign_setup)(DSA *, BN_CTX *, BIGNUM **, BIGNUM **));
	DEPRECATED APICALL int (*(*DSA_meth_get_bn_mod_exp)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam))(DSA *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *);
	DEPRECATED APICALL const DSA_METHOD * (*DSA_get_method)(struct AmiSSLIFace *Self, DSA * d);
	DEPRECATED APICALL DSA_METHOD * (*DSA_meth_new)(struct AmiSSLIFace *Self, const char * name, int flags);
	DEPRECATED APICALL int (*DSA_meth_set_flags)(struct AmiSSLIFace *Self, DSA_METHOD * dsam, int flags);
	DEPRECATED APICALL int (*(*DSA_meth_get_sign_setup)(struct AmiSSLIFace *Self, const DSA_METHOD * dsam))(DSA *, BN_CTX *, BIGNUM **, BIGNUM **);
	DEPRECATED APICALL ENGINE * (*DSA_get0_engine)(struct AmiSSLIFace *Self, DSA * d);
	APICALL void (*X509_VERIFY_PARAM_set_auth_level)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, int auth_level);
	APICALL int (*X509_VERIFY_PARAM_get_auth_level)(struct AmiSSLIFace *Self, const X509_VERIFY_PARAM * param);
	APICALL EVP_PKEY * (*X509_REQ_get0_pubkey)(struct AmiSSLIFace *Self, const X509_REQ * req);
	DEPRECATED APICALL int (*RSA_set0_key)(struct AmiSSLIFace *Self, RSA * r, BIGNUM * n, BIGNUM * e, BIGNUM * d);
	DEPRECATED APICALL int (*RSA_meth_get_flags)(struct AmiSSLIFace *Self, const RSA_METHOD * meth);
	DEPRECATED APICALL int (*RSA_meth_set_finish)(struct AmiSSLIFace *Self, RSA_METHOD * rsa, int (*finish)(RSA *));
	DEPRECATED APICALL int (*(*RSA_meth_get_priv_dec)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(int, const unsigned char *, unsigned char *, RSA *, int);
	DEPRECATED APICALL int (*(*RSA_meth_get_sign)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(int, const unsigned char *, unsigned int, unsigned char *, unsigned int *, const RSA *);
	DEPRECATED APICALL int (*(*RSA_meth_get_bn_mod_exp)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *);
	DEPRECATED APICALL int (*RSA_test_flags)(struct AmiSSLIFace *Self, const RSA * r, int flags);
	DEPRECATED APICALL RSA_METHOD * (*RSA_meth_new)(struct AmiSSLIFace *Self, const char * name, int flags);
	DEPRECATED APICALL void * (*RSA_meth_get0_app_data)(struct AmiSSLIFace *Self, const RSA_METHOD * meth);
	DEPRECATED APICALL RSA_METHOD * (*RSA_meth_dup)(struct AmiSSLIFace *Self, const RSA_METHOD * meth);
	DEPRECATED APICALL int (*RSA_meth_set1_name)(struct AmiSSLIFace *Self, RSA_METHOD * meth, const char * name);
	DEPRECATED APICALL int (*RSA_meth_set0_app_data)(struct AmiSSLIFace *Self, RSA_METHOD * meth, void * app_data);
	DEPRECATED APICALL void (*RSA_set_flags)(struct AmiSSLIFace *Self, RSA * r, int flags);
	DEPRECATED APICALL int (*RSA_meth_set_sign)(struct AmiSSLIFace *Self, RSA_METHOD * rsa, int (*sign)(int, const unsigned char *, unsigned int, unsigned char *, unsigned int *, const RSA *));
	DEPRECATED APICALL void (*RSA_clear_flags)(struct AmiSSLIFace *Self, RSA * r, int flags);
	DEPRECATED APICALL int (*(*RSA_meth_get_keygen)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(RSA *, int, BIGNUM *, BN_GENCB *);
	DEPRECATED APICALL int (*RSA_meth_set_keygen)(struct AmiSSLIFace *Self, RSA_METHOD * rsa, int (*keygen)(RSA *, int, BIGNUM *, BN_GENCB *));
	DEPRECATED APICALL int (*RSA_meth_set_pub_dec)(struct AmiSSLIFace *Self, RSA_METHOD * rsa, int (*pub_dec)(int, const unsigned char *, unsigned char *, RSA *, int));
	DEPRECATED APICALL int (*(*RSA_meth_get_finish)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(RSA *rsa);
	DEPRECATED APICALL void (*RSA_get0_key)(struct AmiSSLIFace *Self, const RSA * r, const BIGNUM ** n, const BIGNUM ** e, const BIGNUM ** d);
	DEPRECATED APICALL ENGINE * (*RSA_get0_engine)(struct AmiSSLIFace *Self, const RSA * r);
	DEPRECATED APICALL int (*RSA_meth_set_priv_enc)(struct AmiSSLIFace *Self, RSA_METHOD * rsa, int (*priv_enc)(int, const unsigned char *, unsigned char *, RSA *, int));
	DEPRECATED APICALL int (*RSA_meth_set_verify)(struct AmiSSLIFace *Self, RSA_METHOD * rsa, int (*verify)(int, const unsigned char *, unsigned int, const unsigned char *, unsigned int, const RSA *));
	DEPRECATED APICALL void (*RSA_get0_factors)(struct AmiSSLIFace *Self, const RSA * r, const BIGNUM ** p, const BIGNUM ** q);
	DEPRECATED APICALL const char * (*RSA_meth_get0_name)(struct AmiSSLIFace *Self, const RSA_METHOD * meth);
	DEPRECATED APICALL int (*(*RSA_meth_get_mod_exp)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(BIGNUM *, const BIGNUM *, RSA *, BN_CTX *);
	DEPRECATED APICALL int (*RSA_meth_set_flags)(struct AmiSSLIFace *Self, RSA_METHOD * meth, int flags);
	DEPRECATED APICALL int (*(*RSA_meth_get_pub_dec)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(int, const unsigned char *, unsigned char *, RSA *, int);
	DEPRECATED APICALL int (*RSA_meth_set_bn_mod_exp)(struct AmiSSLIFace *Self, RSA_METHOD * rsa, int (*bn_mod_exp)(BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *));
	DEPRECATED APICALL int (*(*RSA_meth_get_init)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(RSA *);
	DEPRECATED APICALL void (*RSA_meth_free)(struct AmiSSLIFace *Self, RSA_METHOD * meth);
	DEPRECATED APICALL int (*(*RSA_meth_get_pub_enc)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(int, const unsigned char *, unsigned char *, RSA *, int);
	DEPRECATED APICALL int (*RSA_meth_set_mod_exp)(struct AmiSSLIFace *Self, RSA_METHOD * rsa, int (*mod_exp)(BIGNUM *, const BIGNUM *, RSA *, BN_CTX *));
	DEPRECATED APICALL int (*RSA_set0_factors)(struct AmiSSLIFace *Self, RSA * r, BIGNUM * p, BIGNUM * q);
	DEPRECATED APICALL int (*RSA_meth_set_pub_enc)(struct AmiSSLIFace *Self, RSA_METHOD * rsa, int (*pub_enc)(int, const unsigned char *, unsigned char *, RSA *, int));
	DEPRECATED APICALL int (*RSA_meth_set_priv_dec)(struct AmiSSLIFace *Self, RSA_METHOD * rsa, int (*priv_dec)(int, const unsigned char *, unsigned char *, RSA *, int));
	DEPRECATED APICALL int (*(*RSA_meth_get_verify)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(int, const unsigned char *, unsigned int, const unsigned char *, unsigned int, const RSA *);
	DEPRECATED APICALL int (*RSA_meth_set_init)(struct AmiSSLIFace *Self, RSA_METHOD * rsa, int (*init)(RSA *));
	DEPRECATED APICALL int (*(*RSA_meth_get_priv_enc)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(int, const unsigned char *, unsigned char *, RSA *, int);
	DEPRECATED APICALL int (*RSA_set0_crt_params)(struct AmiSSLIFace *Self, RSA * r, BIGNUM * dmp1, BIGNUM * dmq1, BIGNUM * iqmp);
	DEPRECATED APICALL void (*RSA_get0_crt_params)(struct AmiSSLIFace *Self, const RSA * r, const BIGNUM ** dmp1, const BIGNUM ** dmq1, const BIGNUM ** iqmp);
	DEPRECATED APICALL int (*DH_set0_pqg)(struct AmiSSLIFace *Self, DH * dh, BIGNUM * p, BIGNUM * q, BIGNUM * g);
	DEPRECATED APICALL void (*DH_clear_flags)(struct AmiSSLIFace *Self, DH * dh, int flags);
	DEPRECATED APICALL void (*DH_get0_key)(struct AmiSSLIFace *Self, const DH * dh, const BIGNUM ** pub_key, const BIGNUM ** priv_key);
	DEPRECATED APICALL ENGINE * (*DH_get0_engine)(struct AmiSSLIFace *Self, DH * d);
	DEPRECATED APICALL int (*DH_set0_key)(struct AmiSSLIFace *Self, DH * dh, BIGNUM * pub_key, BIGNUM * priv_key);
	DEPRECATED APICALL int (*DH_set_length)(struct AmiSSLIFace *Self, DH * dh, long length);
	DEPRECATED APICALL int (*DH_test_flags)(struct AmiSSLIFace *Self, const DH * dh, int flags);
	DEPRECATED APICALL long (*DH_get_length)(struct AmiSSLIFace *Self, const DH * dh);
	DEPRECATED APICALL void (*DH_get0_pqg)(struct AmiSSLIFace *Self, const DH * dh, const BIGNUM ** p, const BIGNUM ** q, const BIGNUM ** g);
	DEPRECATED APICALL int (*(*DH_meth_get_compute_key)(struct AmiSSLIFace *Self, const DH_METHOD * dhm))(unsigned char *, const BIGNUM *, DH *);
	DEPRECATED APICALL int (*DH_meth_set1_name)(struct AmiSSLIFace *Self, DH_METHOD * dhm, const char * name);
	DEPRECATED APICALL int (*DH_meth_set_init)(struct AmiSSLIFace *Self, DH_METHOD * dhm, int (*init)(DH *));
	DEPRECATED APICALL int (*(*DH_meth_get_finish)(struct AmiSSLIFace *Self, const DH_METHOD * dhm))(DH *);
	DEPRECATED APICALL const char * (*DH_meth_get0_name)(struct AmiSSLIFace *Self, const DH_METHOD * dhm);
	DEPRECATED APICALL int (*DH_meth_set_generate_params)(struct AmiSSLIFace *Self, DH_METHOD * dhm, int (*generate_params)(DH *, int, int, BN_GENCB *));
	DEPRECATED APICALL int (*DH_meth_set_compute_key)(struct AmiSSLIFace *Self, DH_METHOD * dhm, int (*compute_key)(unsigned char *, const BIGNUM *, DH *));
	DEPRECATED APICALL int (*DH_meth_set_flags)(struct AmiSSLIFace *Self, DH_METHOD * dhm, int flags);
	DEPRECATED APICALL int (*(*DH_meth_get_generate_params)(struct AmiSSLIFace *Self, const DH_METHOD * dhm))(DH *, int, int, BN_GENCB *);
	DEPRECATED APICALL int (*DH_meth_get_flags)(struct AmiSSLIFace *Self, const DH_METHOD * dhm);
	DEPRECATED APICALL int (*DH_meth_set_finish)(struct AmiSSLIFace *Self, DH_METHOD * dhm, int (*finish)(DH *));
	DEPRECATED APICALL void * (*DH_meth_get0_app_data)(struct AmiSSLIFace *Self, const DH_METHOD * dhm);
	DEPRECATED APICALL int (*DH_meth_set0_app_data)(struct AmiSSLIFace *Self, DH_METHOD * dhm, void * app_data);
	DEPRECATED APICALL int (*(*DH_meth_get_init)(struct AmiSSLIFace *Self, const DH_METHOD * dhm))(DH *);
	DEPRECATED APICALL int (*(*DH_meth_get_bn_mod_exp)(struct AmiSSLIFace *Self, const DH_METHOD * dhm))(const DH *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *);
	DEPRECATED APICALL DH_METHOD * (*DH_meth_new)(struct AmiSSLIFace *Self, const char * name, int flags);
	DEPRECATED APICALL DH_METHOD * (*DH_meth_dup)(struct AmiSSLIFace *Self, const DH_METHOD * dhm);
	DEPRECATED APICALL int (*DH_meth_set_bn_mod_exp)(struct AmiSSLIFace *Self, DH_METHOD * dhm, int (*bn_mod_exp)(const DH *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *));
	DEPRECATED APICALL int (*DH_meth_set_generate_key)(struct AmiSSLIFace *Self, DH_METHOD * dhm, int (*generate_key)(DH *));
	DEPRECATED APICALL void (*DH_meth_free)(struct AmiSSLIFace *Self, DH_METHOD * dhm);
	DEPRECATED APICALL int (*(*DH_meth_get_generate_key)(struct AmiSSLIFace *Self, const DH_METHOD * dhm))(DH *);
	DEPRECATED APICALL void (*DH_set_flags)(struct AmiSSLIFace *Self, DH * dh, int flags);
	APICALL X509_OBJECT * (*X509_STORE_CTX_get_obj_by_subject)(struct AmiSSLIFace *Self, X509_STORE_CTX * vs, X509_LOOKUP_TYPE type, const X509_NAME * name);
	APICALL void (*X509_OBJECT_free)(struct AmiSSLIFace *Self, X509_OBJECT * a);
	APICALL X509 * (*X509_OBJECT_get0_X509)(struct AmiSSLIFace *Self, const X509_OBJECT * a);
	APICALL STACK_OF(X509) * (*X509_STORE_CTX_get0_untrusted)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509 * (*X509_STORE_CTX_get0_cert)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL void (*X509_STORE_CTX_set_verify)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, X509_STORE_CTX_verify_fn verify);
	APICALL X509_STORE_CTX_verify_fn (*X509_STORE_CTX_get_verify)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509_STORE_CTX_verify_cb (*X509_STORE_CTX_get_verify_cb)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL void (*X509_STORE_CTX_set0_verified_chain)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, STACK_OF(X509) * sk);
	APICALL void (*X509_STORE_CTX_set0_untrusted)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, STACK_OF(X509) * sk);
	APICALL int (*OPENSSL_hexchar2int)(struct AmiSSLIFace *Self, unsigned char c);
	APTR BIO_new_dgram_sctp_UNIMPLEMENTED;
	APTR BIO_dgram_is_sctp_UNIMPLEMENTED;
	APTR BIO_dgram_sctp_notification_cb_UNIMPLEMENTED;
	APTR BIO_dgram_sctp_wait_for_dry_UNIMPLEMENTED;
	APTR BIO_dgram_sctp_msg_waiting_UNIMPLEMENTED;
	APICALL int (*DSA_SIG_set0)(struct AmiSSLIFace *Self, DSA_SIG * sig, BIGNUM * r, BIGNUM * s);
	DEPRECATED APICALL int (*DSA_bits)(struct AmiSSLIFace *Self, const DSA * d);
	APICALL int (*ECDSA_SIG_set0)(struct AmiSSLIFace *Self, ECDSA_SIG * sig, BIGNUM * r, BIGNUM * s);
	APICALL int (*EVP_ENCODE_CTX_copy)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * dctx, const EVP_ENCODE_CTX * sctx);
	DEPRECATED APICALL const unsigned char * (*EVP_PKEY_get0_hmac)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, size_t * len);
	DEPRECATED APICALL const EVP_MD * (*HMAC_CTX_get_md)(struct AmiSSLIFace *Self, const HMAC_CTX * ctx);
	APICALL const STACK_OF(X509) * (*OCSP_resp_get0_certs)(struct AmiSSLIFace *Self, const OCSP_BASICRESP * bs);
	APICALL int (*OCSP_resp_get0_id)(struct AmiSSLIFace *Self, const OCSP_BASICRESP * bs, const ASN1_OCTET_STRING ** pid, const X509_NAME ** pname);
	APICALL int (*PEM_write_bio_PrivateKey_traditional)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * x, const EVP_CIPHER * enc, const unsigned char * kstr, int klen, pem_password_cb * cb, void * u);
	APICALL int (*SSL_SESSION_get_protocol_version)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
	APICALL int (*SSL_is_dtls)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL unsigned long (*SSL_CTX_dane_set_flags)(struct AmiSSLIFace *Self, SSL_CTX * ctx, unsigned long flags);
	APICALL unsigned long (*SSL_CTX_dane_clear_flags)(struct AmiSSLIFace *Self, SSL_CTX * ctx, unsigned long flags);
	APICALL unsigned long (*SSL_dane_set_flags)(struct AmiSSLIFace *Self, SSL * ssl, unsigned long flags);
	APICALL unsigned long (*SSL_dane_clear_flags)(struct AmiSSLIFace *Self, SSL * ssl, unsigned long flags);
	APICALL int (*SSL_client_version)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL long (*X509_get_pathlen)(struct AmiSSLIFace *Self, X509 * x);
	APICALL X509_LOOKUP_TYPE (*X509_OBJECT_get_type)(struct AmiSSLIFace *Self, const X509_OBJECT * a);
	APICALL X509_CRL * (*X509_OBJECT_get0_X509_CRL)(struct AmiSSLIFace *Self, const X509_OBJECT * a);
	APICALL int (*X509_STORE_lock)(struct AmiSSLIFace *Self, X509_STORE * xs);
	APICALL int (*X509_STORE_unlock)(struct AmiSSLIFace *Self, X509_STORE * xs);
	APICALL STACK_OF(X509_OBJECT) * (*X509_STORE_get0_objects)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL X509_VERIFY_PARAM * (*X509_STORE_get0_param)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL void (*X509_STORE_set_verify)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_verify_fn verify);
	APICALL X509_STORE_CTX_verify_fn (*X509_STORE_get_verify)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL X509_STORE_CTX_verify_cb (*X509_STORE_get_verify_cb)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL void (*X509_STORE_set_get_issuer)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_get_issuer_fn get_issuer);
	APICALL X509_STORE_CTX_get_issuer_fn (*X509_STORE_get_get_issuer)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL void (*X509_STORE_set_check_issued)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_check_issued_fn check_issued);
	APICALL X509_STORE_CTX_check_issued_fn (*X509_STORE_get_check_issued)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL void (*X509_STORE_set_check_revocation)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_check_revocation_fn check_revocation);
	APICALL X509_STORE_CTX_check_revocation_fn (*X509_STORE_get_check_revocation)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL void (*X509_STORE_set_get_crl)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_get_crl_fn get_crl);
	APICALL X509_STORE_CTX_get_crl_fn (*X509_STORE_get_get_crl)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL void (*X509_STORE_set_check_crl)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_check_crl_fn check_crl);
	APICALL X509_STORE_CTX_check_crl_fn (*X509_STORE_get_check_crl)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL void (*X509_STORE_set_cert_crl)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_cert_crl_fn cert_crl);
	APICALL X509_STORE_CTX_cert_crl_fn (*X509_STORE_get_cert_crl)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL void (*X509_STORE_set_check_policy)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_check_policy_fn check_policy);
	APICALL X509_STORE_CTX_check_policy_fn (*X509_STORE_get_check_policy)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL void (*X509_STORE_set_lookup_certs)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_lookup_certs_fn lookup_certs);
	APICALL X509_STORE_CTX_lookup_certs_fn (*X509_STORE_get_lookup_certs)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL void (*X509_STORE_set_lookup_crls)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_lookup_crls_fn lookup_crls);
	APICALL X509_STORE_CTX_lookup_crls_fn (*X509_STORE_get_lookup_crls)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL void (*X509_STORE_set_cleanup)(struct AmiSSLIFace *Self, X509_STORE * xs, X509_STORE_CTX_cleanup_fn cleanup);
	APICALL X509_STORE_CTX_cleanup_fn (*X509_STORE_get_cleanup)(struct AmiSSLIFace *Self, const X509_STORE * xs);
	APICALL int (*X509_STORE_set_ex_data)(struct AmiSSLIFace *Self, X509_STORE * xs, int idx, void * data);
	APICALL void * (*X509_STORE_get_ex_data)(struct AmiSSLIFace *Self, const X509_STORE * xs, int idx);
	APICALL X509_STORE_CTX_get_issuer_fn (*X509_STORE_CTX_get_get_issuer)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509_STORE_CTX_check_issued_fn (*X509_STORE_CTX_get_check_issued)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509_STORE_CTX_check_revocation_fn (*X509_STORE_CTX_get_check_revocation)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509_STORE_CTX_get_crl_fn (*X509_STORE_CTX_get_get_crl)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509_STORE_CTX_check_crl_fn (*X509_STORE_CTX_get_check_crl)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509_STORE_CTX_cert_crl_fn (*X509_STORE_CTX_get_cert_crl)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509_STORE_CTX_check_policy_fn (*X509_STORE_CTX_get_check_policy)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509_STORE_CTX_lookup_certs_fn (*X509_STORE_CTX_get_lookup_certs)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509_STORE_CTX_lookup_crls_fn (*X509_STORE_CTX_get_lookup_crls)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL X509_STORE_CTX_cleanup_fn (*X509_STORE_CTX_get_cleanup)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL void (*X509_STORE_CTX_set_error_depth)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int depth);
	APICALL void (*X509_STORE_CTX_set_current_cert)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, X509 * x);
	APICALL int (*NAME_CONSTRAINTS_check_CN)(struct AmiSSLIFace *Self, X509 * x, NAME_CONSTRAINTS * nc);
	APICALL void (*X509_set_proxy_flag)(struct AmiSSLIFace *Self, X509 * x);
	APICALL void (*X509_set_proxy_pathlen)(struct AmiSSLIFace *Self, X509 * x, long l);
	APICALL long (*X509_get_proxy_pathlen)(struct AmiSSLIFace *Self, X509 * x);
	APICALL ASIdentifierChoice * (*ASIdentifierChoice_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASIdentifierChoice_free)(struct AmiSSLIFace *Self, ASIdentifierChoice * a);
	APICALL ASIdentifierChoice * (*d2i_ASIdentifierChoice)(struct AmiSSLIFace *Self, ASIdentifierChoice ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASIdentifierChoice)(struct AmiSSLIFace *Self, const ASIdentifierChoice * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASIdentifierChoice_it)(struct AmiSSLIFace *Self);
	APICALL ASIdentifiers * (*ASIdentifiers_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASIdentifiers_free)(struct AmiSSLIFace *Self, ASIdentifiers * a);
	APICALL ASIdentifiers * (*d2i_ASIdentifiers)(struct AmiSSLIFace *Self, ASIdentifiers ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASIdentifiers)(struct AmiSSLIFace *Self, const ASIdentifiers * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASIdentifiers_it)(struct AmiSSLIFace *Self);
	APICALL ASIdOrRange * (*ASIdOrRange_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASIdOrRange_free)(struct AmiSSLIFace *Self, ASIdOrRange * a);
	APICALL ASIdOrRange * (*d2i_ASIdOrRange)(struct AmiSSLIFace *Self, ASIdOrRange ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASIdOrRange)(struct AmiSSLIFace *Self, const ASIdOrRange * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASIdOrRange_it)(struct AmiSSLIFace *Self);
	APICALL ASRange * (*ASRange_new)(struct AmiSSLIFace *Self);
	APICALL void (*ASRange_free)(struct AmiSSLIFace *Self, ASRange * a);
	APICALL ASRange * (*d2i_ASRange)(struct AmiSSLIFace *Self, ASRange ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ASRange)(struct AmiSSLIFace *Self, const ASRange * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*ASRange_it)(struct AmiSSLIFace *Self);
	APICALL IPAddressChoice * (*IPAddressChoice_new)(struct AmiSSLIFace *Self);
	APICALL void (*IPAddressChoice_free)(struct AmiSSLIFace *Self, IPAddressChoice * a);
	APICALL IPAddressChoice * (*d2i_IPAddressChoice)(struct AmiSSLIFace *Self, IPAddressChoice ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_IPAddressChoice)(struct AmiSSLIFace *Self, const IPAddressChoice * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*IPAddressChoice_it)(struct AmiSSLIFace *Self);
	APICALL IPAddressFamily * (*IPAddressFamily_new)(struct AmiSSLIFace *Self);
	APICALL void (*IPAddressFamily_free)(struct AmiSSLIFace *Self, IPAddressFamily * a);
	APICALL IPAddressFamily * (*d2i_IPAddressFamily)(struct AmiSSLIFace *Self, IPAddressFamily ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_IPAddressFamily)(struct AmiSSLIFace *Self, const IPAddressFamily * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*IPAddressFamily_it)(struct AmiSSLIFace *Self);
	APICALL IPAddressOrRange * (*IPAddressOrRange_new)(struct AmiSSLIFace *Self);
	APICALL void (*IPAddressOrRange_free)(struct AmiSSLIFace *Self, IPAddressOrRange * a);
	APICALL IPAddressOrRange * (*d2i_IPAddressOrRange)(struct AmiSSLIFace *Self, IPAddressOrRange ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_IPAddressOrRange)(struct AmiSSLIFace *Self, const IPAddressOrRange * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*IPAddressOrRange_it)(struct AmiSSLIFace *Self);
	APICALL const unsigned char * (*ASN1_STRING_get0_data)(struct AmiSSLIFace *Self, const ASN1_STRING * x);
	APICALL const ASN1_TIME * (*X509_get0_notBefore)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL const ASN1_TIME * (*X509_get0_notAfter)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL const ASN1_TIME * (*X509_CRL_get0_lastUpdate)(struct AmiSSLIFace *Self, const X509_CRL * crl);
	APICALL const ASN1_TIME * (*X509_CRL_get0_nextUpdate)(struct AmiSSLIFace *Self, const X509_CRL * crl);
	APICALL char * (*OPENSSL_uni2utf8)(struct AmiSSLIFace *Self, const unsigned char * uni, int unilen);
	APICALL void (*CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE)(struct AmiSSLIFace *Self, CT_POLICY_EVAL_CTX * ctx, CTLOG_STORE * log_store);
	APICALL int (*CT_POLICY_EVAL_CTX_set1_cert)(struct AmiSSLIFace *Self, CT_POLICY_EVAL_CTX * ctx, X509 * cert);
	APICALL int (*CT_POLICY_EVAL_CTX_set1_issuer)(struct AmiSSLIFace *Self, CT_POLICY_EVAL_CTX * ctx, X509 * issuer);
	APICALL ECPARAMETERS * (*ECPARAMETERS_new)(struct AmiSSLIFace *Self);
	APICALL void (*ECPARAMETERS_free)(struct AmiSSLIFace *Self, ECPARAMETERS * a);
	APICALL int (*BIO_get_new_index)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_PKEY_set1_encoded_public_key)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, const unsigned char * pub, size_t publen);
	APICALL size_t (*EVP_PKEY_get1_encoded_public_key)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, unsigned char ** ppub);
	APICALL int (*OCSP_RESPID_set_by_name)(struct AmiSSLIFace *Self, OCSP_RESPID * respid, X509 * cert);
	APICALL int (*OCSP_RESPID_set_by_key)(struct AmiSSLIFace *Self, OCSP_RESPID * respid, X509 * cert);
	APICALL int (*OCSP_RESPID_match)(struct AmiSSLIFace *Self, OCSP_RESPID * respid, X509 * cert);
	APICALL int (*PKCS12_add_friendlyname_utf8)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, const char * name, int namelen);
	APICALL int (*PKCS12_key_gen_utf8)(struct AmiSSLIFace *Self, const char * pass, int passlen, unsigned char * salt, int saltlen, int id, int iter, int n, unsigned char * out, const EVP_MD * md_type);
	APICALL unsigned char * (*OPENSSL_utf82uni)(struct AmiSSLIFace *Self, const char * asc, int asclen, unsigned char ** uni, int * unilen);
	APICALL const SSL_CIPHER * (*SSL_SESSION_get0_cipher)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
	APICALL int (*SSL_SESSION_set1_id)(struct AmiSSLIFace *Self, SSL_SESSION * s, const unsigned char * sid, unsigned int sid_len);
	APICALL const unsigned char * (*SSL_SESSION_get0_id_context)(struct AmiSSLIFace *Self, const SSL_SESSION * s, unsigned int * len);
	APICALL const STACK_OF(ASN1_UTF8STRING) * (*TS_STATUS_INFO_get0_text)(struct AmiSSLIFace *Self, const TS_STATUS_INFO * a);
	APICALL void (*X509_SIG_getm)(struct AmiSSLIFace *Self, X509_SIG * sig, X509_ALGOR ** palg, ASN1_OCTET_STRING ** pdigest);
	APICALL const ASN1_INTEGER * (*X509_get0_serialNumber)(struct AmiSSLIFace *Self, const X509 * x);
	APICALL uint64_t (*CT_POLICY_EVAL_CTX_get_time)(struct AmiSSLIFace *Self, const CT_POLICY_EVAL_CTX * ctx);
	APICALL void (*CT_POLICY_EVAL_CTX_set_time)(struct AmiSSLIFace *Self, CT_POLICY_EVAL_CTX * ctx, uint64_t time_in_ms);
	DEPRECATED APICALL int (*DH_check_params)(struct AmiSSLIFace *Self, const DH * dh, int * ret);
	APICALL const char * (*SSL_COMP_get0_name)(struct AmiSSLIFace *Self, const SSL_COMP * comp);
	APICALL int (*SSL_COMP_get_id)(struct AmiSSLIFace *Self, const SSL_COMP * comp);
	APICALL time_t (*X509_VERIFY_PARAM_get_time)(struct AmiSSLIFace *Self, const X509_VERIFY_PARAM * param);
	APICALL int (*X509_VERIFY_PARAM_set_inh_flags)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, uint32_t flags);
	APICALL uint32_t (*X509_VERIFY_PARAM_get_inh_flags)(struct AmiSSLIFace *Self, const X509_VERIFY_PARAM * param);
	APICALL void (*CRYPTO_secure_clear_free)(struct AmiSSLIFace *Self, void * ptr, size_t num, const char * file, int line);
	DEPRECATED APICALL int (*EVP_PKEY_set1_engine)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, ENGINE * e);
	APICALL STACK_OF(SSL_CIPHER) * (*SSL_get_client_ciphers)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL const char * (*SSL_CIPHER_standard_name)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
	APICALL STACK_OF(X509) * (*SSL_get0_verified_chain)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL STACK_OF(SSL_COMP) * (*SSL_COMP_set0_compression_methods)(struct AmiSSLIFace *Self, STACK_OF(SSL_COMP) * meths);
	APTR SSL_SESSION_print_fp_UNIMPLEMENTED;
	APICALL void (*SSL_CTX_set1_cert_store)(struct AmiSSLIFace *Self, SSL_CTX * a, X509_STORE * b);
	APICALL size_t (*DTLS_get_data_mtu)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_read_ex)(struct AmiSSLIFace *Self, SSL * ssl, void * buf, size_t num, size_t * readbytes);
	APICALL int (*SSL_peek_ex)(struct AmiSSLIFace *Self, SSL * ssl, void * buf, size_t num, size_t * readbytes);
	APICALL int (*SSL_write_ex)(struct AmiSSLIFace *Self, SSL * s, const void * buf, size_t num, size_t * written);
	APICALL void (*SSL_CTX_set_keylog_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_CTX_keylog_cb_func cb);
	APICALL SSL_CTX_keylog_cb_func (*SSL_CTX_get_keylog_callback)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL int (*SSL_get_peer_signature_type_nid)(struct AmiSSLIFace *Self, const SSL * s, int * pnid);
	APICALL int (*SSL_key_update)(struct AmiSSLIFace *Self, SSL * s, int updatetype);
	APICALL int (*SSL_get_key_update_type)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_bytes_to_cipher_list)(struct AmiSSLIFace *Self, SSL * s, const unsigned char * bytes, size_t len, int isv2format, STACK_OF(SSL_CIPHER) ** sk, STACK_OF(SSL_CIPHER) ** scsvs);
	APICALL size_t (*SSL_client_hello_get0_compression_methods)(struct AmiSSLIFace *Self, SSL * s, const unsigned char ** out);
	APICALL size_t (*SSL_client_hello_get0_ciphers)(struct AmiSSLIFace *Self, SSL * s, const unsigned char ** out);
	APICALL int (*SSL_client_hello_get0_ext)(struct AmiSSLIFace *Self, SSL * s, unsigned int type, const unsigned char ** out, size_t * outlen);
	APICALL size_t (*SSL_client_hello_get0_session_id)(struct AmiSSLIFace *Self, SSL * s, const unsigned char ** out);
	APICALL size_t (*SSL_client_hello_get0_random)(struct AmiSSLIFace *Self, SSL * s, const unsigned char ** out);
	APICALL void (*SSL_CTX_set_client_hello_cb)(struct AmiSSLIFace *Self, SSL_CTX * c, SSL_client_hello_cb_fn cb, void * arg);
	APICALL unsigned int (*SSL_client_hello_get0_legacy_version)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_client_hello_isv2)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_set_max_early_data)(struct AmiSSLIFace *Self, SSL * s, uint32_t max_early_data);
	APICALL int (*SSL_CTX_set_max_early_data)(struct AmiSSLIFace *Self, SSL_CTX * ctx, uint32_t max_early_data);
	APICALL uint32_t (*SSL_get_max_early_data)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL uint32_t (*SSL_CTX_get_max_early_data)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL int (*SSL_write_early_data)(struct AmiSSLIFace *Self, SSL * s, const void * buf, size_t num, size_t * written);
	APICALL int (*SSL_read_early_data)(struct AmiSSLIFace *Self, SSL * s, void * buf, size_t num, size_t * readbytes);
	APICALL int (*SSL_get_early_data_status)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL uint32_t (*SSL_SESSION_get_max_early_data)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
	APICALL int (*SSL_add1_to_CA_list)(struct AmiSSLIFace *Self, SSL * ssl, const X509 * x);
	APICALL void (*SSL_set0_CA_list)(struct AmiSSLIFace *Self, SSL * s, STACK_OF(X509_NAME) * name_list);
	APICALL void (*SSL_CTX_set0_CA_list)(struct AmiSSLIFace *Self, SSL_CTX * ctx, STACK_OF(X509_NAME) * name_list);
	APICALL const STACK_OF(X509_NAME) * (*SSL_get0_CA_list)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL const STACK_OF(X509_NAME) * (*SSL_get0_peer_CA_list)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_CTX_add1_to_CA_list)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const X509 * x);
	APICALL const STACK_OF(X509_NAME) * (*SSL_CTX_get0_CA_list)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL int (*SSL_CTX_add_custom_ext)(struct AmiSSLIFace *Self, SSL_CTX * ctx, unsigned int ext_type, unsigned int context, SSL_custom_ext_add_cb_ex add_cb, SSL_custom_ext_free_cb_ex free_cb, void * add_arg, SSL_custom_ext_parse_cb_ex parse_cb, void * parse_arg);
	APICALL int (*SSL_SESSION_is_resumable)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
	APICALL void (*SSL_CTX_set_record_padding_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, size_t (*cb)(SSL *ssl, int type, size_t len, void *arg));
	APICALL int (*SSL_set_record_padding_callback)(struct AmiSSLIFace *Self, SSL * ssl, size_t (*cb)(SSL *ssl, int type, size_t len, void *arg));
	APICALL int (*SSL_CTX_set_block_padding)(struct AmiSSLIFace *Self, SSL_CTX * ctx, size_t block_size);
	APICALL void * (*SSL_CTX_get_record_padding_callback_arg)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL void * (*SSL_get_record_padding_callback_arg)(struct AmiSSLIFace *Self, const SSL * ssl);
	APICALL int (*SSL_set_block_padding)(struct AmiSSLIFace *Self, SSL * ssl, size_t block_size);
	APICALL void (*SSL_set_record_padding_callback_arg)(struct AmiSSLIFace *Self, SSL * ssl, void * arg);
	APICALL void (*SSL_CTX_set_record_padding_callback_arg)(struct AmiSSLIFace *Self, SSL_CTX * ctx, void * arg);
	APICALL int (*SSL_CTX_use_serverinfo_ex)(struct AmiSSLIFace *Self, SSL_CTX * ctx, unsigned int version, const unsigned char * serverinfo, size_t serverinfo_length);
	APICALL int (*SSL_client_hello_get1_extensions_present)(struct AmiSSLIFace *Self, SSL * s, int ** out, size_t * outlen);
	APICALL void (*SSL_set_psk_find_session_callback)(struct AmiSSLIFace *Self, SSL * s, SSL_psk_find_session_cb_func cb);
	APICALL void (*SSL_set_psk_use_session_callback)(struct AmiSSLIFace *Self, SSL * s, SSL_psk_use_session_cb_func cb);
	APICALL void (*SSL_CTX_set_psk_use_session_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_psk_use_session_cb_func cb);
	APICALL void (*SSL_CTX_set_psk_find_session_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_psk_find_session_cb_func cb);
	APICALL const EVP_MD * (*SSL_CIPHER_get_handshake_digest)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
	APICALL int (*SSL_SESSION_set1_master_key)(struct AmiSSLIFace *Self, SSL_SESSION * sess, const unsigned char * in, size_t len);
	APICALL int (*SSL_SESSION_set_cipher)(struct AmiSSLIFace *Self, SSL_SESSION * s, const SSL_CIPHER * cipher);
	APICALL int (*SSL_SESSION_set_protocol_version)(struct AmiSSLIFace *Self, SSL_SESSION * s, int version);
	APICALL const char * (*OPENSSL_cipher_name)(struct AmiSSLIFace *Self, const char * rfc_name);
	APICALL int (*SSL_alloc_buffers)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL int (*SSL_free_buffers)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL SSL_SESSION * (*SSL_SESSION_dup)(struct AmiSSLIFace *Self, const SSL_SESSION * src);
	APICALL const SSL_CIPHER * (*SSL_get_pending_cipher)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL uint16_t (*SSL_CIPHER_get_protocol_id)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
	APICALL int (*SSL_SESSION_set_max_early_data)(struct AmiSSLIFace *Self, SSL_SESSION * s, uint32_t max_early_data);
	APICALL int (*SSL_SESSION_set1_alpn_selected)(struct AmiSSLIFace *Self, SSL_SESSION * s, const unsigned char * alpn, size_t len);
	APICALL int (*SSL_SESSION_set1_hostname)(struct AmiSSLIFace *Self, SSL_SESSION * s, const char * hostname);
	APICALL void (*SSL_SESSION_get0_alpn_selected)(struct AmiSSLIFace *Self, const SSL_SESSION * s, const unsigned char ** alpn, size_t * len);
	APICALL void (*DTLS_set_timer_cb)(struct AmiSSLIFace *Self, SSL * s, DTLS_timer_cb cb);
	APICALL int (*SSL_CTX_set_tlsext_max_fragment_length)(struct AmiSSLIFace *Self, SSL_CTX * ctx, uint8_t mode);
	APICALL int (*SSL_set_tlsext_max_fragment_length)(struct AmiSSLIFace *Self, SSL * ssl, uint8_t mode);
	APICALL uint8_t (*SSL_SESSION_get_max_fragment_length)(struct AmiSSLIFace *Self, const SSL_SESSION * sess);
	APICALL int (*SSL_stateless)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_verify_client_post_handshake)(struct AmiSSLIFace *Self, SSL * s);
	APICALL void (*SSL_set_post_handshake_auth)(struct AmiSSLIFace *Self, SSL * s, int val);
	APICALL int (*SSL_export_keying_material_early)(struct AmiSSLIFace *Self, SSL * s, unsigned char * out, size_t olen, const char * label, size_t llen, const unsigned char * context, size_t contextlen);
	APICALL int (*SSL_CTX_use_cert_and_key)(struct AmiSSLIFace *Self, SSL_CTX * ctx, X509 * x509, EVP_PKEY * privatekey, STACK_OF(X509) * chain, int override);
	APICALL int (*SSL_use_cert_and_key)(struct AmiSSLIFace *Self, SSL * ssl, X509 * x509, EVP_PKEY * privatekey, STACK_OF(X509) * chain, int override);
	APICALL int (*SSL_SESSION_get0_ticket_appdata)(struct AmiSSLIFace *Self, SSL_SESSION * ss, void ** data, size_t * len);
	APICALL int (*SSL_SESSION_set1_ticket_appdata)(struct AmiSSLIFace *Self, SSL_SESSION * ss, const void * data, size_t len);
	APICALL int (*SSL_CTX_set_session_ticket_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_CTX_generate_session_ticket_fn gen_cb, SSL_CTX_decrypt_session_ticket_fn dec_cb, void * arg);
	APICALL void (*SSL_CTX_set_stateless_cookie_generate_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*gen_stateless_cookie_cb)(SSL *ssl, unsigned char *cookie, size_t *cookie_len));
	APICALL void (*SSL_CTX_set_stateless_cookie_verify_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*verify_stateless_cookie_cb)(SSL *ssl, const unsigned char *cookie, size_t cookie_len));
	APICALL int (*SSL_CTX_set_ciphersuites)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * str);
	APICALL int (*SSL_set_ciphersuites)(struct AmiSSLIFace *Self, SSL * s, const char * str);
	APICALL int (*SSL_set_num_tickets)(struct AmiSSLIFace *Self, SSL * s, size_t num_tickets);
	APICALL size_t (*SSL_CTX_get_num_tickets)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL size_t (*SSL_get_num_tickets)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_CTX_set_num_tickets)(struct AmiSSLIFace *Self, SSL_CTX * ctx, size_t num_tickets);
	APICALL void (*SSL_CTX_set_allow_early_data_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_allow_early_data_cb_fn cb, void * arg);
	APICALL void (*SSL_set_allow_early_data_cb)(struct AmiSSLIFace *Self, SSL * s, SSL_allow_early_data_cb_fn cb, void * arg);
	APICALL int (*SSL_set_recv_max_early_data)(struct AmiSSLIFace *Self, SSL * s, uint32_t recv_max_early_data);
	APICALL uint32_t (*SSL_get_recv_max_early_data)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL uint32_t (*SSL_CTX_get_recv_max_early_data)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
	APICALL int (*SSL_CTX_set_recv_max_early_data)(struct AmiSSLIFace *Self, SSL_CTX * ctx, uint32_t recv_max_early_data);
	APICALL void (*SSL_CTX_set_post_handshake_auth)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int val);
	APICALL int (*SSL_get_signature_type_nid)(struct AmiSSLIFace *Self, const SSL * s, int * pnid);
	APICALL void (*IPAddressRange_free)(struct AmiSSLIFace *Self, IPAddressRange * a);
	APICALL TLS_FEATURE * (*TLS_FEATURE_new)(struct AmiSSLIFace *Self);
	APTR PEM_write_UNIMPLEMENTED;
	APICALL const BIO_METHOD * (*BIO_f_linebuffer)(struct AmiSSLIFace *Self);
	APTR PEM_read_UNIMPLEMENTED;
	APICALL IPAddressRange * (*IPAddressRange_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*IPAddressRange_it)(struct AmiSSLIFace *Self);
	APTR PEM_X509_INFO_read_UNIMPLEMENTED;
	APICALL IPAddressRange * (*d2i_IPAddressRange)(struct AmiSSLIFace *Self, IPAddressRange ** a, const unsigned char ** in, long len);
	APTR PEM_ASN1_write_UNIMPLEMENTED;
	APTR PEM_ASN1_read_UNIMPLEMENTED;
	APICALL void (*TLS_FEATURE_free)(struct AmiSSLIFace *Self, TLS_FEATURE * a);
	APICALL int (*i2d_RSA_OAEP_PARAMS)(struct AmiSSLIFace *Self, const RSA_OAEP_PARAMS * a, unsigned char ** out);
	APTR PEM_write_DHxparams_UNIMPLEMENTED;
	APICALL int (*i2d_IPAddressRange)(struct AmiSSLIFace *Self, const IPAddressRange * a, unsigned char ** out);
	APICALL X509_OBJECT * (*X509_OBJECT_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL ASN1_TYPE * (*PKCS12_get_attr)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag, int attr_nid);
	APICALL void (*ECPKPARAMETERS_free)(struct AmiSSLIFace *Self, ECPKPARAMETERS * a);
	APICALL ECPKPARAMETERS * (*ECPKPARAMETERS_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ASN1_ITEM_lookup)(struct AmiSSLIFace *Self, const char * name);
	APICALL const ASN1_ITEM * (*ASN1_ITEM_get)(struct AmiSSLIFace *Self, size_t i);
	APICALL int (*BIO_read_ex)(struct AmiSSLIFace *Self, BIO * b, void * data, size_t dlen, size_t * readbytes);
	APICALL void (*BIO_set_callback_ex)(struct AmiSSLIFace *Self, BIO * b, BIO_callback_fn_ex callback);
	APICALL BIO_callback_fn_ex (*BIO_get_callback_ex)(struct AmiSSLIFace *Self, const BIO * b);
	APICALL int (*BIO_meth_set_read_ex)(struct AmiSSLIFace *Self, BIO_METHOD * biom, int (*bread)(BIO *, char *, size_t, size_t *));
	DEPRECATED APICALL int (*(*BIO_meth_get_read_ex)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *, char *, size_t, size_t *);
	APICALL int (*BIO_write_ex)(struct AmiSSLIFace *Self, BIO * b, const void * data, size_t dlen, size_t * written);
	DEPRECATED APICALL int (*(*BIO_meth_get_write_ex)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *, const char *, size_t, size_t *);
	APICALL int (*BIO_meth_set_write_ex)(struct AmiSSLIFace *Self, BIO_METHOD * biom, int (*bwrite)(BIO *, const char *, size_t, size_t *));
	APICALL int (*EVP_PKEY_CTX_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int optype, int cmd, const char * md);
	APICALL int (*RSA_pkey_ctx_ctrl)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int optype, int cmd, int p1, void * p2);
	APICALL int (*UI_method_set_ex_data)(struct AmiSSLIFace *Self, UI_METHOD * method, int idx, void * data);
	APICALL const void * (*UI_method_get_ex_data)(struct AmiSSLIFace *Self, const UI_METHOD * method, int idx);
	APICALL UI_METHOD * (*UI_UTIL_wrap_read_pem_callback)(struct AmiSSLIFace *Self, pem_password_cb * cb, int rwflag);
	DEPRECATED APICALL const unsigned char * (*EVP_PKEY_get0_poly1305)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, size_t * len);
	DEPRECATED APICALL const unsigned char * (*EVP_PKEY_get0_siphash)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, size_t * len);
	APICALL const EVP_CIPHER * (*EVP_aria_256_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_256_cfb128)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_128_cfb1)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_128_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_128_cfb128)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_192_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_128_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_192_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_192_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_192_cfb1)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_128_cfb8)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_256_cfb1)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_192_cfb8)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_256_cfb8)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_256_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_128_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_192_cfb128)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_256_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_256_ctr)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_128_ctr)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_192_ctr)(struct AmiSSLIFace *Self);
	APICALL const UI_METHOD * (*UI_null)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL ENGINE * (*EC_KEY_get0_engine)(struct AmiSSLIFace *Self, const EC_KEY * eckey);
	APICALL const ASN1_ITEM * (*INT32_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*UINT64_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ZINT32_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ZUINT64_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*INT64_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ZUINT32_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*UINT32_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ZINT64_it)(struct AmiSSLIFace *Self);
	APICALL int (*BIO_lookup_ex)(struct AmiSSLIFace *Self, const char * host, const char * service, int lookup_type, int family, int socktype, int protocol, BIO_ADDRINFO ** res);
	APICALL int (*X509_CRL_print_ex)(struct AmiSSLIFace *Self, BIO * out, X509_CRL * x, unsigned long nmflag);
	APICALL int (*X509_SIG_INFO_get)(struct AmiSSLIFace *Self, const X509_SIG_INFO * siginf, int * mdnid, int * pknid, int * secbits, uint32_t * flags);
	APICALL int (*X509_get_signature_info)(struct AmiSSLIFace *Self, X509 * x, int * mdnid, int * pknid, int * secbits, uint32_t * flags);
	APICALL void (*X509_SIG_INFO_set)(struct AmiSSLIFace *Self, X509_SIG_INFO * siginf, int mdnid, int pknid, int secbits, uint32_t flags);
	APICALL void (*ESS_CERT_ID_V2_free)(struct AmiSSLIFace *Self, ESS_CERT_ID_V2 * a);
	APICALL ESS_SIGNING_CERT_V2 * (*ESS_SIGNING_CERT_V2_new)(struct AmiSSLIFace *Self);
	APICALL ESS_SIGNING_CERT_V2 * (*d2i_ESS_SIGNING_CERT_V2)(struct AmiSSLIFace *Self, ESS_SIGNING_CERT_V2 ** a, const unsigned char ** pp, long length);
	APICALL int (*i2d_ESS_CERT_ID_V2)(struct AmiSSLIFace *Self, const ESS_CERT_ID_V2 * a, unsigned char ** pp);
	APICALL ESS_CERT_ID_V2 * (*ESS_CERT_ID_V2_dup)(struct AmiSSLIFace *Self, const ESS_CERT_ID_V2 * a);
	APICALL int (*TS_RESP_CTX_set_ess_cert_id_digest)(struct AmiSSLIFace *Self, TS_RESP_CTX * ctx, const EVP_MD * md);
	APICALL ESS_CERT_ID_V2 * (*d2i_ESS_CERT_ID_V2)(struct AmiSSLIFace *Self, ESS_CERT_ID_V2 ** a, const unsigned char ** pp, long length);
	APICALL int (*i2d_ESS_SIGNING_CERT_V2)(struct AmiSSLIFace *Self, const ESS_SIGNING_CERT_V2 * a, unsigned char ** pp);
	APICALL int (*TS_CONF_set_ess_cert_id_digest)(struct AmiSSLIFace *Self, CONF * conf, const char * section, TS_RESP_CTX * ctx);
	APICALL void (*ESS_SIGNING_CERT_V2_free)(struct AmiSSLIFace *Self, ESS_SIGNING_CERT_V2 * a);
	APICALL ESS_SIGNING_CERT_V2 * (*ESS_SIGNING_CERT_V2_dup)(struct AmiSSLIFace *Self, const ESS_SIGNING_CERT_V2 * a);
	APICALL ESS_CERT_ID_V2 * (*ESS_CERT_ID_V2_new)(struct AmiSSLIFace *Self);
	APICALL int (*PEM_read_bio_ex)(struct AmiSSLIFace *Self, BIO * bp, char ** name, char ** header, unsigned char ** data, long * len, unsigned int flags);
	APICALL int (*PEM_bytes_read_bio_secmem)(struct AmiSSLIFace *Self, unsigned char ** pdata, long * plen, char ** pnm, const char * name, BIO * bp, pem_password_cb * cb, void * u);
	APICALL int (*EVP_DigestSign)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * sigret, size_t * siglen, const unsigned char * tbs, size_t tbslen);
	APICALL int (*EVP_DigestVerify)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const unsigned char * sigret, size_t siglen, const unsigned char * tbs, size_t tbslen);
	APICALL void *(*(*UI_method_get_data_duplicator)(struct AmiSSLIFace *Self, const UI_METHOD * method))(UI *, void *);
	APICALL int (*UI_method_set_data_duplicator)(struct AmiSSLIFace *Self, UI_METHOD * method, void *(*duplicator)(UI *ui, void *ui_data), void (*destructor)(UI *ui, void *ui_data));
	APICALL int (*UI_dup_user_data)(struct AmiSSLIFace *Self, UI * ui, void * user_data);
	APICALL void (*(*UI_method_get_data_destructor)(struct AmiSSLIFace *Self, const UI_METHOD * method))(UI *, void *);
	APICALL int (*ERR_load_strings_const)(struct AmiSSLIFace *Self, const ERR_STRING_DATA * str);
	APICALL int (*ASN1_TIME_to_tm)(struct AmiSSLIFace *Self, const ASN1_TIME * s, struct tm * tm);
	APICALL int (*ASN1_TIME_set_string_X509)(struct AmiSSLIFace *Self, ASN1_TIME * s, const char * str);
	APICALL int (*OCSP_resp_get1_id)(struct AmiSSLIFace *Self, const OCSP_BASICRESP * bs, ASN1_OCTET_STRING ** pid, X509_NAME ** pname);
	DEPRECATED APICALL int (*OSSL_STORE_register_loader)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader);
	DEPRECATED APICALL int (*OSSL_STORE_LOADER_set_error)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader, OSSL_STORE_error_fn error_function);
	APICALL EVP_PKEY * (*OSSL_STORE_INFO_get0_PKEY)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	APICALL int (*OSSL_STORE_INFO_get_type)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	DEPRECATED APICALL int (*ERR_load_OSSL_STORE_strings)(struct AmiSSLIFace *Self);
	APICALL void (*OSSL_STORE_LOADER_free)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader);
	APICALL EVP_PKEY * (*OSSL_STORE_INFO_get1_PKEY)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	APICALL void (*OSSL_STORE_INFO_free)(struct AmiSSLIFace *Self, OSSL_STORE_INFO * info);
	DEPRECATED APICALL int (*OSSL_STORE_LOADER_set_eof)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader, OSSL_STORE_eof_fn eof_function);
	DEPRECATED APICALL OSSL_STORE_LOADER * (*OSSL_STORE_LOADER_new)(struct AmiSSLIFace *Self, ENGINE * e, const char * scheme);
	APICALL X509 * (*OSSL_STORE_INFO_get0_CERT)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	DEPRECATED APICALL int (*OSSL_STORE_LOADER_set_close)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader, OSSL_STORE_close_fn close_function);
	APICALL OSSL_STORE_INFO * (*OSSL_STORE_INFO_new_PARAMS)(struct AmiSSLIFace *Self, EVP_PKEY * params);
	APICALL OSSL_STORE_INFO * (*OSSL_STORE_INFO_new_PKEY)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	APICALL EVP_PKEY * (*OSSL_STORE_INFO_get1_PARAMS)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	APICALL X509_CRL * (*OSSL_STORE_INFO_get1_CRL)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	APICALL int (*OSSL_STORE_error)(struct AmiSSLIFace *Self, OSSL_STORE_CTX * ctx);
	APICALL X509 * (*OSSL_STORE_INFO_get1_CERT)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	APICALL EVP_PKEY * (*OSSL_STORE_INFO_get0_PARAMS)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	APICALL const char * (*OSSL_STORE_INFO_type_string)(struct AmiSSLIFace *Self, int type);
	APICALL char * (*OSSL_STORE_INFO_get1_NAME)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	DEPRECATED APICALL int (*OSSL_STORE_LOADER_set_load)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader, OSSL_STORE_load_fn load_function);
	DEPRECATED APICALL const char * (*OSSL_STORE_LOADER_get0_scheme)(struct AmiSSLIFace *Self, const OSSL_STORE_LOADER * loader);
	APICALL OSSL_STORE_CTX * (*OSSL_STORE_open)(struct AmiSSLIFace *Self, const char * uri, const UI_METHOD * ui_method, void * ui_data, OSSL_STORE_post_process_info_fn post_process, void * post_process_data);
	APICALL int (*OSSL_STORE_close)(struct AmiSSLIFace *Self, OSSL_STORE_CTX * ctx);
	APICALL OSSL_STORE_INFO * (*OSSL_STORE_INFO_new_CERT)(struct AmiSSLIFace *Self, X509 * x509);
	APICALL X509_CRL * (*OSSL_STORE_INFO_get0_CRL)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	APICALL OSSL_STORE_INFO * (*OSSL_STORE_load)(struct AmiSSLIFace *Self, OSSL_STORE_CTX * ctx);
	APICALL const char * (*OSSL_STORE_INFO_get0_NAME)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	DEPRECATED APICALL OSSL_STORE_LOADER * (*OSSL_STORE_unregister_loader)(struct AmiSSLIFace *Self, const char * scheme);
	APICALL OSSL_STORE_INFO * (*OSSL_STORE_INFO_new_CRL)(struct AmiSSLIFace *Self, X509_CRL * crl);
	APICALL OSSL_STORE_INFO * (*OSSL_STORE_INFO_new_NAME)(struct AmiSSLIFace *Self, char * name);
	APICALL int (*OSSL_STORE_eof)(struct AmiSSLIFace *Self, OSSL_STORE_CTX * ctx);
	DEPRECATED APICALL int (*OSSL_STORE_LOADER_set_open)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader, OSSL_STORE_open_fn open_function);
	DEPRECATED APICALL int (*OSSL_STORE_LOADER_set_ctrl)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader, OSSL_STORE_ctrl_fn ctrl_function);
	DEPRECATED APICALL int (*OSSL_STORE_vctrl)(struct AmiSSLIFace *Self, OSSL_STORE_CTX * ctx, int cmd, long * args);
	DEPRECATED APICALL int (*OSSL_STORE_ctrl)(struct AmiSSLIFace *Self, OSSL_STORE_CTX * ctx, int cmd, ...);
	APICALL const char * (*OSSL_STORE_INFO_get0_NAME_description)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	APICALL int (*OSSL_STORE_INFO_set0_NAME_description)(struct AmiSSLIFace *Self, OSSL_STORE_INFO * info, char * desc);
	APICALL char * (*OSSL_STORE_INFO_get1_NAME_description)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	DEPRECATED APICALL int (*OSSL_STORE_do_all_loaders)(struct AmiSSLIFace *Self, void (*do_function)(const OSSL_STORE_LOADER *loader, void *do_arg), void * do_arg);
	DEPRECATED APICALL const ENGINE * (*OSSL_STORE_LOADER_get0_engine)(struct AmiSSLIFace *Self, const OSSL_STORE_LOADER * loader);
	APTR RAND_DRBG_instantiate_UNIMPLEMENTED;
	APTR RAND_DRBG_uninstantiate_UNIMPLEMENTED;
	APTR RAND_DRBG_set_UNIMPLEMENTED;
	APTR RAND_DRBG_set_callbacks_UNIMPLEMENTED;
	APTR RAND_DRBG_new_UNIMPLEMENTED;
	APTR RAND_DRBG_set_reseed_interval_UNIMPLEMENTED;
	APTR RAND_DRBG_free_UNIMPLEMENTED;
	APTR RAND_DRBG_generate_UNIMPLEMENTED;
	APTR RAND_DRBG_reseed_UNIMPLEMENTED;
	APTR RAND_DRBG_set_ex_data_UNIMPLEMENTED;
	APTR RAND_DRBG_get_ex_data_UNIMPLEMENTED;
	APICALL const EVP_MD * (*EVP_sha3_224)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_sha3_256)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_sha3_384)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_sha3_512)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_shake128)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_shake256)(struct AmiSSLIFace *Self);
	APICALL SCRYPT_PARAMS * (*SCRYPT_PARAMS_new)(struct AmiSSLIFace *Self);
	APICALL void (*SCRYPT_PARAMS_free)(struct AmiSSLIFace *Self, SCRYPT_PARAMS * a);
	APICALL int (*i2d_SCRYPT_PARAMS)(struct AmiSSLIFace *Self, const SCRYPT_PARAMS * a, unsigned char ** out);
	APICALL SCRYPT_PARAMS * (*d2i_SCRYPT_PARAMS)(struct AmiSSLIFace *Self, SCRYPT_PARAMS ** a, const unsigned char ** in, long len);
	APICALL const ASN1_ITEM * (*SCRYPT_PARAMS_it)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL const EVP_PKEY_METHOD * (*EVP_PKEY_meth_get0)(struct AmiSSLIFace *Self, size_t idx);
	DEPRECATED APICALL size_t (*EVP_PKEY_meth_get_count)(struct AmiSSLIFace *Self);
	APTR RAND_DRBG_get0_public_UNIMPLEMENTED;
	APICALL int (*RAND_priv_bytes)(struct AmiSSLIFace *Self, unsigned char * buf, int num);
	APICALL int (*BN_priv_rand)(struct AmiSSLIFace *Self, BIGNUM * rnd, int bits, int top, int bottom);
	APICALL int (*BN_priv_rand_range)(struct AmiSSLIFace *Self, BIGNUM * rnd, const BIGNUM * range);
	APICALL int (*ASN1_TIME_normalize)(struct AmiSSLIFace *Self, ASN1_TIME * s);
	APICALL int (*ASN1_TIME_cmp_time_t)(struct AmiSSLIFace *Self, const ASN1_TIME * s, time_t t);
	APICALL int (*ASN1_TIME_compare)(struct AmiSSLIFace *Self, const ASN1_TIME * a, const ASN1_TIME * b);
	APICALL int (*EVP_PKEY_CTX_ctrl_uint64)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int keytype, int optype, int cmd, uint64_t value);
	APICALL int (*EVP_DigestFinalXOF)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * md, size_t len);
	APICALL int (*ERR_clear_last_mark)(struct AmiSSLIFace *Self);
	APTR RAND_DRBG_get0_private_UNIMPLEMENTED;
	APICALL const EVP_CIPHER * (*EVP_aria_192_ccm)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_256_gcm)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_256_ccm)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_128_gcm)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_128_ccm)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_aria_192_gcm)(struct AmiSSLIFace *Self);
	APICALL int (*UI_get_result_length)(struct AmiSSLIFace *Self, UI * ui, int i);
	APICALL int (*UI_set_result_ex)(struct AmiSSLIFace *Self, UI * ui, UI_STRING * uis, const char * result, int len);
	APICALL int (*UI_get_result_string_length)(struct AmiSSLIFace *Self, UI_STRING * uis);
	APICALL int (*EVP_PKEY_check)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_check)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*check)(EVP_PKEY *pkey));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_check)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pcheck)(EVP_PKEY *pkey));
	DEPRECATED APICALL int (*EVP_PKEY_meth_remove)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth);
	APICALL int (*OPENSSL_sk_reserve)(struct AmiSSLIFace *Self, OPENSSL_STACK * st, int n);
	DEPRECATED APICALL DH * (*DH_new_by_nid)(struct AmiSSLIFace *Self, int nid);
	DEPRECATED APICALL int (*DH_get_nid)(struct AmiSSLIFace *Self, const DH * dh);
	APICALL OPENSSL_STACK * (*OPENSSL_sk_new_reserve)(struct AmiSSLIFace *Self, OPENSSL_sk_compfunc c, int n);
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_check)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*pkey_check)(const EVP_PKEY *pk));
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_siginf)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*siginf_set)(X509_SIG_INFO *siginf, const X509_ALGOR *alg, const ASN1_STRING *sig));
	APICALL const EVP_CIPHER * (*EVP_sm4_ctr)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_sm4_cbc)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_sm4_ofb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_sm4_ecb)(struct AmiSSLIFace *Self);
	APICALL const EVP_CIPHER * (*EVP_sm4_cfb128)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_sm3)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL int (*RSA_get0_multi_prime_factors)(struct AmiSSLIFace *Self, const RSA * r, const BIGNUM ** primes);
	APICALL int (*EVP_PKEY_public_check)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*EVP_PKEY_param_check)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_public_check)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*check)(EVP_PKEY *pkey));
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_param_check)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*check)(EVP_PKEY *pkey));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_public_check)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pcheck)(EVP_PKEY *pkey));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_param_check)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pcheck)(EVP_PKEY *pkey));
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_public_check)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*pkey_pub_check)(const EVP_PKEY *pk));
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_param_check)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*pkey_param_check)(const EVP_PKEY *pk));
	DEPRECATED APICALL int (*DH_check_ex)(struct AmiSSLIFace *Self, const DH * dh);
	DEPRECATED APICALL int (*DH_check_pub_key_ex)(struct AmiSSLIFace *Self, const DH * dh, const BIGNUM * pub_key);
	DEPRECATED APICALL int (*DH_check_params_ex)(struct AmiSSLIFace *Self, const DH * dh);
	DEPRECATED APICALL int (*RSA_generate_multi_prime_key)(struct AmiSSLIFace *Self, RSA * rsa, int bits, int primes, BIGNUM * e, BN_GENCB * cb);
	DEPRECATED APICALL int (*RSA_get_multi_prime_extra_count)(struct AmiSSLIFace *Self, const RSA * r);
	APICALL int (*OCSP_resp_get0_signer)(struct AmiSSLIFace *Self, OCSP_BASICRESP * bs, X509 ** signer, STACK_OF(X509) * extra_certs);
	DEPRECATED APICALL int (*RSA_get0_multi_prime_crt_params)(struct AmiSSLIFace *Self, const RSA * r, const BIGNUM ** exps, const BIGNUM ** coeffs);
	DEPRECATED APICALL int (*RSA_set0_multi_prime_params)(struct AmiSSLIFace *Self, RSA * r, BIGNUM ** primes, BIGNUM ** exps, BIGNUM ** coeffs, int pnum);
	DEPRECATED APICALL int (*RSA_get_version)(struct AmiSSLIFace *Self, RSA * r);
	DEPRECATED APICALL int (*(*RSA_meth_get_multi_prime_keygen)(struct AmiSSLIFace *Self, const RSA_METHOD * meth))(RSA *rsa, int bits, int primes, BIGNUM *e, BN_GENCB *cb);
	DEPRECATED APICALL int (*RSA_meth_set_multi_prime_keygen)(struct AmiSSLIFace *Self, RSA_METHOD * meth, int (*keygen)(RSA *rsa, int bits, int primes, BIGNUM *e, BN_GENCB *cb));
	APTR RAND_DRBG_get0_master_UNIMPLEMENTED;
	APTR RAND_DRBG_set_reseed_time_interval_UNIMPLEMENTED;
	APICALL const ASN1_OCTET_STRING * (*PROFESSION_INFO_get0_addProfessionInfo)(struct AmiSSLIFace *Self, const PROFESSION_INFO * pi);
	APICALL void (*ADMISSION_SYNTAX_free)(struct AmiSSLIFace *Self, ADMISSION_SYNTAX * a);
	APICALL ADMISSION_SYNTAX * (*d2i_ADMISSION_SYNTAX)(struct AmiSSLIFace *Self, ADMISSION_SYNTAX ** a, const unsigned char ** in, long len);
	APICALL void (*NAMING_AUTHORITY_set0_authorityId)(struct AmiSSLIFace *Self, NAMING_AUTHORITY * n, ASN1_OBJECT* namingAuthorityId);
	APICALL void (*NAMING_AUTHORITY_set0_authorityURL)(struct AmiSSLIFace *Self, NAMING_AUTHORITY * n, ASN1_IA5STRING* namingAuthorityUrl);
	APICALL PROFESSION_INFO * (*d2i_PROFESSION_INFO)(struct AmiSSLIFace *Self, PROFESSION_INFO ** a, const unsigned char ** in, long len);
	APICALL const ASN1_ITEM * (*NAMING_AUTHORITY_it)(struct AmiSSLIFace *Self);
	APICALL const STACK_OF(ADMISSIONS) * (*ADMISSION_SYNTAX_get0_contentsOfAdmissions)(struct AmiSSLIFace *Self, const ADMISSION_SYNTAX * as);
	APICALL void (*PROFESSION_INFO_set0_professionItems)(struct AmiSSLIFace *Self, PROFESSION_INFO * pi, STACK_OF(ASN1_STRING) * as);
	APICALL NAMING_AUTHORITY * (*NAMING_AUTHORITY_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_IA5STRING * (*NAMING_AUTHORITY_get0_authorityURL)(struct AmiSSLIFace *Self, const NAMING_AUTHORITY * n);
	APICALL const GENERAL_NAME * (*ADMISSION_SYNTAX_get0_admissionAuthority)(struct AmiSSLIFace *Self, const ADMISSION_SYNTAX * as);
	APICALL PROFESSION_INFO * (*PROFESSION_INFO_new)(struct AmiSSLIFace *Self);
	APICALL ADMISSIONS * (*ADMISSIONS_new)(struct AmiSSLIFace *Self);
	APICALL void (*ADMISSION_SYNTAX_set0_admissionAuthority)(struct AmiSSLIFace *Self, ADMISSION_SYNTAX * as, GENERAL_NAME * aa);
	APICALL const STACK_OF(ASN1_OBJECT) * (*PROFESSION_INFO_get0_professionOIDs)(struct AmiSSLIFace *Self, const PROFESSION_INFO * pi);
	APICALL const ASN1_ITEM * (*PROFESSION_INFO_it)(struct AmiSSLIFace *Self);
	APICALL int (*i2d_PROFESSION_INFO)(struct AmiSSLIFace *Self, const PROFESSION_INFO * a, unsigned char ** out);
	APICALL void (*ADMISSIONS_set0_professionInfos)(struct AmiSSLIFace *Self, ADMISSIONS * a, PROFESSION_INFOS * pi);
	APICALL const NAMING_AUTHORITY * (*PROFESSION_INFO_get0_namingAuthority)(struct AmiSSLIFace *Self, const PROFESSION_INFO * pi);
	APICALL void (*PROFESSION_INFO_free)(struct AmiSSLIFace *Self, PROFESSION_INFO * a);
	APICALL void (*PROFESSION_INFO_set0_addProfessionInfo)(struct AmiSSLIFace *Self, PROFESSION_INFO * pi, ASN1_OCTET_STRING * aos);
	APICALL void (*PROFESSION_INFO_set0_registrationNumber)(struct AmiSSLIFace *Self, PROFESSION_INFO * pi, ASN1_PRINTABLESTRING * rn);
	APICALL void (*ADMISSION_SYNTAX_set0_contentsOfAdmissions)(struct AmiSSLIFace *Self, ADMISSION_SYNTAX * as, STACK_OF(ADMISSIONS) * a);
	APICALL const ASN1_OBJECT * (*NAMING_AUTHORITY_get0_authorityId)(struct AmiSSLIFace *Self, const NAMING_AUTHORITY * n);
	APICALL const ASN1_ITEM * (*ADMISSION_SYNTAX_it)(struct AmiSSLIFace *Self);
	APICALL int (*i2d_ADMISSION_SYNTAX)(struct AmiSSLIFace *Self, const ADMISSION_SYNTAX * a, unsigned char ** out);
	APICALL const ASN1_STRING * (*NAMING_AUTHORITY_get0_authorityText)(struct AmiSSLIFace *Self, const NAMING_AUTHORITY * n);
	APICALL void (*PROFESSION_INFO_set0_namingAuthority)(struct AmiSSLIFace *Self, PROFESSION_INFO * pi, NAMING_AUTHORITY * na);
	APICALL int (*i2d_NAMING_AUTHORITY)(struct AmiSSLIFace *Self, const NAMING_AUTHORITY * a, unsigned char ** out);
	APICALL void (*NAMING_AUTHORITY_free)(struct AmiSSLIFace *Self, NAMING_AUTHORITY * a);
	APICALL void (*ADMISSIONS_set0_admissionAuthority)(struct AmiSSLIFace *Self, ADMISSIONS * a, GENERAL_NAME * aa);
	APICALL void (*ADMISSIONS_free)(struct AmiSSLIFace *Self, ADMISSIONS * a);
	APICALL const ASN1_PRINTABLESTRING * (*PROFESSION_INFO_get0_registrationNumber)(struct AmiSSLIFace *Self, const PROFESSION_INFO * pi);
	APICALL ADMISSIONS * (*d2i_ADMISSIONS)(struct AmiSSLIFace *Self, ADMISSIONS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ADMISSIONS)(struct AmiSSLIFace *Self, const ADMISSIONS * a, unsigned char ** out);
	APICALL const STACK_OF(ASN1_STRING) * (*PROFESSION_INFO_get0_professionItems)(struct AmiSSLIFace *Self, const PROFESSION_INFO * pi);
	APICALL const GENERAL_NAME * (*ADMISSIONS_get0_admissionAuthority)(struct AmiSSLIFace *Self, const ADMISSIONS * a);
	APICALL void (*PROFESSION_INFO_set0_professionOIDs)(struct AmiSSLIFace *Self, PROFESSION_INFO * pi, STACK_OF(ASN1_OBJECT) * po);
	APICALL NAMING_AUTHORITY * (*d2i_NAMING_AUTHORITY)(struct AmiSSLIFace *Self, NAMING_AUTHORITY ** a, const unsigned char ** in, long len);
	APICALL const ASN1_ITEM * (*ADMISSIONS_it)(struct AmiSSLIFace *Self);
	APICALL const NAMING_AUTHORITY * (*ADMISSIONS_get0_namingAuthority)(struct AmiSSLIFace *Self, const ADMISSIONS * a);
	APICALL void (*NAMING_AUTHORITY_set0_authorityText)(struct AmiSSLIFace *Self, NAMING_AUTHORITY * n, ASN1_STRING* namingAuthorityText);
	APICALL void (*ADMISSIONS_set0_namingAuthority)(struct AmiSSLIFace *Self, ADMISSIONS * a, NAMING_AUTHORITY * na);
	APICALL const PROFESSION_INFOS * (*ADMISSIONS_get0_professionInfos)(struct AmiSSLIFace *Self, const ADMISSIONS * a);
	APICALL ADMISSION_SYNTAX * (*ADMISSION_SYNTAX_new)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_sha512_256)(struct AmiSSLIFace *Self);
	APICALL const EVP_MD * (*EVP_sha512_224)(struct AmiSSLIFace *Self);
	APICALL int (*OCSP_basic_sign_ctx)(struct AmiSSLIFace *Self, OCSP_BASICRESP * brsp, X509 * signer, EVP_MD_CTX * ctx, STACK_OF(X509) * certs, unsigned long flags);
	APTR RAND_DRBG_bytes_UNIMPLEMENTED;
	APTR RAND_DRBG_secure_new_UNIMPLEMENTED;
	APICALL OSSL_STORE_SEARCH * (*OSSL_STORE_SEARCH_by_alias)(struct AmiSSLIFace *Self, const char * alias);
	APICALL int (*BIO_bind)(struct AmiSSLIFace *Self, int sock, const BIO_ADDR * addr, int options);
	DEPRECATED APICALL int (*OSSL_STORE_LOADER_set_expect)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader, OSSL_STORE_expect_fn expect_function);
	APICALL int (*OSSL_STORE_expect)(struct AmiSSLIFace *Self, OSSL_STORE_CTX * ctx, int expected_type);
	APICALL OSSL_STORE_SEARCH * (*OSSL_STORE_SEARCH_by_key_fingerprint)(struct AmiSSLIFace *Self, const EVP_MD * digest, const unsigned char * bytes, size_t len);
	APICALL const ASN1_INTEGER * (*OSSL_STORE_SEARCH_get0_serial)(struct AmiSSLIFace *Self, const OSSL_STORE_SEARCH * criterion);
	APICALL OSSL_STORE_SEARCH * (*OSSL_STORE_SEARCH_by_name)(struct AmiSSLIFace *Self, X509_NAME * name);
	APICALL int (*OSSL_STORE_supports_search)(struct AmiSSLIFace *Self, OSSL_STORE_CTX * ctx, int search_type);
	APICALL int (*OSSL_STORE_find)(struct AmiSSLIFace *Self, OSSL_STORE_CTX * ctx, const OSSL_STORE_SEARCH * search);
	APICALL int (*OSSL_STORE_SEARCH_get_type)(struct AmiSSLIFace *Self, const OSSL_STORE_SEARCH * criterion);
	APICALL const unsigned char * (*OSSL_STORE_SEARCH_get0_bytes)(struct AmiSSLIFace *Self, const OSSL_STORE_SEARCH * criterion, size_t * length);
	APICALL const char * (*OSSL_STORE_SEARCH_get0_string)(struct AmiSSLIFace *Self, const OSSL_STORE_SEARCH * criterion);
	APICALL OSSL_STORE_SEARCH * (*OSSL_STORE_SEARCH_by_issuer_serial)(struct AmiSSLIFace *Self, X509_NAME * name, const ASN1_INTEGER * serial);
	APICALL X509_NAME * (*OSSL_STORE_SEARCH_get0_name)(struct AmiSSLIFace *Self, const OSSL_STORE_SEARCH * criterion);
	APICALL const ASN1_OCTET_STRING * (*X509_get0_authority_key_id)(struct AmiSSLIFace *Self, X509 * x);
	DEPRECATED APICALL int (*OSSL_STORE_LOADER_set_find)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader, OSSL_STORE_find_fn find_function);
	APICALL void (*OSSL_STORE_SEARCH_free)(struct AmiSSLIFace *Self, OSSL_STORE_SEARCH * search);
	APICALL const EVP_MD * (*OSSL_STORE_SEARCH_get0_digest)(struct AmiSSLIFace *Self, const OSSL_STORE_SEARCH * criterion);
	APTR RAND_DRBG_set_reseed_defaults_UNIMPLEMENTED;
	APICALL EVP_PKEY * (*EVP_PKEY_new_raw_private_key)(struct AmiSSLIFace *Self, int type, ENGINE * e, const unsigned char * priv, size_t len);
	APICALL EVP_PKEY * (*EVP_PKEY_new_raw_public_key)(struct AmiSSLIFace *Self, int type, ENGINE * e, const unsigned char * pub, size_t len);
	DEPRECATED APICALL EVP_PKEY * (*EVP_PKEY_new_CMAC_key)(struct AmiSSLIFace *Self, ENGINE * e, const unsigned char * priv, size_t len, const EVP_CIPHER * cipher);
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_set_priv_key)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*set_priv_key)(EVP_PKEY *pk, const unsigned char *priv, size_t len));
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_set_pub_key)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*set_pub_key)(EVP_PKEY *pk, const unsigned char *pub, size_t len));
	APTR RAND_DRBG_set_defaults_UNIMPLEMENTED;
	APICALL unsigned int (*X509_VERIFY_PARAM_get_hostflags)(struct AmiSSLIFace *Self, const X509_VERIFY_PARAM * param);
	DEPRECATED APICALL const BIGNUM * (*DH_get0_p)(struct AmiSSLIFace *Self, const DH * dh);
	DEPRECATED APICALL const BIGNUM * (*DH_get0_q)(struct AmiSSLIFace *Self, const DH * dh);
	DEPRECATED APICALL const BIGNUM * (*DH_get0_g)(struct AmiSSLIFace *Self, const DH * dh);
	DEPRECATED APICALL const BIGNUM * (*DH_get0_priv_key)(struct AmiSSLIFace *Self, const DH * dh);
	DEPRECATED APICALL const BIGNUM * (*DH_get0_pub_key)(struct AmiSSLIFace *Self, const DH * dh);
	DEPRECATED APICALL const BIGNUM * (*DSA_get0_priv_key)(struct AmiSSLIFace *Self, const DSA * d);
	DEPRECATED APICALL const BIGNUM * (*DSA_get0_pub_key)(struct AmiSSLIFace *Self, const DSA * d);
	DEPRECATED APICALL const BIGNUM * (*DSA_get0_q)(struct AmiSSLIFace *Self, const DSA * d);
	DEPRECATED APICALL const BIGNUM * (*DSA_get0_p)(struct AmiSSLIFace *Self, const DSA * d);
	DEPRECATED APICALL const BIGNUM * (*DSA_get0_g)(struct AmiSSLIFace *Self, const DSA * d);
	DEPRECATED APICALL const BIGNUM * (*RSA_get0_dmp1)(struct AmiSSLIFace *Self, const RSA * r);
	DEPRECATED APICALL const BIGNUM * (*RSA_get0_d)(struct AmiSSLIFace *Self, const RSA * d);
	DEPRECATED APICALL const BIGNUM * (*RSA_get0_n)(struct AmiSSLIFace *Self, const RSA * d);
	DEPRECATED APICALL const BIGNUM * (*RSA_get0_dmq1)(struct AmiSSLIFace *Self, const RSA * r);
	DEPRECATED APICALL const BIGNUM * (*RSA_get0_e)(struct AmiSSLIFace *Self, const RSA * d);
	DEPRECATED APICALL const BIGNUM * (*RSA_get0_q)(struct AmiSSLIFace *Self, const RSA * d);
	DEPRECATED APICALL const BIGNUM * (*RSA_get0_p)(struct AmiSSLIFace *Self, const RSA * d);
	DEPRECATED APICALL const BIGNUM * (*RSA_get0_iqmp)(struct AmiSSLIFace *Self, const RSA * r);
	APICALL const BIGNUM * (*ECDSA_SIG_get0_r)(struct AmiSSLIFace *Self, const ECDSA_SIG * sig);
	APICALL const BIGNUM * (*ECDSA_SIG_get0_s)(struct AmiSSLIFace *Self, const ECDSA_SIG * sig);
	APICALL X509_LOOKUP_get_by_fingerprint_fn (*X509_LOOKUP_meth_get_get_by_fingerprint)(struct AmiSSLIFace *Self, const X509_LOOKUP_METHOD * method);
	APICALL X509_LOOKUP_METHOD * (*X509_LOOKUP_meth_new)(struct AmiSSLIFace *Self, const char * name);
	APICALL int (*(*X509_LOOKUP_meth_get_init)(struct AmiSSLIFace *Self, const X509_LOOKUP_METHOD* method))(X509_LOOKUP *ctx);
	APICALL X509_LOOKUP_get_by_alias_fn (*X509_LOOKUP_meth_get_get_by_alias)(struct AmiSSLIFace *Self, const X509_LOOKUP_METHOD * method);
	APICALL int (*X509_LOOKUP_meth_set_new_item)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method, int (*new_item)(X509_LOOKUP *ctx));
	APICALL int (*X509_LOOKUP_meth_set_shutdown)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method, int (*__shutdown)(X509_LOOKUP *ctx));
	APICALL int (*(*X509_LOOKUP_meth_get_new_item)(struct AmiSSLIFace *Self, const X509_LOOKUP_METHOD* method))(X509_LOOKUP *ctx);
	APICALL int (*X509_LOOKUP_meth_set_ctrl)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method, X509_LOOKUP_ctrl_fn ctrl_fn);
	APICALL int (*X509_LOOKUP_meth_set_get_by_issuer_serial)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method, X509_LOOKUP_get_by_issuer_serial_fn fn);
	APICALL X509_STORE * (*X509_LOOKUP_get_store)(struct AmiSSLIFace *Self, const X509_LOOKUP * ctx);
	APICALL X509_LOOKUP_ctrl_fn (*X509_LOOKUP_meth_get_ctrl)(struct AmiSSLIFace *Self, const X509_LOOKUP_METHOD * method);
	APICALL int (*X509_LOOKUP_meth_set_get_by_alias)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method, X509_LOOKUP_get_by_alias_fn fn);
	APICALL X509_LOOKUP_get_by_subject_fn (*X509_LOOKUP_meth_get_get_by_subject)(struct AmiSSLIFace *Self, const X509_LOOKUP_METHOD * method);
	APICALL void (*(*X509_LOOKUP_meth_get_free)(struct AmiSSLIFace *Self, const X509_LOOKUP_METHOD* method))(X509_LOOKUP *ctx);
	APICALL int (*X509_LOOKUP_meth_set_get_by_subject)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method, X509_LOOKUP_get_by_subject_fn fn);
	APICALL int (*X509_LOOKUP_meth_set_free)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method, void (*free_fn)(X509_LOOKUP *ctx));
	APICALL int (*(*X509_LOOKUP_meth_get_shutdown)(struct AmiSSLIFace *Self, const X509_LOOKUP_METHOD* method))(X509_LOOKUP *ctx);
	APICALL int (*X509_LOOKUP_set_method_data)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, void * data);
	APICALL void * (*X509_LOOKUP_get_method_data)(struct AmiSSLIFace *Self, const X509_LOOKUP * ctx);
	APICALL int (*X509_LOOKUP_meth_set_get_by_fingerprint)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method, X509_LOOKUP_get_by_fingerprint_fn fn);
	APICALL void (*X509_LOOKUP_meth_free)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method);
	APICALL int (*X509_OBJECT_set1_X509)(struct AmiSSLIFace *Self, X509_OBJECT * a, X509 * obj);
	APICALL X509_LOOKUP_get_by_issuer_serial_fn (*X509_LOOKUP_meth_get_get_by_issuer_serial)(struct AmiSSLIFace *Self, const X509_LOOKUP_METHOD * method);
	APICALL int (*X509_LOOKUP_meth_set_init)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method, int (*init)(X509_LOOKUP *ctx));
	APICALL int (*X509_OBJECT_set1_X509_CRL)(struct AmiSSLIFace *Self, X509_OBJECT * a, X509_CRL * obj);
	APICALL int (*EVP_PKEY_get_raw_public_key)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, unsigned char * pub, size_t * len);
	APICALL int (*EVP_PKEY_get_raw_private_key)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, unsigned char * priv, size_t * len);
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_get_priv_key)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*get_priv_key)(const EVP_PKEY *pk, unsigned char *priv, size_t *len));
	DEPRECATED APICALL void (*EVP_PKEY_asn1_set_get_pub_key)(struct AmiSSLIFace *Self, EVP_PKEY_ASN1_METHOD * ameth, int (*get_pub_key)(const EVP_PKEY *pk, unsigned char *pub, size_t *len));
	APTR EVP_PKEY_set_alias_type_UNIMPLEMENTED;
	APICALL void (*RAND_keep_random_devices_open)(struct AmiSSLIFace *Self, int keep);
	APICALL int (*EC_POINT_set_compressed_coordinates)(struct AmiSSLIFace *Self, const EC_GROUP * group, EC_POINT * p, const BIGNUM * x, int y_bit, BN_CTX * ctx);
	APICALL int (*EC_POINT_set_affine_coordinates)(struct AmiSSLIFace *Self, const EC_GROUP * group, EC_POINT * p, const BIGNUM * x, const BIGNUM * y, BN_CTX * ctx);
	APICALL int (*EC_POINT_get_affine_coordinates)(struct AmiSSLIFace *Self, const EC_GROUP * group, const EC_POINT * p, BIGNUM * x, BIGNUM * y, BN_CTX * ctx);
	APICALL int (*EC_GROUP_set_curve)(struct AmiSSLIFace *Self, EC_GROUP * group, const BIGNUM * p, const BIGNUM * a, const BIGNUM * b, BN_CTX * ctx);
	APICALL int (*EC_GROUP_get_curve)(struct AmiSSLIFace *Self, const EC_GROUP * group, BIGNUM * p, BIGNUM * a, BIGNUM * b, BN_CTX * ctx);
	APICALL const X509_ALGOR * (*OCSP_resp_get0_tbs_sigalg)(struct AmiSSLIFace *Self, const OCSP_BASICRESP * bs);
	APICALL const OCSP_RESPDATA * (*OCSP_resp_get0_respdata)(struct AmiSSLIFace *Self, const OCSP_BASICRESP * bs);
	APICALL void (*EVP_MD_CTX_set_pkey_ctx)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, EVP_PKEY_CTX * pctx);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_digest_custom)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*digest_custom)(EVP_PKEY_CTX *ctx, EVP_MD_CTX *mctx));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_digest_custom)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**pdigest_custom)(EVP_PKEY_CTX *ctx, EVP_MD_CTX *mctx));
	APICALL const char * (*OPENSSL_DIR_read)(struct AmiSSLIFace *Self, OPENSSL_DIR_CTX ** ctx, const char * directory);
	APICALL int (*OPENSSL_DIR_end)(struct AmiSSLIFace *Self, OPENSSL_DIR_CTX ** ctx);
	APTR OPENSSL_INIT_set_config_filename_UNIMPLEMENTED;
	APTR OPENSSL_INIT_set_config_file_flags_UNIMPLEMENTED;
	DEPRECATED APICALL ENGINE * (*EVP_PKEY_get0_engine)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL const ASN1_INTEGER * (*X509_get0_authority_serial)(struct AmiSSLIFace *Self, X509 * x);
	APICALL const GENERAL_NAMES * (*X509_get0_authority_issuer)(struct AmiSSLIFace *Self, X509 * x);
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_digestsign)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*digestsign)(EVP_MD_CTX *ctx, unsigned char *sig, size_t *siglen, const unsigned char *tbs, size_t tbslen));
	DEPRECATED APICALL void (*EVP_PKEY_meth_set_digestverify)(struct AmiSSLIFace *Self, EVP_PKEY_METHOD * pmeth, int (*digestverify)(EVP_MD_CTX *ctx, const unsigned char *sig, size_t siglen, const unsigned char *tbs, size_t tbslen));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_digestverify)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**digestverify)(EVP_MD_CTX *ctx, const unsigned char *sig, size_t siglen, const unsigned char *tbs, size_t tbslen));
	DEPRECATED APICALL void (*EVP_PKEY_meth_get_digestsign)(struct AmiSSLIFace *Self, const EVP_PKEY_METHOD * pmeth, int (**digestsign)(EVP_MD_CTX *ctx, unsigned char *sig, size_t *siglen, const unsigned char *tbs, size_t tbslen));
	DEPRECATED APICALL const RSA_PSS_PARAMS * (*RSA_get0_pss_params)(struct AmiSSLIFace *Self, const RSA * r);
	APICALL int (*X509_ALGOR_copy)(struct AmiSSLIFace *Self, X509_ALGOR * dest, const X509_ALGOR * src);
	APICALL void (*X509_REQ_set0_signature)(struct AmiSSLIFace *Self, X509_REQ * req, ASN1_BIT_STRING * psig);
	APICALL int (*X509_REQ_set1_signature_algo)(struct AmiSSLIFace *Self, X509_REQ * req, X509_ALGOR * palg);
	DEPRECATED APICALL int (*EC_KEY_decoded_from_explicit_params)(struct AmiSSLIFace *Self, const EC_KEY * key);
	DEPRECATED APICALL int (*RSA_X931_derive_ex_amiga_1)(struct AmiSSLIFace *Self, RSA * rsa, BIGNUM * p1, BIGNUM * p2, BIGNUM * q1, BIGNUM * q2, const BIGNUM * Xp1, void * moreargs);
	APICALL void * (*RSA_X931_derive_ex_amiga_2)(struct AmiSSLIFace *Self, const BIGNUM * Xp2, const BIGNUM * Xp, const BIGNUM * Xq1, const BIGNUM * Xq2, const BIGNUM * Xq, const BIGNUM * e, BN_GENCB * cb);
	APTR BIO_s_datagram_sctp_UNIMPLEMENTED;
	APICALL int (*SSL_CTX_set_async_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_async_callback_fn callback);
	APICALL int (*SSL_CTX_set_async_callback_arg)(struct AmiSSLIFace *Self, SSL_CTX * ctx, void * arg);
	APICALL int (*SSL_set_async_callback)(struct AmiSSLIFace *Self, SSL * s, SSL_async_callback_fn callback);
	APICALL int (*SSL_set_async_callback_arg)(struct AmiSSLIFace *Self, SSL * s, void * arg);
	APICALL int (*SSL_get_async_status)(struct AmiSSLIFace *Self, SSL * s, int * status);
	APICALL int (*SSL_sendfile)(struct AmiSSLIFace *Self, SSL * s, int fd, off_t offset, size_t size, int flags);
	APICALL const char * (*OSSL_default_cipher_list)(struct AmiSSLIFace *Self);
	APICALL const char * (*OSSL_default_ciphersuites)(struct AmiSSLIFace *Self);
	APICALL int (*SSL_add_store_cert_subjects_to_stack)(struct AmiSSLIFace *Self, STACK_OF(X509_NAME) * stackCAs, const char * uri);
	APICALL int (*SSL_CTX_set_default_verify_store)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	APICALL int (*SSL_CTX_load_verify_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * CAfile);
	APICALL int (*SSL_CTX_load_verify_dir)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * CApath);
	APICALL int (*SSL_CTX_load_verify_store)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * CAstore);
	APICALL int (*SSL_CTX_set_tlsext_ticket_key_evp_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*fp)(SSL *, unsigned char *, unsigned char *, EVP_CIPHER_CTX *, EVP_MAC_CTX *, int));
	APICALL SSL_CTX * (*SSL_CTX_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq, const SSL_METHOD * meth);
	APICALL int (*SSL_new_session_ticket)(struct AmiSSLIFace *Self, SSL * s);
	APICALL X509 * (*SSL_get0_peer_certificate)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL STACK_OF(X509_NAME) * (*SSL_load_client_CA_file_ex)(struct AmiSSLIFace *Self, const char * file, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*SSL_set0_tmp_dh_pkey)(struct AmiSSLIFace *Self, SSL * s, EVP_PKEY * dhpkey);
	APICALL int (*SSL_CTX_set0_tmp_dh_pkey)(struct AmiSSLIFace *Self, SSL_CTX * ctx, EVP_PKEY * dhpkey);
	APICALL const char * (*SSL_group_to_name)(struct AmiSSLIFace *Self, SSL * s, int id);
	APICALL X509_CRL * (*X509_CRL_load_http)(struct AmiSSLIFace *Self, const char * url, BIO * bio, BIO * rbio, int timeout);
	APICALL int (*OSSL_HTTP_parse_url)(struct AmiSSLIFace *Self, const char * url, int * pssl, char ** puser, char ** phost, char ** pport, int * pport_num, char ** ppath, char ** pquery, char ** pfrag);
	APICALL BIO * (*OSSL_HTTP_REQ_CTX_exchange)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx);
	APICALL OSSL_HTTP_REQ_CTX * (*OSSL_HTTP_REQ_CTX_new)(struct AmiSSLIFace *Self, BIO * wbio, BIO * rbio, int buf_size);
	APICALL X509 * (*X509_load_http)(struct AmiSSLIFace *Self, const char * url, BIO * bio, BIO * rbio, int timeout);
	APICALL unsigned long (*X509_NAME_hash_ex)(struct AmiSSLIFace *Self, const X509_NAME * x, OSSL_LIB_CTX * libctx, const char * propq, int * ok);
	APICALL int (*OSSL_HTTP_REQ_CTX_set_request_line)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, int method_POST, const char * server, const char * port, const char * path);
	APICALL int (*OSSL_HTTP_REQ_CTX_set1_req)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, const char * content_type, const ASN1_ITEM * it, const ASN1_VALUE * req);
	APICALL EVP_MAC_CTX * (*EVP_MAC_CTX_new)(struct AmiSSLIFace *Self, EVP_MAC * mac);
	APICALL void (*EVP_MAC_CTX_free)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx);
	APICALL EVP_MAC_CTX * (*EVP_MAC_CTX_dup)(struct AmiSSLIFace *Self, const EVP_MAC_CTX * src);
	APICALL EVP_MAC * (*EVP_MAC_CTX_get0_mac)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx);
	APICALL size_t (*EVP_MAC_CTX_get_mac_size)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx);
	APICALL unsigned char * (*EVP_Q_mac)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * name, const char * propq, const char * subalg, const OSSL_PARAM * params, const void * key, size_t keylen, const unsigned char * data, size_t datalen, unsigned char * out, size_t outsize, size_t * outlen);
	APICALL int (*EVP_MAC_init)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx, const unsigned char * key, size_t keylen, const OSSL_PARAM * params);
	APICALL int (*EVP_MAC_update)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx, const unsigned char * data, size_t datalen);
	APICALL int (*EVP_MAC_final)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx, unsigned char * out, size_t * outl, size_t outsize);
	APICALL int (*EVP_MAC_finalXOF)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx, unsigned char * out, size_t outsize);
	APICALL const char * (*OSSL_EC_curve_nid2name)(struct AmiSSLIFace *Self, int nid);
	APICALL int (*EVP_PKEY_digestsign_supports_digest)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, OSSL_LIB_CTX * libctx, const char * name, const char * propq);
	DEPRECATED APICALL int (*SRP_VBASE_add0_user)(struct AmiSSLIFace *Self, SRP_VBASE * vb, SRP_user_pwd * user_pwd);
	DEPRECATED APICALL SRP_user_pwd * (*SRP_user_pwd_new)(struct AmiSSLIFace *Self);
	DEPRECATED APICALL void (*SRP_user_pwd_set_gN)(struct AmiSSLIFace *Self, SRP_user_pwd * user_pwd, const BIGNUM * g, const BIGNUM * N);
	DEPRECATED APICALL int (*SRP_user_pwd_set1_ids)(struct AmiSSLIFace *Self, SRP_user_pwd * user_pwd, const char * id, const char * info);
	DEPRECATED APICALL int (*SRP_user_pwd_set0_sv)(struct AmiSSLIFace *Self, SRP_user_pwd * user_pwd, BIGNUM * s, BIGNUM * v);
	APICALL unsigned int (*OPENSSL_version_major)(struct AmiSSLIFace *Self);
	APICALL unsigned int (*OPENSSL_version_minor)(struct AmiSSLIFace *Self);
	APICALL unsigned int (*OPENSSL_version_patch)(struct AmiSSLIFace *Self);
	APICALL const char * (*OPENSSL_version_pre_release)(struct AmiSSLIFace *Self);
	APICALL const char * (*OPENSSL_version_build_metadata)(struct AmiSSLIFace *Self);
	APICALL int (*ASYNC_WAIT_CTX_get_callback)(struct AmiSSLIFace *Self, ASYNC_WAIT_CTX * ctx, ASYNC_callback_fn * callback, void ** callback_arg);
	APICALL int (*ASYNC_WAIT_CTX_set_callback)(struct AmiSSLIFace *Self, ASYNC_WAIT_CTX * ctx, ASYNC_callback_fn callback, void * callback_arg);
	APICALL int (*ASYNC_WAIT_CTX_set_status)(struct AmiSSLIFace *Self, ASYNC_WAIT_CTX * ctx, int status);
	APICALL int (*ASYNC_WAIT_CTX_get_status)(struct AmiSSLIFace *Self, ASYNC_WAIT_CTX * ctx);
	APICALL void (*EVP_KDF_CTX_free)(struct AmiSSLIFace *Self, EVP_KDF_CTX * ctx);
	APICALL void (*EVP_KDF_CTX_reset)(struct AmiSSLIFace *Self, EVP_KDF_CTX * ctx);
	APICALL size_t (*EVP_KDF_CTX_get_kdf_size)(struct AmiSSLIFace *Self, EVP_KDF_CTX * ctx);
	APICALL int (*EVP_KDF_derive)(struct AmiSSLIFace *Self, EVP_KDF_CTX * ctx, unsigned char * key, size_t keylen, const OSSL_PARAM * params);
	APICALL const char * (*EVP_KDF_get0_name)(struct AmiSSLIFace *Self, const EVP_KDF * kdf);
	APICALL const BIGNUM * (*EC_GROUP_get0_field)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	APICALL int (*CRYPTO_alloc_ex_data)(struct AmiSSLIFace *Self, int class_index, void * obj, CRYPTO_EX_DATA * ad, int idx);
	APICALL OSSL_LIB_CTX * (*OSSL_LIB_CTX_new)(struct AmiSSLIFace *Self);
	APICALL void (*OSSL_LIB_CTX_free)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * a);
	APICALL void (*OPENSSL_LH_flush)(struct AmiSSLIFace *Self, OPENSSL_LHASH * lh);
	APICALL BIGNUM * (*BN_native2bn)(struct AmiSSLIFace *Self, const unsigned char * s, int len, BIGNUM * ret);
	APICALL int (*BN_bn2nativepad)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to, int tolen);
	APICALL int (*OSSL_trace_get_category_num)(struct AmiSSLIFace *Self, const char * name);
	APICALL const char * (*OSSL_trace_get_category_name)(struct AmiSSLIFace *Self, int num);
	APICALL int (*OSSL_trace_set_channel)(struct AmiSSLIFace *Self, int category, BIO* channel);
	APICALL int (*OSSL_trace_set_prefix)(struct AmiSSLIFace *Self, int category, const char * prefix);
	APICALL int (*OSSL_trace_set_suffix)(struct AmiSSLIFace *Self, int category, const char * suffix);
	APICALL int (*OSSL_trace_set_callback)(struct AmiSSLIFace *Self, int category, OSSL_trace_cb callback, void * data);
	APTR Reserved9_UNIMPLEMENTED;
	APTR Reserved10_UNIMPLEMENTED;
	APTR Reserved11_UNIMPLEMENTED;
	APTR Reserved12_UNIMPLEMENTED;
	APTR Reserved13_UNIMPLEMENTED;
	APTR Reserved14_UNIMPLEMENTED;
	APTR Reserved15_UNIMPLEMENTED;
	APTR Reserved16_UNIMPLEMENTED;
	APICALL int (*OSSL_trace_enabled)(struct AmiSSLIFace *Self, int category);
	APICALL BIO * (*OSSL_trace_begin)(struct AmiSSLIFace *Self, int category);
	APICALL void (*OSSL_trace_end)(struct AmiSSLIFace *Self, int category, BIO * channel);
	APICALL OSSL_PROVIDER * (*OSSL_PROVIDER_load)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * a, const char * name);
	APICALL OSSL_PROVIDER * (*OSSL_PROVIDER_try_load)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * a, const char * name, int retain_fallbacks);
	APICALL int (*OSSL_PROVIDER_unload)(struct AmiSSLIFace *Self, OSSL_PROVIDER * prov);
	APICALL int (*OSSL_PROVIDER_add_builtin)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * a, const char * name, OSSL_provider_init_fn * init_fn);
	APICALL const OSSL_PARAM * (*OSSL_PROVIDER_gettable_params)(struct AmiSSLIFace *Self, const OSSL_PROVIDER * prov);
	APICALL int (*OSSL_PROVIDER_get_params)(struct AmiSSLIFace *Self, const OSSL_PROVIDER * prov, OSSL_PARAM * params);
	APICALL OSSL_CRMF_ENCRYPTEDVALUE * (*d2i_OSSL_CRMF_ENCRYPTEDVALUE)(struct AmiSSLIFace *Self, OSSL_CRMF_ENCRYPTEDVALUE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CRMF_ENCRYPTEDVALUE)(struct AmiSSLIFace *Self, const OSSL_CRMF_ENCRYPTEDVALUE * a, unsigned char ** out);
	APICALL void (*OSSL_CRMF_ENCRYPTEDVALUE_free)(struct AmiSSLIFace *Self, OSSL_CRMF_ENCRYPTEDVALUE * a);
	APICALL OSSL_CRMF_ENCRYPTEDVALUE * (*OSSL_CRMF_ENCRYPTEDVALUE_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CRMF_ENCRYPTEDVALUE_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CRMF_MSG * (*d2i_OSSL_CRMF_MSG)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CRMF_MSG)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * a, unsigned char ** out);
	APICALL OSSL_CRMF_MSG * (*OSSL_CRMF_MSG_dup)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * a);
	APICALL void (*OSSL_CRMF_MSG_free)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * a);
	APICALL OSSL_CRMF_MSG * (*OSSL_CRMF_MSG_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CRMF_MSG_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CRMF_PBMPARAMETER * (*d2i_OSSL_CRMF_PBMPARAMETER)(struct AmiSSLIFace *Self, OSSL_CRMF_PBMPARAMETER ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CRMF_PBMPARAMETER)(struct AmiSSLIFace *Self, const OSSL_CRMF_PBMPARAMETER * a, unsigned char ** out);
	APICALL void (*OSSL_CRMF_PBMPARAMETER_free)(struct AmiSSLIFace *Self, OSSL_CRMF_PBMPARAMETER * a);
	APICALL OSSL_CRMF_PBMPARAMETER * (*OSSL_CRMF_PBMPARAMETER_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CRMF_PBMPARAMETER_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CRMF_CERTID * (*d2i_OSSL_CRMF_CERTID)(struct AmiSSLIFace *Self, OSSL_CRMF_CERTID ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CRMF_CERTID)(struct AmiSSLIFace *Self, const OSSL_CRMF_CERTID * a, unsigned char ** out);
	APICALL OSSL_CRMF_CERTID * (*OSSL_CRMF_CERTID_dup)(struct AmiSSLIFace *Self, const OSSL_CRMF_CERTID * a);
	APICALL void (*OSSL_CRMF_CERTID_free)(struct AmiSSLIFace *Self, OSSL_CRMF_CERTID * a);
	APICALL OSSL_CRMF_CERTID * (*OSSL_CRMF_CERTID_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CRMF_CERTID_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CRMF_PKIPUBLICATIONINFO * (*d2i_OSSL_CRMF_PKIPUBLICATIONINFO)(struct AmiSSLIFace *Self, OSSL_CRMF_PKIPUBLICATIONINFO ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CRMF_PKIPUBLICATIONINFO)(struct AmiSSLIFace *Self, const OSSL_CRMF_PKIPUBLICATIONINFO * a, unsigned char ** out);
	APICALL void (*OSSL_CRMF_PKIPUBLICATIONINFO_free)(struct AmiSSLIFace *Self, OSSL_CRMF_PKIPUBLICATIONINFO * a);
	APICALL OSSL_CRMF_PKIPUBLICATIONINFO * (*OSSL_CRMF_PKIPUBLICATIONINFO_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CRMF_PKIPUBLICATIONINFO_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CRMF_SINGLEPUBINFO * (*d2i_OSSL_CRMF_SINGLEPUBINFO)(struct AmiSSLIFace *Self, OSSL_CRMF_SINGLEPUBINFO ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CRMF_SINGLEPUBINFO)(struct AmiSSLIFace *Self, const OSSL_CRMF_SINGLEPUBINFO * a, unsigned char ** out);
	APICALL void (*OSSL_CRMF_SINGLEPUBINFO_free)(struct AmiSSLIFace *Self, OSSL_CRMF_SINGLEPUBINFO * a);
	APICALL OSSL_CRMF_SINGLEPUBINFO * (*OSSL_CRMF_SINGLEPUBINFO_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CRMF_SINGLEPUBINFO_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CRMF_CERTTEMPLATE * (*d2i_OSSL_CRMF_CERTTEMPLATE)(struct AmiSSLIFace *Self, OSSL_CRMF_CERTTEMPLATE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CRMF_CERTTEMPLATE)(struct AmiSSLIFace *Self, const OSSL_CRMF_CERTTEMPLATE * a, unsigned char ** out);
	APICALL void (*OSSL_CRMF_CERTTEMPLATE_free)(struct AmiSSLIFace *Self, OSSL_CRMF_CERTTEMPLATE * a);
	APICALL OSSL_CRMF_CERTTEMPLATE * (*OSSL_CRMF_CERTTEMPLATE_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CRMF_CERTTEMPLATE_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CRMF_MSGS * (*d2i_OSSL_CRMF_MSGS)(struct AmiSSLIFace *Self, OSSL_CRMF_MSGS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CRMF_MSGS)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSGS * a, unsigned char ** out);
	APICALL void (*OSSL_CRMF_MSGS_free)(struct AmiSSLIFace *Self, OSSL_CRMF_MSGS * a);
	APICALL OSSL_CRMF_MSGS * (*OSSL_CRMF_MSGS_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CRMF_MSGS_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CRMF_PBMPARAMETER * (*OSSL_CRMF_pbmp_new)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, size_t slen, int owfnid, size_t itercnt, int macnid);
	APICALL int (*OSSL_CRMF_pbm_new)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq, const OSSL_CRMF_PBMPARAMETER * pbmp, const unsigned char * msg, size_t msglen, const unsigned char * sec, size_t seclen, unsigned char ** mac, size_t * maclen);
	APICALL ASN1_UTF8STRING * (*OSSL_CRMF_MSG_get0_regCtrl_regToken)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * msg);
	APICALL int (*OSSL_CRMF_MSG_set1_regCtrl_regToken)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * msg, const ASN1_UTF8STRING * tok);
	APICALL ASN1_UTF8STRING * (*OSSL_CRMF_MSG_get0_regCtrl_authenticator)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * msg);
	APICALL int (*OSSL_CRMF_MSG_set1_regCtrl_authenticator)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * msg, const ASN1_UTF8STRING * auth);
	APICALL int (*OSSL_CRMF_MSG_PKIPublicationInfo_push0_SinglePubInfo)(struct AmiSSLIFace *Self, OSSL_CRMF_PKIPUBLICATIONINFO * pi, OSSL_CRMF_SINGLEPUBINFO * spi);
	APICALL int (*OSSL_CRMF_MSG_set0_SinglePubInfo)(struct AmiSSLIFace *Self, OSSL_CRMF_SINGLEPUBINFO * spi, int method, GENERAL_NAME * nm);
	APICALL OSSL_CRMF_PKIPUBLICATIONINFO * (*OSSL_CRMF_MSG_get0_regCtrl_pkiPublicationInfo)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * msg);
	APICALL int (*OSSL_CRMF_MSG_set_PKIPublicationInfo_action)(struct AmiSSLIFace *Self, OSSL_CRMF_PKIPUBLICATIONINFO * pi, int action);
	APICALL int (*OSSL_CRMF_MSG_set1_regCtrl_pkiPublicationInfo)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * msg, const OSSL_CRMF_PKIPUBLICATIONINFO * pi);
	APICALL X509_PUBKEY * (*OSSL_CRMF_MSG_get0_regCtrl_protocolEncrKey)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * msg);
	APICALL int (*OSSL_CRMF_MSG_set1_regCtrl_protocolEncrKey)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * msg, const X509_PUBKEY * pubkey);
	APICALL OSSL_CRMF_CERTID * (*OSSL_CRMF_MSG_get0_regCtrl_oldCertID)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * msg);
	APICALL int (*OSSL_CRMF_MSG_set1_regCtrl_oldCertID)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * msg, const OSSL_CRMF_CERTID * cid);
	APICALL OSSL_CRMF_CERTID * (*OSSL_CRMF_CERTID_gen)(struct AmiSSLIFace *Self, const X509_NAME * issuer, const ASN1_INTEGER * serial);
	APICALL ASN1_UTF8STRING * (*OSSL_CRMF_MSG_get0_regInfo_utf8Pairs)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * msg);
	APICALL int (*OSSL_CRMF_MSG_set1_regInfo_utf8Pairs)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * msg, const ASN1_UTF8STRING * utf8pairs);
	APICALL OSSL_CRMF_CERTREQUEST * (*OSSL_CRMF_MSG_get0_regInfo_certReq)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * msg);
	APICALL int (*OSSL_CRMF_MSG_set1_regInfo_certReq)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * msg, const OSSL_CRMF_CERTREQUEST * cr);
	APICALL int (*OSSL_CRMF_MSG_set0_validity)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * crm, ASN1_TIME * notBefore, ASN1_TIME * notAfter);
	APICALL int (*OSSL_CRMF_MSG_set_certReqId)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * crm, int rid);
	APICALL int (*OSSL_CRMF_MSG_get_certReqId)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * crm);
	APICALL int (*OSSL_CRMF_MSG_set0_extensions)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * crm, X509_EXTENSIONS * exts);
	APICALL int (*OSSL_CRMF_MSG_push0_extension)(struct AmiSSLIFace *Self, OSSL_CRMF_MSG * crm, X509_EXTENSION * ext);
	APICALL int (*OSSL_CRMF_MSG_create_popo)(struct AmiSSLIFace *Self, int meth, OSSL_CRMF_MSG * crm, EVP_PKEY * pkey, const EVP_MD * digest, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*OSSL_CRMF_MSGS_verify_popo)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSGS * reqs, int rid, int acceptRAVerified, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL OSSL_CRMF_CERTTEMPLATE * (*OSSL_CRMF_MSG_get0_tmpl)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * crm);
	APICALL const ASN1_INTEGER * (*OSSL_CRMF_CERTTEMPLATE_get0_serialNumber)(struct AmiSSLIFace *Self, const OSSL_CRMF_CERTTEMPLATE * tmpl);
	APICALL const X509_NAME * (*OSSL_CRMF_CERTTEMPLATE_get0_subject)(struct AmiSSLIFace *Self, const OSSL_CRMF_CERTTEMPLATE * tmpl);
	APICALL const X509_NAME * (*OSSL_CRMF_CERTTEMPLATE_get0_issuer)(struct AmiSSLIFace *Self, const OSSL_CRMF_CERTTEMPLATE * tmpl);
	APICALL X509_EXTENSIONS * (*OSSL_CRMF_CERTTEMPLATE_get0_extensions)(struct AmiSSLIFace *Self, const OSSL_CRMF_CERTTEMPLATE * tmpl);
	APICALL int (*OSSL_CRMF_CERTTEMPLATE_fill)(struct AmiSSLIFace *Self, OSSL_CRMF_CERTTEMPLATE * tmpl, EVP_PKEY * pubkey, const X509_NAME * subject, const X509_NAME * issuer, const ASN1_INTEGER * serial);
	APICALL X509 * (*OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert)(struct AmiSSLIFace *Self, const OSSL_CRMF_ENCRYPTEDVALUE * ecert, OSSL_LIB_CTX * libctx, const char * propq, EVP_PKEY * pkey);
	APICALL OSSL_PARAM * (*OSSL_PARAM_locate)(struct AmiSSLIFace *Self, OSSL_PARAM * p, const char * key);
	APICALL void (*OSSL_PARAM_construct_int_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, int * buf);
	APICALL void (*OSSL_PARAM_construct_uint_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, unsigned int * buf);
	APICALL void (*OSSL_PARAM_construct_long_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, long int * buf);
	APICALL void (*OSSL_PARAM_construct_ulong_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, unsigned long int * buf);
	APICALL void (*OSSL_PARAM_construct_int32_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, int32_t * buf);
	APICALL void (*OSSL_PARAM_construct_uint32_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, uint32_t * buf);
	APICALL void (*OSSL_PARAM_construct_int64_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, int64_t * buf);
	APICALL void (*OSSL_PARAM_construct_uint64_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, uint64_t * buf);
	APICALL void (*OSSL_PARAM_construct_size_t_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, size_t * buf);
	APICALL void (*OSSL_PARAM_construct_BN_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, unsigned char * buf, size_t bsize);
	APICALL void (*OSSL_PARAM_construct_double_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, double * buf);
	APICALL void (*OSSL_PARAM_construct_utf8_string_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, char * buf, size_t bsize);
	APICALL void (*OSSL_PARAM_construct_utf8_ptr_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, char ** buf, size_t bsize);
	APICALL void (*OSSL_PARAM_construct_octet_string_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, void * buf, size_t bsize);
	APICALL void (*OSSL_PARAM_construct_octet_ptr_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, void ** buf, size_t bsize);
	APICALL int (*OSSL_PARAM_get_int)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, int * val);
	APICALL int (*OSSL_PARAM_get_uint)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, unsigned int * val);
	APICALL int (*OSSL_PARAM_get_long)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, long int * val);
	APICALL int (*OSSL_PARAM_get_ulong)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, unsigned long int * val);
	APICALL int (*OSSL_PARAM_get_int32)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, int32_t * val);
	APICALL int (*OSSL_PARAM_get_uint32)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, uint32_t * val);
	APICALL int (*OSSL_PARAM_get_int64)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, int64_t * val);
	APICALL int (*OSSL_PARAM_get_uint64)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, uint64_t * val);
	APICALL int (*OSSL_PARAM_get_size_t)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, size_t * val);
	APICALL int (*OSSL_PARAM_set_int)(struct AmiSSLIFace *Self, OSSL_PARAM * p, int val);
	APICALL int (*OSSL_PARAM_set_uint)(struct AmiSSLIFace *Self, OSSL_PARAM * p, unsigned int val);
	APICALL int (*OSSL_PARAM_set_long)(struct AmiSSLIFace *Self, OSSL_PARAM * p, long int val);
	APICALL int (*OSSL_PARAM_set_ulong)(struct AmiSSLIFace *Self, OSSL_PARAM * p, unsigned long int val);
	APICALL int (*OSSL_PARAM_set_int32)(struct AmiSSLIFace *Self, OSSL_PARAM * p, int32_t val);
	APICALL int (*OSSL_PARAM_set_uint32)(struct AmiSSLIFace *Self, OSSL_PARAM * p, uint32_t val);
	APICALL int (*OSSL_PARAM_set_int64)(struct AmiSSLIFace *Self, OSSL_PARAM * p, int64_t val);
	APICALL int (*OSSL_PARAM_set_uint64)(struct AmiSSLIFace *Self, OSSL_PARAM * p, uint64_t val);
	APICALL int (*OSSL_PARAM_set_size_t)(struct AmiSSLIFace *Self, OSSL_PARAM * p, size_t val);
	APICALL int (*OSSL_PARAM_get_double)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, double * val);
	APICALL int (*OSSL_PARAM_set_double)(struct AmiSSLIFace *Self, OSSL_PARAM * p, double val);
	APICALL int (*OSSL_PARAM_get_BN)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, BIGNUM ** val);
	APICALL int (*OSSL_PARAM_set_BN)(struct AmiSSLIFace *Self, OSSL_PARAM * p, const BIGNUM * val);
	APICALL int (*OSSL_PARAM_get_utf8_string)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, char ** val, size_t max_len);
	APICALL int (*OSSL_PARAM_set_utf8_string)(struct AmiSSLIFace *Self, OSSL_PARAM * p, const char * val);
	APICALL int (*OSSL_PARAM_get_octet_string)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, void ** val, size_t max_len, size_t * used_len);
	APICALL int (*OSSL_PARAM_set_octet_string)(struct AmiSSLIFace *Self, OSSL_PARAM * p, const void * val, size_t len);
	APICALL int (*OSSL_PARAM_get_utf8_ptr)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, const char ** val);
	APICALL int (*OSSL_PARAM_set_utf8_ptr)(struct AmiSSLIFace *Self, OSSL_PARAM * p, const char * val);
	APICALL int (*OSSL_PARAM_get_octet_ptr)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, const void ** val, size_t * used_len);
	APICALL int (*OSSL_PARAM_set_octet_ptr)(struct AmiSSLIFace *Self, OSSL_PARAM * p, const void * val, size_t used_len);
	APICALL void (*X509_set0_distinguishing_id)(struct AmiSSLIFace *Self, X509 * x, ASN1_OCTET_STRING * d_id);
	APICALL ASN1_OCTET_STRING * (*X509_get0_distinguishing_id)(struct AmiSSLIFace *Self, X509 * x);
	APICALL int (*EVP_MD_up_ref)(struct AmiSSLIFace *Self, EVP_MD * md);
	APICALL EVP_MD * (*EVP_MD_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * algorithm, const char * properties);
	APICALL int (*EVP_set_default_properties)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL void (*OSSL_PARAM_construct_end_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result);
	APICALL int (*EC_GROUP_check_named_curve)(struct AmiSSLIFace *Self, const EC_GROUP * group, int nist_only, BN_CTX * ctx);
	APICALL int (*EVP_CIPHER_up_ref)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher);
	APICALL EVP_CIPHER * (*EVP_CIPHER_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * algorithm, const char * properties);
	APICALL int (*EVP_CIPHER_get_mode)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL const char * (*OPENSSL_info)(struct AmiSSLIFace *Self, int type);
	APICALL EVP_KDF_CTX * (*EVP_KDF_CTX_new)(struct AmiSSLIFace *Self, EVP_KDF * kdf);
	APICALL const EVP_KDF * (*EVP_KDF_CTX_kdf)(struct AmiSSLIFace *Self, EVP_KDF_CTX * ctx);
	APICALL int (*i2d_KeyParams)(struct AmiSSLIFace *Self, const EVP_PKEY * a, unsigned char ** pp);
	APICALL EVP_PKEY * (*d2i_KeyParams)(struct AmiSSLIFace *Self, int type, EVP_PKEY ** a, const unsigned char ** pp, long length);
	APICALL int (*i2d_KeyParams_bio)(struct AmiSSLIFace *Self, BIO * bp, const EVP_PKEY * pkey);
	APICALL EVP_PKEY * (*d2i_KeyParams_bio)(struct AmiSSLIFace *Self, int type, EVP_PKEY ** a, BIO * in);
	APICALL const ASN1_ITEM * (*OSSL_CMP_PKISTATUS_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CMP_PKIHEADER * (*d2i_OSSL_CMP_PKIHEADER)(struct AmiSSLIFace *Self, OSSL_CMP_PKIHEADER ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CMP_PKIHEADER)(struct AmiSSLIFace *Self, const OSSL_CMP_PKIHEADER * a, unsigned char ** out);
	APICALL void (*OSSL_CMP_PKIHEADER_free)(struct AmiSSLIFace *Self, OSSL_CMP_PKIHEADER * a);
	APICALL OSSL_CMP_PKIHEADER * (*OSSL_CMP_PKIHEADER_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CMP_PKIHEADER_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CMP_MSG * (*d2i_OSSL_CMP_MSG)(struct AmiSSLIFace *Self, OSSL_CMP_MSG ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CMP_MSG)(struct AmiSSLIFace *Self, const OSSL_CMP_MSG * a, unsigned char ** out);
	APICALL const ASN1_ITEM * (*OSSL_CMP_MSG_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CMP_ITAV * (*OSSL_CMP_ITAV_create)(struct AmiSSLIFace *Self, ASN1_OBJECT * type, ASN1_TYPE * value);
	APICALL void (*OSSL_CMP_ITAV_set0)(struct AmiSSLIFace *Self, OSSL_CMP_ITAV * itav, ASN1_OBJECT * type, ASN1_TYPE * value);
	APICALL ASN1_OBJECT * (*OSSL_CMP_ITAV_get0_type)(struct AmiSSLIFace *Self, const OSSL_CMP_ITAV * itav);
	APICALL ASN1_TYPE * (*OSSL_CMP_ITAV_get0_value)(struct AmiSSLIFace *Self, const OSSL_CMP_ITAV * itav);
	APICALL int (*OSSL_CMP_ITAV_push0_stack_item)(struct AmiSSLIFace *Self, STACK_OF(OSSL_CMP_ITAV) ** itav_sk_p, OSSL_CMP_ITAV * itav);
	APICALL void (*OSSL_CMP_ITAV_free)(struct AmiSSLIFace *Self, OSSL_CMP_ITAV * itav);
	APICALL void (*OSSL_CMP_MSG_free)(struct AmiSSLIFace *Self, OSSL_CMP_MSG * msg);
	APICALL int (*EVP_MD_CTX_set_params)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const OSSL_PARAM * params);
	APICALL int (*EVP_MD_CTX_get_params)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, OSSL_PARAM * params);
	APICALL BN_CTX * (*BN_CTX_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx);
	APICALL BN_CTX * (*BN_CTX_secure_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx);
	APICALL void (*OPENSSL_thread_stop_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx);
	APICALL const OSSL_PARAM * (*OSSL_PARAM_locate_const)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, const char * key);
	APICALL void (*X509_REQ_set0_distinguishing_id)(struct AmiSSLIFace *Self, X509_REQ * x, ASN1_OCTET_STRING * d_id);
	APICALL ASN1_OCTET_STRING * (*X509_REQ_get0_distinguishing_id)(struct AmiSSLIFace *Self, X509_REQ * x);
	APICALL int (*BN_rand_ex)(struct AmiSSLIFace *Self, BIGNUM * rnd, int bits, int top, int bottom, unsigned int strength, BN_CTX * ctx);
	APICALL int (*BN_priv_rand_ex)(struct AmiSSLIFace *Self, BIGNUM * rnd, int bits, int top, int bottom, unsigned int strength, BN_CTX * ctx);
	APICALL int (*BN_rand_range_ex)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * range, unsigned int strength, BN_CTX * ctx);
	APICALL int (*BN_priv_rand_range_ex)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * range, unsigned int strength, BN_CTX * ctx);
	APICALL int (*BN_generate_prime_ex2)(struct AmiSSLIFace *Self, BIGNUM * ret, int bits, int safe, const BIGNUM * add, const BIGNUM * rem, BN_GENCB * cb, BN_CTX * ctx);
	APICALL void (*EVP_KEYEXCH_free)(struct AmiSSLIFace *Self, EVP_KEYEXCH * exchange);
	APICALL int (*EVP_KEYEXCH_up_ref)(struct AmiSSLIFace *Self, EVP_KEYEXCH * exchange);
	APICALL EVP_KEYEXCH * (*EVP_KEYEXCH_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * algorithm, const char * properties);
	APICALL int (*EVP_PKEY_CTX_set_dh_pad)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int pad);
	APICALL int (*EVP_PKEY_CTX_set_params)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const OSSL_PARAM * params);
	APICALL EVP_KEYMGMT * (*EVP_KEYMGMT_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * algorithm, const char * properties);
	APICALL int (*EVP_KEYMGMT_up_ref)(struct AmiSSLIFace *Self, EVP_KEYMGMT * keymgmt);
	APICALL void (*EVP_KEYMGMT_free)(struct AmiSSLIFace *Self, EVP_KEYMGMT * keymgmt);
	APICALL const OSSL_PROVIDER * (*EVP_KEYMGMT_get0_provider)(struct AmiSSLIFace *Self, const EVP_KEYMGMT * keymgmt);
	APICALL X509_PUBKEY * (*X509_PUBKEY_dup)(struct AmiSSLIFace *Self, const X509_PUBKEY * a);
	APICALL const char * (*EVP_MD_get0_name)(struct AmiSSLIFace *Self, const EVP_MD * md);
	APICALL const char * (*EVP_CIPHER_get0_name)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL const OSSL_PROVIDER * (*EVP_MD_get0_provider)(struct AmiSSLIFace *Self, const EVP_MD * md);
	APICALL const OSSL_PROVIDER * (*EVP_CIPHER_get0_provider)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL const char * (*OSSL_PROVIDER_get0_name)(struct AmiSSLIFace *Self, const OSSL_PROVIDER * prov);
	APICALL void (*EVP_CIPHER_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(EVP_CIPHER *cipher, void *arg), void * arg);
	APICALL void (*EVP_MD_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(EVP_MD *md, void *arg), void * arg);
	APICALL OSSL_PROVIDER * (*EVP_KEYEXCH_get0_provider)(struct AmiSSLIFace *Self, const EVP_KEYEXCH * exchange);
	APICALL int (*OSSL_PROVIDER_available)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * a, const char * name);
	APICALL void (*ERR_new)(struct AmiSSLIFace *Self);
	APICALL void (*ERR_set_debug)(struct AmiSSLIFace *Self, const char * file, int line, const char * func);
	APICALL void (*ERR_vset_error)(struct AmiSSLIFace *Self, int lib, int reason, const char * fmt, long * args);
	APICALL void (*ERR_set_error)(struct AmiSSLIFace *Self, int lib, int reason, const char * fmt, ...);
	APICALL int (*X509_self_signed)(struct AmiSSLIFace *Self, X509 * cert, int verify_signature);
	APICALL int (*OPENSSL_hexstr2buf_ex)(struct AmiSSLIFace *Self, unsigned char * buf, size_t buf_n, size_t * buflen, const char * str, const char sep);
	APICALL int (*OPENSSL_buf2hexstr_ex)(struct AmiSSLIFace *Self, char * str, size_t str_n, size_t * strlength, const unsigned char * buf, size_t buflen, const char sep);
	APICALL int (*OSSL_PARAM_allocate_from_text)(struct AmiSSLIFace *Self, OSSL_PARAM * to, const OSSL_PARAM * paramdefs, const char * key, const char * value, size_t value_n, int * found);
	APICALL const OSSL_PARAM * (*EVP_MD_gettable_params)(struct AmiSSLIFace *Self, const EVP_MD * digest);
	APICALL const OSSL_PARAM * (*EVP_MD_CTX_settable_params)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx);
	APICALL const OSSL_PARAM * (*EVP_MD_CTX_gettable_params)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx);
	APICALL int (*EVP_CIPHER_get_params)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher, OSSL_PARAM * params);
	APICALL int (*EVP_CIPHER_CTX_set_params)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const OSSL_PARAM * params);
	APICALL int (*EVP_CIPHER_CTX_get_params)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, OSSL_PARAM * params);
	APICALL const OSSL_PARAM * (*EVP_CIPHER_gettable_params)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL const OSSL_PARAM * (*EVP_CIPHER_settable_ctx_params)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL const OSSL_PARAM * (*EVP_CIPHER_gettable_ctx_params)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL int (*EVP_MD_get_params)(struct AmiSSLIFace *Self, const EVP_MD * digest, OSSL_PARAM * params);
	APICALL EVP_MAC * (*EVP_MAC_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * algorithm, const char * properties);
	APICALL const OSSL_PARAM * (*EVP_MAC_settable_ctx_params)(struct AmiSSLIFace *Self, const EVP_MAC * mac);
	APICALL int (*EVP_MAC_CTX_set_params)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx, const OSSL_PARAM * params);
	APICALL int (*EVP_MAC_CTX_get_params)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx, OSSL_PARAM * params);
	APICALL const OSSL_PARAM * (*EVP_MAC_gettable_ctx_params)(struct AmiSSLIFace *Self, const EVP_MAC * mac);
	APICALL void (*EVP_MAC_free)(struct AmiSSLIFace *Self, EVP_MAC * mac);
	APICALL int (*EVP_MAC_up_ref)(struct AmiSSLIFace *Self, EVP_MAC * mac);
	APICALL int (*EVP_MAC_get_params)(struct AmiSSLIFace *Self, EVP_MAC * mac, OSSL_PARAM * params);
	APICALL const OSSL_PARAM * (*EVP_MAC_gettable_params)(struct AmiSSLIFace *Self, const EVP_MAC * mac);
	APICALL const OSSL_PROVIDER * (*EVP_MAC_get0_provider)(struct AmiSSLIFace *Self, const EVP_MAC * mac);
	APICALL void (*EVP_MAC_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(EVP_MAC *mac, void *arg), void * arg);
	APICALL const char * (*EVP_MAC_get0_name)(struct AmiSSLIFace *Self, const EVP_MAC * mac);
	APICALL void (*EVP_MD_free)(struct AmiSSLIFace *Self, EVP_MD * md);
	APICALL void (*EVP_CIPHER_free)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher);
	APICALL int (*EVP_KDF_up_ref)(struct AmiSSLIFace *Self, EVP_KDF * kdf);
	APICALL void (*EVP_KDF_free)(struct AmiSSLIFace *Self, EVP_KDF * kdf);
	APICALL EVP_KDF * (*EVP_KDF_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * algorithm, const char * properties);
	APICALL EVP_KDF_CTX * (*EVP_KDF_CTX_dup)(struct AmiSSLIFace *Self, const EVP_KDF_CTX * src);
	APICALL const OSSL_PROVIDER * (*EVP_KDF_get0_provider)(struct AmiSSLIFace *Self, const EVP_KDF * kdf);
	APICALL int (*EVP_KDF_get_params)(struct AmiSSLIFace *Self, EVP_KDF * kdf, OSSL_PARAM * params);
	APICALL int (*EVP_KDF_CTX_get_params)(struct AmiSSLIFace *Self, EVP_KDF_CTX * ctx, OSSL_PARAM * params);
	APICALL int (*EVP_KDF_CTX_set_params)(struct AmiSSLIFace *Self, EVP_KDF_CTX * ctx, const OSSL_PARAM * params);
	APICALL const OSSL_PARAM * (*EVP_KDF_gettable_params)(struct AmiSSLIFace *Self, const EVP_KDF * kdf);
	APICALL const OSSL_PARAM * (*EVP_KDF_gettable_ctx_params)(struct AmiSSLIFace *Self, const EVP_KDF * kdf);
	APICALL const OSSL_PARAM * (*EVP_KDF_settable_ctx_params)(struct AmiSSLIFace *Self, const EVP_KDF * kdf);
	APICALL void (*EVP_KDF_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(EVP_KDF *kdf, void *arg), void * arg);
	APICALL void (*EVP_SIGNATURE_free)(struct AmiSSLIFace *Self, EVP_SIGNATURE * signature);
	APICALL int (*EVP_SIGNATURE_up_ref)(struct AmiSSLIFace *Self, EVP_SIGNATURE * signature);
	APICALL OSSL_PROVIDER * (*EVP_SIGNATURE_get0_provider)(struct AmiSSLIFace *Self, const EVP_SIGNATURE * signature);
	APICALL EVP_SIGNATURE * (*EVP_SIGNATURE_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * algorithm, const char * properties);
	APICALL int (*EVP_PKEY_CTX_set_signature_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD * md);
	APICALL int (*EVP_PKEY_CTX_get_signature_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD ** md);
	APICALL int (*EVP_PKEY_CTX_get_params)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, OSSL_PARAM * params);
	APICALL const OSSL_PARAM * (*EVP_PKEY_CTX_gettable_params)(struct AmiSSLIFace *Self, const EVP_PKEY_CTX * ctx);
	APICALL const OSSL_PARAM * (*EVP_PKEY_CTX_settable_params)(struct AmiSSLIFace *Self, const EVP_PKEY_CTX * ctx);
	APICALL int (*EVP_CIPHER_CTX_get_tag_length)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	APICALL unsigned long (*ERR_get_error_all)(struct AmiSSLIFace *Self, const char ** file, int * line, const char ** func, const char ** data, int * flags);
	APICALL unsigned long (*ERR_peek_error_func)(struct AmiSSLIFace *Self, const char ** func);
	APICALL unsigned long (*ERR_peek_error_data)(struct AmiSSLIFace *Self, const char ** data, int * flags);
	APICALL unsigned long (*ERR_peek_error_all)(struct AmiSSLIFace *Self, const char ** file, int * line, const char ** func, const char ** data, int * flags);
	APICALL unsigned long (*ERR_peek_last_error_func)(struct AmiSSLIFace *Self, const char ** func);
	APICALL unsigned long (*ERR_peek_last_error_data)(struct AmiSSLIFace *Self, const char ** data, int * flags);
	APICALL unsigned long (*ERR_peek_last_error_all)(struct AmiSSLIFace *Self, const char ** file, int * line, const char ** func, const char ** data, int * flags);
	APICALL int (*EVP_CIPHER_is_a)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher, const char * name);
	APICALL int (*EVP_MAC_is_a)(struct AmiSSLIFace *Self, const EVP_MAC * mac, const char * name);
	APICALL const OSSL_PARAM * (*EVP_MD_settable_ctx_params)(struct AmiSSLIFace *Self, const EVP_MD * md);
	APICALL const OSSL_PARAM * (*EVP_MD_gettable_ctx_params)(struct AmiSSLIFace *Self, const EVP_MD * md);
	APICALL OSSL_CMP_CTX * (*OSSL_CMP_CTX_new)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL void (*OSSL_CMP_CTX_free)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_reinit)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_set_option)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, int opt, int val);
	APICALL int (*OSSL_CMP_CTX_get_option)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx, int opt);
	APICALL int (*OSSL_CMP_CTX_set_log_cb)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, OSSL_CMP_log_cb_t cb);
	APICALL void (*OSSL_CMP_CTX_print_errors)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_set1_serverPath)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const char * path);
	APICALL int (*OSSL_CMP_CTX_set1_server)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const char * address);
	APICALL int (*OSSL_CMP_CTX_set_serverPort)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, int port);
	APICALL int (*OSSL_CMP_CTX_set1_proxy)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const char * name);
	APICALL int (*OSSL_CMP_CTX_set1_no_proxy)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const char * names);
	APICALL int (*OSSL_CMP_CTX_set_http_cb)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, OSSL_HTTP_bio_cb_t cb);
	APICALL int (*OSSL_CMP_CTX_set_http_cb_arg)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, void * arg);
	APICALL void * (*OSSL_CMP_CTX_get_http_cb_arg)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_set_transfer_cb)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, OSSL_CMP_transfer_cb_t cb);
	APICALL int (*OSSL_CMP_CTX_set_transfer_cb_arg)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, void * arg);
	APICALL void * (*OSSL_CMP_CTX_get_transfer_cb_arg)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_set1_srvCert)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, X509 * cert);
	APICALL int (*OSSL_CMP_CTX_set1_expected_sender)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const X509_NAME * name);
	APICALL int (*OSSL_CMP_CTX_set0_trustedStore)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, X509_STORE * store);
	APICALL X509_STORE * (*OSSL_CMP_CTX_get0_trustedStore)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_set1_untrusted)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, STACK_OF(X509) * certs);
	APICALL STACK_OF(X509) * (*OSSL_CMP_CTX_get0_untrusted)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_set1_cert)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, X509 * cert);
	APICALL int (*OSSL_CMP_CTX_set1_pkey)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, EVP_PKEY * pkey);
	APICALL int (*OSSL_CMP_CTX_build_cert_chain)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, X509_STORE * own_trusted, STACK_OF(X509) * candidates);
	APICALL int (*OSSL_CMP_CTX_set1_referenceValue)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const unsigned char * ref, int len);
	APICALL int (*OSSL_CMP_CTX_set1_secretValue)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const unsigned char * sec, const int len);
	APICALL int (*OSSL_CMP_CTX_set1_recipient)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const X509_NAME * name);
	APICALL int (*OSSL_CMP_CTX_push0_geninfo_ITAV)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, OSSL_CMP_ITAV * itav);
	APICALL int (*OSSL_CMP_CTX_set1_extraCertsOut)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, STACK_OF(X509) * extraCertsOut);
	APICALL int (*OSSL_CMP_CTX_set0_newPkey)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, int priv, EVP_PKEY * pkey);
	APICALL EVP_PKEY * (*OSSL_CMP_CTX_get0_newPkey)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx, int priv);
	APICALL int (*OSSL_CMP_CTX_set1_issuer)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const X509_NAME * name);
	APICALL int (*OSSL_CMP_CTX_set1_subjectName)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const X509_NAME * name);
	APICALL int (*OSSL_CMP_CTX_push1_subjectAltName)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const GENERAL_NAME * name);
	APICALL int (*OSSL_CMP_CTX_set0_reqExtensions)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, X509_EXTENSIONS * exts);
	APICALL int (*OSSL_CMP_CTX_reqExtensions_have_SAN)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_push0_policy)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, POLICYINFO * pinfo);
	APICALL int (*OSSL_CMP_CTX_set1_oldCert)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, X509 * cert);
	APICALL int (*OSSL_CMP_CTX_set1_p10CSR)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const X509_REQ * csr);
	APICALL int (*OSSL_CMP_CTX_push0_genm_ITAV)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, OSSL_CMP_ITAV * itav);
	APICALL int (*OSSL_CMP_CTX_set_certConf_cb)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, OSSL_CMP_certConf_cb_t cb);
	APICALL int (*OSSL_CMP_CTX_set_certConf_cb_arg)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, void * arg);
	APICALL void * (*OSSL_CMP_CTX_get_certConf_cb_arg)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_get_status)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL OSSL_CMP_PKIFREETEXT * (*OSSL_CMP_CTX_get0_statusString)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_get_failInfoCode)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL X509 * (*OSSL_CMP_CTX_get0_newCert)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL STACK_OF(X509) * (*OSSL_CMP_CTX_get1_newChain)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL STACK_OF(X509) * (*OSSL_CMP_CTX_get1_caPubs)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL STACK_OF(X509) * (*OSSL_CMP_CTX_get1_extraCertsIn)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_set1_transactionID)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const ASN1_OCTET_STRING * id);
	APICALL int (*OSSL_CMP_CTX_set1_senderNonce)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const ASN1_OCTET_STRING * nonce);
	APICALL int (*OSSL_CMP_log_open)(struct AmiSSLIFace *Self);
	APICALL void (*OSSL_CMP_log_close)(struct AmiSSLIFace *Self);
	APICALL int (*OSSL_CMP_print_to_bio)(struct AmiSSLIFace *Self, BIO * bio, const char * component, const char * file, int line, OSSL_CMP_severity level, const char * msg);
	APICALL void (*OSSL_CMP_print_errors_cb)(struct AmiSSLIFace *Self, OSSL_CMP_log_cb_t log_fn);
	APICALL const X509_NAME * (*OSSL_CRMF_CERTID_get0_issuer)(struct AmiSSLIFace *Self, const OSSL_CRMF_CERTID * cid);
	APICALL const ASN1_INTEGER * (*OSSL_CRMF_CERTID_get0_serialNumber)(struct AmiSSLIFace *Self, const OSSL_CRMF_CERTID * cid);
	APICALL int (*EVP_DigestSignUpdate)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const void * data, size_t dsize);
	APICALL int (*EVP_DigestVerifyUpdate)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const void * data, size_t dsize);
	APICALL int (*BN_check_prime)(struct AmiSSLIFace *Self, const BIGNUM * p, BN_CTX * ctx, BN_GENCB * cb);
	APICALL int (*EVP_KEYMGMT_is_a)(struct AmiSSLIFace *Self, const EVP_KEYMGMT * keymgmt, const char * name);
	APICALL void (*EVP_KEYMGMT_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(EVP_KEYMGMT *keymgmt, void *arg), void * arg);
	APICALL int (*EVP_KEYEXCH_is_a)(struct AmiSSLIFace *Self, const EVP_KEYEXCH * keyexch, const char * name);
	APICALL void (*EVP_KEYEXCH_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(EVP_KEYEXCH *keyexch, void *data), void * data);
	APICALL int (*EVP_KDF_is_a)(struct AmiSSLIFace *Self, const EVP_KDF * kdf, const char * name);
	APICALL int (*EVP_MD_is_a)(struct AmiSSLIFace *Self, const EVP_MD * md, const char * name);
	APICALL int (*EVP_SIGNATURE_is_a)(struct AmiSSLIFace *Self, const EVP_SIGNATURE * signature, const char * name);
	APICALL void (*EVP_SIGNATURE_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(EVP_SIGNATURE *signature, void *data), void * data);
	APICALL int (*EVP_MD_names_do_all)(struct AmiSSLIFace *Self, const EVP_MD * md, void (*fn)(const char *name, void *data), void * data);
	APICALL int (*EVP_CIPHER_names_do_all)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher, void (*fn)(const char *name, void *data), void * data);
	APICALL int (*EVP_MAC_names_do_all)(struct AmiSSLIFace *Self, const EVP_MAC * mac, void (*fn)(const char *name, void *data), void * data);
	APICALL int (*EVP_KEYMGMT_names_do_all)(struct AmiSSLIFace *Self, const EVP_KEYMGMT * keymgmt, void (*fn)(const char *name, void *data), void * data);
	APICALL int (*EVP_KEYEXCH_names_do_all)(struct AmiSSLIFace *Self, const EVP_KEYEXCH * keyexch, void (*fn)(const char *name, void *data), void * data);
	APICALL int (*EVP_KDF_names_do_all)(struct AmiSSLIFace *Self, const EVP_KDF * kdf, void (*fn)(const char *name, void *data), void * data);
	APICALL int (*EVP_SIGNATURE_names_do_all)(struct AmiSSLIFace *Self, const EVP_SIGNATURE * signature, void (*fn)(const char *name, void *data), void * data);
	APICALL char * (*OSSL_CMP_CTX_snprint_PKIStatus)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx, char * buf, size_t bufsize);
	APICALL ASN1_OCTET_STRING * (*OSSL_CMP_HDR_get0_transactionID)(struct AmiSSLIFace *Self, const OSSL_CMP_PKIHEADER * hdr);
	APICALL ASN1_OCTET_STRING * (*OSSL_CMP_HDR_get0_recipNonce)(struct AmiSSLIFace *Self, const OSSL_CMP_PKIHEADER * hdr);
	APICALL X509_LOOKUP_METHOD * (*X509_LOOKUP_store)(struct AmiSSLIFace *Self);
	APICALL int (*X509_add_cert)(struct AmiSSLIFace *Self, STACK_OF(X509) * sk, X509 * cert, int flags);
	APICALL int (*X509_add_certs)(struct AmiSSLIFace *Self, STACK_OF(X509) * sk, STACK_OF(X509) * certs, int flags);
	APICALL int (*X509_STORE_load_file)(struct AmiSSLIFace *Self, X509_STORE * xs, const char * file);
	APICALL int (*X509_STORE_load_path)(struct AmiSSLIFace *Self, X509_STORE * xs, const char * path);
	APICALL int (*X509_STORE_load_store)(struct AmiSSLIFace *Self, X509_STORE * xs, const char * store);
	APICALL int (*EVP_PKEY_fromdata)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_PKEY ** ppkey, int selection, OSSL_PARAM * params);
	APICALL void (*EVP_ASYM_CIPHER_free)(struct AmiSSLIFace *Self, EVP_ASYM_CIPHER * cipher);
	APICALL int (*EVP_ASYM_CIPHER_up_ref)(struct AmiSSLIFace *Self, EVP_ASYM_CIPHER * cipher);
	APICALL OSSL_PROVIDER * (*EVP_ASYM_CIPHER_get0_provider)(struct AmiSSLIFace *Self, const EVP_ASYM_CIPHER * cipher);
	APICALL EVP_ASYM_CIPHER * (*EVP_ASYM_CIPHER_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * algorithm, const char * properties);
	APICALL int (*EVP_ASYM_CIPHER_is_a)(struct AmiSSLIFace *Self, const EVP_ASYM_CIPHER * cipher, const char * name);
	APICALL void (*EVP_ASYM_CIPHER_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(EVP_ASYM_CIPHER *cipher, void *arg), void * arg);
	APICALL int (*EVP_ASYM_CIPHER_names_do_all)(struct AmiSSLIFace *Self, const EVP_ASYM_CIPHER * cipher, void (*fn)(const char *name, void *data), void * data);
	APICALL int (*EVP_PKEY_CTX_set_rsa_padding)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int pad_mode);
	APICALL int (*EVP_PKEY_CTX_get_rsa_padding)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int * pad_mode);
	APICALL int (*EVP_PKEY_CTX_set_rsa_mgf1_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD * md);
	APICALL int (*EVP_PKEY_CTX_set_rsa_mgf1_md_name)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const char * mdname, const char * mdprops);
	APICALL int (*EVP_PKEY_CTX_get_rsa_mgf1_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD ** md);
	APICALL int (*EVP_PKEY_CTX_set_rsa_oaep_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD * md);
	APICALL int (*EVP_PKEY_CTX_set_rsa_oaep_md_name)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const char * mdname, const char * mdprops);
	APICALL int (*EVP_PKEY_CTX_get_rsa_oaep_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD ** md);
	APICALL int (*EVP_PKEY_CTX_set0_rsa_oaep_label)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, void * label, int llen);
	APICALL int (*EVP_PKEY_CTX_get0_rsa_oaep_label)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char ** label);
	APICALL int (*EVP_PKEY_CTX_get_rsa_mgf1_md_name)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, char * name, size_t namelen);
	APICALL int (*EVP_PKEY_CTX_get_rsa_oaep_md_name)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, char * name, size_t namelen);
	APICALL int (*OSSL_ENCODER_up_ref)(struct AmiSSLIFace *Self, OSSL_ENCODER * encoder);
	APICALL void (*OSSL_ENCODER_free)(struct AmiSSLIFace *Self, OSSL_ENCODER * encoder);
	APICALL OSSL_ENCODER * (*OSSL_ENCODER_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * name, const char * properties);
	APICALL int (*OSSL_ENCODER_is_a)(struct AmiSSLIFace *Self, const OSSL_ENCODER * encoder, const char * name);
	APICALL const OSSL_PROVIDER * (*OSSL_ENCODER_get0_provider)(struct AmiSSLIFace *Self, const OSSL_ENCODER * encoder);
	APICALL void (*OSSL_ENCODER_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(OSSL_ENCODER *encoder, void *arg), void * arg);
	APICALL int (*OSSL_ENCODER_names_do_all)(struct AmiSSLIFace *Self, const OSSL_ENCODER * encoder, void (*fn)(const char *name, void *data), void * data);
	APICALL const OSSL_PARAM * (*OSSL_ENCODER_settable_ctx_params)(struct AmiSSLIFace *Self, OSSL_ENCODER * encoder);
	APICALL OSSL_ENCODER_CTX * (*OSSL_ENCODER_CTX_new)(struct AmiSSLIFace *Self);
	APICALL int (*OSSL_ENCODER_CTX_set_params)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, const OSSL_PARAM * params);
	APICALL void (*OSSL_ENCODER_CTX_free)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx);
	APICALL const char * (*OSSL_ENCODER_get0_properties)(struct AmiSSLIFace *Self, const OSSL_ENCODER * encoder);
	APICALL int (*OSSL_ENCODER_to_bio)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, BIO * out);
	APICALL OSSL_ENCODER_CTX * (*OSSL_ENCODER_CTX_new_for_pkey)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, int selection, const char * output_type, const char * output_struct, const char * propquery);
	APICALL int (*OSSL_ENCODER_CTX_set_cipher)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, const char * cipher_name, const char * propquery);
	APICALL int (*OSSL_ENCODER_CTX_set_passphrase)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, const unsigned char * kstr, size_t klen);
	APICALL int (*OSSL_ENCODER_CTX_set_pem_password_cb)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, pem_password_cb * cb, void * cbarg);
	APICALL int (*OSSL_ENCODER_CTX_set_passphrase_ui)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, const UI_METHOD * ui_method, void * ui_data);
	APICALL X509_PUBKEY * (*PEM_read_bio_X509_PUBKEY)(struct AmiSSLIFace *Self, BIO * out, X509_PUBKEY ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_X509_PUBKEY)(struct AmiSSLIFace *Self, BIO * out, const X509_PUBKEY * x);
	APICALL X509_PUBKEY * (*d2i_X509_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_PUBKEY ** xpk);
	APICALL int (*i2d_X509_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, const X509_PUBKEY * xpk);
	APICALL int (*X509_cmp_timeframe)(struct AmiSSLIFace *Self, const X509_VERIFY_PARAM * vpm, const ASN1_TIME * start, const ASN1_TIME * end);
	APICALL OSSL_CMP_PKIHEADER * (*OSSL_CMP_MSG_get0_header)(struct AmiSSLIFace *Self, const OSSL_CMP_MSG * msg);
	APICALL int (*OSSL_CMP_MSG_get_bodytype)(struct AmiSSLIFace *Self, const OSSL_CMP_MSG * msg);
	APICALL int (*OSSL_CMP_MSG_update_transactionID)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, OSSL_CMP_MSG * msg);
	APICALL OSSL_CRMF_MSG * (*OSSL_CMP_CTX_setup_CRM)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, int for_KUR, int rid);
	APICALL const BIO_METHOD * (*BIO_f_prefix)(struct AmiSSLIFace *Self);
	APICALL EVP_PKEY_CTX * (*EVP_PKEY_CTX_new_from_name)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * name, const char * propquery);
	APICALL EVP_PKEY_CTX * (*EVP_PKEY_CTX_new_from_pkey)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, EVP_PKEY * pkey, const char * propquery);
	APICALL void (*OSSL_SELF_TEST_set_callback)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, OSSL_CALLBACK * cb, void * cbarg);
	APICALL void (*OSSL_SELF_TEST_get_callback)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, OSSL_CALLBACK ** cb, void ** cbarg);
	APICALL ASN1_TIME * (*ASN1_TIME_dup)(struct AmiSSLIFace *Self, const ASN1_TIME * a);
	APICALL ASN1_UTCTIME * (*ASN1_UTCTIME_dup)(struct AmiSSLIFace *Self, const ASN1_UTCTIME * a);
	APICALL ASN1_GENERALIZEDTIME * (*ASN1_GENERALIZEDTIME_dup)(struct AmiSSLIFace *Self, const ASN1_GENERALIZEDTIME * a);
	APICALL int (*RAND_priv_bytes_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, unsigned char * buf, size_t num, unsigned int strength);
	APICALL int (*RAND_bytes_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, unsigned char * buf, size_t num, unsigned int strength);
	APICALL int (*EVP_PKEY_get_default_digest_name)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, char * mdname, size_t mdname_sz);
	APICALL int (*CMS_decrypt_set1_pkey_and_peer)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, EVP_PKEY * pk, X509 * cert, X509 * peer);
	APICALL CMS_RecipientInfo * (*CMS_add1_recipient)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, X509 * recip, EVP_PKEY * originatorPrivKey, X509 * originator, unsigned int flags);
	APICALL int (*CMS_RecipientInfo_kari_set0_pkey_and_peer)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, EVP_PKEY * pk, X509 * peer);
	APICALL int (*PKCS8_pkey_add1_attr)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8, X509_ATTRIBUTE * attr);
	APICALL int (*PKCS8_pkey_add1_attr_by_OBJ)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8, const ASN1_OBJECT * obj, int type, const unsigned char * bytes, int len);
	APICALL int (*EVP_PKEY_private_check)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*EVP_PKEY_pairwise_check)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*ASN1_item_verify_ctx)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, const X509_ALGOR * alg, const ASN1_BIT_STRING * signature, const void * data, EVP_MD_CTX * ctx);
	APICALL int (*ASN1_item_sign_ex)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, X509_ALGOR * algor1, X509_ALGOR * algor2, ASN1_BIT_STRING * signature, const void * data, const ASN1_OCTET_STRING * id, EVP_PKEY * pkey, const EVP_MD * md, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*ASN1_item_verify_ex)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, const X509_ALGOR * alg, const ASN1_BIT_STRING * signature, const void * data, const ASN1_OCTET_STRING * id, EVP_PKEY * pkey, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*BIO_socket_wait)(struct AmiSSLIFace *Self, int fd, int for_read, time_t max_time);
	APICALL int (*BIO_wait)(struct AmiSSLIFace *Self, BIO * bio, time_t max_time, unsigned int nap_milliseconds);
	APICALL int (*BIO_do_connect_retry)(struct AmiSSLIFace *Self, BIO * bio, int timeout, int nap_milliseconds);
	APICALL int (*OSSL_parse_url)(struct AmiSSLIFace *Self, const char * url, char ** pscheme, char ** puser, char ** phost, char ** pport, int * pport_num, char ** ppath, char ** pquery, char ** pfrag);
	APICALL const char * (*OSSL_HTTP_adapt_proxy)(struct AmiSSLIFace *Self, const char * proxy, const char * no_proxy, const char * server, int use_ssl);
	APICALL size_t (*OSSL_HTTP_REQ_CTX_get_resp_len)(struct AmiSSLIFace *Self, const OSSL_HTTP_REQ_CTX * rctx);
	APICALL int (*OSSL_HTTP_REQ_CTX_set_expected)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, const char * content_type, int asn1, int timeout, int keep_alive);
	APICALL int (*OSSL_HTTP_is_alive)(struct AmiSSLIFace *Self, const OSSL_HTTP_REQ_CTX * rctx);
	APICALL OSSL_HTTP_REQ_CTX * (*OSSL_HTTP_open)(struct AmiSSLIFace *Self, const char * server, const char * port, const char * proxy, const char * no_proxy, int use_ssl, BIO * bio, BIO * rbio, OSSL_HTTP_bio_cb_t bio_update_fn, void * arg, int buf_size, int overall_timeout);
	APICALL int (*OSSL_HTTP_proxy_connect)(struct AmiSSLIFace *Self, BIO * bio, const char * server, const char * port, const char * proxyuser, const char * proxypass, int timeout, BIO * bio_err, const char * prog);
	APICALL int (*OSSL_HTTP_set1_request)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, const char * path, const STACK_OF(CONF_VALUE) * headers, const char * content_type, BIO * req, const char * expected_content_type, int expect_asn1, size_t max_resp_len, int timeout, int keep_alive);
	APICALL BIO * (*OSSL_HTTP_exchange)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, char ** redirection_url);
	APICALL BIO * (*OSSL_HTTP_get_amiga_1)(struct AmiSSLIFace *Self, const char * url, const char * proxy, const char * no_proxy, BIO * bio, BIO * rbio, OSSL_HTTP_bio_cb_t bio_update_fn, void * moreargs);
	APICALL void * (*OSSL_HTTP_get_amiga_2)(struct AmiSSLIFace *Self, void * arg, int buf_size, const STACK_OF(CONF_VALUE) * headers, const char * expected_content_type, int expect_asn1, size_t max_resp_len, int timeout);
	APICALL BIO * (*OSSL_HTTP_transfer_amiga_1)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX ** prctx, const char * server, const char * port, const char * path, int use_ssl, const char * proxy, const char * no_proxy, BIO * bio, BIO * rbio, OSSL_HTTP_bio_cb_t bio_update_fn, void * moreargs);
	APICALL void * (*OSSL_HTTP_transfer_amiga_2)(struct AmiSSLIFace *Self, void * arg, int buf_size, const STACK_OF(CONF_VALUE) * headers, const char * content_type, BIO * req, const char * expected_content_type, int expect_asn1, size_t max_resp_len, int timeout, int keep_alive);
	APICALL int (*OSSL_HTTP_close)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, int ok);
	APICALL BIO * (*ASN1_item_i2d_mem_bio)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, const ASN1_VALUE * val);
	APICALL void (*ERR_add_error_txt)(struct AmiSSLIFace *Self, const char * sepr, const char * txt);
	APICALL void (*ERR_add_error_mem_bio)(struct AmiSSLIFace *Self, const char * sep, BIO * bio);
	APICALL int (*X509_STORE_CTX_print_verify_cb)(struct AmiSSLIFace *Self, int ok, X509_STORE_CTX * ctx);
	APICALL STACK_OF(X509) * (*X509_STORE_get1_all_certs)(struct AmiSSLIFace *Self, X509_STORE * xs);
	APICALL int (*OSSL_CMP_validate_msg)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const OSSL_CMP_MSG * msg);
	APICALL int (*OSSL_CMP_validate_cert_path)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx, X509_STORE * trusted_store, X509 * cert);
	APICALL int (*EVP_PKEY_CTX_set_ecdh_cofactor_mode)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int cofactor_mode);
	APICALL int (*EVP_PKEY_CTX_get_ecdh_cofactor_mode)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*EVP_PKEY_CTX_set_ecdh_kdf_type)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int kdf);
	APICALL int (*EVP_PKEY_CTX_get_ecdh_kdf_type)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*EVP_PKEY_CTX_set_ecdh_kdf_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD * md);
	APICALL int (*EVP_PKEY_CTX_get_ecdh_kdf_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD ** md);
	APICALL int (*EVP_PKEY_CTX_set_ecdh_kdf_outlen)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int len);
	APICALL int (*EVP_PKEY_CTX_get_ecdh_kdf_outlen)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int * len);
	APICALL int (*EVP_PKEY_CTX_set0_ecdh_kdf_ukm)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char * ukm, int len);
	DEPRECATED APICALL int (*EVP_PKEY_CTX_get0_ecdh_kdf_ukm)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char ** ukm);
	APICALL int (*EVP_PKEY_CTX_set_rsa_pss_saltlen)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int saltlen);
	APICALL int (*EVP_PKEY_CTX_get_rsa_pss_saltlen)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int * saltlen);
	APICALL ISSUER_SIGN_TOOL * (*d2i_ISSUER_SIGN_TOOL)(struct AmiSSLIFace *Self, ISSUER_SIGN_TOOL ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_ISSUER_SIGN_TOOL)(struct AmiSSLIFace *Self, const ISSUER_SIGN_TOOL * a, unsigned char ** out);
	APICALL void (*ISSUER_SIGN_TOOL_free)(struct AmiSSLIFace *Self, ISSUER_SIGN_TOOL * a);
	APICALL ISSUER_SIGN_TOOL * (*ISSUER_SIGN_TOOL_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ISSUER_SIGN_TOOL_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_SELF_TEST * (*OSSL_SELF_TEST_new)(struct AmiSSLIFace *Self, OSSL_CALLBACK * cb, void * cbarg);
	APICALL void (*OSSL_SELF_TEST_free)(struct AmiSSLIFace *Self, OSSL_SELF_TEST * st);
	APICALL void (*OSSL_SELF_TEST_onbegin)(struct AmiSSLIFace *Self, OSSL_SELF_TEST * st, const char * type, const char * desc);
	APICALL int (*OSSL_SELF_TEST_oncorrupt_byte)(struct AmiSSLIFace *Self, OSSL_SELF_TEST * st, unsigned char * bytes);
	APICALL void (*OSSL_SELF_TEST_onend)(struct AmiSSLIFace *Self, OSSL_SELF_TEST * st, int ret);
	APICALL int (*OSSL_PROVIDER_set_default_search_path)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * a, const char * path);
	APICALL ASN1_OCTET_STRING * (*X509_digest_sig)(struct AmiSSLIFace *Self, const X509 * cert, EVP_MD ** md_used, int * md_is_fallback);
	APICALL OSSL_CMP_MSG * (*OSSL_CMP_MSG_dup)(struct AmiSSLIFace *Self, const OSSL_CMP_MSG * a);
	APICALL OSSL_CMP_ITAV * (*OSSL_CMP_ITAV_dup)(struct AmiSSLIFace *Self, const OSSL_CMP_ITAV * a);
	APICALL OSSL_CMP_PKISI * (*d2i_OSSL_CMP_PKISI)(struct AmiSSLIFace *Self, OSSL_CMP_PKISI ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CMP_PKISI)(struct AmiSSLIFace *Self, const OSSL_CMP_PKISI * a, unsigned char ** out);
	APICALL void (*OSSL_CMP_PKISI_free)(struct AmiSSLIFace *Self, OSSL_CMP_PKISI * a);
	APICALL OSSL_CMP_PKISI * (*OSSL_CMP_PKISI_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CMP_PKISI_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_CMP_PKISI * (*OSSL_CMP_PKISI_dup)(struct AmiSSLIFace *Self, const OSSL_CMP_PKISI * a);
	APICALL char * (*OSSL_CMP_snprint_PKIStatusInfo)(struct AmiSSLIFace *Self, const OSSL_CMP_PKISI * statusInfo, char * buf, size_t bufsize);
	APICALL OSSL_CMP_PKISI * (*OSSL_CMP_STATUSINFO_new)(struct AmiSSLIFace *Self, int status, int fail_info, const char * text);
	APICALL OSSL_CMP_MSG * (*d2i_OSSL_CMP_MSG_bio)(struct AmiSSLIFace *Self, BIO * bio, OSSL_CMP_MSG ** msg);
	APICALL int (*i2d_OSSL_CMP_MSG_bio)(struct AmiSSLIFace *Self, BIO * bio, const OSSL_CMP_MSG * msg);
	APICALL OSSL_CMP_MSG * (*OSSL_CMP_SRV_process_request)(struct AmiSSLIFace *Self, OSSL_CMP_SRV_CTX * srv_ctx, const OSSL_CMP_MSG * req);
	APICALL OSSL_CMP_MSG * (*OSSL_CMP_CTX_server_perform)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * client_ctx, const OSSL_CMP_MSG * req);
	APICALL OSSL_CMP_SRV_CTX * (*OSSL_CMP_SRV_CTX_new)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL void (*OSSL_CMP_SRV_CTX_free)(struct AmiSSLIFace *Self, OSSL_CMP_SRV_CTX * srv_ctx);
	APICALL int (*OSSL_CMP_SRV_CTX_init)(struct AmiSSLIFace *Self, OSSL_CMP_SRV_CTX * srv_ctx, void * custom_ctx, OSSL_CMP_SRV_cert_request_cb_t process_cert_request, OSSL_CMP_SRV_rr_cb_t process_rr, OSSL_CMP_SRV_genm_cb_t process_genm, OSSL_CMP_SRV_error_cb_t process_error, OSSL_CMP_SRV_certConf_cb_t process_certConf, OSSL_CMP_SRV_pollReq_cb_t process_pollReq);
	APICALL OSSL_CMP_CTX * (*OSSL_CMP_SRV_CTX_get0_cmp_ctx)(struct AmiSSLIFace *Self, const OSSL_CMP_SRV_CTX * srv_ctx);
	APICALL void * (*OSSL_CMP_SRV_CTX_get0_custom_ctx)(struct AmiSSLIFace *Self, const OSSL_CMP_SRV_CTX * srv_ctx);
	APICALL int (*OSSL_CMP_SRV_CTX_set_send_unprotected_errors)(struct AmiSSLIFace *Self, OSSL_CMP_SRV_CTX * srv_ctx, int val);
	APICALL int (*OSSL_CMP_SRV_CTX_set_accept_unprotected)(struct AmiSSLIFace *Self, OSSL_CMP_SRV_CTX * srv_ctx, int val);
	APICALL int (*OSSL_CMP_SRV_CTX_set_accept_raverified)(struct AmiSSLIFace *Self, OSSL_CMP_SRV_CTX * srv_ctx, int val);
	APICALL int (*OSSL_CMP_SRV_CTX_set_grant_implicit_confirm)(struct AmiSSLIFace *Self, OSSL_CMP_SRV_CTX * srv_ctx, int val);
	APICALL X509 * (*OSSL_CMP_exec_certreq)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, int req_type, const OSSL_CRMF_MSG * crm);
	APICALL int (*OSSL_CMP_try_certreq)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, int req_type, const OSSL_CRMF_MSG * crm, int * checkAfter);
	APICALL int (*OSSL_CMP_certConf_cb)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, X509 * cert, int fail_info, const char ** text);
	APICALL int (*OSSL_CMP_exec_RR_ses)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx);
	APICALL STACK_OF(OSSL_CMP_ITAV) * (*OSSL_CMP_exec_GENM_ses)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx);
	APICALL OSSL_CMP_MSG * (*OSSL_CMP_MSG_http_perform)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const OSSL_CMP_MSG * req);
	APICALL OSSL_CMP_MSG * (*OSSL_CMP_MSG_read)(struct AmiSSLIFace *Self, const char * file, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*OSSL_CMP_MSG_write)(struct AmiSSLIFace *Self, const char * file, const OSSL_CMP_MSG * msg);
	APICALL EVP_PKEY * (*EVP_PKEY_Q_vkeygen)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq, const char * type, long * args);
	APICALL EVP_PKEY * (*EVP_PKEY_Q_keygen)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq, const char * type, ...);
	APICALL int (*EVP_PKEY_generate)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_PKEY ** ppkey);
	APICALL int (*EVP_PKEY_CTX_set_rsa_keygen_bits)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int bits);
	DEPRECATED APICALL int (*EVP_PKEY_CTX_set_rsa_keygen_pubexp)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, BIGNUM * pubexp);
	APICALL int (*EVP_PKEY_CTX_set1_rsa_keygen_pubexp)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, BIGNUM * pubexp);
	APICALL int (*EVP_PKEY_CTX_set_rsa_keygen_primes)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int primes);
	APICALL CONF * (*NCONF_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, CONF_METHOD * meth);
	APICALL int (*CONF_modules_load_file_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * filename, const char * appname, unsigned long flags);
	APICALL int (*OSSL_LIB_CTX_load_config)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * config_file);
	APICALL OSSL_PARAM * (*OSSL_PARAM_BLD_to_param)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld);
	APICALL int (*OSSL_PARAM_BLD_push_int)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, int val);
	APICALL int (*OSSL_PARAM_BLD_push_uint)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, unsigned int val);
	APICALL int (*OSSL_PARAM_BLD_push_long)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, long int val);
	APICALL int (*OSSL_PARAM_BLD_push_ulong)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, unsigned long int val);
	APICALL int (*OSSL_PARAM_BLD_push_int32)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, int32_t val);
	APICALL int (*OSSL_PARAM_BLD_push_uint32)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, uint32_t val);
	APICALL int (*OSSL_PARAM_BLD_push_int64)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, int64_t val);
	APICALL int (*OSSL_PARAM_BLD_push_uint64)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, uint64_t val);
	APICALL int (*OSSL_PARAM_BLD_push_size_t)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, size_t val);
	APICALL int (*OSSL_PARAM_BLD_push_double)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, double val);
	APICALL int (*OSSL_PARAM_BLD_push_BN)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, const BIGNUM * bn);
	APICALL int (*OSSL_PARAM_BLD_push_BN_pad)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, const BIGNUM * bn, size_t sz);
	APICALL int (*OSSL_PARAM_BLD_push_utf8_string)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, const char * buf, size_t bsize);
	APICALL int (*OSSL_PARAM_BLD_push_utf8_ptr)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, char * buf, size_t bsize);
	APICALL int (*OSSL_PARAM_BLD_push_octet_string)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, const void * buf, size_t bsize);
	APICALL int (*OSSL_PARAM_BLD_push_octet_ptr)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, void * buf, size_t bsize);
	APICALL OSSL_PARAM_BLD * (*OSSL_PARAM_BLD_new)(struct AmiSSLIFace *Self);
	APICALL void (*OSSL_PARAM_BLD_free)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld);
	APICALL int (*EVP_PKEY_set_type_by_keymgmt)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, EVP_KEYMGMT * keymgmt);
	APICALL int (*OCSP_RESPID_set_by_key_ex)(struct AmiSSLIFace *Self, OCSP_RESPID * respid, X509 * cert, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*OCSP_RESPID_match_ex)(struct AmiSSLIFace *Self, OCSP_RESPID * respid, X509 * cert, OSSL_LIB_CTX * libctx, const char * propq);
	DEPRECATED APICALL char * (*SRP_create_verifier_ex)(struct AmiSSLIFace *Self, const char * user, const char * pass, char ** salt, char ** verifier, const char * N, const char * g, OSSL_LIB_CTX * libctx, const char * propq);
	DEPRECATED APICALL int (*SRP_create_verifier_BN_ex)(struct AmiSSLIFace *Self, const char * user, const char * pass, BIGNUM ** salt, BIGNUM ** verifier, const BIGNUM * N, const BIGNUM * g, OSSL_LIB_CTX * libctx, const char * propq);
	DEPRECATED APICALL BIGNUM * (*SRP_Calc_B_ex)(struct AmiSSLIFace *Self, const BIGNUM * b, const BIGNUM * N, const BIGNUM * g, const BIGNUM * v, OSSL_LIB_CTX * libctx, const char * propq);
	DEPRECATED APICALL BIGNUM * (*SRP_Calc_u_ex)(struct AmiSSLIFace *Self, const BIGNUM * A, const BIGNUM * B, const BIGNUM * N, OSSL_LIB_CTX * libctx, const char * propq);
	DEPRECATED APICALL BIGNUM * (*SRP_Calc_x_ex)(struct AmiSSLIFace *Self, const BIGNUM * s, const char * user, const char * pass, OSSL_LIB_CTX * libctx, const char * propq);
	DEPRECATED APICALL BIGNUM * (*SRP_Calc_client_key_ex)(struct AmiSSLIFace *Self, const BIGNUM * N, const BIGNUM * B, const BIGNUM * g, const BIGNUM * x, const BIGNUM * a, const BIGNUM * u, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL const OSSL_PARAM * (*EVP_PKEY_gettable_params)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL int (*EVP_PKEY_get_int_param)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, const char * key_name, int * out);
	APICALL int (*EVP_PKEY_get_size_t_param)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, const char * key_name, size_t * out);
	APICALL int (*EVP_PKEY_get_bn_param)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, const char * key_name, BIGNUM ** bn);
	APICALL int (*EVP_PKEY_get_utf8_string_param)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, const char * key_name, char * str, size_t max_buf_sz, size_t * out_sz);
	APICALL int (*EVP_PKEY_get_octet_string_param)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, const char * key_name, unsigned char * buf, size_t max_buf_sz, size_t * out_sz);
	APICALL int (*EVP_PKEY_is_a)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, const char * name);
	APICALL int (*EVP_PKEY_can_sign)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL X509_STORE_CTX * (*X509_STORE_CTX_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*X509_STORE_CTX_verify)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	APICALL CT_POLICY_EVAL_CTX * (*CT_POLICY_EVAL_CTX_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL CTLOG * (*CTLOG_new_ex)(struct AmiSSLIFace *Self, EVP_PKEY * public_key, const char * name, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*CTLOG_new_from_base64_ex)(struct AmiSSLIFace *Self, CTLOG ** ct_log, const char * pkey_base64, const char * name, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL CTLOG_STORE * (*CTLOG_STORE_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*EVP_PKEY_set_ex_data)(struct AmiSSLIFace *Self, EVP_PKEY * key, int idx, void * arg);
	APICALL void * (*EVP_PKEY_get_ex_data)(struct AmiSSLIFace *Self, const EVP_PKEY * key, int idx);
	APICALL int (*EVP_PKEY_CTX_set_group_name)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const char * name);
	APICALL int (*EVP_PKEY_CTX_get_group_name)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, char * name, size_t namelen);
	APICALL int (*EVP_PKEY_CTX_set_ec_paramgen_curve_nid)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int nid);
	APICALL EVP_PKEY * (*d2i_PrivateKey_ex)(struct AmiSSLIFace *Self, int type, EVP_PKEY ** a, const unsigned char ** pp, long length, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL EVP_PKEY * (*d2i_AutoPrivateKey_ex)(struct AmiSSLIFace *Self, EVP_PKEY ** a, const unsigned char ** pp, long length, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL EVP_PKEY * (*d2i_PrivateKey_ex_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** a, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL EVP_PKEY * (*PEM_read_bio_PrivateKey_ex)(struct AmiSSLIFace *Self, BIO * out, EVP_PKEY ** x, pem_password_cb * cb, void * u, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*EVP_PKEY_CTX_set_dsa_paramgen_bits)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int nbits);
	APICALL int (*EVP_PKEY_CTX_set_dsa_paramgen_q_bits)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int qbits);
	APICALL int (*EVP_PKEY_CTX_set_dsa_paramgen_md_props)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const char * md_name, const char * md_properties);
	APICALL int (*EVP_PKEY_CTX_set_dsa_paramgen_gindex)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int gindex);
	APICALL int (*EVP_PKEY_CTX_set_dsa_paramgen_type)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const char * name);
	APICALL int (*EVP_PKEY_CTX_set_dsa_paramgen_seed)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const unsigned char * seed, size_t seedlen);
	APICALL int (*EVP_PKEY_CTX_set_dsa_paramgen_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD * md);
	APICALL int (*EVP_PKEY_CTX_set_dh_paramgen_type)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int typ);
	APICALL int (*EVP_PKEY_CTX_set_dh_paramgen_gindex)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int gindex);
	APICALL int (*EVP_PKEY_CTX_set_dh_paramgen_seed)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const unsigned char * seed, size_t seedlen);
	APICALL int (*EVP_PKEY_CTX_set_dh_paramgen_prime_len)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int pbits);
	APICALL int (*EVP_PKEY_CTX_set_dh_paramgen_subprime_len)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int qlen);
	APICALL int (*EVP_PKEY_CTX_set_dh_paramgen_generator)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int gen);
	APICALL int (*EVP_PKEY_CTX_set_dh_nid)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int nid);
	APICALL int (*EVP_PKEY_CTX_set_dh_rfc5114)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int gen);
	APICALL int (*EVP_PKEY_CTX_set_dhx_rfc5114)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int gen);
	APICALL char * (*X509_VERIFY_PARAM_get0_host)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param, int idx);
	APICALL char * (*X509_VERIFY_PARAM_get0_email)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param);
	APICALL char * (*X509_VERIFY_PARAM_get1_ip_asc)(struct AmiSSLIFace *Self, X509_VERIFY_PARAM * param);
	APICALL int (*OSSL_PARAM_modified)(struct AmiSSLIFace *Self, const OSSL_PARAM * p);
	APICALL void (*OSSL_PARAM_set_all_unmodified)(struct AmiSSLIFace *Self, OSSL_PARAM * p);
	APICALL EVP_RAND * (*EVP_RAND_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * algorithm, const char * properties);
	APICALL int (*EVP_RAND_up_ref)(struct AmiSSLIFace *Self, EVP_RAND * rand);
	APICALL void (*EVP_RAND_free)(struct AmiSSLIFace *Self, EVP_RAND * rand);
	APICALL const char * (*EVP_RAND_get0_name)(struct AmiSSLIFace *Self, const EVP_RAND * rand);
	APICALL int (*EVP_RAND_is_a)(struct AmiSSLIFace *Self, const EVP_RAND * rand, const char * name);
	APICALL const OSSL_PROVIDER * (*EVP_RAND_get0_provider)(struct AmiSSLIFace *Self, const EVP_RAND * rand);
	APICALL int (*EVP_RAND_get_params)(struct AmiSSLIFace *Self, EVP_RAND * rand, OSSL_PARAM * params);
	APICALL EVP_RAND_CTX * (*EVP_RAND_CTX_new)(struct AmiSSLIFace *Self, EVP_RAND * rand, EVP_RAND_CTX * parent);
	APICALL void (*EVP_RAND_CTX_free)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx);
	APICALL EVP_RAND * (*EVP_RAND_CTX_get0_rand)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx);
	APICALL int (*EVP_RAND_CTX_get_params)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx, OSSL_PARAM * params);
	APICALL int (*EVP_RAND_CTX_set_params)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx, const OSSL_PARAM * params);
	APICALL const OSSL_PARAM * (*EVP_RAND_gettable_params)(struct AmiSSLIFace *Self, const EVP_RAND * rand);
	APICALL const OSSL_PARAM * (*EVP_RAND_gettable_ctx_params)(struct AmiSSLIFace *Self, const EVP_RAND * rand);
	APICALL const OSSL_PARAM * (*EVP_RAND_settable_ctx_params)(struct AmiSSLIFace *Self, const EVP_RAND * rand);
	APICALL void (*EVP_RAND_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(EVP_RAND *rand, void *arg), void * arg);
	APICALL int (*EVP_RAND_names_do_all)(struct AmiSSLIFace *Self, const EVP_RAND * rand, void (*fn)(const char *name, void *data), void * data);
	APICALL int (*EVP_RAND_instantiate)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx, unsigned int strength, int prediction_resistance, const unsigned char * pstr, size_t pstr_len, const OSSL_PARAM * params);
	APICALL int (*EVP_RAND_uninstantiate)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx);
	APICALL int (*EVP_RAND_generate)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx, unsigned char * out, size_t outlen, unsigned int strength, int prediction_resistance, const unsigned char * addin, size_t addin_len);
	APICALL int (*EVP_RAND_reseed)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx, int prediction_resistance, const unsigned char * ent, size_t ent_len, const unsigned char * addin, size_t addin_len);
	APICALL int (*EVP_RAND_nonce)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx, unsigned char * out, size_t outlen);
	APICALL int (*EVP_RAND_enable_locking)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx);
	APICALL int (*EVP_RAND_verify_zeroization)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx);
	APICALL unsigned int (*EVP_RAND_get_strength)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx);
	APICALL int (*EVP_RAND_get_state)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx);
	APICALL int (*EVP_default_properties_is_fips_enabled)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx);
	APICALL int (*EVP_default_properties_enable_fips)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, int enable);
	APICALL EVP_PKEY * (*EVP_PKEY_new_raw_private_key_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * keytype, const char * propq, const unsigned char * priv, size_t len);
	APICALL EVP_PKEY * (*EVP_PKEY_new_raw_public_key_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * keytype, const char * propq, const unsigned char * pub, size_t len);
	APICALL int (*OSSL_PARAM_BLD_push_time_t)(struct AmiSSLIFace *Self, OSSL_PARAM_BLD * bld, const char * key, time_t val);
	APICALL void (*OSSL_PARAM_construct_time_t_amiga)(struct AmiSSLIFace *Self, OSSL_PARAM * result, const char * key, time_t * buf);
	APICALL int (*OSSL_PARAM_get_time_t)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, time_t * val);
	APICALL int (*OSSL_PARAM_set_time_t)(struct AmiSSLIFace *Self, OSSL_PARAM * p, time_t val);
	APICALL OSSL_STORE_CTX * (*OSSL_STORE_attach)(struct AmiSSLIFace *Self, BIO * bio, const char * scheme, OSSL_LIB_CTX * libctx, const char * propq, const UI_METHOD * ui_method, void * ui_data, const OSSL_PARAM * params, OSSL_STORE_post_process_info_fn post_process, void * post_process_data);
	DEPRECATED APICALL int (*OSSL_STORE_LOADER_set_attach)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader, OSSL_STORE_attach_fn attach_function);
	APICALL int (*EVP_PKEY_CTX_set_rsa_pss_keygen_saltlen)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int saltlen);
	APICALL int (*EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD * md);
	APICALL int (*EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md_name)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const char * mdname);
	APICALL int (*OSSL_PROVIDER_do_all)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, int (*cb)(OSSL_PROVIDER *provider, void *cbdata), void * cbdata);
	APICALL int (*EC_GROUP_get_field_type)(struct AmiSSLIFace *Self, const EC_GROUP * group);
	APICALL int (*X509_PUBKEY_eq)(struct AmiSSLIFace *Self, const X509_PUBKEY * a, const X509_PUBKEY * b);
	APICALL int (*EVP_PKEY_eq)(struct AmiSSLIFace *Self, const EVP_PKEY * a, const EVP_PKEY * b);
	APICALL int (*EVP_PKEY_parameters_eq)(struct AmiSSLIFace *Self, const EVP_PKEY * a, const EVP_PKEY * b);
	APICALL const OSSL_ALGORITHM * (*OSSL_PROVIDER_query_operation)(struct AmiSSLIFace *Self, const OSSL_PROVIDER * prov, int operation_id, int * no_cache);
	APICALL void (*OSSL_PROVIDER_unquery_operation)(struct AmiSSLIFace *Self, const OSSL_PROVIDER * prov, int operation_id, const OSSL_ALGORITHM * algs);
	APICALL void * (*OSSL_PROVIDER_get0_provider_ctx)(struct AmiSSLIFace *Self, const OSSL_PROVIDER * prov);
	APICALL int (*OSSL_PROVIDER_get_capabilities)(struct AmiSSLIFace *Self, const OSSL_PROVIDER * prov, const char * capability, OSSL_CALLBACK * cb, void * arg);
	APICALL EC_GROUP * (*EC_GROUP_new_by_curve_name_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq, int nid);
	DEPRECATED APICALL EC_KEY * (*EC_KEY_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * propq);
	DEPRECATED APICALL EC_KEY * (*EC_KEY_new_by_curve_name_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * propq, int nid);
	APICALL OSSL_LIB_CTX * (*OSSL_LIB_CTX_set0_default)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx);
	APICALL STACK_OF(X509_INFO) * (*PEM_X509_INFO_read_bio_ex)(struct AmiSSLIFace *Self, BIO * bp, STACK_OF(X509_INFO) * sk, pem_password_cb * cb, void * u, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*X509_REQ_verify_ex)(struct AmiSSLIFace *Self, X509_REQ * a, EVP_PKEY * r, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL X509 * (*X509_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*X509_LOOKUP_ctrl_ex)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int cmd, const char * argc, long argl, char ** ret, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*X509_load_cert_file_ex)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, const char * file, int type, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*X509_load_cert_crl_file_ex)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, const char * file, int type, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*X509_LOOKUP_by_subject_ex)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, X509_LOOKUP_TYPE type, const X509_NAME * name, X509_OBJECT * ret, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*X509_STORE_load_file_ex)(struct AmiSSLIFace *Self, X509_STORE * xs, const char * file, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*X509_STORE_load_store_ex)(struct AmiSSLIFace *Self, X509_STORE * xs, const char * store, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*X509_STORE_load_locations_ex)(struct AmiSSLIFace *Self, X509_STORE * xs, const char * file, const char * dir, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*X509_STORE_set_default_paths_ex)(struct AmiSSLIFace *Self, X509_STORE * xs, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL STACK_OF(X509) * (*X509_build_chain)(struct AmiSSLIFace *Self, X509 * target, STACK_OF(X509) * certs, X509_STORE * store, int with_self_signed, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*X509V3_set_issuer_pkey)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, EVP_PKEY * pkey);
	APICALL char * (*i2s_ASN1_UTF8STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, ASN1_UTF8STRING * utf8);
	APICALL ASN1_UTF8STRING * (*s2i_ASN1_UTF8STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, X509V3_CTX * ctx, const char * str);
	APICALL OSSL_STORE_CTX * (*OSSL_STORE_open_ex)(struct AmiSSLIFace *Self, const char * uri, OSSL_LIB_CTX * libctx, const char * propq, const UI_METHOD * ui_method, void * ui_data, const OSSL_PARAM * params, OSSL_STORE_post_process_info_fn post_process, void * post_process_data);
	APICALL OSSL_DECODER * (*OSSL_DECODER_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * name, const char * properties);
	APICALL int (*OSSL_DECODER_up_ref)(struct AmiSSLIFace *Self, OSSL_DECODER * encoder);
	APICALL void (*OSSL_DECODER_free)(struct AmiSSLIFace *Self, OSSL_DECODER * encoder);
	APICALL const OSSL_PROVIDER * (*OSSL_DECODER_get0_provider)(struct AmiSSLIFace *Self, const OSSL_DECODER * encoder);
	APICALL const char * (*OSSL_DECODER_get0_properties)(struct AmiSSLIFace *Self, const OSSL_DECODER * encoder);
	APICALL int (*OSSL_DECODER_is_a)(struct AmiSSLIFace *Self, const OSSL_DECODER * encoder, const char * name);
	APICALL void (*OSSL_DECODER_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(OSSL_DECODER *encoder, void *arg), void * arg);
	APICALL int (*OSSL_DECODER_names_do_all)(struct AmiSSLIFace *Self, const OSSL_DECODER * encoder, void (*fn)(const char *name, void *data), void * data);
	APICALL const OSSL_PARAM * (*OSSL_DECODER_settable_ctx_params)(struct AmiSSLIFace *Self, OSSL_DECODER * encoder);
	APICALL OSSL_DECODER_CTX * (*OSSL_DECODER_CTX_new)(struct AmiSSLIFace *Self);
	APICALL int (*OSSL_DECODER_CTX_set_params)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, const OSSL_PARAM * params);
	APICALL void (*OSSL_DECODER_CTX_free)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx);
	APICALL int (*OSSL_DECODER_CTX_set_passphrase)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, const unsigned char * kstr, size_t klen);
	APICALL int (*OSSL_DECODER_CTX_set_pem_password_cb)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, pem_password_cb * cb, void * cbarg);
	APICALL int (*OSSL_DECODER_CTX_set_passphrase_ui)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, const UI_METHOD * ui_method, void * ui_data);
	APICALL int (*OSSL_DECODER_from_bio)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, BIO * in);
	APICALL int (*OSSL_DECODER_CTX_add_decoder)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, OSSL_DECODER * decoder);
	APICALL int (*OSSL_DECODER_CTX_add_extra)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*OSSL_DECODER_CTX_get_num_decoders)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx);
	APICALL int (*OSSL_DECODER_CTX_set_input_type)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, const char * input_type);
	APICALL int (*OSSL_DECODER_export)(struct AmiSSLIFace *Self, OSSL_DECODER_INSTANCE * decoder_inst, void * reference, size_t reference_sz, OSSL_CALLBACK * export_cb, void * export_cbarg);
	APICALL OSSL_DECODER * (*OSSL_DECODER_INSTANCE_get_decoder)(struct AmiSSLIFace *Self, OSSL_DECODER_INSTANCE * decoder_inst);
	APICALL void * (*OSSL_DECODER_INSTANCE_get_decoder_ctx)(struct AmiSSLIFace *Self, OSSL_DECODER_INSTANCE * decoder_inst);
	APICALL const OSSL_PARAM * (*OSSL_DECODER_gettable_params)(struct AmiSSLIFace *Self, OSSL_DECODER * decoder);
	APICALL int (*OSSL_DECODER_get_params)(struct AmiSSLIFace *Self, OSSL_DECODER * decoder, OSSL_PARAM * params);
	APICALL OSSL_DECODER_CTX * (*OSSL_DECODER_CTX_new_for_pkey)(struct AmiSSLIFace *Self, EVP_PKEY ** pkey, const char * input_type, const char * input_struct, const char * keytype, int selection, OSSL_LIB_CTX * libctx, const char * propquery);
	APICALL int (*OSSL_DECODER_CTX_set_construct)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, OSSL_DECODER_CONSTRUCT * construct);
	APICALL int (*OSSL_DECODER_CTX_set_construct_data)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, void * construct_data);
	APICALL int (*OSSL_DECODER_CTX_set_cleanup)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, OSSL_DECODER_CLEANUP * cleanup);
	APICALL OSSL_DECODER_CONSTRUCT * (*OSSL_DECODER_CTX_get_construct)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx);
	APICALL void * (*OSSL_DECODER_CTX_get_construct_data)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx);
	APICALL OSSL_DECODER_CLEANUP * (*OSSL_DECODER_CTX_get_cleanup)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx);
	APICALL EVP_RAND_CTX * (*RAND_get0_primary)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx);
	APICALL EVP_RAND_CTX * (*RAND_get0_public)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx);
	APICALL EVP_RAND_CTX * (*RAND_get0_private)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx);
	APICALL const ASN1_TYPE * (*PKCS12_SAFEBAG_get0_bag_obj)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag);
	APICALL const ASN1_OBJECT * (*PKCS12_SAFEBAG_get0_bag_type)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag);
	APICALL PKCS12_SAFEBAG * (*PKCS12_SAFEBAG_create_secret)(struct AmiSSLIFace *Self, int type, int vtype, const unsigned char * value, int len);
	APICALL int (*PKCS12_add1_attr_by_NID)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, int nid, int type, const unsigned char * bytes, int len);
	APICALL int (*PKCS12_add1_attr_by_txt)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, const char * attrname, int type, const unsigned char * bytes, int len);
	APICALL PKCS12_SAFEBAG * (*PKCS12_add_secret)(struct AmiSSLIFace *Self, STACK_OF(PKCS12_SAFEBAG) ** pbags, int nid_type, const unsigned char * value, int len);
	APICALL int (*SMIME_write_ASN1_ex)(struct AmiSSLIFace *Self, BIO * bio, ASN1_VALUE * val, BIO * data, int flags, int ctype_nid, int econt_nid, STACK_OF(X509_ALGOR) * mdalgs, const ASN1_ITEM * it, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL ASN1_VALUE * (*SMIME_read_ASN1_ex)(struct AmiSSLIFace *Self, BIO * bio, int flags, BIO ** bcont, const ASN1_ITEM * it, ASN1_VALUE ** x, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL CMS_ContentInfo * (*CMS_ContentInfo_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL CMS_ContentInfo * (*SMIME_read_CMS_ex)(struct AmiSSLIFace *Self, BIO * bio, int flags, BIO ** bcont, CMS_ContentInfo ** ci);
	APICALL CMS_ContentInfo * (*CMS_sign_ex)(struct AmiSSLIFace *Self, X509 * signcert, EVP_PKEY * pkey, STACK_OF(X509) * certs, BIO * data, unsigned int flags, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL CMS_ContentInfo * (*CMS_data_create_ex)(struct AmiSSLIFace *Self, BIO * in, unsigned int flags, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL CMS_ContentInfo * (*CMS_digest_create_ex)(struct AmiSSLIFace *Self, BIO * in, const EVP_MD * md, unsigned int flags, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL CMS_ContentInfo * (*CMS_EncryptedData_encrypt_ex)(struct AmiSSLIFace *Self, BIO * in, const EVP_CIPHER * cipher, const unsigned char * key, size_t keylen, unsigned int flags, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL CMS_ContentInfo * (*CMS_encrypt_ex)(struct AmiSSLIFace *Self, STACK_OF(X509) * certs, BIO * in, const EVP_CIPHER * cipher, unsigned int flags, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL CMS_ContentInfo * (*CMS_EnvelopedData_create_ex)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL CMS_ReceiptRequest * (*CMS_ReceiptRequest_create0_ex)(struct AmiSSLIFace *Self, unsigned char * id, int idlen, int allorfirst, STACK_OF(GENERAL_NAMES) * receiptList, STACK_OF(GENERAL_NAMES) * receiptsTo, OSSL_LIB_CTX * libctx);
	APICALL int (*EVP_SignFinal_ex)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * md, unsigned int * s, EVP_PKEY * pkey, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*EVP_VerifyFinal_ex)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const unsigned char * sigbuf, unsigned int siglen, EVP_PKEY * pkey, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*EVP_DigestSignInit_ex)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, EVP_PKEY_CTX ** pctx, const char * mdname, OSSL_LIB_CTX * libctx, const char * props, EVP_PKEY * pkey, const OSSL_PARAM * params);
	APICALL int (*EVP_DigestVerifyInit_ex)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, EVP_PKEY_CTX ** pctx, const char * mdname, OSSL_LIB_CTX * libctx, const char * props, EVP_PKEY * pkey, const OSSL_PARAM * params);
	APICALL PKCS7 * (*PKCS7_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL PKCS7 * (*PKCS7_sign_ex)(struct AmiSSLIFace *Self, X509 * signcert, EVP_PKEY * pkey, STACK_OF(X509) * certs, BIO * data, int flags, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL PKCS7 * (*PKCS7_encrypt_ex)(struct AmiSSLIFace *Self, STACK_OF(X509) * certs, BIO * in, const EVP_CIPHER * cipher, int flags, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL PKCS7 * (*SMIME_read_PKCS7_ex)(struct AmiSSLIFace *Self, BIO * bio, BIO ** bcont, PKCS7 ** p7);
	APICALL int (*OSSL_PROVIDER_self_test)(struct AmiSSLIFace *Self, const OSSL_PROVIDER * prov);
	APICALL int (*EVP_PKEY_CTX_set_tls1_prf_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD * md);
	APICALL int (*EVP_PKEY_CTX_set1_tls1_prf_secret)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * pctx, const unsigned char * sec, int seclen);
	APICALL int (*EVP_PKEY_CTX_add1_tls1_prf_seed)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * pctx, const unsigned char * seed, int seedlen);
	APICALL int (*EVP_PKEY_CTX_set_hkdf_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD * md);
	APICALL int (*EVP_PKEY_CTX_set1_hkdf_salt)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const unsigned char * salt, int saltlen);
	APICALL int (*EVP_PKEY_CTX_set1_hkdf_key)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const unsigned char * key, int keylen);
	APICALL int (*EVP_PKEY_CTX_add1_hkdf_info)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const unsigned char * info, int infolen);
	APICALL int (*EVP_PKEY_CTX_set_hkdf_mode)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int mode);
	APICALL int (*EVP_PKEY_CTX_set1_pbe_pass)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const char * pass, int passlen);
	APICALL int (*EVP_PKEY_CTX_set1_scrypt_salt)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const unsigned char * salt, int saltlen);
	APICALL int (*EVP_PKEY_CTX_set_scrypt_N)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, uint64_t n);
	APICALL int (*EVP_PKEY_CTX_set_scrypt_r)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, uint64_t r);
	APICALL int (*EVP_PKEY_CTX_set_scrypt_p)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, uint64_t p);
	APICALL int (*EVP_PKEY_CTX_set_scrypt_maxmem_bytes)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, uint64_t maxmem_bytes);
	APICALL int (*EVP_PKEY_CTX_set_dh_kdf_type)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int kdf);
	APICALL int (*EVP_PKEY_CTX_get_dh_kdf_type)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*EVP_PKEY_CTX_set0_dh_kdf_oid)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, ASN1_OBJECT * oid);
	APICALL int (*EVP_PKEY_CTX_get0_dh_kdf_oid)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, ASN1_OBJECT ** oid);
	APICALL int (*EVP_PKEY_CTX_set_dh_kdf_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD * md);
	APICALL int (*EVP_PKEY_CTX_get_dh_kdf_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD ** md);
	APICALL int (*EVP_PKEY_CTX_set_dh_kdf_outlen)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int len);
	APICALL int (*EVP_PKEY_CTX_get_dh_kdf_outlen)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int * len);
	APICALL int (*EVP_PKEY_CTX_set0_dh_kdf_ukm)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char * ukm, int len);
	DEPRECATED APICALL int (*EVP_PKEY_CTX_get0_dh_kdf_ukm)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char ** ukm);
	APICALL int (*EVP_CIPHER_CTX_get_updated_iv)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, void * buf, size_t len);
	APICALL int (*EVP_CIPHER_CTX_get_original_iv)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, void * buf, size_t len);
	APICALL const OSSL_PARAM * (*EVP_KEYMGMT_gettable_params)(struct AmiSSLIFace *Self, const EVP_KEYMGMT * keymgmt);
	APICALL const OSSL_PARAM * (*EVP_KEYMGMT_settable_params)(struct AmiSSLIFace *Self, const EVP_KEYMGMT * keymgmt);
	APICALL const OSSL_PARAM * (*EVP_KEYMGMT_gen_settable_params)(struct AmiSSLIFace *Self, const EVP_KEYMGMT * keymgmt);
	APICALL const OSSL_PARAM * (*EVP_SIGNATURE_gettable_ctx_params)(struct AmiSSLIFace *Self, const EVP_SIGNATURE * sig);
	APICALL const OSSL_PARAM * (*EVP_SIGNATURE_settable_ctx_params)(struct AmiSSLIFace *Self, const EVP_SIGNATURE * sig);
	APICALL const OSSL_PARAM * (*EVP_KEYEXCH_gettable_ctx_params)(struct AmiSSLIFace *Self, const EVP_KEYEXCH * keyexch);
	APICALL const OSSL_PARAM * (*EVP_KEYEXCH_settable_ctx_params)(struct AmiSSLIFace *Self, const EVP_KEYEXCH * keyexch);
	APICALL EVP_PKEY * (*d2i_PUBKEY_ex)(struct AmiSSLIFace *Self, EVP_PKEY ** a, const unsigned char ** pp, long length, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL OSSL_STORE_INFO * (*OSSL_STORE_INFO_new_PUBKEY)(struct AmiSSLIFace *Self, EVP_PKEY * pubkey);
	APICALL EVP_PKEY * (*OSSL_STORE_INFO_get0_PUBKEY)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	APICALL EVP_PKEY * (*OSSL_STORE_INFO_get1_PUBKEY)(struct AmiSSLIFace *Self, const OSSL_STORE_INFO * info);
	APICALL EVP_PKEY * (*PEM_read_bio_PUBKEY_ex)(struct AmiSSLIFace *Self, BIO * out, EVP_PKEY ** x, pem_password_cb * cb, void * u, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL EVP_PKEY * (*PEM_read_bio_Parameters_ex)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** x, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL EC_GROUP * (*EC_GROUP_new_from_params)(struct AmiSSLIFace *Self, const OSSL_PARAM * params, OSSL_LIB_CTX * libctx, const char * propq);
	DEPRECATED APICALL int (*OSSL_STORE_LOADER_set_open_ex)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader, OSSL_STORE_open_ex_fn open_ex_function);
	APICALL OSSL_STORE_LOADER * (*OSSL_STORE_LOADER_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * scheme, const char * properties);
	APICALL int (*OSSL_STORE_LOADER_up_ref)(struct AmiSSLIFace *Self, OSSL_STORE_LOADER * loader);
	APICALL const OSSL_PROVIDER * (*OSSL_STORE_LOADER_get0_provider)(struct AmiSSLIFace *Self, const OSSL_STORE_LOADER * loader);
	APICALL const char * (*OSSL_STORE_LOADER_get0_properties)(struct AmiSSLIFace *Self, const OSSL_STORE_LOADER * loader);
	APICALL int (*OSSL_STORE_LOADER_is_a)(struct AmiSSLIFace *Self, const OSSL_STORE_LOADER * loader, const char * scheme);
	APICALL void (*OSSL_STORE_LOADER_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(OSSL_STORE_LOADER *loader, void *arg), void * arg);
	APICALL int (*OSSL_STORE_LOADER_names_do_all)(struct AmiSSLIFace *Self, const OSSL_STORE_LOADER * loader, void (*fn)(const char *name, void *data), void * data);
	APICALL int (*OSSL_PARAM_get_utf8_string_ptr)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, const char ** val);
	APICALL int (*OSSL_PARAM_get_octet_string_ptr)(struct AmiSSLIFace *Self, const OSSL_PARAM * p, const void ** val, size_t * used_len);
	APICALL int (*OSSL_DECODER_CTX_set_passphrase_cb)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, OSSL_PASSPHRASE_CALLBACK * cb, void * cbarg);
	APICALL int (*EVP_PKEY_CTX_set_mac_key)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const unsigned char * key, int keylen);
	APICALL OSSL_STORE_INFO * (*OSSL_STORE_INFO_new)(struct AmiSSLIFace *Self, int type, void * data);
	APICALL void * (*OSSL_STORE_INFO_get0_data)(struct AmiSSLIFace *Self, int type, const OSSL_STORE_INFO * info);
	APICALL EVP_PKEY * (*EVP_PKCS82PKEY_ex)(struct AmiSSLIFace *Self, const PKCS8_PRIV_KEY_INFO * p8, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*EVP_PKEY_CTX_set1_id)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const void * id, int len);
	APICALL int (*EVP_PKEY_CTX_get1_id)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, void * id);
	APICALL int (*EVP_PKEY_CTX_get1_id_len)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, size_t * id_len);
	APICALL CMS_ContentInfo * (*CMS_AuthEnvelopedData_create)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL CMS_ContentInfo * (*CMS_AuthEnvelopedData_create_ex)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*EVP_PKEY_CTX_set_ec_param_enc)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int param_enc);
	APICALL const char * (*EVP_PKEY_get0_type_name)(struct AmiSSLIFace *Self, const EVP_PKEY * key);
	APICALL const char * (*EVP_KEYMGMT_get0_name)(struct AmiSSLIFace *Self, const EVP_KEYMGMT * keymgmt);
	APICALL void (*EVP_KEM_free)(struct AmiSSLIFace *Self, EVP_KEM * wrap);
	APICALL int (*EVP_KEM_up_ref)(struct AmiSSLIFace *Self, EVP_KEM * wrap);
	APICALL OSSL_PROVIDER * (*EVP_KEM_get0_provider)(struct AmiSSLIFace *Self, const EVP_KEM * wrap);
	APICALL EVP_KEM * (*EVP_KEM_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * algorithm, const char * properties);
	APICALL int (*EVP_KEM_is_a)(struct AmiSSLIFace *Self, const EVP_KEM * wrap, const char * name);
	APICALL void (*EVP_KEM_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(EVP_KEM *wrap, void *arg), void * arg);
	APICALL int (*EVP_KEM_names_do_all)(struct AmiSSLIFace *Self, const EVP_KEM * wrap, void (*fn)(const char *name, void *data), void * data);
	APICALL int (*EVP_PKEY_encapsulate_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_encapsulate)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char * wrappedkey, size_t * wrappedkeylen, unsigned char * genkey, size_t * genkeylen);
	APICALL int (*EVP_PKEY_decapsulate_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_decapsulate)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char * unwrapped, size_t * unwrappedlen, const unsigned char * wrapped, size_t wrappedlen);
	APICALL int (*EVP_PKEY_CTX_set_kem_op)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const char * op);
	APICALL const OSSL_PARAM * (*OSSL_ENCODER_gettable_params)(struct AmiSSLIFace *Self, OSSL_ENCODER * encoder);
	APICALL int (*OSSL_ENCODER_get_params)(struct AmiSSLIFace *Self, OSSL_ENCODER * encoder, OSSL_PARAM * params);
	APICALL int (*OSSL_ENCODER_CTX_set_output_type)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, const char * output_type);
	APICALL int (*OSSL_ENCODER_CTX_add_encoder)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, OSSL_ENCODER * encoder);
	APICALL int (*OSSL_ENCODER_CTX_add_extra)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*OSSL_ENCODER_CTX_get_num_encoders)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx);
	APICALL int (*OSSL_ENCODER_CTX_set_selection)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, int selection);
	APICALL OSSL_ENCODER * (*OSSL_ENCODER_INSTANCE_get_encoder)(struct AmiSSLIFace *Self, OSSL_ENCODER_INSTANCE * encoder_inst);
	APICALL void * (*OSSL_ENCODER_INSTANCE_get_encoder_ctx)(struct AmiSSLIFace *Self, OSSL_ENCODER_INSTANCE * encoder_inst);
	APICALL const char * (*OSSL_ENCODER_INSTANCE_get_output_type)(struct AmiSSLIFace *Self, OSSL_ENCODER_INSTANCE * encoder_inst);
	APICALL int (*OSSL_ENCODER_CTX_set_construct)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, OSSL_ENCODER_CONSTRUCT * construct);
	APICALL int (*OSSL_ENCODER_CTX_set_construct_data)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, void * construct_data);
	APICALL int (*OSSL_ENCODER_CTX_set_cleanup)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, OSSL_ENCODER_CLEANUP * cleanup);
	APICALL int (*OSSL_ENCODER_CTX_set_passphrase_cb)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, OSSL_PASSPHRASE_CALLBACK * cb, void * cbarg);
	APICALL int (*EVP_PKEY_type_names_do_all)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, void (*fn)(const char *name, void *data), void * data);
	APICALL const char * (*OSSL_DECODER_INSTANCE_get_input_type)(struct AmiSSLIFace *Self, OSSL_DECODER_INSTANCE * decoder_inst);
	APICALL const OSSL_PARAM * (*EVP_ASYM_CIPHER_gettable_ctx_params)(struct AmiSSLIFace *Self, const EVP_ASYM_CIPHER * ciph);
	APICALL const OSSL_PARAM * (*EVP_ASYM_CIPHER_settable_ctx_params)(struct AmiSSLIFace *Self, const EVP_ASYM_CIPHER * ciph);
	APICALL const OSSL_PARAM * (*EVP_KEM_gettable_ctx_params)(struct AmiSSLIFace *Self, const EVP_KEM * kem);
	APICALL const OSSL_PARAM * (*EVP_KEM_settable_ctx_params)(struct AmiSSLIFace *Self, const EVP_KEM * kem);
	APICALL int (*PKCS7_type_is_other)(struct AmiSSLIFace *Self, PKCS7 * p7);
	APICALL ASN1_OCTET_STRING * (*PKCS7_get_octet_string)(struct AmiSSLIFace *Self, PKCS7 * p7);
	APICALL int (*OSSL_DECODER_from_data)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, const unsigned char ** pdata, size_t * pdata_len);
	APICALL int (*OSSL_ENCODER_to_data)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, unsigned char ** pdata, size_t * pdata_len);
	APICALL OSSL_LIB_CTX * (*EVP_PKEY_CTX_get0_libctx)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL const char * (*EVP_PKEY_CTX_get0_propq)(struct AmiSSLIFace *Self, const EVP_PKEY_CTX * ctx);
	APICALL int (*OSSL_DECODER_CTX_set_selection)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, int selection);
	APICALL int (*OSSL_DECODER_CTX_set_input_structure)(struct AmiSSLIFace *Self, OSSL_DECODER_CTX * ctx, const char * input_structure);
	APICALL const char * (*OSSL_DECODER_INSTANCE_get_input_structure)(struct AmiSSLIFace *Self, OSSL_DECODER_INSTANCE * decoder_inst, int * was_set);
	APICALL int (*OSSL_ENCODER_CTX_set_output_structure)(struct AmiSSLIFace *Self, OSSL_ENCODER_CTX * ctx, const char * output_structure);
	APICALL const char * (*OSSL_ENCODER_INSTANCE_get_output_structure)(struct AmiSSLIFace *Self, OSSL_ENCODER_INSTANCE * encoder_inst);
	APICALL int (*PEM_write_bio_PrivateKey_ex)(struct AmiSSLIFace *Self, BIO * out, const EVP_PKEY * x, const EVP_CIPHER * enc, const unsigned char * kstr, int klen, pem_password_cb * cb, void * u, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*PEM_write_bio_PUBKEY_ex)(struct AmiSSLIFace *Self, BIO * out, const EVP_PKEY * x, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*EVP_PKEY_get_group_name)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, char * name, size_t name_sz, size_t * gname_len);
	APICALL int (*CRYPTO_atomic_or)(struct AmiSSLIFace *Self, uint64_t * val, uint64_t op, uint64_t * ret, CRYPTO_RWLOCK * lock);
	APICALL int (*CRYPTO_atomic_load)(struct AmiSSLIFace *Self, uint64_t * val, uint64_t * ret, CRYPTO_RWLOCK * lock);
	APICALL int (*EVP_PKEY_CTX_set_rsa_pss_keygen_md)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const EVP_MD * md);
	APICALL int (*EVP_PKEY_CTX_set_rsa_pss_keygen_md_name)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const char * mdname, const char * mdprops);
	APICALL const OSSL_PARAM * (*EVP_PKEY_settable_params)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL int (*EVP_PKEY_set_params)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_set_int_param)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, const char * key_name, int in);
	APICALL int (*EVP_PKEY_set_size_t_param)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, const char * key_name, size_t in);
	APICALL int (*EVP_PKEY_set_bn_param)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, const char * key_name, const BIGNUM * bn);
	APICALL int (*EVP_PKEY_set_utf8_string_param)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, const char * key_name, const char * str);
	APICALL int (*EVP_PKEY_set_octet_string_param)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, const char * key_name, const unsigned char * buf, size_t bsize);
	APICALL int (*EVP_PKEY_get_ec_point_conv_form)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL int (*EVP_PKEY_get_field_type)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL int (*EVP_PKEY_get_params)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_fromdata_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL const OSSL_PARAM * (*EVP_PKEY_fromdata_settable)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, int selection);
	APICALL int (*EVP_PKEY_param_check_quick)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*EVP_PKEY_public_check_quick)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*EVP_PKEY_CTX_is_a)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const char * keytype);
	APICALL const OSSL_PARAM * (*EVP_CIPHER_CTX_settable_params)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx);
	APICALL const OSSL_PARAM * (*EVP_CIPHER_CTX_gettable_params)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx);
	APICALL const OSSL_PARAM * (*EVP_KDF_CTX_gettable_params)(struct AmiSSLIFace *Self, EVP_KDF_CTX * ctx);
	APICALL const OSSL_PARAM * (*EVP_KDF_CTX_settable_params)(struct AmiSSLIFace *Self, EVP_KDF_CTX * ctx);
	APICALL const OSSL_PARAM * (*EVP_MAC_CTX_gettable_params)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx);
	APICALL const OSSL_PARAM * (*EVP_MAC_CTX_settable_params)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx);
	APICALL const OSSL_PARAM * (*EVP_RAND_CTX_gettable_params)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx);
	APICALL const OSSL_PARAM * (*EVP_RAND_CTX_settable_params)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx);
	APICALL int (*RAND_set_DRBG_type)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * drbg, const char * propq, const char * cipher, const char * digest);
	APICALL int (*RAND_set_seed_source_type)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * seed, const char * propq);
	APICALL int (*BN_mod_exp_mont_consttime_x2)(struct AmiSSLIFace *Self, BIGNUM * rr1, const BIGNUM * a1, const BIGNUM * p1, const BIGNUM * m1, BN_MONT_CTX * in_mont1, BIGNUM * rr2, const BIGNUM * a2, const BIGNUM * p2, const BIGNUM * m2, BN_MONT_CTX * in_mont2, BN_CTX * ctx);
	APICALL const BIO_METHOD * (*BIO_f_readbuffer)(struct AmiSSLIFace *Self);
	APICALL int (*OSSL_ESS_check_signing_certs)(struct AmiSSLIFace *Self, const ESS_SIGNING_CERT * ss, const ESS_SIGNING_CERT_V2 * ssv2, const STACK_OF(X509) * chain, int require_signing_cert);
	APICALL ESS_SIGNING_CERT * (*OSSL_ESS_signing_cert_new_init)(struct AmiSSLIFace *Self, const X509 * signcert, const STACK_OF(X509) * certs, int set_issuer_serial);
	APICALL ESS_SIGNING_CERT_V2 * (*OSSL_ESS_signing_cert_v2_new_init)(struct AmiSSLIFace *Self, const EVP_MD * hash_alg, const X509 * signcert, const STACK_OF(X509) * certs, int set_issuer_serial);
	APICALL const ASN1_ITEM * (*ESS_SIGNING_CERT_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*ESS_SIGNING_CERT_V2_it)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_Q_digest)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * name, const char * propq, const void * data, size_t datalen, unsigned char * md, size_t * mdlen);
	APICALL int (*EVP_DigestInit_ex2)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const EVP_MD * type, const OSSL_PARAM * params);
	APICALL int (*EVP_EncryptInit_ex2)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, const unsigned char * key, const unsigned char * iv, const OSSL_PARAM * params);
	APICALL int (*EVP_DecryptInit_ex2)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, const unsigned char * key, const unsigned char * iv, const OSSL_PARAM * params);
	APICALL int (*EVP_CipherInit_ex2)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, const unsigned char * key, const unsigned char * iv, int enc, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_sign_init_ex)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_verify_init_ex)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_verify_recover_init_ex)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_encrypt_init_ex)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_decrypt_init_ex)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_derive_init_ex)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const OSSL_PARAM * params);
	APICALL TS_RESP_CTX * (*TS_RESP_CTX_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL X509_REQ * (*X509_REQ_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL EVP_PKEY * (*EVP_PKEY_dup)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	APICALL RSA_PSS_PARAMS * (*RSA_PSS_PARAMS_dup)(struct AmiSSLIFace *Self, const RSA_PSS_PARAMS * a);
	APICALL int (*EVP_PKEY_derive_set_peer_ex)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_PKEY * peer, int validate_peer);
	APICALL const char * (*OSSL_DECODER_get0_name)(struct AmiSSLIFace *Self, const OSSL_DECODER * decoder);
	APICALL const char * (*OSSL_ENCODER_get0_name)(struct AmiSSLIFace *Self, const OSSL_ENCODER * kdf);
	APICALL const char * (*OSSL_DECODER_get0_description)(struct AmiSSLIFace *Self, const OSSL_DECODER * decoder);
	APICALL const char * (*OSSL_ENCODER_get0_description)(struct AmiSSLIFace *Self, const OSSL_ENCODER * kdf);
	APICALL const char * (*OSSL_STORE_LOADER_get0_description)(struct AmiSSLIFace *Self, const OSSL_STORE_LOADER * loader);
	APICALL const char * (*EVP_MD_get0_description)(struct AmiSSLIFace *Self, const EVP_MD * md);
	APICALL const char * (*EVP_CIPHER_get0_description)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
	APICALL const char * (*EVP_MAC_get0_description)(struct AmiSSLIFace *Self, const EVP_MAC * mac);
	APICALL const char * (*EVP_RAND_get0_description)(struct AmiSSLIFace *Self, const EVP_RAND * md);
	APICALL const char * (*EVP_PKEY_get0_description)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL const char * (*EVP_KEYMGMT_get0_description)(struct AmiSSLIFace *Self, const EVP_KEYMGMT * keymgmt);
	APICALL const char * (*EVP_SIGNATURE_get0_description)(struct AmiSSLIFace *Self, const EVP_SIGNATURE * signature);
	APICALL const char * (*EVP_ASYM_CIPHER_get0_description)(struct AmiSSLIFace *Self, const EVP_ASYM_CIPHER * cipher);
	APICALL const char * (*EVP_KEM_get0_description)(struct AmiSSLIFace *Self, const EVP_KEM * wrap);
	APICALL const char * (*EVP_KEYEXCH_get0_description)(struct AmiSSLIFace *Self, const EVP_KEYEXCH * keyexch);
	APICALL const char * (*EVP_KDF_get0_description)(struct AmiSSLIFace *Self, const EVP_KDF * kdf);
	APICALL int (*OPENSSL_sk_find_all)(struct AmiSSLIFace *Self, OPENSSL_STACK * st, const void * data, int * pnum);
	APICALL X509_CRL * (*X509_CRL_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL OSSL_PARAM * (*OSSL_PARAM_dup)(struct AmiSSLIFace *Self, const OSSL_PARAM * p);
	APICALL OSSL_PARAM * (*OSSL_PARAM_merge)(struct AmiSSLIFace *Self, const OSSL_PARAM * p1, const OSSL_PARAM * p2);
	APICALL void (*OSSL_PARAM_free)(struct AmiSSLIFace *Self, OSSL_PARAM * p);
	APICALL int (*EVP_PKEY_todata)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, int selection, OSSL_PARAM ** params);
	APICALL int (*EVP_PKEY_export)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey, int selection, OSSL_CALLBACK * export_cb, void * export_cbarg);
	APICALL const EVP_MD * (*EVP_MD_CTX_get0_md)(struct AmiSSLIFace *Self, const EVP_MD_CTX * ctx);
	APICALL EVP_MD * (*EVP_MD_CTX_get1_md)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx);
	APICALL const EVP_CIPHER * (*EVP_CIPHER_CTX_get0_cipher)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * ctx);
	APICALL EVP_CIPHER * (*EVP_CIPHER_CTX_get1_cipher)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx);
	APICALL OSSL_LIB_CTX * (*OSSL_LIB_CTX_get0_global_default)(struct AmiSSLIFace *Self);
	APICALL const char * (*EVP_SIGNATURE_get0_name)(struct AmiSSLIFace *Self, const EVP_SIGNATURE * signature);
	APICALL const char * (*EVP_ASYM_CIPHER_get0_name)(struct AmiSSLIFace *Self, const EVP_ASYM_CIPHER * cipher);
	APICALL const char * (*EVP_KEM_get0_name)(struct AmiSSLIFace *Self, const EVP_KEM * wrap);
	APICALL const char * (*EVP_KEYEXCH_get0_name)(struct AmiSSLIFace *Self, const EVP_KEYEXCH * keyexch);
	APICALL int (*PKCS5_v2_PBE_keyivgen_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, const EVP_CIPHER * cipher, const EVP_MD * md, int en_de, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*EVP_PBE_scrypt_amiga_1)(struct AmiSSLIFace *Self, const char * pass, size_t passlen, const unsigned char * salt, uint64_t N, uint64_t r, uint64_t p, uint64_t maxmem, void * moreargs);
	APICALL void * (*EVP_PBE_scrypt_amiga_2)(struct AmiSSLIFace *Self, size_t saltlen, unsigned char * key, size_t keylen);
	APICALL void * (*EVP_PBE_scrypt_ex_amiga_2)(struct AmiSSLIFace *Self, size_t saltlen, unsigned char * key, size_t keylen, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL int (*PKCS5_v2_scrypt_keyivgen_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, const EVP_CIPHER * c, const EVP_MD * md, int en_de, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*EVP_PBE_CipherInit_ex)(struct AmiSSLIFace *Self, ASN1_OBJECT * pbe_obj, const char * pass, int passlen, ASN1_TYPE * param, EVP_CIPHER_CTX * ctx, int en_de, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*EVP_PBE_find_ex)(struct AmiSSLIFace *Self, int type, int pbe_nid, int * pcnid, int * pmnid, EVP_PBE_KEYGEN ** pkeygen, EVP_PBE_KEYGEN_EX ** pkeygen_ex);
	APICALL PKCS12_SAFEBAG * (*PKCS12_SAFEBAG_create_pkcs8_encrypt_ex)(struct AmiSSLIFace *Self, int pbe_nid, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, PKCS8_PRIV_KEY_INFO * p8inf, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL PKCS8_PRIV_KEY_INFO * (*PKCS8_decrypt_ex)(struct AmiSSLIFace *Self, const X509_SIG * p8, const char * pass, int passlen, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL PKCS8_PRIV_KEY_INFO * (*PKCS12_decrypt_skey_ex)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag, const char * pass, int passlen, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL X509_SIG * (*PKCS8_encrypt_ex)(struct AmiSSLIFace *Self, int pbe_nid, const EVP_CIPHER * cipher, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, PKCS8_PRIV_KEY_INFO * p8, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL X509_SIG * (*PKCS8_set0_pbe_ex)(struct AmiSSLIFace *Self, const char * pass, int passlen, PKCS8_PRIV_KEY_INFO * p8inf, X509_ALGOR * pbe, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL PKCS7 * (*PKCS12_pack_p7encdata_ex)(struct AmiSSLIFace *Self, int pbe_nid, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, STACK_OF(PKCS12_SAFEBAG) * bags, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL unsigned char * (*PKCS12_pbe_crypt_ex)(struct AmiSSLIFace *Self, const X509_ALGOR * algor, const char * pass, int passlen, const unsigned char * in, int inlen, unsigned char ** data, int * datalen, int en_de, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL void * (*PKCS12_item_decrypt_d2i_ex)(struct AmiSSLIFace *Self, const X509_ALGOR * algor, const ASN1_ITEM * it, const char * pass, int passlen, const ASN1_OCTET_STRING * oct, int zbuf, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL ASN1_OCTET_STRING * (*PKCS12_item_i2d_encrypt_ex)(struct AmiSSLIFace *Self, X509_ALGOR * algor, const ASN1_ITEM * it, const char * pass, int passlen, void * obj, int zbuf, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL PKCS12 * (*PKCS12_init_ex)(struct AmiSSLIFace *Self, int mode, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL int (*PKCS12_key_gen_asc_ex)(struct AmiSSLIFace *Self, const char * pass, int passlen, unsigned char * salt, int saltlen, int id, int iter, int n, unsigned char * out, const EVP_MD * md_type, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL int (*PKCS12_key_gen_uni_ex)(struct AmiSSLIFace *Self, unsigned char * pass, int passlen, unsigned char * salt, int saltlen, int id, int iter, int n, unsigned char * out, const EVP_MD * md_type, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL int (*PKCS12_key_gen_utf8_ex)(struct AmiSSLIFace *Self, const char * pass, int passlen, unsigned char * salt, int saltlen, int id, int iter, int n, unsigned char * out, const EVP_MD * md_type, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL int (*PKCS12_PBE_keyivgen_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, const EVP_CIPHER * cipher, const EVP_MD * md_type, int en_de, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL PKCS12 * (*PKCS12_create_ex)(struct AmiSSLIFace *Self, const char * pass, const char * name, EVP_PKEY * pkey, X509 * cert, STACK_OF(X509) * ca, int nid_key, int nid_cert, int iter, int mac_iter, int keytype, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL PKCS12_SAFEBAG * (*PKCS12_add_key_ex)(struct AmiSSLIFace *Self, STACK_OF(PKCS12_SAFEBAG) ** pbags, EVP_PKEY * key, int key_usage, int iter, int key_nid, const char * pass, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL int (*PKCS12_add_safe_ex)(struct AmiSSLIFace *Self, STACK_OF(PKCS7) ** psafes, STACK_OF(PKCS12_SAFEBAG) * bags, int safe_nid, int iter, const char * pass, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL PKCS12 * (*PKCS12_add_safes_ex)(struct AmiSSLIFace *Self, STACK_OF(PKCS7) * safes, int p7_nid, OSSL_LIB_CTX * ctx, const char * propq);
	APICALL int (*PKCS5_pbe_set0_algor_ex)(struct AmiSSLIFace *Self, X509_ALGOR * algor, int alg, int iter, const unsigned char * salt, int saltlen, OSSL_LIB_CTX * libctx);
	APICALL X509_ALGOR * (*PKCS5_pbe_set_ex)(struct AmiSSLIFace *Self, int alg, int iter, const unsigned char * salt, int saltlen, OSSL_LIB_CTX * libctx);
	APICALL X509_ALGOR * (*PKCS5_pbe2_set_iv_ex)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher, int iter, unsigned char * salt, int saltlen, unsigned char * aiv, int prf_nid, OSSL_LIB_CTX * libctx);
	APICALL X509_ALGOR * (*PKCS5_pbkdf2_set_ex)(struct AmiSSLIFace *Self, int iter, unsigned char * salt, int saltlen, int prf_nid, int keylen, OSSL_LIB_CTX * libctx);
	APICALL BIO * (*BIO_new_from_core_bio)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, OSSL_CORE_BIO * corebio);
	APICALL BIO * (*BIO_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const BIO_METHOD * method);
	APICALL const BIO_METHOD * (*BIO_s_core)(struct AmiSSLIFace *Self);
	APICALL int (*BIO_get_line)(struct AmiSSLIFace *Self, BIO * bio, char * buf, int size);
	APICALL OSSL_LIB_CTX * (*OSSL_LIB_CTX_new_from_dispatch)(struct AmiSSLIFace *Self, const OSSL_CORE_HANDLE * handle, const OSSL_DISPATCH * in);
	APICALL OSSL_LIB_CTX * (*OSSL_LIB_CTX_new_child)(struct AmiSSLIFace *Self, const OSSL_CORE_HANDLE * handle, const OSSL_DISPATCH * in);
	APICALL const OSSL_DISPATCH * (*OSSL_PROVIDER_get0_dispatch)(struct AmiSSLIFace *Self, const OSSL_PROVIDER * prov);
	APICALL int (*PKCS5_PBE_keyivgen_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * cctx, const char * pass, int passlen, ASN1_TYPE * param, const EVP_CIPHER * cipher, const EVP_MD * md, int en_de, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL size_t (*EVP_MAC_CTX_get_block_size)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx);
	APICALL long (*BIO_debug_callback_ex)(struct AmiSSLIFace *Self, BIO * bio, int oper, const char * argp, size_t len, int argi, long argl, int ret, size_t * processed);
	APICALL EVP_PKEY * (*b2i_PVK_bio_ex)(struct AmiSSLIFace *Self, BIO * in, pem_password_cb * cb, void * u, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*i2b_PVK_bio_ex)(struct AmiSSLIFace *Self, BIO * out, const EVP_PKEY * pk, int enclevel, pem_password_cb * cb, void * u, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL OSSL_LIB_CTX * (*NCONF_get0_libctx)(struct AmiSSLIFace *Self, const CONF * conf);
	APICALL STACK_OF(OPENSSL_CSTRING) * (*NCONF_get_section_names)(struct AmiSSLIFace *Self, const CONF * conf);
	APICALL X509_PUBKEY * (*X509_PUBKEY_new_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL ASN1_VALUE * (*ASN1_item_new_ex)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL void * (*ASN1_item_d2i_bio_ex)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, BIO * in, void * pval, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL ASN1_VALUE * (*ASN1_item_d2i_ex)(struct AmiSSLIFace *Self, ASN1_VALUE ** val, const unsigned char ** in, long len, const ASN1_ITEM * it, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*ASN1_TIME_print_ex)(struct AmiSSLIFace *Self, BIO * bp, const ASN1_TIME * tm, unsigned long flags);
	APICALL const OSSL_PROVIDER * (*EVP_PKEY_get0_provider)(struct AmiSSLIFace *Self, const EVP_PKEY * key);
	APICALL const OSSL_PROVIDER * (*EVP_PKEY_CTX_get0_provider)(struct AmiSSLIFace *Self, const EVP_PKEY_CTX * ctx);
	APICALL int (*OPENSSL_strcasecmp)(struct AmiSSLIFace *Self, const char * s1, const char * s2);
	APICALL int (*OPENSSL_strncasecmp)(struct AmiSSLIFace *Self, const char * s1, const char * s2, size_t n);
	APICALL int (*OSSL_CMP_CTX_reset_geninfo_ITAVs)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx);
	APICALL int (*EVP_RAND_CTX_up_ref)(struct AmiSSLIFace *Self, EVP_RAND_CTX * ctx);
	APICALL int (*RAND_set0_public)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, EVP_RAND_CTX * rand);
	APICALL int (*RAND_set0_private)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, EVP_RAND_CTX * rand);
	APICALL EVP_MD_CTX * (*EVP_MD_CTX_dup)(struct AmiSSLIFace *Self, const EVP_MD_CTX * in);
	APICALL EVP_CIPHER_CTX * (*EVP_CIPHER_CTX_dup)(struct AmiSSLIFace *Self, const EVP_CIPHER_CTX * in);
	APICALL int (*BN_are_coprime)(struct AmiSSLIFace *Self, BIGNUM * a, const BIGNUM * b, BN_CTX * ctx);
	APICALL int (*OSSL_CMP_MSG_update_recipNonce)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, OSSL_CMP_MSG * msg);
	APICALL int (*SSL_client_hello_get_extension_order)(struct AmiSSLIFace *Self, SSL * s, uint16_t * exts, size_t * num_exts);
	APICALL const SSL_METHOD * (*OSSL_QUIC_client_method)(struct AmiSSLIFace *Self);
	APICALL const SSL_METHOD * (*OSSL_QUIC_client_thread_method)(struct AmiSSLIFace *Self);
	APICALL int (*SSL_CTX_set1_cert_comp_preference)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int * algs, size_t len);
	APICALL int (*SSL_set1_cert_comp_preference)(struct AmiSSLIFace *Self, SSL * ssl, int * algs, size_t len);
	APICALL int (*SSL_CTX_compress_certs)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int alg);
	APICALL int (*SSL_compress_certs)(struct AmiSSLIFace *Self, SSL * ssl, int alg);
	APICALL int (*SSL_CTX_set1_compressed_cert)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int algorithm, unsigned char * comp_data, size_t comp_length, size_t orig_length);
	APICALL int (*SSL_set1_compressed_cert)(struct AmiSSLIFace *Self, SSL * ssl, int algorithm, unsigned char * comp_data, size_t comp_length, size_t orig_length);
	APICALL size_t (*SSL_CTX_get1_compressed_cert)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int alg, unsigned char ** data, size_t * orig_len);
	APICALL size_t (*SSL_get1_compressed_cert)(struct AmiSSLIFace *Self, SSL * ssl, int alg, unsigned char ** data, size_t * orig_len);
	APICALL int (*SSL_get_rpoll_descriptor)(struct AmiSSLIFace *Self, SSL * s, BIO_POLL_DESCRIPTOR * desc);
	APICALL int (*SSL_get_wpoll_descriptor)(struct AmiSSLIFace *Self, SSL * s, BIO_POLL_DESCRIPTOR * desc);
	APICALL int (*SSL_set_blocking_mode)(struct AmiSSLIFace *Self, SSL * s, int blocking);
	APICALL int (*SSL_get_blocking_mode)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_set1_initial_peer_addr)(struct AmiSSLIFace *Self, SSL * s, const BIO_ADDR * peer_addr);
	APICALL int (*SSL_net_read_desired)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_net_write_desired)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_shutdown_ex)(struct AmiSSLIFace *Self, SSL * ssl, uint64_t flags, const SSL_SHUTDOWN_EX_ARGS * args, size_t args_len);
	APICALL int (*SSL_stream_conclude)(struct AmiSSLIFace *Self, SSL * ssl, uint64_t flags);
	APICALL int (*SSL_inject_net_dgram)(struct AmiSSLIFace *Self, SSL * s, const unsigned char * buf, size_t buf_len, const BIO_ADDR * peer, const BIO_ADDR * local);
	APICALL EVP_PKEY * (*SSL_get0_peer_rpk)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL EVP_PKEY * (*SSL_SESSION_get0_peer_rpk)(struct AmiSSLIFace *Self, SSL_SESSION * s);
	APICALL int (*SSL_set1_client_cert_type)(struct AmiSSLIFace *Self, SSL * s, const unsigned char * val, size_t len);
	APICALL int (*SSL_get0_client_cert_type)(struct AmiSSLIFace *Self, const SSL * s, unsigned char ** t, size_t * len);
	APICALL int (*SSL_set1_server_cert_type)(struct AmiSSLIFace *Self, SSL * s, const unsigned char * val, size_t len);
	APICALL int (*SSL_get0_server_cert_type)(struct AmiSSLIFace *Self, const SSL * s, unsigned char ** t, size_t * len);
	APICALL int (*SSL_CTX_set1_client_cert_type)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const unsigned char * val, size_t len);
	APICALL int (*SSL_CTX_get0_client_cert_type)(struct AmiSSLIFace *Self, const SSL_CTX * ctx, unsigned char ** t, size_t * len);
	APICALL int (*SSL_CTX_set1_server_cert_type)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const unsigned char * val, size_t len);
	APICALL int (*SSL_CTX_get0_server_cert_type)(struct AmiSSLIFace *Self, const SSL_CTX * s, unsigned char ** t, size_t * len);
	APICALL int (*SSL_get_negotiated_client_cert_type)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_get_negotiated_server_cert_type)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_add_expected_rpk)(struct AmiSSLIFace *Self, SSL * s, EVP_PKEY * rpk);
	APICALL SSL_SESSION * (*d2i_SSL_SESSION_ex)(struct AmiSSLIFace *Self, SSL_SESSION ** a, const unsigned char ** pp, long length, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*SSL_is_tls)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_is_quic)(struct AmiSSLIFace *Self, const SSL * s);
	APICALL int (*SSL_get_handshake_rtt)(struct AmiSSLIFace *Self, const SSL * s, uint64_t * rtt);
	APICALL SSL * (*SSL_new_stream)(struct AmiSSLIFace *Self, SSL * s, uint64_t flags);
	APICALL SSL * (*SSL_get0_connection)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_is_connection)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_get_stream_type)(struct AmiSSLIFace *Self, SSL * s);
	APICALL uint64_t (*SSL_get_stream_id)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_set_default_stream_mode)(struct AmiSSLIFace *Self, SSL * s, uint32_t mode);
	APICALL SSL * (*SSL_accept_stream)(struct AmiSSLIFace *Self, SSL * s, uint64_t flags);
	APICALL size_t (*SSL_get_accept_stream_queue_len)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_stream_reset)(struct AmiSSLIFace *Self, SSL * ssl, const SSL_STREAM_RESET_ARGS * args, size_t args_len);
	APICALL int (*SSL_get_stream_read_state)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL int (*SSL_get_stream_write_state)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL int (*SSL_get_stream_read_error_code)(struct AmiSSLIFace *Self, SSL * ssl, uint64_t * app_error_code);
	APICALL int (*SSL_get_stream_write_error_code)(struct AmiSSLIFace *Self, SSL * ssl, uint64_t * app_error_code);
	APICALL int (*SSL_get_conn_close_info)(struct AmiSSLIFace *Self, SSL * ssl, SSL_CONN_CLOSE_INFO * info, size_t info_len);
	APICALL int (*SSL_set_incoming_stream_policy)(struct AmiSSLIFace *Self, SSL * s, int policy, uint64_t aec);
	APICALL int (*SSL_handle_events)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_get_event_timeout)(struct AmiSSLIFace *Self, SSL * s, struct timeval * tv, int * is_infinite);
	APICALL const char * (*SSL_get0_group_name)(struct AmiSSLIFace *Self, SSL * s);
	APICALL int (*SSL_is_stream_local)(struct AmiSSLIFace *Self, SSL * s);
	APICALL const BIO_METHOD * (*BIO_f_zlib)(struct AmiSSLIFace *Self);
	APICALL void (*X509_PUBKEY_set0_public_key)(struct AmiSSLIFace *Self, X509_PUBKEY * pub, unsigned char * penc, int penclen);
	APICALL void (*OSSL_STACK_OF_X509_free)(struct AmiSSLIFace *Self, STACK_OF(X509) * certs);
	APICALL int (*OSSL_trace_string)(struct AmiSSLIFace *Self, BIO * out, int text, int full, const unsigned char * data, size_t size);
	APICALL BIGNUM * (*BN_signed_bin2bn)(struct AmiSSLIFace *Self, const unsigned char * s, int len, BIGNUM * ret);
	APICALL int (*BN_signed_bn2bin)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to, int tolen);
	APICALL BIGNUM * (*BN_signed_lebin2bn)(struct AmiSSLIFace *Self, const unsigned char * s, int len, BIGNUM * ret);
	APICALL int (*BN_signed_bn2lebin)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to, int tolen);
	APICALL BIGNUM * (*BN_signed_native2bn)(struct AmiSSLIFace *Self, const unsigned char * s, int len, BIGNUM * ret);
	APICALL int (*BN_signed_bn2native)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to, int tolen);
	APICALL int (*ASYNC_set_mem_functions)(struct AmiSSLIFace *Self, ASYNC_stack_alloc_fn alloc_fn, ASYNC_stack_free_fn free_fn);
	APICALL void (*ASYNC_get_mem_functions)(struct AmiSSLIFace *Self, ASYNC_stack_alloc_fn * alloc_fn, ASYNC_stack_free_fn * free_fn);
	APICALL BIO_ADDR * (*BIO_ADDR_dup)(struct AmiSSLIFace *Self, const BIO_ADDR * ap);
	APICALL OSSL_CMP_ITAV * (*OSSL_CMP_ITAV_new_caCerts)(struct AmiSSLIFace *Self, const STACK_OF(X509) * caCerts);
	APICALL int (*OSSL_CMP_ITAV_get0_caCerts)(struct AmiSSLIFace *Self, const OSSL_CMP_ITAV * itav, STACK_OF(X509) ** out);
	APICALL int (*OSSL_CMP_get1_caCerts)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, STACK_OF(X509) ** out);
	APICALL OSSL_CMP_ITAV * (*OSSL_CMP_ITAV_new_rootCaCert)(struct AmiSSLIFace *Self, const X509 * rootCaCert);
	APICALL int (*OSSL_CMP_ITAV_get0_rootCaCert)(struct AmiSSLIFace *Self, const OSSL_CMP_ITAV * itav, X509 ** out);
	APICALL OSSL_CMP_ITAV * (*OSSL_CMP_ITAV_new_rootCaKeyUpdate)(struct AmiSSLIFace *Self, const X509 * newWithNew, const X509 * newWithOld, const X509 * oldWithNew);
	APICALL int (*OSSL_CMP_ITAV_get0_rootCaKeyUpdate)(struct AmiSSLIFace *Self, const OSSL_CMP_ITAV * itav, X509 ** newWithNew, X509 ** newWithOld, X509 ** oldWithNew);
	APICALL int (*OSSL_CMP_get1_rootCaKeyUpdate)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const X509 * oldWithOld, X509 ** newWithNew, X509 ** newWithOld, X509 ** oldWithNew);
	APICALL OSSL_LIB_CTX * (*OSSL_CMP_CTX_get0_libctx)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL const char * (*OSSL_CMP_CTX_get0_propq)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL X509 * (*OSSL_CMP_CTX_get0_validatedSrvCert)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL int (*OSSL_CMP_CTX_set1_serialNumber)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const ASN1_INTEGER * sn);
	APICALL X509_PUBKEY * (*OSSL_CRMF_CERTTEMPLATE_get0_publicKey)(struct AmiSSLIFace *Self, const OSSL_CRMF_CERTTEMPLATE * tmpl);
	APICALL int (*CMS_final_digest)(struct AmiSSLIFace *Self, CMS_ContentInfo * cms, const unsigned char * md, unsigned int mdlen, BIO * dcont, unsigned int flags);
	APICALL const ASN1_ITEM * (*CMS_EnvelopedData_it)(struct AmiSSLIFace *Self);
	APICALL BIO * (*CMS_EnvelopedData_decrypt)(struct AmiSSLIFace *Self, CMS_EnvelopedData * env, BIO * detached_data, EVP_PKEY * pkey, X509 * cert, ASN1_OCTET_STRING * secret, unsigned int flags, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL void (*CMS_SignedData_free)(struct AmiSSLIFace *Self, CMS_SignedData * a);
	APICALL CMS_SignedData * (*CMS_SignedData_new)(struct AmiSSLIFace *Self);
	APICALL BIO * (*CMS_SignedData_verify)(struct AmiSSLIFace *Self, CMS_SignedData * sd, BIO * detached_data, STACK_OF(X509) * scerts, X509_STORE * store, STACK_OF(X509) * extra, STACK_OF(X509_CRL) * crls, unsigned int flags, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL const BIO_METHOD * (*BIO_s_dgram_mem)(struct AmiSSLIFace *Self);
	APICALL int (*BIO_recvmmsg)(struct AmiSSLIFace *Self, BIO * b, BIO_MSG * msg, size_t stride, size_t num_msg, uint64_t flags, size_t * msgs_processed);
	APICALL int (*BIO_sendmmsg)(struct AmiSSLIFace *Self, BIO * b, BIO_MSG * msg, size_t stride, size_t num_msg, uint64_t flags, size_t * msgs_processed);
	APICALL int (*BIO_meth_set_sendmmsg)(struct AmiSSLIFace *Self, BIO_METHOD * biom, int (*f)(BIO *, BIO_MSG *, size_t, size_t, uint64_t, size_t *));
	DEPRECATED APICALL int (*(*BIO_meth_get_sendmmsg)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *, BIO_MSG *, size_t, size_t, uint64_t, size_t *);
	APICALL int (*BIO_meth_set_recvmmsg)(struct AmiSSLIFace *Self, BIO_METHOD * biom, int (*f)(BIO *, BIO_MSG *, size_t, size_t, uint64_t, size_t *));
	DEPRECATED APICALL int (*(*BIO_meth_get_recvmmsg)(struct AmiSSLIFace *Self, const BIO_METHOD * biom))(BIO *, BIO_MSG *, size_t, size_t, uint64_t, size_t *);
	APICALL int (*BIO_err_is_non_fatal)(struct AmiSSLIFace *Self, unsigned int errcode);
	APICALL const BIO_METHOD * (*BIO_s_dgram_pair)(struct AmiSSLIFace *Self);
	APICALL int (*BIO_new_bio_dgram_pair)(struct AmiSSLIFace *Self, BIO ** bio1, size_t writebuf1, BIO ** bio2, size_t writebuf2);
	APICALL int (*EVP_PKEY_auth_encapsulate_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_PKEY * authpriv, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_auth_decapsulate_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_PKEY * authpub, const OSSL_PARAM * params);
	APICALL void (*PKCS12_SAFEBAG_set0_attrs)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, STACK_OF(X509_ATTRIBUTE) * attrs);
	APICALL PKCS12 * (*PKCS12_create_ex2_amiga_1)(struct AmiSSLIFace *Self, const char * pass, const char * name, EVP_PKEY * pkey, X509 * cert, STACK_OF(X509) * ca, int nid_key, int nid_cert, void * moreargs);
	APICALL void * (*PKCS12_create_ex2_amiga_2)(struct AmiSSLIFace *Self, int iter, int mac_iter, int keytype, OSSL_LIB_CTX * ctx, const char * propq, PKCS12_create_cb * cb, void * cbarg);
	APICALL void (*OSSL_sleep)(struct AmiSSLIFace *Self, uint64_t millis);
	APICALL uint32_t (*OSSL_get_thread_support_flags)(struct AmiSSLIFace *Self);
	APICALL int (*OSSL_set_max_threads)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, uint64_t max_threads);
	APICALL uint64_t (*OSSL_get_max_threads)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx);
	APICALL COMP_METHOD * (*COMP_brotli)(struct AmiSSLIFace *Self);
	APICALL COMP_METHOD * (*COMP_brotli_oneshot)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_f_brotli)(struct AmiSSLIFace *Self);
	APICALL COMP_METHOD * (*COMP_zstd)(struct AmiSSLIFace *Self);
	APICALL COMP_METHOD * (*COMP_zstd_oneshot)(struct AmiSSLIFace *Self);
	APICALL const BIO_METHOD * (*BIO_f_zstd)(struct AmiSSLIFace *Self);
	APICALL EVP_PKEY * (*d2i_PUBKEY_ex_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** a, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL COMP_METHOD * (*COMP_zlib_oneshot)(struct AmiSSLIFace *Self);
	APICALL int (*OSSL_HPKE_keygen_amiga)(struct AmiSSLIFace *Self, OSSL_HPKE_SUITE * suite, unsigned char * pub, size_t * publen, EVP_PKEY ** priv, const unsigned char * ikm, size_t ikmlen, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*OSSL_HPKE_suite_check_amiga)(struct AmiSSLIFace *Self, OSSL_HPKE_SUITE * suite);
	APICALL int (*OSSL_HPKE_get_grease_value)(struct AmiSSLIFace *Self, const OSSL_HPKE_SUITE * suite_in, OSSL_HPKE_SUITE * suite, unsigned char * enc, size_t * enclen, unsigned char * ct, size_t ctlen, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*OSSL_HPKE_str2suite)(struct AmiSSLIFace *Self, const char * str, OSSL_HPKE_SUITE * suite);
	APICALL void (*OSSL_HPKE_CTX_free)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx);
	APICALL OSSL_HPKE_CTX * (*OSSL_HPKE_CTX_new_amiga)(struct AmiSSLIFace *Self, int mode, OSSL_HPKE_SUITE * suite, int role, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*OSSL_HPKE_CTX_set1_authpriv)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx, EVP_PKEY * priv);
	APICALL int (*OSSL_HPKE_CTX_set1_authpub)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx, const unsigned char * pub, size_t publen);
	APICALL int (*OSSL_HPKE_CTX_set1_psk)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx, const char * pskid, const unsigned char * psk, size_t psklen);
	APICALL int (*OSSL_HPKE_CTX_set1_ikme)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx, const unsigned char * ikme, size_t ikmelen);
	APICALL size_t (*OSSL_HPKE_get_ciphertext_size_amiga)(struct AmiSSLIFace *Self, OSSL_HPKE_SUITE * suite, size_t clearlen);
	APICALL size_t (*OSSL_HPKE_get_public_encap_size_amiga)(struct AmiSSLIFace *Self, OSSL_HPKE_SUITE * suite);
	APICALL int (*OSSL_HPKE_export)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx, unsigned char * secret, size_t secretlen, const unsigned char * label, size_t labellen);
	APICALL int (*OSSL_HPKE_encap)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx, unsigned char * enc, size_t * enclen, const unsigned char * pub, size_t publen, const unsigned char * info, size_t infolen);
	APICALL int (*OSSL_HPKE_decap)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx, const unsigned char * enc, size_t enclen, EVP_PKEY * recippriv, const unsigned char * info, size_t infolen);
	APICALL int (*OSSL_HPKE_seal)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx, unsigned char * ct, size_t * ctlen, const unsigned char * aad, size_t aadlen, const unsigned char * pt, size_t ptlen);
	APICALL int (*OSSL_HPKE_open)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx, unsigned char * pt, size_t * ptlen, const unsigned char * aad, size_t aadlen, const unsigned char * ct, size_t ctlen);
	APICALL int (*OSSL_HPKE_CTX_get_seq)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx, uint64_t * seq);
	APICALL int (*OSSL_HPKE_CTX_set_seq)(struct AmiSSLIFace *Self, OSSL_HPKE_CTX * ctx, uint64_t seq);
	APICALL size_t (*OSSL_HPKE_get_recommended_ikmelen_amiga)(struct AmiSSLIFace *Self, OSSL_HPKE_SUITE * suite);
	APICALL const char * (*OSSL_PROVIDER_get0_default_search_path)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx);
	APICALL int (*BIO_get_rpoll_descriptor)(struct AmiSSLIFace *Self, BIO * b, BIO_POLL_DESCRIPTOR * desc);
	APICALL int (*BIO_get_wpoll_descriptor)(struct AmiSSLIFace *Self, BIO * b, BIO_POLL_DESCRIPTOR * desc);
	APICALL void * (*ASN1_item_unpack_ex)(struct AmiSSLIFace *Self, const ASN1_STRING * oct, const ASN1_ITEM * it, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL X509 * (*PKCS12_SAFEBAG_get1_cert_ex)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL X509_CRL * (*PKCS12_SAFEBAG_get1_crl_ex)(struct AmiSSLIFace *Self, const PKCS12_SAFEBAG * bag, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL OSSL_PARAM * (*EC_GROUP_to_params)(struct AmiSSLIFace *Self, const EC_GROUP * group, OSSL_LIB_CTX * libctx, const char * propq, BN_CTX * bnctx);
	APICALL int (*X509_STORE_CTX_init_rpk)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, X509_STORE * trust_store, EVP_PKEY* rpk);
	APICALL EVP_PKEY * (*X509_STORE_CTX_get0_rpk)(struct AmiSSLIFace *Self, const X509_STORE_CTX * ctx);
	APICALL void (*X509_STORE_CTX_set0_rpk)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, EVP_PKEY * target);
	APICALL int (*CRYPTO_atomic_load_int)(struct AmiSSLIFace *Self, int * val, int * ret, CRYPTO_RWLOCK * lock);
	APICALL ERR_STATE * (*OSSL_ERR_STATE_new)(struct AmiSSLIFace *Self);
	APICALL void (*OSSL_ERR_STATE_save)(struct AmiSSLIFace *Self, ERR_STATE * es);
	APICALL void (*OSSL_ERR_STATE_restore)(struct AmiSSLIFace *Self, const ERR_STATE * es);
	APICALL void (*OSSL_ERR_STATE_free)(struct AmiSSLIFace *Self, ERR_STATE * es);
	APICALL int (*ERR_count_to_mark)(struct AmiSSLIFace *Self);
	APICALL OSSL_PROVIDER * (*OSSL_PROVIDER_load_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * a, const char * name, OSSL_PARAM * params);
	APICALL OSSL_PROVIDER * (*OSSL_PROVIDER_try_load_ex)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * a, const char * name, OSSL_PARAM * params, int retain_fallbacks);
	APICALL void (*OSSL_ERR_STATE_save_to_mark)(struct AmiSSLIFace *Self, ERR_STATE * es);
	APICALL void (*X509_STORE_CTX_set_get_crl)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, X509_STORE_CTX_get_crl_fn get_crl);
	APICALL void (*X509_STORE_CTX_set_current_reasons)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, unsigned int current_reasons);
	APICALL int (*OSSL_STORE_delete)(struct AmiSSLIFace *Self, const char * uri, OSSL_LIB_CTX * libctx, const char * propq, const UI_METHOD * ui_method, void * ui_data, const OSSL_PARAM * params);
	APICALL int (*BIO_ADDR_copy)(struct AmiSSLIFace *Self, BIO_ADDR * dst, const BIO_ADDR * src);
	APICALL int (*SSL_write_ex2)(struct AmiSSLIFace *Self, SSL * s, const void * buf, size_t num, uint64_t flags, size_t * written);
	APICALL int (*SSL_get_value_uint)(struct AmiSSLIFace *Self, SSL * s, uint32_t class_, uint32_t id, uint64_t * v);
	APICALL int (*SSL_set_value_uint)(struct AmiSSLIFace *Self, SSL * s, uint32_t class_, uint32_t id, uint64_t v);
	APICALL int (*SSL_poll)(struct AmiSSLIFace *Self, SSL_POLL_ITEM * items, size_t num_items, size_t stride, const struct timeval * timeout, uint64_t flags, size_t * result_count);
	APICALL time_t (*SSL_SESSION_get_time_ex)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
	APICALL time_t (*SSL_SESSION_set_time_ex)(struct AmiSSLIFace *Self, SSL_SESSION * s, time_t t);
	APICALL STACK_OF(OSSL_CMP_ITAV) * (*OSSL_CMP_CTX_get0_geninfo_ITAVs)(struct AmiSSLIFace *Self, const OSSL_CMP_CTX * ctx);
	APICALL STACK_OF(OSSL_CMP_ITAV) * (*OSSL_CMP_HDR_get0_geninfo_ITAVs)(struct AmiSSLIFace *Self, const OSSL_CMP_PKIHEADER * hdr);
	APICALL OSSL_CMP_ITAV * (*OSSL_CMP_ITAV_new0_certProfile)(struct AmiSSLIFace *Self, STACK_OF(ASN1_UTF8STRING) * certProfile);
	APICALL int (*OSSL_CMP_ITAV_get0_certProfile)(struct AmiSSLIFace *Self, const OSSL_CMP_ITAV * itav, STACK_OF(ASN1_UTF8STRING) ** out);
	APICALL X509_PUBKEY * (*OSSL_CMP_MSG_get0_certreq_publickey)(struct AmiSSLIFace *Self, const OSSL_CMP_MSG * msg);
	APICALL int (*OSSL_CMP_SRV_CTX_init_trans)(struct AmiSSLIFace *Self, OSSL_CMP_SRV_CTX * srv_ctx, OSSL_CMP_SRV_delayed_delivery_cb_t delay, OSSL_CMP_SRV_clean_transaction_cb_t clean);
	APICALL int (*EVP_DigestSqueeze)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * out, size_t outlen);
	APICALL int (*ERR_pop)(struct AmiSSLIFace *Self);
	APICALL STACK_OF(X509_OBJECT) * (*X509_STORE_get1_objects)(struct AmiSSLIFace *Self, X509_STORE * xs);
	APICALL OPENSSL_LHASH * (*OPENSSL_LH_set_thunks)(struct AmiSSLIFace *Self, OPENSSL_LHASH * lh, OPENSSL_LH_HASHFUNCTHUNK hw, OPENSSL_LH_COMPFUNCTHUNK cw, OPENSSL_LH_DOALL_FUNC_THUNK daw, OPENSSL_LH_DOALL_FUNCARG_THUNK daaw);
	APICALL void (*OPENSSL_LH_doall_arg_thunk)(struct AmiSSLIFace *Self, OPENSSL_LHASH * lh, OPENSSL_LH_DOALL_FUNCARG_THUNK daaw, OPENSSL_LH_DOALL_FUNCARG fn, void * arg);
	APICALL void (*OSSL_HTTP_REQ_CTX_set_max_response_hdr_lines)(struct AmiSSLIFace *Self, OSSL_HTTP_REQ_CTX * rctx, size_t count);
	APICALL void (*SSL_CTX_flush_sessions_ex)(struct AmiSSLIFace *Self, SSL_CTX * ctx, time_t tm);
	APICALL int (*SSL_CTX_set_block_padding_ex)(struct AmiSSLIFace *Self, SSL_CTX * ctx, size_t app_block_size, size_t hs_block_size);
	APICALL int (*SSL_set_block_padding_ex)(struct AmiSSLIFace *Self, SSL * ssl, size_t app_block_size, size_t hs_block_size);
	APICALL char * (*SSL_get1_builtin_sigalgs)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx);
	APICALL DIST_POINT_NAME * (*DIST_POINT_NAME_dup)(struct AmiSSLIFace *Self, const DIST_POINT_NAME * a);
	APICALL int (*GENERAL_NAME_set1_X509_NAME)(struct AmiSSLIFace *Self, GENERAL_NAME ** tgt, const X509_NAME * src);
	APICALL OSSL_CMP_CRLSTATUS * (*OSSL_CMP_CRLSTATUS_create)(struct AmiSSLIFace *Self, const X509_CRL * crl, const X509 * cert, int only_DN);
	APICALL void (*OSSL_CMP_CRLSTATUS_free)(struct AmiSSLIFace *Self, OSSL_CMP_CRLSTATUS * crlstatus);
	APICALL int (*OSSL_CMP_CRLSTATUS_get0)(struct AmiSSLIFace *Self, const OSSL_CMP_CRLSTATUS * crlstatus, DIST_POINT_NAME ** dpn, GENERAL_NAMES ** issuer, ASN1_TIME ** thisUpdate);
	APICALL OSSL_CMP_CRLSTATUS * (*OSSL_CMP_CRLSTATUS_new1)(struct AmiSSLIFace *Self, const DIST_POINT_NAME * dpn, const GENERAL_NAMES * issuer, const ASN1_TIME * thisUpdate);
	APICALL int (*OSSL_CMP_ITAV_get0_crlStatusList)(struct AmiSSLIFace *Self, const OSSL_CMP_ITAV * itav, STACK_OF(OSSL_CMP_CRLSTATUS) ** out);
	APICALL int (*OSSL_CMP_ITAV_get0_crls)(struct AmiSSLIFace *Self, const OSSL_CMP_ITAV * it, STACK_OF(X509_CRL) ** out);
	APICALL OSSL_CMP_ITAV * (*OSSL_CMP_ITAV_new0_crlStatusList)(struct AmiSSLIFace *Self, STACK_OF(OSSL_CMP_CRLSTATUS) * crlStatusList);
	APICALL OSSL_CMP_ITAV * (*OSSL_CMP_ITAV_new_crls)(struct AmiSSLIFace *Self, const X509_CRL * crls);
	APICALL int (*OSSL_CMP_get1_crlUpdate)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, const X509 * crlcert, const X509_CRL * last_crl, X509_CRL ** crl);
	APICALL OSSL_CMP_ITAV * (*OSSL_CMP_ITAV_new0_certReqTemplate)(struct AmiSSLIFace *Self, OSSL_CRMF_CERTTEMPLATE * certTemplate, OSSL_CMP_ATAVS * keySpec);
	APICALL int (*OSSL_CMP_ITAV_get1_certReqTemplate)(struct AmiSSLIFace *Self, const OSSL_CMP_ITAV * itav, OSSL_CRMF_CERTTEMPLATE ** certTemplate, OSSL_CMP_ATAVS ** keySpec);
	APICALL OSSL_CMP_ATAV * (*OSSL_CMP_ATAV_create)(struct AmiSSLIFace *Self, ASN1_OBJECT * type, ASN1_TYPE * value);
	APICALL void (*OSSL_CMP_ATAV_set0)(struct AmiSSLIFace *Self, OSSL_CMP_ATAV * itav, ASN1_OBJECT * type, ASN1_TYPE * value);
	APICALL ASN1_OBJECT * (*OSSL_CMP_ATAV_get0_type)(struct AmiSSLIFace *Self, const OSSL_CMP_ATAV * itav);
	APICALL ASN1_TYPE * (*OSSL_CMP_ATAV_get0_value)(struct AmiSSLIFace *Self, const OSSL_CMP_ATAV * itav);
	APICALL OSSL_CMP_ATAV * (*OSSL_CMP_ATAV_new_algId)(struct AmiSSLIFace *Self, const X509_ALGOR * alg);
	APICALL X509_ALGOR * (*OSSL_CMP_ATAV_get0_algId)(struct AmiSSLIFace *Self, const OSSL_CMP_ATAV * atav);
	APICALL OSSL_CMP_ATAV * (*OSSL_CMP_ATAV_new_rsaKeyLen)(struct AmiSSLIFace *Self, int len);
	APICALL int (*OSSL_CMP_ATAV_get_rsaKeyLen)(struct AmiSSLIFace *Self, const OSSL_CMP_ATAV * atav);
	APICALL int (*OSSL_CMP_ATAV_push1)(struct AmiSSLIFace *Self, OSSL_CMP_ATAVS ** sk_p, const OSSL_CMP_ATAV * atav);
	APICALL int (*OSSL_CMP_get1_certReqTemplate)(struct AmiSSLIFace *Self, OSSL_CMP_CTX * ctx, OSSL_CRMF_CERTTEMPLATE ** certTemplate, OSSL_CMP_ATAVS ** keySpec);
	APICALL OSSL_CMP_ATAVS * (*d2i_OSSL_CMP_ATAVS)(struct AmiSSLIFace *Self, OSSL_CMP_ATAVS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CMP_ATAVS)(struct AmiSSLIFace *Self, const OSSL_CMP_ATAVS * a, unsigned char ** out);
	APICALL void (*OSSL_CMP_ATAVS_free)(struct AmiSSLIFace *Self, OSSL_CMP_ATAVS * a);
	APICALL OSSL_CMP_ATAVS * (*OSSL_CMP_ATAVS_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CMP_ATAVS_it)(struct AmiSSLIFace *Self);
	APICALL void (*OSSL_CRMF_ATTRIBUTETYPEANDVALUE_free)(struct AmiSSLIFace *Self, OSSL_CRMF_ATTRIBUTETYPEANDVALUE * v);
	APICALL OSSL_CRMF_ATTRIBUTETYPEANDVALUE * (*OSSL_CRMF_ATTRIBUTETYPEANDVALUE_dup)(struct AmiSSLIFace *Self, const OSSL_CRMF_ATTRIBUTETYPEANDVALUE * a);
	APICALL OSSL_CRMF_CERTTEMPLATE * (*OSSL_CRMF_CERTTEMPLATE_dup)(struct AmiSSLIFace *Self, const OSSL_CRMF_CERTTEMPLATE * a);
	APICALL int (*CRYPTO_atomic_store)(struct AmiSSLIFace *Self, uint64_t * dst, uint64_t val, CRYPTO_RWLOCK * lock);
	APICALL void * (*CRYPTO_aligned_alloc)(struct AmiSSLIFace *Self, size_t num, size_t align, void ** freeptr, const char * file, int line);
	APICALL STACK_OF(X509_EXTENSION) * (*X509v3_add_extensions)(struct AmiSSLIFace *Self, STACK_OF(X509_EXTENSION) ** target, const STACK_OF(X509_EXTENSION) * exts);
	APICALL int (*PKCS12_set_pbmac1_pbkdf2)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, const EVP_MD * md_type, const char * prf_md_name);
	APICALL PBKDF2PARAM * (*PBMAC1_get1_pbkdf2_param)(struct AmiSSLIFace *Self, const X509_ALGOR * macalg);
	APICALL PBMAC1PARAM * (*d2i_PBMAC1PARAM)(struct AmiSSLIFace *Self, PBMAC1PARAM ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_PBMAC1PARAM)(struct AmiSSLIFace *Self, const PBMAC1PARAM * a, unsigned char ** out);
	APICALL void (*PBMAC1PARAM_free)(struct AmiSSLIFace *Self, PBMAC1PARAM * a);
	APICALL PBMAC1PARAM * (*PBMAC1PARAM_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*PBMAC1PARAM_it)(struct AmiSSLIFace *Self);
	APICALL int (*OSSL_LIB_CTX_get_conf_diagnostics)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx);
	APICALL void (*OSSL_LIB_CTX_set_conf_diagnostics)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, int value);
	APICALL void * (*OSSL_LIB_CTX_get_data)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, int index);
	APICALL int (*OSSL_GENERAL_NAMES_print)(struct AmiSSLIFace *Self, BIO * out, GENERAL_NAMES * gens, int indent);
	APICALL int (*TS_VERIFY_CTX_set0_data)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, BIO * b);
	APICALL int (*TS_VERIFY_CTX_set0_imprint)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, unsigned char * hexstr, long len);
	APICALL int (*TS_VERIFY_CTX_set0_store)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, X509_STORE * s);
	APICALL int (*TS_VERIFY_CTX_set0_certs)(struct AmiSSLIFace *Self, TS_VERIFY_CTX * ctx, STACK_OF(X509) * certs);
	APICALL int (*CRYPTO_atomic_add64)(struct AmiSSLIFace *Self, uint64_t * val, uint64_t op, uint64_t * ret, CRYPTO_RWLOCK * lock);
	APICALL int (*CRYPTO_atomic_and)(struct AmiSSLIFace *Self, uint64_t * val, uint64_t op, uint64_t * ret, CRYPTO_RWLOCK * lock);
	APICALL OSSL_ATTRIBUTES_SYNTAX * (*d2i_OSSL_ATTRIBUTES_SYNTAX)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTES_SYNTAX ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ATTRIBUTES_SYNTAX)(struct AmiSSLIFace *Self, const OSSL_ATTRIBUTES_SYNTAX * a, unsigned char ** out);
	APICALL void (*OSSL_ATTRIBUTES_SYNTAX_free)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTES_SYNTAX * a);
	APICALL OSSL_ATTRIBUTES_SYNTAX * (*OSSL_ATTRIBUTES_SYNTAX_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ATTRIBUTES_SYNTAX_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_USER_NOTICE_SYNTAX * (*d2i_OSSL_USER_NOTICE_SYNTAX)(struct AmiSSLIFace *Self, OSSL_USER_NOTICE_SYNTAX ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_USER_NOTICE_SYNTAX)(struct AmiSSLIFace *Self, const OSSL_USER_NOTICE_SYNTAX * a, unsigned char ** out);
	APICALL void (*OSSL_USER_NOTICE_SYNTAX_free)(struct AmiSSLIFace *Self, OSSL_USER_NOTICE_SYNTAX * a);
	APICALL OSSL_USER_NOTICE_SYNTAX * (*OSSL_USER_NOTICE_SYNTAX_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_USER_NOTICE_SYNTAX_it)(struct AmiSSLIFace *Self);
	APICALL void (*OSSL_INDICATOR_set_callback)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, OSSL_INDICATOR_CALLBACK * cb);
	APICALL void (*OSSL_INDICATOR_get_callback)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, OSSL_INDICATOR_CALLBACK ** cb);
	APICALL int (*OPENSSL_strtoul)(struct AmiSSLIFace *Self, const char * str, char ** endptr, int base, unsigned long * num);
	APICALL OSSL_BASIC_ATTR_CONSTRAINTS * (*d2i_OSSL_BASIC_ATTR_CONSTRAINTS)(struct AmiSSLIFace *Self, OSSL_BASIC_ATTR_CONSTRAINTS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_BASIC_ATTR_CONSTRAINTS)(struct AmiSSLIFace *Self, const OSSL_BASIC_ATTR_CONSTRAINTS * a, unsigned char ** out);
	APICALL void (*OSSL_BASIC_ATTR_CONSTRAINTS_free)(struct AmiSSLIFace *Self, OSSL_BASIC_ATTR_CONSTRAINTS * a);
	APICALL OSSL_BASIC_ATTR_CONSTRAINTS * (*OSSL_BASIC_ATTR_CONSTRAINTS_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_BASIC_ATTR_CONSTRAINTS_it)(struct AmiSSLIFace *Self);
	APICALL const OSSL_PARAM * (*EVP_KEYMGMT_gen_gettable_params)(struct AmiSSLIFace *Self, const EVP_KEYMGMT * keymgmt);
	APICALL int (*EVP_PKEY_CTX_set_signature)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * pctx, const unsigned char * sig, size_t siglen);
	APICALL int (*EVP_PKEY_sign_init_ex2)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_SIGNATURE * algo, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_sign_message_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_SIGNATURE * algo, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_sign_message_update)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const unsigned char * in, size_t inlen);
	APICALL int (*EVP_PKEY_sign_message_final)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, unsigned char * sig, size_t * siglen);
	APICALL int (*EVP_PKEY_verify_init_ex2)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_SIGNATURE * algo, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_verify_message_init)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_SIGNATURE * algo, const OSSL_PARAM * params);
	APICALL int (*EVP_PKEY_verify_message_update)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const unsigned char * in, size_t inlen);
	APICALL int (*EVP_PKEY_verify_message_final)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx);
	APICALL int (*EVP_PKEY_verify_recover_init_ex2)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_SIGNATURE * algo, const OSSL_PARAM * params);
	APICALL int (*EVP_MD_xof)(struct AmiSSLIFace *Self, const EVP_MD * md);
	APICALL int (*EVP_MD_CTX_get_size_ex)(struct AmiSSLIFace *Self, const EVP_MD_CTX * ctx);
	APICALL int (*EVP_CIPHER_CTX_set_algor_params)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const X509_ALGOR * alg);
	APICALL int (*EVP_CIPHER_CTX_get_algor_params)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, X509_ALGOR * alg);
	APICALL int (*EVP_CIPHER_CTX_get_algor)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, X509_ALGOR ** alg);
	APICALL int (*EVP_PKEY_CTX_set_algor_params)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, const X509_ALGOR * alg);
	APICALL int (*EVP_PKEY_CTX_get_algor_params)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, X509_ALGOR * alg);
	APICALL int (*EVP_PKEY_CTX_get_algor)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, X509_ALGOR ** alg);
	APICALL X509_ACERT * (*d2i_X509_ACERT)(struct AmiSSLIFace *Self, X509_ACERT ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_X509_ACERT)(struct AmiSSLIFace *Self, const X509_ACERT * a, unsigned char ** out);
	APICALL void (*X509_ACERT_free)(struct AmiSSLIFace *Self, X509_ACERT * a);
	APICALL X509_ACERT * (*X509_ACERT_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*X509_ACERT_it)(struct AmiSSLIFace *Self);
	APICALL X509_ACERT * (*X509_ACERT_dup)(struct AmiSSLIFace *Self, const X509_ACERT * a);
	APICALL const ASN1_ITEM * (*X509_ACERT_INFO_it)(struct AmiSSLIFace *Self);
	APICALL void (*X509_ACERT_INFO_free)(struct AmiSSLIFace *Self, X509_ACERT_INFO * a);
	APICALL X509_ACERT_INFO * (*X509_ACERT_INFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*OSSL_OBJECT_DIGEST_INFO_free)(struct AmiSSLIFace *Self, OSSL_OBJECT_DIGEST_INFO * a);
	APICALL OSSL_OBJECT_DIGEST_INFO * (*OSSL_OBJECT_DIGEST_INFO_new)(struct AmiSSLIFace *Self);
	APICALL void (*OSSL_ISSUER_SERIAL_free)(struct AmiSSLIFace *Self, OSSL_ISSUER_SERIAL * a);
	APICALL OSSL_ISSUER_SERIAL * (*OSSL_ISSUER_SERIAL_new)(struct AmiSSLIFace *Self);
	APICALL void (*X509_ACERT_ISSUER_V2FORM_free)(struct AmiSSLIFace *Self, X509_ACERT_ISSUER_V2FORM * a);
	APICALL X509_ACERT_ISSUER_V2FORM * (*X509_ACERT_ISSUER_V2FORM_new)(struct AmiSSLIFace *Self);
	APICALL X509_ACERT * (*PEM_read_bio_X509_ACERT)(struct AmiSSLIFace *Self, BIO * out, X509_ACERT ** x, pem_password_cb * cb, void * u);
	APICALL int (*PEM_write_bio_X509_ACERT)(struct AmiSSLIFace *Self, BIO * out, const X509_ACERT * x);
	APICALL X509_ACERT * (*d2i_X509_ACERT_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_ACERT ** acert);
	APICALL int (*i2d_X509_ACERT_bio)(struct AmiSSLIFace *Self, BIO * bp, const X509_ACERT * acert);
	APICALL const GENERAL_NAMES * (*X509_ACERT_get0_holder_entityName)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL const OSSL_ISSUER_SERIAL * (*X509_ACERT_get0_holder_baseCertId)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL const OSSL_OBJECT_DIGEST_INFO * (*X509_ACERT_get0_holder_digest)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL const X509_NAME * (*X509_ACERT_get0_issuerName)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL long (*X509_ACERT_get_version)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL void (*X509_ACERT_get0_signature)(struct AmiSSLIFace *Self, const X509_ACERT * x, const ASN1_BIT_STRING ** psig, const X509_ALGOR ** palg);
	APICALL int (*X509_ACERT_get_signature_nid)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL const X509_ALGOR * (*X509_ACERT_get0_info_sigalg)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL const ASN1_INTEGER * (*X509_ACERT_get0_serialNumber)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL const ASN1_TIME * (*X509_ACERT_get0_notBefore)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL const ASN1_TIME * (*X509_ACERT_get0_notAfter)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL const ASN1_BIT_STRING * (*X509_ACERT_get0_issuerUID)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL int (*X509_ACERT_set_version)(struct AmiSSLIFace *Self, X509_ACERT * x, long version);
	APICALL void (*X509_ACERT_set0_holder_entityName)(struct AmiSSLIFace *Self, X509_ACERT * x, GENERAL_NAMES * name);
	APICALL void (*X509_ACERT_set0_holder_baseCertId)(struct AmiSSLIFace *Self, X509_ACERT * x, OSSL_ISSUER_SERIAL * isss);
	APICALL void (*X509_ACERT_set0_holder_digest)(struct AmiSSLIFace *Self, X509_ACERT * x, OSSL_OBJECT_DIGEST_INFO * dinfo);
	APICALL int (*X509_ACERT_set1_issuerName)(struct AmiSSLIFace *Self, X509_ACERT * x, const X509_NAME * name);
	APICALL int (*X509_ACERT_set1_serialNumber)(struct AmiSSLIFace *Self, X509_ACERT * x, const ASN1_INTEGER * serial);
	APICALL int (*X509_ACERT_set1_notBefore)(struct AmiSSLIFace *Self, X509_ACERT * x, const ASN1_GENERALIZEDTIME * time);
	APICALL int (*X509_ACERT_set1_notAfter)(struct AmiSSLIFace *Self, X509_ACERT * x, const ASN1_GENERALIZEDTIME * time);
	APICALL void (*OSSL_OBJECT_DIGEST_INFO_get0_digest)(struct AmiSSLIFace *Self, const OSSL_OBJECT_DIGEST_INFO * o, int * digestedObjectType, const X509_ALGOR ** digestAlgorithm, const ASN1_BIT_STRING ** digest);
	APICALL int (*OSSL_OBJECT_DIGEST_INFO_set1_digest)(struct AmiSSLIFace *Self, OSSL_OBJECT_DIGEST_INFO * o, int digestedObjectType, X509_ALGOR * digestAlgorithm, ASN1_BIT_STRING * digest);
	APICALL const X509_NAME * (*OSSL_ISSUER_SERIAL_get0_issuer)(struct AmiSSLIFace *Self, const OSSL_ISSUER_SERIAL * isss);
	APICALL const ASN1_INTEGER * (*OSSL_ISSUER_SERIAL_get0_serial)(struct AmiSSLIFace *Self, const OSSL_ISSUER_SERIAL * isss);
	APICALL const ASN1_BIT_STRING * (*OSSL_ISSUER_SERIAL_get0_issuerUID)(struct AmiSSLIFace *Self, const OSSL_ISSUER_SERIAL * isss);
	APICALL int (*OSSL_ISSUER_SERIAL_set1_issuer)(struct AmiSSLIFace *Self, OSSL_ISSUER_SERIAL * isss, const X509_NAME * issuer);
	APICALL int (*OSSL_ISSUER_SERIAL_set1_serial)(struct AmiSSLIFace *Self, OSSL_ISSUER_SERIAL * isss, const ASN1_INTEGER * serial);
	APICALL int (*OSSL_ISSUER_SERIAL_set1_issuerUID)(struct AmiSSLIFace *Self, OSSL_ISSUER_SERIAL * isss, const ASN1_BIT_STRING * uid);
	APICALL int (*X509_ACERT_print)(struct AmiSSLIFace *Self, BIO * bp, X509_ACERT * x);
	APICALL int (*X509_ACERT_print_ex)(struct AmiSSLIFace *Self, BIO * bp, X509_ACERT * x, unsigned long nmflags, unsigned long cflag);
	APICALL int (*X509_ACERT_get_attr_count)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL int (*X509_ACERT_get_attr_by_NID)(struct AmiSSLIFace *Self, const X509_ACERT * x, int nid, int lastpos);
	APICALL int (*X509_ACERT_get_attr_by_OBJ)(struct AmiSSLIFace *Self, const X509_ACERT * x, const ASN1_OBJECT * obj, int lastpos);
	APICALL X509_ATTRIBUTE * (*X509_ACERT_get_attr)(struct AmiSSLIFace *Self, const X509_ACERT * x, int loc);
	APICALL X509_ATTRIBUTE * (*X509_ACERT_delete_attr)(struct AmiSSLIFace *Self, X509_ACERT * x, int loc);
	APICALL int (*X509_ACERT_add1_attr)(struct AmiSSLIFace *Self, X509_ACERT * x, X509_ATTRIBUTE * attr);
	APICALL int (*X509_ACERT_add1_attr_by_OBJ)(struct AmiSSLIFace *Self, X509_ACERT * x, const ASN1_OBJECT * obj, int type, const void * bytes, int len);
	APICALL int (*X509_ACERT_add1_attr_by_NID)(struct AmiSSLIFace *Self, X509_ACERT * x, int nid, int type, const void * bytes, int len);
	APICALL int (*X509_ACERT_add1_attr_by_txt)(struct AmiSSLIFace *Self, X509_ACERT * x, const char * attrname, int type, const unsigned char * bytes, int len);
	APICALL int (*X509_ACERT_sign)(struct AmiSSLIFace *Self, X509_ACERT * x, EVP_PKEY * pkey, const EVP_MD * md);
	APICALL int (*X509_ACERT_sign_ctx)(struct AmiSSLIFace *Self, X509_ACERT * x, EVP_MD_CTX * ctx);
	APICALL int (*X509_ACERT_verify)(struct AmiSSLIFace *Self, X509_ACERT * a, EVP_PKEY * r);
	APICALL void * (*X509_ACERT_get_ext_d2i)(struct AmiSSLIFace *Self, const X509_ACERT * x, int nid, int * crit, int * idx);
	APICALL int (*X509_ACERT_add1_ext_i2d)(struct AmiSSLIFace *Self, X509_ACERT * x, int nid, void * value, int crit, unsigned long flags);
	APICALL const struct stack_st_X509_EXTENSION * (*X509_ACERT_get0_extensions)(struct AmiSSLIFace *Self, const X509_ACERT * x);
	APICALL const ASN1_ITEM * (*OSSL_IETF_ATTR_SYNTAX_VALUE_it)(struct AmiSSLIFace *Self);
	APICALL void (*OSSL_IETF_ATTR_SYNTAX_VALUE_free)(struct AmiSSLIFace *Self, OSSL_IETF_ATTR_SYNTAX_VALUE * a);
	APICALL OSSL_IETF_ATTR_SYNTAX_VALUE * (*OSSL_IETF_ATTR_SYNTAX_VALUE_new)(struct AmiSSLIFace *Self);
	APICALL OSSL_IETF_ATTR_SYNTAX * (*d2i_OSSL_IETF_ATTR_SYNTAX)(struct AmiSSLIFace *Self, OSSL_IETF_ATTR_SYNTAX ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_IETF_ATTR_SYNTAX)(struct AmiSSLIFace *Self, const OSSL_IETF_ATTR_SYNTAX * a, unsigned char ** out);
	APICALL void (*OSSL_IETF_ATTR_SYNTAX_free)(struct AmiSSLIFace *Self, OSSL_IETF_ATTR_SYNTAX * a);
	APICALL OSSL_IETF_ATTR_SYNTAX * (*OSSL_IETF_ATTR_SYNTAX_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_IETF_ATTR_SYNTAX_it)(struct AmiSSLIFace *Self);
	APICALL const GENERAL_NAMES * (*OSSL_IETF_ATTR_SYNTAX_get0_policyAuthority)(struct AmiSSLIFace *Self, const OSSL_IETF_ATTR_SYNTAX * a);
	APICALL void (*OSSL_IETF_ATTR_SYNTAX_set0_policyAuthority)(struct AmiSSLIFace *Self, OSSL_IETF_ATTR_SYNTAX * a, GENERAL_NAMES * names);
	APICALL int (*OSSL_IETF_ATTR_SYNTAX_get_value_num)(struct AmiSSLIFace *Self, const OSSL_IETF_ATTR_SYNTAX * a);
	APICALL void * (*OSSL_IETF_ATTR_SYNTAX_get0_value)(struct AmiSSLIFace *Self, const OSSL_IETF_ATTR_SYNTAX * a, int ind, int * type);
	APICALL int (*OSSL_IETF_ATTR_SYNTAX_add1_value)(struct AmiSSLIFace *Self, OSSL_IETF_ATTR_SYNTAX * a, int type, void * data);
	APICALL int (*OSSL_IETF_ATTR_SYNTAX_print)(struct AmiSSLIFace *Self, BIO * bp, OSSL_IETF_ATTR_SYNTAX * a, int indent);
	APICALL int (*X509_ACERT_add_attr_nconf)(struct AmiSSLIFace *Self, CONF * conf, const char * section, X509_ACERT * acert);
	APICALL OSSL_TARGET * (*d2i_OSSL_TARGET)(struct AmiSSLIFace *Self, OSSL_TARGET ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_TARGET)(struct AmiSSLIFace *Self, const OSSL_TARGET * a, unsigned char ** out);
	APICALL void (*OSSL_TARGET_free)(struct AmiSSLIFace *Self, OSSL_TARGET * a);
	APICALL OSSL_TARGET * (*OSSL_TARGET_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_TARGET_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_TARGETS * (*d2i_OSSL_TARGETS)(struct AmiSSLIFace *Self, OSSL_TARGETS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_TARGETS)(struct AmiSSLIFace *Self, const OSSL_TARGETS * a, unsigned char ** out);
	APICALL void (*OSSL_TARGETS_free)(struct AmiSSLIFace *Self, OSSL_TARGETS * a);
	APICALL OSSL_TARGETS * (*OSSL_TARGETS_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_TARGETS_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_TARGETING_INFORMATION * (*d2i_OSSL_TARGETING_INFORMATION)(struct AmiSSLIFace *Self, OSSL_TARGETING_INFORMATION ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_TARGETING_INFORMATION)(struct AmiSSLIFace *Self, const OSSL_TARGETING_INFORMATION * a, unsigned char ** out);
	APICALL void (*OSSL_TARGETING_INFORMATION_free)(struct AmiSSLIFace *Self, OSSL_TARGETING_INFORMATION * a);
	APICALL OSSL_TARGETING_INFORMATION * (*OSSL_TARGETING_INFORMATION_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_TARGETING_INFORMATION_it)(struct AmiSSLIFace *Self);
	APICALL int (*SSL_set_quic_tls_cbs)(struct AmiSSLIFace *Self, SSL * s, const OSSL_DISPATCH * qtdis, void * arg);
	APICALL int (*SSL_set_quic_tls_transport_params)(struct AmiSSLIFace *Self, SSL * s, const unsigned char * params, size_t params_len);
	APICALL int (*SSL_set_quic_tls_early_data_enabled)(struct AmiSSLIFace *Self, SSL * s, int enabled);
	APICALL const SSL_METHOD * (*OSSL_QUIC_server_method)(struct AmiSSLIFace *Self);
	APICALL int (*SSL_is_listener)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL SSL * (*SSL_get0_listener)(struct AmiSSLIFace *Self, SSL * s);
	APICALL SSL * (*SSL_new_listener)(struct AmiSSLIFace *Self, SSL_CTX * ctx, uint64_t flags);
	APICALL SSL * (*SSL_accept_connection)(struct AmiSSLIFace *Self, SSL * ssl, uint64_t flags);
	APICALL size_t (*SSL_get_accept_connection_queue_len)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL int (*SSL_listen)(struct AmiSSLIFace *Self, SSL * ssl);
	APICALL SSL * (*SSL_new_from_listener)(struct AmiSSLIFace *Self, SSL * ssl, uint64_t flags);
	APICALL SSL * (*SSL_new_listener_from)(struct AmiSSLIFace *Self, SSL * ssl, uint64_t flags);
	APICALL int (*SSL_is_domain)(struct AmiSSLIFace *Self, SSL * s);
	APICALL SSL * (*SSL_get0_domain)(struct AmiSSLIFace *Self, SSL * s);
	APICALL SSL * (*SSL_new_domain)(struct AmiSSLIFace *Self, SSL_CTX * ctx, uint64_t flags);
	APICALL int (*SSL_CTX_set_domain_flags)(struct AmiSSLIFace *Self, SSL_CTX * ctx, uint64_t domain_flags);
	APICALL int (*SSL_CTX_get_domain_flags)(struct AmiSSLIFace *Self, const SSL_CTX * ctx, uint64_t * domain_flags);
	APICALL int (*SSL_get_domain_flags)(struct AmiSSLIFace *Self, const SSL * ssl, uint64_t * domain_flags);
	APICALL void (*SSL_CTX_set_new_pending_conn_cb)(struct AmiSSLIFace *Self, SSL_CTX * c, SSL_new_pending_conn_cb_fn cb, void * arg);
	APICALL int (*X509_VERIFY_PARAM_get_purpose)(struct AmiSSLIFace *Self, const X509_VERIFY_PARAM * param);
	APICALL OSSL_CRMF_ENCRYPTEDKEY * (*d2i_OSSL_CRMF_ENCRYPTEDKEY)(struct AmiSSLIFace *Self, OSSL_CRMF_ENCRYPTEDKEY ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_CRMF_ENCRYPTEDKEY)(struct AmiSSLIFace *Self, const OSSL_CRMF_ENCRYPTEDKEY * a, unsigned char ** out);
	APICALL void (*OSSL_CRMF_ENCRYPTEDKEY_free)(struct AmiSSLIFace *Self, OSSL_CRMF_ENCRYPTEDKEY * a);
	APICALL OSSL_CRMF_ENCRYPTEDKEY * (*OSSL_CRMF_ENCRYPTEDKEY_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_CRMF_ENCRYPTEDKEY_it)(struct AmiSSLIFace *Self);
	APICALL X509 * (*OSSL_CRMF_ENCRYPTEDKEY_get1_encCert)(struct AmiSSLIFace *Self, const OSSL_CRMF_ENCRYPTEDKEY * ecert, OSSL_LIB_CTX * libctx, const char * propq, EVP_PKEY * pkey, unsigned int flags);
	APICALL unsigned char * (*OSSL_CRMF_ENCRYPTEDVALUE_decrypt)(struct AmiSSLIFace *Self, const OSSL_CRMF_ENCRYPTEDVALUE * enc, OSSL_LIB_CTX * libctx, const char * propq, EVP_PKEY * pkey, int * outlen);
	APICALL EVP_PKEY * (*OSSL_CRMF_ENCRYPTEDKEY_get1_pkey)(struct AmiSSLIFace *Self, const OSSL_CRMF_ENCRYPTEDKEY * encryptedKey, X509_STORE * ts, STACK_OF(X509) * extra, EVP_PKEY * pkey, X509 * cert, ASN1_OCTET_STRING * secret, OSSL_LIB_CTX * libctx, const char * propq);
	APICALL int (*OSSL_CRMF_MSG_centralkeygen_requested)(struct AmiSSLIFace *Self, const OSSL_CRMF_MSG * crm, const X509_REQ * p10cr);
	APICALL CMS_EnvelopedData * (*CMS_EnvelopedData_dup)(struct AmiSSLIFace *Self, const CMS_EnvelopedData * a);
	APICALL OSSL_CRMF_ENCRYPTEDKEY * (*OSSL_CRMF_ENCRYPTEDKEY_init_envdata)(struct AmiSSLIFace *Self, CMS_EnvelopedData * envdata);
	APICALL char * (*EVP_get1_default_properties)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx);
	APICALL int (*RAND_set1_random_provider)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, OSSL_PROVIDER * p);
	APICALL int (*X509_PURPOSE_get_unused_id)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx);
	APICALL OSSL_AUTHORITY_ATTRIBUTE_ID_SYNTAX * (*d2i_OSSL_AUTHORITY_ATTRIBUTE_ID_SYNTAX)(struct AmiSSLIFace *Self, OSSL_AUTHORITY_ATTRIBUTE_ID_SYNTAX ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_AUTHORITY_ATTRIBUTE_ID_SYNTAX)(struct AmiSSLIFace *Self, const OSSL_AUTHORITY_ATTRIBUTE_ID_SYNTAX * a, unsigned char ** out);
	APICALL void (*OSSL_AUTHORITY_ATTRIBUTE_ID_SYNTAX_free)(struct AmiSSLIFace *Self, OSSL_AUTHORITY_ATTRIBUTE_ID_SYNTAX * a);
	APICALL OSSL_AUTHORITY_ATTRIBUTE_ID_SYNTAX * (*OSSL_AUTHORITY_ATTRIBUTE_ID_SYNTAX_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_AUTHORITY_ATTRIBUTE_ID_SYNTAX_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_ROLE_SPEC_CERT_ID * (*d2i_OSSL_ROLE_SPEC_CERT_ID)(struct AmiSSLIFace *Self, OSSL_ROLE_SPEC_CERT_ID ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ROLE_SPEC_CERT_ID)(struct AmiSSLIFace *Self, const OSSL_ROLE_SPEC_CERT_ID * a, unsigned char ** out);
	APICALL void (*OSSL_ROLE_SPEC_CERT_ID_free)(struct AmiSSLIFace *Self, OSSL_ROLE_SPEC_CERT_ID * a);
	APICALL OSSL_ROLE_SPEC_CERT_ID * (*OSSL_ROLE_SPEC_CERT_ID_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ROLE_SPEC_CERT_ID_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_ROLE_SPEC_CERT_ID_SYNTAX * (*d2i_OSSL_ROLE_SPEC_CERT_ID_SYNTAX)(struct AmiSSLIFace *Self, OSSL_ROLE_SPEC_CERT_ID_SYNTAX ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ROLE_SPEC_CERT_ID_SYNTAX)(struct AmiSSLIFace *Self, const OSSL_ROLE_SPEC_CERT_ID_SYNTAX * a, unsigned char ** out);
	APICALL void (*OSSL_ROLE_SPEC_CERT_ID_SYNTAX_free)(struct AmiSSLIFace *Self, OSSL_ROLE_SPEC_CERT_ID_SYNTAX * a);
	APICALL OSSL_ROLE_SPEC_CERT_ID_SYNTAX * (*OSSL_ROLE_SPEC_CERT_ID_SYNTAX_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ROLE_SPEC_CERT_ID_SYNTAX_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_ATTRIBUTE_DESCRIPTOR * (*d2i_OSSL_ATTRIBUTE_DESCRIPTOR)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTE_DESCRIPTOR ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ATTRIBUTE_DESCRIPTOR)(struct AmiSSLIFace *Self, const OSSL_ATTRIBUTE_DESCRIPTOR * a, unsigned char ** out);
	APICALL void (*OSSL_ATTRIBUTE_DESCRIPTOR_free)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTE_DESCRIPTOR * a);
	APICALL OSSL_ATTRIBUTE_DESCRIPTOR * (*OSSL_ATTRIBUTE_DESCRIPTOR_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ATTRIBUTE_DESCRIPTOR_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_HASH_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_INFO_SYNTAX_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_INFO_SYNTAX_POINTER_it)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_PRIVILEGE_POLICY_ID_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_HASH * (*d2i_OSSL_HASH)(struct AmiSSLIFace *Self, OSSL_HASH ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_HASH)(struct AmiSSLIFace *Self, const OSSL_HASH * a, unsigned char ** out);
	APICALL void (*OSSL_HASH_free)(struct AmiSSLIFace *Self, OSSL_HASH * a);
	APICALL OSSL_HASH * (*OSSL_HASH_new)(struct AmiSSLIFace *Self);
	APICALL OSSL_INFO_SYNTAX * (*d2i_OSSL_INFO_SYNTAX)(struct AmiSSLIFace *Self, OSSL_INFO_SYNTAX ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_INFO_SYNTAX)(struct AmiSSLIFace *Self, const OSSL_INFO_SYNTAX * a, unsigned char ** out);
	APICALL void (*OSSL_INFO_SYNTAX_free)(struct AmiSSLIFace *Self, OSSL_INFO_SYNTAX * a);
	APICALL OSSL_INFO_SYNTAX * (*OSSL_INFO_SYNTAX_new)(struct AmiSSLIFace *Self);
	APICALL OSSL_INFO_SYNTAX_POINTER * (*d2i_OSSL_INFO_SYNTAX_POINTER)(struct AmiSSLIFace *Self, OSSL_INFO_SYNTAX_POINTER ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_INFO_SYNTAX_POINTER)(struct AmiSSLIFace *Self, const OSSL_INFO_SYNTAX_POINTER * a, unsigned char ** out);
	APICALL void (*OSSL_INFO_SYNTAX_POINTER_free)(struct AmiSSLIFace *Self, OSSL_INFO_SYNTAX_POINTER * a);
	APICALL OSSL_INFO_SYNTAX_POINTER * (*OSSL_INFO_SYNTAX_POINTER_new)(struct AmiSSLIFace *Self);
	APICALL OSSL_PRIVILEGE_POLICY_ID * (*d2i_OSSL_PRIVILEGE_POLICY_ID)(struct AmiSSLIFace *Self, OSSL_PRIVILEGE_POLICY_ID ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_PRIVILEGE_POLICY_ID)(struct AmiSSLIFace *Self, const OSSL_PRIVILEGE_POLICY_ID * a, unsigned char ** out);
	APICALL void (*OSSL_PRIVILEGE_POLICY_ID_free)(struct AmiSSLIFace *Self, OSSL_PRIVILEGE_POLICY_ID * a);
	APICALL OSSL_PRIVILEGE_POLICY_ID * (*OSSL_PRIVILEGE_POLICY_ID_new)(struct AmiSSLIFace *Self);
	APICALL int (*OSSL_PARAM_print_to_bio)(struct AmiSSLIFace *Self, const OSSL_PARAM * params, BIO * bio, int print_values);
	APICALL OSSL_DAY_TIME * (*d2i_OSSL_DAY_TIME)(struct AmiSSLIFace *Self, OSSL_DAY_TIME ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_DAY_TIME)(struct AmiSSLIFace *Self, const OSSL_DAY_TIME * a, unsigned char ** out);
	APICALL void (*OSSL_DAY_TIME_free)(struct AmiSSLIFace *Self, OSSL_DAY_TIME * a);
	APICALL OSSL_DAY_TIME * (*OSSL_DAY_TIME_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_DAY_TIME_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_DAY_TIME_BAND * (*d2i_OSSL_DAY_TIME_BAND)(struct AmiSSLIFace *Self, OSSL_DAY_TIME_BAND ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_DAY_TIME_BAND)(struct AmiSSLIFace *Self, const OSSL_DAY_TIME_BAND * a, unsigned char ** out);
	APICALL void (*OSSL_DAY_TIME_BAND_free)(struct AmiSSLIFace *Self, OSSL_DAY_TIME_BAND * a);
	APICALL OSSL_DAY_TIME_BAND * (*OSSL_DAY_TIME_BAND_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_DAY_TIME_BAND_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_TIME_SPEC_DAY * (*d2i_OSSL_TIME_SPEC_DAY)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_DAY ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_TIME_SPEC_DAY)(struct AmiSSLIFace *Self, const OSSL_TIME_SPEC_DAY * a, unsigned char ** out);
	APICALL void (*OSSL_TIME_SPEC_DAY_free)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_DAY * a);
	APICALL OSSL_TIME_SPEC_DAY * (*OSSL_TIME_SPEC_DAY_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_TIME_SPEC_DAY_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_TIME_SPEC_WEEKS * (*d2i_OSSL_TIME_SPEC_WEEKS)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_WEEKS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_TIME_SPEC_WEEKS)(struct AmiSSLIFace *Self, const OSSL_TIME_SPEC_WEEKS * a, unsigned char ** out);
	APICALL void (*OSSL_TIME_SPEC_WEEKS_free)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_WEEKS * a);
	APICALL OSSL_TIME_SPEC_WEEKS * (*OSSL_TIME_SPEC_WEEKS_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_TIME_SPEC_WEEKS_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_TIME_SPEC_MONTH * (*d2i_OSSL_TIME_SPEC_MONTH)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_MONTH ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_TIME_SPEC_MONTH)(struct AmiSSLIFace *Self, const OSSL_TIME_SPEC_MONTH * a, unsigned char ** out);
	APICALL void (*OSSL_TIME_SPEC_MONTH_free)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_MONTH * a);
	APICALL OSSL_TIME_SPEC_MONTH * (*OSSL_TIME_SPEC_MONTH_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_TIME_SPEC_MONTH_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_NAMED_DAY * (*d2i_OSSL_NAMED_DAY)(struct AmiSSLIFace *Self, OSSL_NAMED_DAY ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_NAMED_DAY)(struct AmiSSLIFace *Self, const OSSL_NAMED_DAY * a, unsigned char ** out);
	APICALL void (*OSSL_NAMED_DAY_free)(struct AmiSSLIFace *Self, OSSL_NAMED_DAY * a);
	APICALL OSSL_NAMED_DAY * (*OSSL_NAMED_DAY_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_NAMED_DAY_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_TIME_SPEC_X_DAY_OF * (*d2i_OSSL_TIME_SPEC_X_DAY_OF)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_X_DAY_OF ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_TIME_SPEC_X_DAY_OF)(struct AmiSSLIFace *Self, const OSSL_TIME_SPEC_X_DAY_OF * a, unsigned char ** out);
	APICALL void (*OSSL_TIME_SPEC_X_DAY_OF_free)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_X_DAY_OF * a);
	APICALL OSSL_TIME_SPEC_X_DAY_OF * (*OSSL_TIME_SPEC_X_DAY_OF_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_TIME_SPEC_X_DAY_OF_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_TIME_SPEC_ABSOLUTE * (*d2i_OSSL_TIME_SPEC_ABSOLUTE)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_ABSOLUTE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_TIME_SPEC_ABSOLUTE)(struct AmiSSLIFace *Self, const OSSL_TIME_SPEC_ABSOLUTE * a, unsigned char ** out);
	APICALL void (*OSSL_TIME_SPEC_ABSOLUTE_free)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_ABSOLUTE * a);
	APICALL OSSL_TIME_SPEC_ABSOLUTE * (*OSSL_TIME_SPEC_ABSOLUTE_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_TIME_SPEC_ABSOLUTE_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_TIME_SPEC_TIME * (*d2i_OSSL_TIME_SPEC_TIME)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_TIME ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_TIME_SPEC_TIME)(struct AmiSSLIFace *Self, const OSSL_TIME_SPEC_TIME * a, unsigned char ** out);
	APICALL void (*OSSL_TIME_SPEC_TIME_free)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC_TIME * a);
	APICALL OSSL_TIME_SPEC_TIME * (*OSSL_TIME_SPEC_TIME_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_TIME_SPEC_TIME_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_TIME_SPEC * (*d2i_OSSL_TIME_SPEC)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_TIME_SPEC)(struct AmiSSLIFace *Self, const OSSL_TIME_SPEC * a, unsigned char ** out);
	APICALL void (*OSSL_TIME_SPEC_free)(struct AmiSSLIFace *Self, OSSL_TIME_SPEC * a);
	APICALL OSSL_TIME_SPEC * (*OSSL_TIME_SPEC_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_TIME_SPEC_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_TIME_PERIOD * (*d2i_OSSL_TIME_PERIOD)(struct AmiSSLIFace *Self, OSSL_TIME_PERIOD ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_TIME_PERIOD)(struct AmiSSLIFace *Self, const OSSL_TIME_PERIOD * a, unsigned char ** out);
	APICALL void (*OSSL_TIME_PERIOD_free)(struct AmiSSLIFace *Self, OSSL_TIME_PERIOD * a);
	APICALL OSSL_TIME_PERIOD * (*OSSL_TIME_PERIOD_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_TIME_PERIOD_it)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_CIPHER_can_pipeline)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher, int enc);
	APICALL int (*EVP_CipherPipelineEncryptInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, const unsigned char * key, size_t keylen, size_t numpipes, const unsigned char ** iv, size_t ivlen);
	APICALL int (*EVP_CipherPipelineDecryptInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, const unsigned char * key, size_t keylen, size_t numpipes, const unsigned char ** iv, size_t ivlen);
	APICALL int (*EVP_CipherPipelineUpdate)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char ** out, size_t * outl, const size_t * outsize, const unsigned char ** in, const size_t * inl);
	APICALL int (*EVP_CipherPipelineFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char ** outm, size_t * outl, const size_t * outsize);
	APICALL OSSL_ATTRIBUTE_TYPE_MAPPING * (*d2i_OSSL_ATTRIBUTE_TYPE_MAPPING)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTE_TYPE_MAPPING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ATTRIBUTE_TYPE_MAPPING)(struct AmiSSLIFace *Self, const OSSL_ATTRIBUTE_TYPE_MAPPING * a, unsigned char ** out);
	APICALL void (*OSSL_ATTRIBUTE_TYPE_MAPPING_free)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTE_TYPE_MAPPING * a);
	APICALL OSSL_ATTRIBUTE_TYPE_MAPPING * (*OSSL_ATTRIBUTE_TYPE_MAPPING_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ATTRIBUTE_TYPE_MAPPING_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_ATTRIBUTE_VALUE_MAPPING * (*d2i_OSSL_ATTRIBUTE_VALUE_MAPPING)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTE_VALUE_MAPPING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ATTRIBUTE_VALUE_MAPPING)(struct AmiSSLIFace *Self, const OSSL_ATTRIBUTE_VALUE_MAPPING * a, unsigned char ** out);
	APICALL void (*OSSL_ATTRIBUTE_VALUE_MAPPING_free)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTE_VALUE_MAPPING * a);
	APICALL OSSL_ATTRIBUTE_VALUE_MAPPING * (*OSSL_ATTRIBUTE_VALUE_MAPPING_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ATTRIBUTE_VALUE_MAPPING_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_ATTRIBUTE_MAPPING * (*d2i_OSSL_ATTRIBUTE_MAPPING)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTE_MAPPING ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ATTRIBUTE_MAPPING)(struct AmiSSLIFace *Self, const OSSL_ATTRIBUTE_MAPPING * a, unsigned char ** out);
	APICALL void (*OSSL_ATTRIBUTE_MAPPING_free)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTE_MAPPING * a);
	APICALL OSSL_ATTRIBUTE_MAPPING * (*OSSL_ATTRIBUTE_MAPPING_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ATTRIBUTE_MAPPING_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_ATTRIBUTE_MAPPINGS * (*d2i_OSSL_ATTRIBUTE_MAPPINGS)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTE_MAPPINGS ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ATTRIBUTE_MAPPINGS)(struct AmiSSLIFace *Self, const OSSL_ATTRIBUTE_MAPPINGS * a, unsigned char ** out);
	APICALL void (*OSSL_ATTRIBUTE_MAPPINGS_free)(struct AmiSSLIFace *Self, OSSL_ATTRIBUTE_MAPPINGS * a);
	APICALL OSSL_ATTRIBUTE_MAPPINGS * (*OSSL_ATTRIBUTE_MAPPINGS_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ATTRIBUTE_MAPPINGS_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_ATAV * (*d2i_OSSL_ATAV)(struct AmiSSLIFace *Self, OSSL_ATAV ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ATAV)(struct AmiSSLIFace *Self, const OSSL_ATAV * a, unsigned char ** out);
	APICALL void (*OSSL_ATAV_free)(struct AmiSSLIFace *Self, OSSL_ATAV * a);
	APICALL OSSL_ATAV * (*OSSL_ATAV_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ATAV_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_ALLOWED_ATTRIBUTES_CHOICE * (*d2i_OSSL_ALLOWED_ATTRIBUTES_CHOICE)(struct AmiSSLIFace *Self, OSSL_ALLOWED_ATTRIBUTES_CHOICE ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ALLOWED_ATTRIBUTES_CHOICE)(struct AmiSSLIFace *Self, const OSSL_ALLOWED_ATTRIBUTES_CHOICE * a, unsigned char ** out);
	APICALL void (*OSSL_ALLOWED_ATTRIBUTES_CHOICE_free)(struct AmiSSLIFace *Self, OSSL_ALLOWED_ATTRIBUTES_CHOICE * a);
	APICALL OSSL_ALLOWED_ATTRIBUTES_CHOICE * (*OSSL_ALLOWED_ATTRIBUTES_CHOICE_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ALLOWED_ATTRIBUTES_CHOICE_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_ALLOWED_ATTRIBUTES_ITEM * (*d2i_OSSL_ALLOWED_ATTRIBUTES_ITEM)(struct AmiSSLIFace *Self, OSSL_ALLOWED_ATTRIBUTES_ITEM ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ALLOWED_ATTRIBUTES_ITEM)(struct AmiSSLIFace *Self, const OSSL_ALLOWED_ATTRIBUTES_ITEM * a, unsigned char ** out);
	APICALL void (*OSSL_ALLOWED_ATTRIBUTES_ITEM_free)(struct AmiSSLIFace *Self, OSSL_ALLOWED_ATTRIBUTES_ITEM * a);
	APICALL OSSL_ALLOWED_ATTRIBUTES_ITEM * (*OSSL_ALLOWED_ATTRIBUTES_ITEM_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ALLOWED_ATTRIBUTES_ITEM_it)(struct AmiSSLIFace *Self);
	APICALL OSSL_ALLOWED_ATTRIBUTES_SYNTAX * (*d2i_OSSL_ALLOWED_ATTRIBUTES_SYNTAX)(struct AmiSSLIFace *Self, OSSL_ALLOWED_ATTRIBUTES_SYNTAX ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_ALLOWED_ATTRIBUTES_SYNTAX)(struct AmiSSLIFace *Self, const OSSL_ALLOWED_ATTRIBUTES_SYNTAX * a, unsigned char ** out);
	APICALL void (*OSSL_ALLOWED_ATTRIBUTES_SYNTAX_free)(struct AmiSSLIFace *Self, OSSL_ALLOWED_ATTRIBUTES_SYNTAX * a);
	APICALL OSSL_ALLOWED_ATTRIBUTES_SYNTAX * (*OSSL_ALLOWED_ATTRIBUTES_SYNTAX_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_ALLOWED_ATTRIBUTES_SYNTAX_it)(struct AmiSSLIFace *Self);
	APICALL int (*EVP_CipherInit_SKEY)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, EVP_SKEY * skey, const unsigned char * iv, size_t iv_len, int enc, const OSSL_PARAM * params);
	APICALL EVP_SKEY * (*EVP_SKEY_import)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * skeymgmtname, const char * propquery, int selection, const OSSL_PARAM * params);
	APICALL EVP_SKEY * (*EVP_SKEY_generate)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * skeymgmtname, const char * propquery, const OSSL_PARAM * params);
	APICALL EVP_SKEY * (*EVP_SKEY_import_raw_key)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, const char * skeymgmtname, unsigned char * key, size_t keylen, const char * propquery);
	APICALL int (*EVP_SKEY_get0_raw_key)(struct AmiSSLIFace *Self, const EVP_SKEY * skey, const unsigned char ** key, size_t * len);
	APICALL int (*EVP_SKEY_export)(struct AmiSSLIFace *Self, const EVP_SKEY * skey, int selection, OSSL_CALLBACK * export_cb, void * export_cbarg);
	APICALL int (*EVP_SKEY_up_ref)(struct AmiSSLIFace *Self, EVP_SKEY * skey);
	APICALL void (*EVP_SKEY_free)(struct AmiSSLIFace *Self, EVP_SKEY * skey);
	APICALL EVP_SKEYMGMT * (*EVP_SKEYMGMT_fetch)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * ctx, const char * algorithm, const char * properties);
	APICALL int (*EVP_SKEYMGMT_up_ref)(struct AmiSSLIFace *Self, EVP_SKEYMGMT * keymgmt);
	APICALL void (*EVP_SKEYMGMT_free)(struct AmiSSLIFace *Self, EVP_SKEYMGMT * keymgmt);
	APICALL const OSSL_PROVIDER * (*EVP_SKEYMGMT_get0_provider)(struct AmiSSLIFace *Self, const EVP_SKEYMGMT * keymgmt);
	APICALL const char * (*EVP_SKEYMGMT_get0_name)(struct AmiSSLIFace *Self, const EVP_SKEYMGMT * keymgmt);
	APICALL const char * (*EVP_SKEYMGMT_get0_description)(struct AmiSSLIFace *Self, const EVP_SKEYMGMT * keymgmt);
	APICALL int (*EVP_SKEYMGMT_is_a)(struct AmiSSLIFace *Self, const EVP_SKEYMGMT * keymgmt, const char * name);
	APICALL void (*EVP_SKEYMGMT_do_all_provided)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, void (*fn)(EVP_SKEYMGMT *keymgmt, void *arg), void * arg);
	APICALL int (*EVP_SKEYMGMT_names_do_all)(struct AmiSSLIFace *Self, const EVP_SKEYMGMT * keymgmt, void (*fn)(const char *name, void *data), void * data);
	APICALL int (*EVP_MAC_init_SKEY)(struct AmiSSLIFace *Self, EVP_MAC_CTX * ctx, EVP_SKEY * skey, const OSSL_PARAM * params);
	APICALL const char * (*EVP_SKEY_get0_key_id)(struct AmiSSLIFace *Self, const EVP_SKEY * skey);
	APICALL const char * (*EVP_SKEY_get0_skeymgmt_name)(struct AmiSSLIFace *Self, const EVP_SKEY * skey);
	APICALL const char * (*EVP_SKEY_get0_provider_name)(struct AmiSSLIFace *Self, const EVP_SKEY * skey);
	APICALL const OSSL_PARAM * (*EVP_SKEYMGMT_get0_gen_settable_params)(struct AmiSSLIFace *Self, const EVP_SKEYMGMT * skeymgmt);
	APICALL const OSSL_PARAM * (*EVP_SKEYMGMT_get0_imp_settable_params)(struct AmiSSLIFace *Self, const EVP_SKEYMGMT * skeymgmt);
	APICALL int (*EVP_SKEY_is_a)(struct AmiSSLIFace *Self, const EVP_SKEY * skey, const char * name);
	APICALL EVP_SKEY * (*EVP_SKEY_to_provider)(struct AmiSSLIFace *Self, EVP_SKEY * skey, OSSL_LIB_CTX * libctx, OSSL_PROVIDER * prov, const char * propquery);
	APICALL int (*OSSL_PROVIDER_add_conf_parameter)(struct AmiSSLIFace *Self, OSSL_PROVIDER * prov, const char * name, const char * value);
	APICALL int (*OSSL_PROVIDER_get_conf_parameters)(struct AmiSSLIFace *Self, const OSSL_PROVIDER * prov, OSSL_PARAM * params);
	APICALL int (*OSSL_PROVIDER_conf_get_bool)(struct AmiSSLIFace *Self, const OSSL_PROVIDER * prov, const char * name, int defval);
	APICALL OSSL_AA_DIST_POINT * (*d2i_OSSL_AA_DIST_POINT)(struct AmiSSLIFace *Self, OSSL_AA_DIST_POINT ** a, const unsigned char ** in, long len);
	APICALL int (*i2d_OSSL_AA_DIST_POINT)(struct AmiSSLIFace *Self, const OSSL_AA_DIST_POINT * a, unsigned char ** out);
	APICALL void (*OSSL_AA_DIST_POINT_free)(struct AmiSSLIFace *Self, OSSL_AA_DIST_POINT * a);
	APICALL OSSL_AA_DIST_POINT * (*OSSL_AA_DIST_POINT_new)(struct AmiSSLIFace *Self);
	APICALL const ASN1_ITEM * (*OSSL_AA_DIST_POINT_it)(struct AmiSSLIFace *Self);
	APICALL int (*PEM_ASN1_write_bio_ctx)(struct AmiSSLIFace *Self, OSSL_i2d_of_void_ctx * i2d, void * vctx, const char * name, BIO * bp, const void * x, const EVP_CIPHER * enc, const unsigned char * kstr, int klen, pem_password_cb * cb, void * u);
	APICALL int (*EVP_PKEY_get_security_category)(struct AmiSSLIFace *Self, const EVP_PKEY * pkey);
	APICALL void (*X509_STORE_CTX_set_ocsp_resp)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, STACK_OF(OCSP_RESPONSE) * sk);
	APICALL OPENSSL_STACK * (*OPENSSL_sk_set_thunks)(struct AmiSSLIFace *Self, OPENSSL_STACK * st, OPENSSL_sk_freefunc_thunk f_thunk);
	APICALL int (*i2d_PKCS8PrivateKey)(struct AmiSSLIFace *Self, const EVP_PKEY * a, unsigned char ** pp);
	APICALL int (*OSSL_PARAM_set_octet_string_or_ptr)(struct AmiSSLIFace *Self, OSSL_PARAM * p, const void * val, size_t len);
	APICALL const OSSL_PARAM * (*OSSL_STORE_LOADER_settable_ctx_params)(struct AmiSSLIFace *Self, const OSSL_STORE_LOADER * loader);
	APICALL const X509_ALGOR * (*X509_CRL_get0_tbs_sigalg)(struct AmiSSLIFace *Self, const X509_CRL * crl);
	APICALL int (*CMS_RecipientInfo_kemri_cert_cmp)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, X509 * cert);
	APICALL int (*CMS_RecipientInfo_kemri_set0_pkey)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, EVP_PKEY * pk);
	APICALL EVP_CIPHER_CTX * (*CMS_RecipientInfo_kemri_get0_ctx)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri);
	APICALL X509_ALGOR * (*CMS_RecipientInfo_kemri_get0_kdf_alg)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri);
	APICALL int (*CMS_RecipientInfo_kemri_set_ukm)(struct AmiSSLIFace *Self, CMS_RecipientInfo * ri, const unsigned char * ukm, int ukmLength);
	APICALL EVP_SKEY * (*EVP_PKEY_derive_SKEY)(struct AmiSSLIFace *Self, EVP_PKEY_CTX * ctx, EVP_SKEYMGMT * mgmt, const char * key_type, const char * propquery, size_t keylen, const OSSL_PARAM * params);
	APICALL int (*EVP_KDF_CTX_set_SKEY)(struct AmiSSLIFace *Self, EVP_KDF_CTX * ctx, EVP_SKEY * key, const char * paramname);
	APICALL EVP_SKEY * (*EVP_KDF_derive_SKEY)(struct AmiSSLIFace *Self, EVP_KDF_CTX * ctx, EVP_SKEYMGMT * mgmt, const char * key_type, const char * propquery, size_t keylen, const OSSL_PARAM * params);
	APICALL EVP_SKEY * (*EVP_SKEY_import_SKEYMGMT)(struct AmiSSLIFace *Self, OSSL_LIB_CTX * libctx, EVP_SKEYMGMT * skeymgmt, int selection, const OSSL_PARAM * params);
	APICALL void * (*CRYPTO_malloc_array)(struct AmiSSLIFace *Self, size_t num, size_t size, const char * file, int line);
	APICALL void * (*CRYPTO_calloc)(struct AmiSSLIFace *Self, size_t num, size_t size, const char * file, int line);
	APICALL void * (*CRYPTO_aligned_alloc_array)(struct AmiSSLIFace *Self, size_t num, size_t size, size_t align, void ** freeptr, const char * file, int line);
	APICALL void * (*CRYPTO_realloc_array)(struct AmiSSLIFace *Self, void * addr, size_t num, size_t size, const char * file, int line);
	APICALL void * (*CRYPTO_clear_realloc_array)(struct AmiSSLIFace *Self, void * addr, size_t old_num, size_t num, size_t size, const char * file, int line);
	APICALL void * (*CRYPTO_secure_malloc_array)(struct AmiSSLIFace *Self, size_t num, size_t size, const char * file, int line);
	APICALL void * (*CRYPTO_secure_calloc)(struct AmiSSLIFace *Self, size_t num, size_t size, const char * file, int line);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* AMISSL_INTERFACE_DEF_H */
