/* Automatically generated header (sfdc 1.12)! Do not edit! */

#ifndef _INLINE_AMISSL_H
#define _INLINE_AMISSL_H

#ifndef _SFDC_VARARG_DEFINED
#define _SFDC_VARARG_DEFINED
#ifdef __HAVE_IPTR_ATTR__
typedef APTR _sfdc_vararg __attribute__((iptr));
#else
typedef ULONG _sfdc_vararg;
#endif /* __HAVE_IPTR_ATTR__ */
#endif /* _SFDC_VARARG_DEFINED */

long __InitAmiSSLA(__reg("a6") struct Library * , __reg("a0") struct TagItem * tagList ) = "\tjsr\t-36(a6)";
#define InitAmiSSLA(tagList) __InitAmiSSLA(AmiSSLBase, (tagList))

#if !defined(NO_INLINE_STDARG) && (__STDC__ == 1L) && (__STDC_VERSION__ >= 199901L)
long __InitAmiSSL(__reg("a6") struct Library * , Tag tag , ... ) = "\tmove.l\ta0,-(a7)\n\tlea\t4(a7),a0\n\tjsr\t-36(a6)\n\tmovea.l\t(a7)+,a0";
#define InitAmiSSL(...) __InitAmiSSL(AmiSSLBase, __VA_ARGS__)
#endif

long __CleanupAmiSSLA(__reg("a6") struct Library * , __reg("a0") struct TagItem * tagList ) = "\tjsr\t-42(a6)";
#define CleanupAmiSSLA(tagList) __CleanupAmiSSLA(AmiSSLBase, (tagList))

#if !defined(NO_INLINE_STDARG) && (__STDC__ == 1L) && (__STDC_VERSION__ >= 199901L)
long __CleanupAmiSSL(__reg("a6") struct Library * , Tag tag , ... ) = "\tmove.l\ta0,-(a7)\n\tlea\t4(a7),a0\n\tjsr\t-42(a6)\n\tmovea.l\t(a7)+,a0";
#define CleanupAmiSSL(...) __CleanupAmiSSL(AmiSSLBase, __VA_ARGS__)
#endif

ASN1_TYPE * __ASN1_TYPE_new(__reg("a6") struct Library * ) = "\tjsr\t-102(a6)";
#define ASN1_TYPE_new() __ASN1_TYPE_new(AmiSSLBase)

void __ASN1_TYPE_free(__reg("a6") struct Library * , __reg("a0") ASN1_TYPE * a ) = "\tjsr\t-108(a6)";
#define ASN1_TYPE_free(a) __ASN1_TYPE_free(AmiSSLBase, (a))

ASN1_TYPE * __d2i_ASN1_TYPE(__reg("a6") struct Library * , __reg("a0") ASN1_TYPE ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-114(a6)";
#define d2i_ASN1_TYPE(a, in, len) __d2i_ASN1_TYPE(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_TYPE(__reg("a6") struct Library * , __reg("a0") const ASN1_TYPE * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-120(a6)";
#define i2d_ASN1_TYPE(a, out) __i2d_ASN1_TYPE(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_ANY_it(__reg("a6") struct Library * ) = "\tjsr\t-126(a6)";
#define ASN1_ANY_it() __ASN1_ANY_it(AmiSSLBase)

int __ASN1_TYPE_get(__reg("a6") struct Library * , __reg("a0") const ASN1_TYPE * a ) = "\tjsr\t-132(a6)";
#define ASN1_TYPE_get(a) __ASN1_TYPE_get(AmiSSLBase, (a))

void __ASN1_TYPE_set(__reg("a6") struct Library * , __reg("a0") ASN1_TYPE * a , __reg("d0") int type , __reg("a1") void * value ) = "\tjsr\t-138(a6)";
#define ASN1_TYPE_set(a, type, value) __ASN1_TYPE_set(AmiSSLBase, (a), (type), (value))

ASN1_OBJECT * __ASN1_OBJECT_new(__reg("a6") struct Library * ) = "\tjsr\t-144(a6)";
#define ASN1_OBJECT_new() __ASN1_OBJECT_new(AmiSSLBase)

void __ASN1_OBJECT_free(__reg("a6") struct Library * , __reg("a0") ASN1_OBJECT * a ) = "\tjsr\t-150(a6)";
#define ASN1_OBJECT_free(a) __ASN1_OBJECT_free(AmiSSLBase, (a))

int __i2d_ASN1_OBJECT(__reg("a6") struct Library * , __reg("a0") const ASN1_OBJECT * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-156(a6)";
#define i2d_ASN1_OBJECT(a, pp) __i2d_ASN1_OBJECT(AmiSSLBase, (a), (pp))

ASN1_OBJECT * __d2i_ASN1_OBJECT(__reg("a6") struct Library * , __reg("a0") ASN1_OBJECT ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-168(a6)";
#define d2i_ASN1_OBJECT(a, pp, length) __d2i_ASN1_OBJECT(AmiSSLBase, (a), (pp), (length))

const ASN1_ITEM * __ASN1_OBJECT_it(__reg("a6") struct Library * ) = "\tjsr\t-174(a6)";
#define ASN1_OBJECT_it() __ASN1_OBJECT_it(AmiSSLBase)

ASN1_STRING * __ASN1_STRING_new(__reg("a6") struct Library * ) = "\tjsr\t-180(a6)";
#define ASN1_STRING_new() __ASN1_STRING_new(AmiSSLBase)

void __ASN1_STRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_STRING * a ) = "\tjsr\t-186(a6)";
#define ASN1_STRING_free(a) __ASN1_STRING_free(AmiSSLBase, (a))

ASN1_STRING * __ASN1_STRING_dup(__reg("a6") struct Library * , __reg("a0") const ASN1_STRING * a ) = "\tjsr\t-192(a6)";
#define ASN1_STRING_dup(a) __ASN1_STRING_dup(AmiSSLBase, (a))

ASN1_STRING * __ASN1_STRING_type_new(__reg("a6") struct Library * , __reg("d0") int type ) = "\tjsr\t-198(a6)";
#define ASN1_STRING_type_new(type) __ASN1_STRING_type_new(AmiSSLBase, (type))

int __ASN1_STRING_cmp(__reg("a6") struct Library * , __reg("a0") const ASN1_STRING * a , __reg("a1") const ASN1_STRING * b ) = "\tjsr\t-204(a6)";
#define ASN1_STRING_cmp(a, b) __ASN1_STRING_cmp(AmiSSLBase, (a), (b))

int __ASN1_STRING_set(__reg("a6") struct Library * , __reg("a0") ASN1_STRING * str , __reg("a1") const void * data , __reg("d0") int len ) = "\tjsr\t-210(a6)";
#define ASN1_STRING_set(str, data, len) __ASN1_STRING_set(AmiSSLBase, (str), (data), (len))

int __ASN1_STRING_length(__reg("a6") struct Library * , __reg("a0") const ASN1_STRING * x ) = "\tjsr\t-216(a6)";
#define ASN1_STRING_length(x) __ASN1_STRING_length(AmiSSLBase, (x))

void __ASN1_STRING_length_set(__reg("a6") struct Library * , __reg("a0") ASN1_STRING * x , __reg("d0") int n ) = "\tjsr\t-222(a6)";
#define ASN1_STRING_length_set(x, n) __ASN1_STRING_length_set(AmiSSLBase, (x), (n))

int __ASN1_STRING_type(__reg("a6") struct Library * , __reg("a0") const ASN1_STRING * x ) = "\tjsr\t-228(a6)";
#define ASN1_STRING_type(x) __ASN1_STRING_type(AmiSSLBase, (x))

unsigned char * __ASN1_STRING_data(__reg("a6") struct Library * , __reg("a0") ASN1_STRING * x ) = "\tjsr\t-234(a6)";
#define ASN1_STRING_data(x) __ASN1_STRING_data(AmiSSLBase, (x))

ASN1_BIT_STRING * __ASN1_BIT_STRING_new(__reg("a6") struct Library * ) = "\tjsr\t-240(a6)";
#define ASN1_BIT_STRING_new() __ASN1_BIT_STRING_new(AmiSSLBase)

void __ASN1_BIT_STRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_BIT_STRING * x ) = "\tjsr\t-246(a6)";
#define ASN1_BIT_STRING_free(x) __ASN1_BIT_STRING_free(AmiSSLBase, (x))

ASN1_BIT_STRING * __d2i_ASN1_BIT_STRING(__reg("a6") struct Library * , __reg("a0") ASN1_BIT_STRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-252(a6)";
#define d2i_ASN1_BIT_STRING(a, in, len) __d2i_ASN1_BIT_STRING(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_BIT_STRING(__reg("a6") struct Library * , __reg("a0") const ASN1_BIT_STRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-258(a6)";
#define i2d_ASN1_BIT_STRING(a, out) __i2d_ASN1_BIT_STRING(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_BIT_STRING_it(__reg("a6") struct Library * ) = "\tjsr\t-264(a6)";
#define ASN1_BIT_STRING_it() __ASN1_BIT_STRING_it(AmiSSLBase)

int __ASN1_BIT_STRING_set(__reg("a6") struct Library * , __reg("a0") ASN1_BIT_STRING * a , __reg("a1") unsigned char * d , __reg("d0") int length ) = "\tjsr\t-282(a6)";
#define ASN1_BIT_STRING_set(a, d, length) __ASN1_BIT_STRING_set(AmiSSLBase, (a), (d), (length))

int __ASN1_BIT_STRING_set_bit(__reg("a6") struct Library * , __reg("a0") ASN1_BIT_STRING * a , __reg("d0") int n , __reg("d1") int value ) = "\tjsr\t-288(a6)";
#define ASN1_BIT_STRING_set_bit(a, n, value) __ASN1_BIT_STRING_set_bit(AmiSSLBase, (a), (n), (value))

int __ASN1_BIT_STRING_get_bit(__reg("a6") struct Library * , __reg("a0") const ASN1_BIT_STRING * a , __reg("d0") int n ) = "\tjsr\t-294(a6)";
#define ASN1_BIT_STRING_get_bit(a, n) __ASN1_BIT_STRING_get_bit(AmiSSLBase, (a), (n))

int __ASN1_BIT_STRING_name_print(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") ASN1_BIT_STRING * bs , __reg("a2") BIT_STRING_BITNAME * tbl , __reg("d0") int indent ) = "\tjsr\t-300(a6)";
#define ASN1_BIT_STRING_name_print(out, bs, tbl, indent) __ASN1_BIT_STRING_name_print(AmiSSLBase, (out), (bs), (tbl), (indent))

int __ASN1_BIT_STRING_num_asc(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("a1") BIT_STRING_BITNAME * tbl ) = "\tjsr\t-306(a6)";
#define ASN1_BIT_STRING_num_asc(name, tbl) __ASN1_BIT_STRING_num_asc(AmiSSLBase, (name), (tbl))

int __ASN1_BIT_STRING_set_asc(__reg("a6") struct Library * , __reg("a0") ASN1_BIT_STRING * bs , __reg("a1") const char * name , __reg("d0") int value , __reg("a2") BIT_STRING_BITNAME * tbl ) = "\tjsr\t-312(a6)";
#define ASN1_BIT_STRING_set_asc(bs, name, value, tbl) __ASN1_BIT_STRING_set_asc(AmiSSLBase, (bs), (name), (value), (tbl))

ASN1_INTEGER * __ASN1_INTEGER_new(__reg("a6") struct Library * ) = "\tjsr\t-330(a6)";
#define ASN1_INTEGER_new() __ASN1_INTEGER_new(AmiSSLBase)

void __ASN1_INTEGER_free(__reg("a6") struct Library * , __reg("a0") ASN1_INTEGER * x ) = "\tjsr\t-336(a6)";
#define ASN1_INTEGER_free(x) __ASN1_INTEGER_free(AmiSSLBase, (x))

ASN1_INTEGER * __d2i_ASN1_INTEGER(__reg("a6") struct Library * , __reg("a0") ASN1_INTEGER ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-342(a6)";
#define d2i_ASN1_INTEGER(a, in, len) __d2i_ASN1_INTEGER(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_INTEGER(__reg("a6") struct Library * , __reg("a0") const ASN1_INTEGER * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-348(a6)";
#define i2d_ASN1_INTEGER(a, out) __i2d_ASN1_INTEGER(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_INTEGER_it(__reg("a6") struct Library * ) = "\tjsr\t-354(a6)";
#define ASN1_INTEGER_it() __ASN1_INTEGER_it(AmiSSLBase)

ASN1_INTEGER * __d2i_ASN1_UINTEGER(__reg("a6") struct Library * , __reg("a0") ASN1_INTEGER ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-372(a6)";
#define d2i_ASN1_UINTEGER(a, pp, length) __d2i_ASN1_UINTEGER(AmiSSLBase, (a), (pp), (length))

ASN1_INTEGER * __ASN1_INTEGER_dup(__reg("a6") struct Library * , __reg("a0") const ASN1_INTEGER * x ) = "\tjsr\t-378(a6)";
#define ASN1_INTEGER_dup(x) __ASN1_INTEGER_dup(AmiSSLBase, (x))

int __ASN1_INTEGER_cmp(__reg("a6") struct Library * , __reg("a0") const ASN1_INTEGER * x , __reg("a1") const ASN1_INTEGER * y ) = "\tjsr\t-384(a6)";
#define ASN1_INTEGER_cmp(x, y) __ASN1_INTEGER_cmp(AmiSSLBase, (x), (y))

ASN1_ENUMERATED * __ASN1_ENUMERATED_new(__reg("a6") struct Library * ) = "\tjsr\t-390(a6)";
#define ASN1_ENUMERATED_new() __ASN1_ENUMERATED_new(AmiSSLBase)

void __ASN1_ENUMERATED_free(__reg("a6") struct Library * , __reg("a0") ASN1_ENUMERATED * x ) = "\tjsr\t-396(a6)";
#define ASN1_ENUMERATED_free(x) __ASN1_ENUMERATED_free(AmiSSLBase, (x))

ASN1_ENUMERATED * __d2i_ASN1_ENUMERATED(__reg("a6") struct Library * , __reg("a0") ASN1_ENUMERATED ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-402(a6)";
#define d2i_ASN1_ENUMERATED(a, in, len) __d2i_ASN1_ENUMERATED(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_ENUMERATED(__reg("a6") struct Library * , __reg("a0") const ASN1_ENUMERATED * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-408(a6)";
#define i2d_ASN1_ENUMERATED(a, out) __i2d_ASN1_ENUMERATED(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_ENUMERATED_it(__reg("a6") struct Library * ) = "\tjsr\t-414(a6)";
#define ASN1_ENUMERATED_it() __ASN1_ENUMERATED_it(AmiSSLBase)

int __ASN1_UTCTIME_check(__reg("a6") struct Library * , __reg("a0") const ASN1_UTCTIME * a ) = "\tjsr\t-420(a6)";
#define ASN1_UTCTIME_check(a) __ASN1_UTCTIME_check(AmiSSLBase, (a))

ASN1_UTCTIME * __ASN1_UTCTIME_set(__reg("a6") struct Library * , __reg("a0") ASN1_UTCTIME * s , __reg("d0") time_t t ) = "\tjsr\t-426(a6)";
#define ASN1_UTCTIME_set(s, t) __ASN1_UTCTIME_set(AmiSSLBase, (s), (t))

int __ASN1_UTCTIME_set_string(__reg("a6") struct Library * , __reg("a0") ASN1_UTCTIME * s , __reg("a1") const char * str ) = "\tjsr\t-432(a6)";
#define ASN1_UTCTIME_set_string(s, str) __ASN1_UTCTIME_set_string(AmiSSLBase, (s), (str))

int __ASN1_UTCTIME_cmp_time_t(__reg("a6") struct Library * , __reg("a0") const ASN1_UTCTIME * s , __reg("d0") time_t t ) = "\tjsr\t-438(a6)";
#define ASN1_UTCTIME_cmp_time_t(s, t) __ASN1_UTCTIME_cmp_time_t(AmiSSLBase, (s), (t))

int __ASN1_GENERALIZEDTIME_check(__reg("a6") struct Library * , __reg("a0") const ASN1_GENERALIZEDTIME * a ) = "\tjsr\t-444(a6)";
#define ASN1_GENERALIZEDTIME_check(a) __ASN1_GENERALIZEDTIME_check(AmiSSLBase, (a))

ASN1_GENERALIZEDTIME * __ASN1_GENERALIZEDTIME_set(__reg("a6") struct Library * , __reg("a0") ASN1_GENERALIZEDTIME * s , __reg("d0") time_t t ) = "\tjsr\t-450(a6)";
#define ASN1_GENERALIZEDTIME_set(s, t) __ASN1_GENERALIZEDTIME_set(AmiSSLBase, (s), (t))

int __ASN1_GENERALIZEDTIME_set_string(__reg("a6") struct Library * , __reg("a0") ASN1_GENERALIZEDTIME * s , __reg("a1") const char * str ) = "\tjsr\t-456(a6)";
#define ASN1_GENERALIZEDTIME_set_string(s, str) __ASN1_GENERALIZEDTIME_set_string(AmiSSLBase, (s), (str))

ASN1_OCTET_STRING * __ASN1_OCTET_STRING_new(__reg("a6") struct Library * ) = "\tjsr\t-462(a6)";
#define ASN1_OCTET_STRING_new() __ASN1_OCTET_STRING_new(AmiSSLBase)

void __ASN1_OCTET_STRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_OCTET_STRING * x ) = "\tjsr\t-468(a6)";
#define ASN1_OCTET_STRING_free(x) __ASN1_OCTET_STRING_free(AmiSSLBase, (x))

ASN1_OCTET_STRING * __d2i_ASN1_OCTET_STRING(__reg("a6") struct Library * , __reg("a0") ASN1_OCTET_STRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-474(a6)";
#define d2i_ASN1_OCTET_STRING(a, in, len) __d2i_ASN1_OCTET_STRING(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_OCTET_STRING(__reg("a6") struct Library * , __reg("a0") const ASN1_OCTET_STRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-480(a6)";
#define i2d_ASN1_OCTET_STRING(a, out) __i2d_ASN1_OCTET_STRING(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_OCTET_STRING_it(__reg("a6") struct Library * ) = "\tjsr\t-486(a6)";
#define ASN1_OCTET_STRING_it() __ASN1_OCTET_STRING_it(AmiSSLBase)

ASN1_OCTET_STRING * __ASN1_OCTET_STRING_dup(__reg("a6") struct Library * , __reg("a0") const ASN1_OCTET_STRING * a ) = "\tjsr\t-492(a6)";
#define ASN1_OCTET_STRING_dup(a) __ASN1_OCTET_STRING_dup(AmiSSLBase, (a))

int __ASN1_OCTET_STRING_cmp(__reg("a6") struct Library * , __reg("a0") const ASN1_OCTET_STRING * a , __reg("a1") const ASN1_OCTET_STRING * b ) = "\tjsr\t-498(a6)";
#define ASN1_OCTET_STRING_cmp(a, b) __ASN1_OCTET_STRING_cmp(AmiSSLBase, (a), (b))

int __ASN1_OCTET_STRING_set(__reg("a6") struct Library * , __reg("a0") ASN1_OCTET_STRING * str , __reg("a1") const unsigned char * data , __reg("d0") int len ) = "\tjsr\t-504(a6)";
#define ASN1_OCTET_STRING_set(str, data, len) __ASN1_OCTET_STRING_set(AmiSSLBase, (str), (data), (len))

ASN1_VISIBLESTRING * __ASN1_VISIBLESTRING_new(__reg("a6") struct Library * ) = "\tjsr\t-510(a6)";
#define ASN1_VISIBLESTRING_new() __ASN1_VISIBLESTRING_new(AmiSSLBase)

void __ASN1_VISIBLESTRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_VISIBLESTRING * a ) = "\tjsr\t-516(a6)";
#define ASN1_VISIBLESTRING_free(a) __ASN1_VISIBLESTRING_free(AmiSSLBase, (a))

ASN1_VISIBLESTRING * __d2i_ASN1_VISIBLESTRING(__reg("a6") struct Library * , __reg("a0") ASN1_VISIBLESTRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-522(a6)";
#define d2i_ASN1_VISIBLESTRING(a, in, len) __d2i_ASN1_VISIBLESTRING(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_VISIBLESTRING(__reg("a6") struct Library * , __reg("a0") const ASN1_VISIBLESTRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-528(a6)";
#define i2d_ASN1_VISIBLESTRING(a, out) __i2d_ASN1_VISIBLESTRING(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_VISIBLESTRING_it(__reg("a6") struct Library * ) = "\tjsr\t-534(a6)";
#define ASN1_VISIBLESTRING_it() __ASN1_VISIBLESTRING_it(AmiSSLBase)

ASN1_UNIVERSALSTRING * __ASN1_UNIVERSALSTRING_new(__reg("a6") struct Library * ) = "\tjsr\t-540(a6)";
#define ASN1_UNIVERSALSTRING_new() __ASN1_UNIVERSALSTRING_new(AmiSSLBase)

void __ASN1_UNIVERSALSTRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_UNIVERSALSTRING * a ) = "\tjsr\t-546(a6)";
#define ASN1_UNIVERSALSTRING_free(a) __ASN1_UNIVERSALSTRING_free(AmiSSLBase, (a))

ASN1_UNIVERSALSTRING * __d2i_ASN1_UNIVERSALSTRING(__reg("a6") struct Library * , __reg("a0") ASN1_UNIVERSALSTRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-552(a6)";
#define d2i_ASN1_UNIVERSALSTRING(a, in, len) __d2i_ASN1_UNIVERSALSTRING(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_UNIVERSALSTRING(__reg("a6") struct Library * , __reg("a0") const ASN1_UNIVERSALSTRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-558(a6)";
#define i2d_ASN1_UNIVERSALSTRING(a, out) __i2d_ASN1_UNIVERSALSTRING(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_UNIVERSALSTRING_it(__reg("a6") struct Library * ) = "\tjsr\t-564(a6)";
#define ASN1_UNIVERSALSTRING_it() __ASN1_UNIVERSALSTRING_it(AmiSSLBase)

ASN1_UTF8STRING * __ASN1_UTF8STRING_new(__reg("a6") struct Library * ) = "\tjsr\t-570(a6)";
#define ASN1_UTF8STRING_new() __ASN1_UTF8STRING_new(AmiSSLBase)

void __ASN1_UTF8STRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_UTF8STRING * x ) = "\tjsr\t-576(a6)";
#define ASN1_UTF8STRING_free(x) __ASN1_UTF8STRING_free(AmiSSLBase, (x))

ASN1_UTF8STRING * __d2i_ASN1_UTF8STRING(__reg("a6") struct Library * , __reg("a0") ASN1_UTF8STRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-582(a6)";
#define d2i_ASN1_UTF8STRING(a, in, len) __d2i_ASN1_UTF8STRING(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_UTF8STRING(__reg("a6") struct Library * , __reg("a0") const ASN1_UTF8STRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-588(a6)";
#define i2d_ASN1_UTF8STRING(a, out) __i2d_ASN1_UTF8STRING(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_UTF8STRING_it(__reg("a6") struct Library * ) = "\tjsr\t-594(a6)";
#define ASN1_UTF8STRING_it() __ASN1_UTF8STRING_it(AmiSSLBase)

ASN1_NULL * __ASN1_NULL_new(__reg("a6") struct Library * ) = "\tjsr\t-600(a6)";
#define ASN1_NULL_new() __ASN1_NULL_new(AmiSSLBase)

void __ASN1_NULL_free(__reg("a6") struct Library * , __reg("a0") ASN1_NULL * a ) = "\tjsr\t-606(a6)";
#define ASN1_NULL_free(a) __ASN1_NULL_free(AmiSSLBase, (a))

ASN1_NULL * __d2i_ASN1_NULL(__reg("a6") struct Library * , __reg("a0") ASN1_NULL ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-612(a6)";
#define d2i_ASN1_NULL(a, in, len) __d2i_ASN1_NULL(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_NULL(__reg("a6") struct Library * , __reg("a0") const ASN1_NULL * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-618(a6)";
#define i2d_ASN1_NULL(a, out) __i2d_ASN1_NULL(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_NULL_it(__reg("a6") struct Library * ) = "\tjsr\t-624(a6)";
#define ASN1_NULL_it() __ASN1_NULL_it(AmiSSLBase)

ASN1_BMPSTRING * __ASN1_BMPSTRING_new(__reg("a6") struct Library * ) = "\tjsr\t-630(a6)";
#define ASN1_BMPSTRING_new() __ASN1_BMPSTRING_new(AmiSSLBase)

void __ASN1_BMPSTRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_BMPSTRING * a ) = "\tjsr\t-636(a6)";
#define ASN1_BMPSTRING_free(a) __ASN1_BMPSTRING_free(AmiSSLBase, (a))

ASN1_BMPSTRING * __d2i_ASN1_BMPSTRING(__reg("a6") struct Library * , __reg("a0") ASN1_BMPSTRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-642(a6)";
#define d2i_ASN1_BMPSTRING(a, in, len) __d2i_ASN1_BMPSTRING(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_BMPSTRING(__reg("a6") struct Library * , __reg("a0") const ASN1_BMPSTRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-648(a6)";
#define i2d_ASN1_BMPSTRING(a, out) __i2d_ASN1_BMPSTRING(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_BMPSTRING_it(__reg("a6") struct Library * ) = "\tjsr\t-654(a6)";
#define ASN1_BMPSTRING_it() __ASN1_BMPSTRING_it(AmiSSLBase)

int __UTF8_getc(__reg("a6") struct Library * , __reg("a0") const unsigned char * str , __reg("d0") int len , __reg("a1") unsigned long * val ) = "\tjsr\t-660(a6)";
#define UTF8_getc(str, len, val) __UTF8_getc(AmiSSLBase, (str), (len), (val))

int __UTF8_putc(__reg("a6") struct Library * , __reg("a0") unsigned char * str , __reg("d0") int len , __reg("d1") unsigned long value ) = "\tjsr\t-666(a6)";
#define UTF8_putc(str, len, value) __UTF8_putc(AmiSSLBase, (str), (len), (value))

ASN1_STRING * __ASN1_PRINTABLE_new(__reg("a6") struct Library * ) = "\tjsr\t-672(a6)";
#define ASN1_PRINTABLE_new() __ASN1_PRINTABLE_new(AmiSSLBase)

void __ASN1_PRINTABLE_free(__reg("a6") struct Library * , __reg("a0") ASN1_STRING * a ) = "\tjsr\t-678(a6)";
#define ASN1_PRINTABLE_free(a) __ASN1_PRINTABLE_free(AmiSSLBase, (a))

ASN1_STRING * __d2i_ASN1_PRINTABLE(__reg("a6") struct Library * , __reg("a0") ASN1_STRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-684(a6)";
#define d2i_ASN1_PRINTABLE(a, in, len) __d2i_ASN1_PRINTABLE(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_PRINTABLE(__reg("a6") struct Library * , __reg("a0") const ASN1_STRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-690(a6)";
#define i2d_ASN1_PRINTABLE(a, out) __i2d_ASN1_PRINTABLE(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_PRINTABLE_it(__reg("a6") struct Library * ) = "\tjsr\t-696(a6)";
#define ASN1_PRINTABLE_it() __ASN1_PRINTABLE_it(AmiSSLBase)

ASN1_STRING * __DIRECTORYSTRING_new(__reg("a6") struct Library * ) = "\tjsr\t-702(a6)";
#define DIRECTORYSTRING_new() __DIRECTORYSTRING_new(AmiSSLBase)

void __DIRECTORYSTRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_STRING * a ) = "\tjsr\t-708(a6)";
#define DIRECTORYSTRING_free(a) __DIRECTORYSTRING_free(AmiSSLBase, (a))

ASN1_STRING * __d2i_DIRECTORYSTRING(__reg("a6") struct Library * , __reg("a0") ASN1_STRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-714(a6)";
#define d2i_DIRECTORYSTRING(a, in, len) __d2i_DIRECTORYSTRING(AmiSSLBase, (a), (in), (len))

int __i2d_DIRECTORYSTRING(__reg("a6") struct Library * , __reg("a0") const ASN1_STRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-720(a6)";
#define i2d_DIRECTORYSTRING(a, out) __i2d_DIRECTORYSTRING(AmiSSLBase, (a), (out))

const ASN1_ITEM * __DIRECTORYSTRING_it(__reg("a6") struct Library * ) = "\tjsr\t-726(a6)";
#define DIRECTORYSTRING_it() __DIRECTORYSTRING_it(AmiSSLBase)

ASN1_STRING * __DISPLAYTEXT_new(__reg("a6") struct Library * ) = "\tjsr\t-732(a6)";
#define DISPLAYTEXT_new() __DISPLAYTEXT_new(AmiSSLBase)

void __DISPLAYTEXT_free(__reg("a6") struct Library * , __reg("a0") ASN1_STRING * a ) = "\tjsr\t-738(a6)";
#define DISPLAYTEXT_free(a) __DISPLAYTEXT_free(AmiSSLBase, (a))

ASN1_STRING * __d2i_DISPLAYTEXT(__reg("a6") struct Library * , __reg("a0") ASN1_STRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-744(a6)";
#define d2i_DISPLAYTEXT(a, in, len) __d2i_DISPLAYTEXT(AmiSSLBase, (a), (in), (len))

int __i2d_DISPLAYTEXT(__reg("a6") struct Library * , __reg("a0") const ASN1_STRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-750(a6)";
#define i2d_DISPLAYTEXT(a, out) __i2d_DISPLAYTEXT(AmiSSLBase, (a), (out))

const ASN1_ITEM * __DISPLAYTEXT_it(__reg("a6") struct Library * ) = "\tjsr\t-756(a6)";
#define DISPLAYTEXT_it() __DISPLAYTEXT_it(AmiSSLBase)

ASN1_PRINTABLESTRING * __ASN1_PRINTABLESTRING_new(__reg("a6") struct Library * ) = "\tjsr\t-762(a6)";
#define ASN1_PRINTABLESTRING_new() __ASN1_PRINTABLESTRING_new(AmiSSLBase)

void __ASN1_PRINTABLESTRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_PRINTABLESTRING * a ) = "\tjsr\t-768(a6)";
#define ASN1_PRINTABLESTRING_free(a) __ASN1_PRINTABLESTRING_free(AmiSSLBase, (a))

ASN1_PRINTABLESTRING * __d2i_ASN1_PRINTABLESTRING(__reg("a6") struct Library * , __reg("a0") ASN1_PRINTABLESTRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-774(a6)";
#define d2i_ASN1_PRINTABLESTRING(a, in, len) __d2i_ASN1_PRINTABLESTRING(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_PRINTABLESTRING(__reg("a6") struct Library * , __reg("a0") const ASN1_PRINTABLESTRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-780(a6)";
#define i2d_ASN1_PRINTABLESTRING(a, out) __i2d_ASN1_PRINTABLESTRING(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_PRINTABLESTRING_it(__reg("a6") struct Library * ) = "\tjsr\t-786(a6)";
#define ASN1_PRINTABLESTRING_it() __ASN1_PRINTABLESTRING_it(AmiSSLBase)

ASN1_T61STRING * __ASN1_T61STRING_new(__reg("a6") struct Library * ) = "\tjsr\t-792(a6)";
#define ASN1_T61STRING_new() __ASN1_T61STRING_new(AmiSSLBase)

void __ASN1_T61STRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_T61STRING * a ) = "\tjsr\t-798(a6)";
#define ASN1_T61STRING_free(a) __ASN1_T61STRING_free(AmiSSLBase, (a))

ASN1_T61STRING * __d2i_ASN1_T61STRING(__reg("a6") struct Library * , __reg("a0") ASN1_T61STRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-804(a6)";
#define d2i_ASN1_T61STRING(a, in, len) __d2i_ASN1_T61STRING(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_T61STRING(__reg("a6") struct Library * , __reg("a0") const ASN1_T61STRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-810(a6)";
#define i2d_ASN1_T61STRING(a, out) __i2d_ASN1_T61STRING(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_T61STRING_it(__reg("a6") struct Library * ) = "\tjsr\t-816(a6)";
#define ASN1_T61STRING_it() __ASN1_T61STRING_it(AmiSSLBase)

ASN1_IA5STRING * __ASN1_IA5STRING_new(__reg("a6") struct Library * ) = "\tjsr\t-822(a6)";
#define ASN1_IA5STRING_new() __ASN1_IA5STRING_new(AmiSSLBase)

void __ASN1_IA5STRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_IA5STRING * a ) = "\tjsr\t-828(a6)";
#define ASN1_IA5STRING_free(a) __ASN1_IA5STRING_free(AmiSSLBase, (a))

ASN1_IA5STRING * __d2i_ASN1_IA5STRING(__reg("a6") struct Library * , __reg("a0") ASN1_IA5STRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-834(a6)";
#define d2i_ASN1_IA5STRING(a, in, len) __d2i_ASN1_IA5STRING(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_IA5STRING(__reg("a6") struct Library * , __reg("a0") const ASN1_IA5STRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-840(a6)";
#define i2d_ASN1_IA5STRING(a, out) __i2d_ASN1_IA5STRING(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_IA5STRING_it(__reg("a6") struct Library * ) = "\tjsr\t-846(a6)";
#define ASN1_IA5STRING_it() __ASN1_IA5STRING_it(AmiSSLBase)

ASN1_GENERALSTRING * __ASN1_GENERALSTRING_new(__reg("a6") struct Library * ) = "\tjsr\t-852(a6)";
#define ASN1_GENERALSTRING_new() __ASN1_GENERALSTRING_new(AmiSSLBase)

void __ASN1_GENERALSTRING_free(__reg("a6") struct Library * , __reg("a0") ASN1_GENERALSTRING * a ) = "\tjsr\t-858(a6)";
#define ASN1_GENERALSTRING_free(a) __ASN1_GENERALSTRING_free(AmiSSLBase, (a))

ASN1_GENERALSTRING * __d2i_ASN1_GENERALSTRING(__reg("a6") struct Library * , __reg("a0") ASN1_GENERALSTRING ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-864(a6)";
#define d2i_ASN1_GENERALSTRING(a, in, len) __d2i_ASN1_GENERALSTRING(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_GENERALSTRING(__reg("a6") struct Library * , __reg("a0") const ASN1_GENERALSTRING * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-870(a6)";
#define i2d_ASN1_GENERALSTRING(a, out) __i2d_ASN1_GENERALSTRING(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_GENERALSTRING_it(__reg("a6") struct Library * ) = "\tjsr\t-876(a6)";
#define ASN1_GENERALSTRING_it() __ASN1_GENERALSTRING_it(AmiSSLBase)

ASN1_UTCTIME * __ASN1_UTCTIME_new(__reg("a6") struct Library * ) = "\tjsr\t-882(a6)";
#define ASN1_UTCTIME_new() __ASN1_UTCTIME_new(AmiSSLBase)

void __ASN1_UTCTIME_free(__reg("a6") struct Library * , __reg("a0") ASN1_UTCTIME * a ) = "\tjsr\t-888(a6)";
#define ASN1_UTCTIME_free(a) __ASN1_UTCTIME_free(AmiSSLBase, (a))

ASN1_UTCTIME * __d2i_ASN1_UTCTIME(__reg("a6") struct Library * , __reg("a0") ASN1_UTCTIME ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-894(a6)";
#define d2i_ASN1_UTCTIME(a, in, len) __d2i_ASN1_UTCTIME(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_UTCTIME(__reg("a6") struct Library * , __reg("a0") const ASN1_UTCTIME * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-900(a6)";
#define i2d_ASN1_UTCTIME(a, out) __i2d_ASN1_UTCTIME(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_UTCTIME_it(__reg("a6") struct Library * ) = "\tjsr\t-906(a6)";
#define ASN1_UTCTIME_it() __ASN1_UTCTIME_it(AmiSSLBase)

ASN1_GENERALIZEDTIME * __ASN1_GENERALIZEDTIME_new(__reg("a6") struct Library * ) = "\tjsr\t-912(a6)";
#define ASN1_GENERALIZEDTIME_new() __ASN1_GENERALIZEDTIME_new(AmiSSLBase)

void __ASN1_GENERALIZEDTIME_free(__reg("a6") struct Library * , __reg("a0") ASN1_GENERALIZEDTIME * x ) = "\tjsr\t-918(a6)";
#define ASN1_GENERALIZEDTIME_free(x) __ASN1_GENERALIZEDTIME_free(AmiSSLBase, (x))

ASN1_GENERALIZEDTIME * __d2i_ASN1_GENERALIZEDTIME(__reg("a6") struct Library * , __reg("a0") ASN1_GENERALIZEDTIME ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-924(a6)";
#define d2i_ASN1_GENERALIZEDTIME(a, in, len) __d2i_ASN1_GENERALIZEDTIME(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_GENERALIZEDTIME(__reg("a6") struct Library * , __reg("a0") const ASN1_GENERALIZEDTIME * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-930(a6)";
#define i2d_ASN1_GENERALIZEDTIME(a, out) __i2d_ASN1_GENERALIZEDTIME(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_GENERALIZEDTIME_it(__reg("a6") struct Library * ) = "\tjsr\t-936(a6)";
#define ASN1_GENERALIZEDTIME_it() __ASN1_GENERALIZEDTIME_it(AmiSSLBase)

ASN1_TIME * __ASN1_TIME_new(__reg("a6") struct Library * ) = "\tjsr\t-942(a6)";
#define ASN1_TIME_new() __ASN1_TIME_new(AmiSSLBase)

void __ASN1_TIME_free(__reg("a6") struct Library * , __reg("a0") ASN1_TIME * a ) = "\tjsr\t-948(a6)";
#define ASN1_TIME_free(a) __ASN1_TIME_free(AmiSSLBase, (a))

ASN1_TIME * __d2i_ASN1_TIME(__reg("a6") struct Library * , __reg("a0") ASN1_TIME ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-954(a6)";
#define d2i_ASN1_TIME(a, in, len) __d2i_ASN1_TIME(AmiSSLBase, (a), (in), (len))

int __i2d_ASN1_TIME(__reg("a6") struct Library * , __reg("a0") const ASN1_TIME * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-960(a6)";
#define i2d_ASN1_TIME(a, out) __i2d_ASN1_TIME(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASN1_TIME_it(__reg("a6") struct Library * ) = "\tjsr\t-966(a6)";
#define ASN1_TIME_it() __ASN1_TIME_it(AmiSSLBase)

ASN1_TIME * __ASN1_TIME_set(__reg("a6") struct Library * , __reg("a0") ASN1_TIME * s , __reg("d0") time_t t ) = "\tjsr\t-972(a6)";
#define ASN1_TIME_set(s, t) __ASN1_TIME_set(AmiSSLBase, (s), (t))

int __ASN1_TIME_check(__reg("a6") struct Library * , __reg("a0") const ASN1_TIME * t ) = "\tjsr\t-978(a6)";
#define ASN1_TIME_check(t) __ASN1_TIME_check(AmiSSLBase, (t))

ASN1_GENERALIZEDTIME * __ASN1_TIME_to_generalizedtime(__reg("a6") struct Library * , __reg("a0") const ASN1_TIME * t , __reg("a1") ASN1_GENERALIZEDTIME ** out ) = "\tjsr\t-984(a6)";
#define ASN1_TIME_to_generalizedtime(t, out) __ASN1_TIME_to_generalizedtime(AmiSSLBase, (t), (out))

int __i2a_ASN1_INTEGER(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const ASN1_INTEGER * a ) = "\tjsr\t-1002(a6)";
#define i2a_ASN1_INTEGER(bp, a) __i2a_ASN1_INTEGER(AmiSSLBase, (bp), (a))

int __a2i_ASN1_INTEGER(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") ASN1_INTEGER * bs , __reg("a2") char * buf , __reg("d0") int size ) = "\tjsr\t-1008(a6)";
#define a2i_ASN1_INTEGER(bp, bs, buf, size) __a2i_ASN1_INTEGER(AmiSSLBase, (bp), (bs), (buf), (size))

int __i2a_ASN1_ENUMERATED(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const ASN1_ENUMERATED * a ) = "\tjsr\t-1014(a6)";
#define i2a_ASN1_ENUMERATED(bp, a) __i2a_ASN1_ENUMERATED(AmiSSLBase, (bp), (a))

int __a2i_ASN1_ENUMERATED(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") ASN1_ENUMERATED * bs , __reg("a2") char * buf , __reg("d0") int size ) = "\tjsr\t-1020(a6)";
#define a2i_ASN1_ENUMERATED(bp, bs, buf, size) __a2i_ASN1_ENUMERATED(AmiSSLBase, (bp), (bs), (buf), (size))

int __i2a_ASN1_OBJECT(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const ASN1_OBJECT * a ) = "\tjsr\t-1026(a6)";
#define i2a_ASN1_OBJECT(bp, a) __i2a_ASN1_OBJECT(AmiSSLBase, (bp), (a))

int __a2i_ASN1_STRING(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") ASN1_STRING * bs , __reg("a2") char * buf , __reg("d0") int size ) = "\tjsr\t-1032(a6)";
#define a2i_ASN1_STRING(bp, bs, buf, size) __a2i_ASN1_STRING(AmiSSLBase, (bp), (bs), (buf), (size))

int __i2a_ASN1_STRING(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const ASN1_STRING * a , __reg("d0") int type ) = "\tjsr\t-1038(a6)";
#define i2a_ASN1_STRING(bp, a, type) __i2a_ASN1_STRING(AmiSSLBase, (bp), (a), (type))

int __i2t_ASN1_OBJECT(__reg("a6") struct Library * , __reg("a0") char * buf , __reg("d0") int buf_len , __reg("a1") const ASN1_OBJECT * a ) = "\tjsr\t-1044(a6)";
#define i2t_ASN1_OBJECT(buf, buf_len, a) __i2t_ASN1_OBJECT(AmiSSLBase, (buf), (buf_len), (a))

int __a2d_ASN1_OBJECT(__reg("a6") struct Library * , __reg("a0") unsigned char * out , __reg("d0") int olen , __reg("a1") const char * buf , __reg("d1") int num ) = "\tjsr\t-1050(a6)";
#define a2d_ASN1_OBJECT(out, olen, buf, num) __a2d_ASN1_OBJECT(AmiSSLBase, (out), (olen), (buf), (num))

ASN1_OBJECT * __ASN1_OBJECT_create(__reg("a6") struct Library * , __reg("d0") int nid , __reg("a0") unsigned char * data , __reg("d1") int len , __reg("a1") const char * sn , __reg("a2") const char * ln ) = "\tjsr\t-1056(a6)";
#define ASN1_OBJECT_create(nid, data, len, sn, ln) __ASN1_OBJECT_create(AmiSSLBase, (nid), (data), (len), (sn), (ln))

int __ASN1_INTEGER_set(__reg("a6") struct Library * , __reg("a0") ASN1_INTEGER * a , __reg("d0") long v ) = "\tjsr\t-1062(a6)";
#define ASN1_INTEGER_set(a, v) __ASN1_INTEGER_set(AmiSSLBase, (a), (v))

long __ASN1_INTEGER_get(__reg("a6") struct Library * , __reg("a0") const ASN1_INTEGER * a ) = "\tjsr\t-1068(a6)";
#define ASN1_INTEGER_get(a) __ASN1_INTEGER_get(AmiSSLBase, (a))

ASN1_INTEGER * __BN_to_ASN1_INTEGER(__reg("a6") struct Library * , __reg("a0") const BIGNUM * bn , __reg("a1") ASN1_INTEGER * ai ) = "\tjsr\t-1074(a6)";
#define BN_to_ASN1_INTEGER(bn, ai) __BN_to_ASN1_INTEGER(AmiSSLBase, (bn), (ai))

BIGNUM * __ASN1_INTEGER_to_BN(__reg("a6") struct Library * , __reg("a0") const ASN1_INTEGER * ai , __reg("a1") BIGNUM * bn ) = "\tjsr\t-1080(a6)";
#define ASN1_INTEGER_to_BN(ai, bn) __ASN1_INTEGER_to_BN(AmiSSLBase, (ai), (bn))

int __ASN1_ENUMERATED_set(__reg("a6") struct Library * , __reg("a0") ASN1_ENUMERATED * a , __reg("d0") long v ) = "\tjsr\t-1086(a6)";
#define ASN1_ENUMERATED_set(a, v) __ASN1_ENUMERATED_set(AmiSSLBase, (a), (v))

long __ASN1_ENUMERATED_get(__reg("a6") struct Library * , __reg("a0") const ASN1_ENUMERATED * a ) = "\tjsr\t-1092(a6)";
#define ASN1_ENUMERATED_get(a) __ASN1_ENUMERATED_get(AmiSSLBase, (a))

ASN1_ENUMERATED * __BN_to_ASN1_ENUMERATED(__reg("a6") struct Library * , __reg("a0") const BIGNUM * bn , __reg("a1") ASN1_ENUMERATED * ai ) = "\tjsr\t-1098(a6)";
#define BN_to_ASN1_ENUMERATED(bn, ai) __BN_to_ASN1_ENUMERATED(AmiSSLBase, (bn), (ai))

BIGNUM * __ASN1_ENUMERATED_to_BN(__reg("a6") struct Library * , __reg("a0") const ASN1_ENUMERATED * ai , __reg("a1") BIGNUM * bn ) = "\tjsr\t-1104(a6)";
#define ASN1_ENUMERATED_to_BN(ai, bn) __ASN1_ENUMERATED_to_BN(AmiSSLBase, (ai), (bn))

int __ASN1_PRINTABLE_type(__reg("a6") struct Library * , __reg("a0") const unsigned char * s , __reg("d0") int max ) = "\tjsr\t-1110(a6)";
#define ASN1_PRINTABLE_type(s, max) __ASN1_PRINTABLE_type(AmiSSLBase, (s), (max))

unsigned long __ASN1_tag2bit(__reg("a6") struct Library * , __reg("d0") int tag ) = "\tjsr\t-1128(a6)";
#define ASN1_tag2bit(tag) __ASN1_tag2bit(AmiSSLBase, (tag))

int __ASN1_get_object(__reg("a6") struct Library * , __reg("a0") const unsigned char ** pp , __reg("a1") long * plength , __reg("a2") int * ptag , __reg("a3") int * pclass , __reg("d0") long omax ) = "\tjsr\t-1146(a6)";
#define ASN1_get_object(pp, plength, ptag, pclass, omax) __ASN1_get_object(AmiSSLBase, (pp), (plength), (ptag), (pclass), (omax))

int __ASN1_check_infinite_end(__reg("a6") struct Library * , __reg("a0") unsigned char ** p , __reg("d0") long len ) = "\tjsr\t-1152(a6)";
#define ASN1_check_infinite_end(p, len) __ASN1_check_infinite_end(AmiSSLBase, (p), (len))

void __ASN1_put_object(__reg("a6") struct Library * , __reg("a0") unsigned char ** pp , __reg("d0") int constructed , __reg("d1") int length , __reg("d2") int tag , __reg("d3") int xclass ) = "\tjsr\t-1158(a6)";
#define ASN1_put_object(pp, constructed, length, tag, xclass) __ASN1_put_object(AmiSSLBase, (pp), (constructed), (length), (tag), (xclass))

int __ASN1_object_size(__reg("a6") struct Library * , __reg("d0") int constructed , __reg("d1") int length , __reg("d2") int tag ) = "\tjsr\t-1164(a6)";
#define ASN1_object_size(constructed, length, tag) __ASN1_object_size(AmiSSLBase, (constructed), (length), (tag))

void * __ASN1_dup(__reg("a6") struct Library * , __reg("a0") i2d_of_void * i2d , __reg("a1") d2i_of_void * d2i , __reg("a2") const void * x ) = "\tjsr\t-1170(a6)";
#define ASN1_dup(i2d, d2i, x) __ASN1_dup(AmiSSLBase, (i2d), (d2i), (x))

void * __ASN1_item_dup(__reg("a6") struct Library * , __reg("a0") const ASN1_ITEM * it , __reg("a1") const void * x ) = "\tjsr\t-1176(a6)";
#define ASN1_item_dup(it, x) __ASN1_item_dup(AmiSSLBase, (it), (x))

int __ASN1_STRING_to_UTF8(__reg("a6") struct Library * , __reg("a0") unsigned char ** out , __reg("a1") const ASN1_STRING * in ) = "\tjsr\t-1182(a6)";
#define ASN1_STRING_to_UTF8(out, in) __ASN1_STRING_to_UTF8(AmiSSLBase, (out), (in))

void * __ASN1_d2i_bio(__reg("a6") struct Library * , __reg("a0") void * (*xnew)(void) , __reg("a1") d2i_of_void * d2i , __reg("a2") BIO * in , __reg("a3") void ** x ) = "\tjsr\t-1188(a6)";
#define ASN1_d2i_bio(xnew, d2i, in, x) __ASN1_d2i_bio(AmiSSLBase, (xnew), (d2i), (in), (x))

void * __ASN1_item_d2i_bio(__reg("a6") struct Library * , __reg("a0") const ASN1_ITEM * it , __reg("a1") BIO * in , __reg("a2") void * x ) = "\tjsr\t-1194(a6)";
#define ASN1_item_d2i_bio(it, in, x) __ASN1_item_d2i_bio(AmiSSLBase, (it), (in), (x))

int __ASN1_i2d_bio(__reg("a6") struct Library * , __reg("a0") i2d_of_void * i2d , __reg("a1") BIO * out , __reg("a2") const void * x ) = "\tjsr\t-1200(a6)";
#define ASN1_i2d_bio(i2d, out, x) __ASN1_i2d_bio(AmiSSLBase, (i2d), (out), (x))

int __ASN1_item_i2d_bio(__reg("a6") struct Library * , __reg("a0") const ASN1_ITEM * it , __reg("a1") BIO * out , __reg("a2") const void * x ) = "\tjsr\t-1206(a6)";
#define ASN1_item_i2d_bio(it, out, x) __ASN1_item_i2d_bio(AmiSSLBase, (it), (out), (x))

int __ASN1_UTCTIME_print(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") const ASN1_UTCTIME * a ) = "\tjsr\t-1212(a6)";
#define ASN1_UTCTIME_print(fp, a) __ASN1_UTCTIME_print(AmiSSLBase, (fp), (a))

int __ASN1_GENERALIZEDTIME_print(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") const ASN1_GENERALIZEDTIME * a ) = "\tjsr\t-1218(a6)";
#define ASN1_GENERALIZEDTIME_print(fp, a) __ASN1_GENERALIZEDTIME_print(AmiSSLBase, (fp), (a))

int __ASN1_TIME_print(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") const ASN1_TIME * a ) = "\tjsr\t-1224(a6)";
#define ASN1_TIME_print(fp, a) __ASN1_TIME_print(AmiSSLBase, (fp), (a))

int __ASN1_STRING_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const ASN1_STRING * v ) = "\tjsr\t-1230(a6)";
#define ASN1_STRING_print(bp, v) __ASN1_STRING_print(AmiSSLBase, (bp), (v))

int __ASN1_STRING_print_ex(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const ASN1_STRING * str , __reg("d0") unsigned long flags ) = "\tjsr\t-1236(a6)";
#define ASN1_STRING_print_ex(out, str, flags) __ASN1_STRING_print_ex(AmiSSLBase, (out), (str), (flags))

int __ASN1_parse(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const unsigned char * pp , __reg("d0") long len , __reg("d1") int indent ) = "\tjsr\t-1242(a6)";
#define ASN1_parse(bp, pp, len, indent) __ASN1_parse(AmiSSLBase, (bp), (pp), (len), (indent))

int __ASN1_parse_dump(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const unsigned char * pp , __reg("d0") long len , __reg("d1") int indent , __reg("d2") int dump ) = "\tjsr\t-1248(a6)";
#define ASN1_parse_dump(bp, pp, len, indent, dump) __ASN1_parse_dump(AmiSSLBase, (bp), (pp), (len), (indent), (dump))

const char * __ASN1_tag2str(__reg("a6") struct Library * , __reg("d0") int tag ) = "\tjsr\t-1254(a6)";
#define ASN1_tag2str(tag) __ASN1_tag2str(AmiSSLBase, (tag))

int __ASN1_UNIVERSALSTRING_to_string(__reg("a6") struct Library * , __reg("a0") ASN1_UNIVERSALSTRING * s ) = "\tjsr\t-1284(a6)";
#define ASN1_UNIVERSALSTRING_to_string(s) __ASN1_UNIVERSALSTRING_to_string(AmiSSLBase, (s))

int __ASN1_TYPE_set_octetstring(__reg("a6") struct Library * , __reg("a0") ASN1_TYPE * a , __reg("a1") unsigned char * data , __reg("d0") int len ) = "\tjsr\t-1314(a6)";
#define ASN1_TYPE_set_octetstring(a, data, len) __ASN1_TYPE_set_octetstring(AmiSSLBase, (a), (data), (len))

int __ASN1_TYPE_get_octetstring(__reg("a6") struct Library * , __reg("a0") const ASN1_TYPE * a , __reg("a1") unsigned char * data , __reg("d0") int max_len ) = "\tjsr\t-1320(a6)";
#define ASN1_TYPE_get_octetstring(a, data, max_len) __ASN1_TYPE_get_octetstring(AmiSSLBase, (a), (data), (max_len))

int __ASN1_TYPE_set_int_octetstring(__reg("a6") struct Library * , __reg("a0") ASN1_TYPE * a , __reg("d0") long num , __reg("a1") unsigned char * data , __reg("d1") int len ) = "\tjsr\t-1326(a6)";
#define ASN1_TYPE_set_int_octetstring(a, num, data, len) __ASN1_TYPE_set_int_octetstring(AmiSSLBase, (a), (num), (data), (len))

int __ASN1_TYPE_get_int_octetstring(__reg("a6") struct Library * , __reg("a0") const ASN1_TYPE * a , __reg("a1") long * num , __reg("a2") unsigned char * data , __reg("d0") int max_len ) = "\tjsr\t-1332(a6)";
#define ASN1_TYPE_get_int_octetstring(a, num, data, max_len) __ASN1_TYPE_get_int_octetstring(AmiSSLBase, (a), (num), (data), (max_len))

void * __ASN1_item_unpack(__reg("a6") struct Library * , __reg("a0") const ASN1_STRING * oct , __reg("a1") const ASN1_ITEM * it ) = "\tjsr\t-1356(a6)";
#define ASN1_item_unpack(oct, it) __ASN1_item_unpack(AmiSSLBase, (oct), (it))

ASN1_STRING * __ASN1_item_pack(__reg("a6") struct Library * , __reg("a0") void * obj , __reg("a1") const ASN1_ITEM * it , __reg("a2") ASN1_OCTET_STRING ** oct ) = "\tjsr\t-1368(a6)";
#define ASN1_item_pack(obj, it, oct) __ASN1_item_pack(AmiSSLBase, (obj), (it), (oct))

void __ASN1_STRING_set_default_mask(__reg("a6") struct Library * , __reg("d0") unsigned long mask ) = "\tjsr\t-1374(a6)";
#define ASN1_STRING_set_default_mask(mask) __ASN1_STRING_set_default_mask(AmiSSLBase, (mask))

int __ASN1_STRING_set_default_mask_asc(__reg("a6") struct Library * , __reg("a0") const char * p ) = "\tjsr\t-1380(a6)";
#define ASN1_STRING_set_default_mask_asc(p) __ASN1_STRING_set_default_mask_asc(AmiSSLBase, (p))

unsigned long __ASN1_STRING_get_default_mask(__reg("a6") struct Library * ) = "\tjsr\t-1386(a6)";
#define ASN1_STRING_get_default_mask() __ASN1_STRING_get_default_mask(AmiSSLBase)

int __ASN1_mbstring_copy(__reg("a6") struct Library * , __reg("a0") ASN1_STRING ** out , __reg("a1") const unsigned char * in , __reg("d0") int len , __reg("d1") int inform , __reg("d2") unsigned long mask ) = "\tjsr\t-1392(a6)";
#define ASN1_mbstring_copy(out, in, len, inform, mask) __ASN1_mbstring_copy(AmiSSLBase, (out), (in), (len), (inform), (mask))

int __ASN1_mbstring_ncopy(__reg("a6") struct Library * , __reg("a0") ASN1_STRING ** out , __reg("a1") const unsigned char * in , __reg("d0") int len , __reg("d1") int inform , __reg("d2") unsigned long mask , __reg("d3") long minsize , __reg("d4") long maxsize ) = "\tjsr\t-1398(a6)";
#define ASN1_mbstring_ncopy(out, in, len, inform, mask, minsize, maxsize) __ASN1_mbstring_ncopy(AmiSSLBase, (out), (in), (len), (inform), (mask), (minsize), (maxsize))

ASN1_STRING * __ASN1_STRING_set_by_NID(__reg("a6") struct Library * , __reg("a0") ASN1_STRING ** out , __reg("a1") const unsigned char * in , __reg("d0") int inlen , __reg("d1") int inform , __reg("d2") int nid ) = "\tjsr\t-1404(a6)";
#define ASN1_STRING_set_by_NID(out, in, inlen, inform, nid) __ASN1_STRING_set_by_NID(AmiSSLBase, (out), (in), (inlen), (inform), (nid))

ASN1_STRING_TABLE * __ASN1_STRING_TABLE_get(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-1410(a6)";
#define ASN1_STRING_TABLE_get(nid) __ASN1_STRING_TABLE_get(AmiSSLBase, (nid))

int __ASN1_STRING_TABLE_add(__reg("a6") struct Library * , __reg("d0") int a , __reg("d1") long b , __reg("d2") long c , __reg("d3") unsigned long d , __reg("d4") unsigned long e ) = "\tjsr\t-1416(a6)";
#define ASN1_STRING_TABLE_add(a, b, c, d, e) __ASN1_STRING_TABLE_add(AmiSSLBase, (a), (b), (c), (d), (e))

void __ASN1_STRING_TABLE_cleanup(__reg("a6") struct Library * ) = "\tjsr\t-1422(a6)";
#define ASN1_STRING_TABLE_cleanup() __ASN1_STRING_TABLE_cleanup(AmiSSLBase)

ASN1_VALUE * __ASN1_item_new(__reg("a6") struct Library * , __reg("a0") const ASN1_ITEM * it ) = "\tjsr\t-1428(a6)";
#define ASN1_item_new(it) __ASN1_item_new(AmiSSLBase, (it))

void __ASN1_item_free(__reg("a6") struct Library * , __reg("a0") ASN1_VALUE * val , __reg("a1") const ASN1_ITEM * it ) = "\tjsr\t-1434(a6)";
#define ASN1_item_free(val, it) __ASN1_item_free(AmiSSLBase, (val), (it))

ASN1_VALUE * __ASN1_item_d2i(__reg("a6") struct Library * , __reg("a0") ASN1_VALUE ** val , __reg("a1") const unsigned char ** in , __reg("d0") long len , __reg("a2") const ASN1_ITEM * it ) = "\tjsr\t-1440(a6)";
#define ASN1_item_d2i(val, in, len, it) __ASN1_item_d2i(AmiSSLBase, (val), (in), (len), (it))

int __ASN1_item_i2d(__reg("a6") struct Library * , __reg("a0") const ASN1_VALUE * val , __reg("a1") unsigned char ** out , __reg("a2") const ASN1_ITEM * it ) = "\tjsr\t-1446(a6)";
#define ASN1_item_i2d(val, out, it) __ASN1_item_i2d(AmiSSLBase, (val), (out), (it))

void __ASN1_add_oid_module(__reg("a6") struct Library * ) = "\tjsr\t-1452(a6)";
#define ASN1_add_oid_module() __ASN1_add_oid_module(AmiSSLBase)

int __ERR_load_ASN1_strings(__reg("a6") struct Library * ) = "\tjsr\t-1458(a6)";
#define ERR_load_ASN1_strings() __ERR_load_ASN1_strings(AmiSSLBase)

const ASN1_ITEM * __ASN1_BOOLEAN_it(__reg("a6") struct Library * ) = "\tjsr\t-1476(a6)";
#define ASN1_BOOLEAN_it() __ASN1_BOOLEAN_it(AmiSSLBase)

const ASN1_ITEM * __ASN1_TBOOLEAN_it(__reg("a6") struct Library * ) = "\tjsr\t-1482(a6)";
#define ASN1_TBOOLEAN_it() __ASN1_TBOOLEAN_it(AmiSSLBase)

const ASN1_ITEM * __ASN1_FBOOLEAN_it(__reg("a6") struct Library * ) = "\tjsr\t-1488(a6)";
#define ASN1_FBOOLEAN_it() __ASN1_FBOOLEAN_it(AmiSSLBase)

const ASN1_ITEM * __ASN1_SEQUENCE_it(__reg("a6") struct Library * ) = "\tjsr\t-1494(a6)";
#define ASN1_SEQUENCE_it() __ASN1_SEQUENCE_it(AmiSSLBase)

const ASN1_ITEM * __CBIGNUM_it(__reg("a6") struct Library * ) = "\tjsr\t-1500(a6)";
#define CBIGNUM_it() __CBIGNUM_it(AmiSSLBase)

const ASN1_ITEM * __BIGNUM_it(__reg("a6") struct Library * ) = "\tjsr\t-1506(a6)";
#define BIGNUM_it() __BIGNUM_it(AmiSSLBase)

const ASN1_ITEM * __LONG_it(__reg("a6") struct Library * ) = "\tjsr\t-1512(a6)";
#define LONG_it() __LONG_it(AmiSSLBase)

const ASN1_ITEM * __ZLONG_it(__reg("a6") struct Library * ) = "\tjsr\t-1518(a6)";
#define ZLONG_it() __ZLONG_it(AmiSSLBase)

int __ASN1_item_ex_new(__reg("a6") struct Library * , __reg("a0") ASN1_VALUE ** pval , __reg("a1") const ASN1_ITEM * it ) = "\tjsr\t-1524(a6)";
#define ASN1_item_ex_new(pval, it) __ASN1_item_ex_new(AmiSSLBase, (pval), (it))

void __ASN1_item_ex_free(__reg("a6") struct Library * , __reg("a0") ASN1_VALUE ** pval , __reg("a1") const ASN1_ITEM * it ) = "\tjsr\t-1530(a6)";
#define ASN1_item_ex_free(pval, it) __ASN1_item_ex_free(AmiSSLBase, (pval), (it))

int __ASN1_item_ex_d2i(__reg("a6") struct Library * , __reg("a0") ASN1_VALUE ** pval , __reg("a1") const unsigned char ** in , __reg("d0") long len , __reg("a2") const ASN1_ITEM * it , __reg("d1") int tag , __reg("d2") int aclass , __reg("d3") char opt , __reg("a3") ASN1_TLC * ctx ) = "\tjsr\t-1560(a6)";
#define ASN1_item_ex_d2i(pval, in, len, it, tag, aclass, opt, ctx) __ASN1_item_ex_d2i(AmiSSLBase, (pval), (in), (len), (it), (tag), (aclass), (opt), (ctx))

int __ASN1_item_ex_i2d(__reg("a6") struct Library * , __reg("a0") const ASN1_VALUE ** pval , __reg("a1") unsigned char ** out , __reg("a2") const ASN1_ITEM * it , __reg("d0") int tag , __reg("d1") int aclass ) = "\tjsr\t-1566(a6)";
#define ASN1_item_ex_i2d(pval, out, it, tag, aclass) __ASN1_item_ex_i2d(AmiSSLBase, (pval), (out), (it), (tag), (aclass))

size_t __BIO_ctrl_pending(__reg("a6") struct Library * , __reg("a0") BIO * b ) = "\tjsr\t-1650(a6)";
#define BIO_ctrl_pending(b) __BIO_ctrl_pending(AmiSSLBase, (b))

size_t __BIO_ctrl_wpending(__reg("a6") struct Library * , __reg("a0") BIO * b ) = "\tjsr\t-1656(a6)";
#define BIO_ctrl_wpending(b) __BIO_ctrl_wpending(AmiSSLBase, (b))

size_t __BIO_ctrl_get_write_guarantee(__reg("a6") struct Library * , __reg("a0") BIO * b ) = "\tjsr\t-1662(a6)";
#define BIO_ctrl_get_write_guarantee(b) __BIO_ctrl_get_write_guarantee(AmiSSLBase, (b))

size_t __BIO_ctrl_get_read_request(__reg("a6") struct Library * , __reg("a0") BIO * b ) = "\tjsr\t-1668(a6)";
#define BIO_ctrl_get_read_request(b) __BIO_ctrl_get_read_request(AmiSSLBase, (b))

int __BIO_ctrl_reset_read_request(__reg("a6") struct Library * , __reg("a0") BIO * b ) = "\tjsr\t-1674(a6)";
#define BIO_ctrl_reset_read_request(b) __BIO_ctrl_reset_read_request(AmiSSLBase, (b))

int __BIO_set_ex_data(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("d0") int idx , __reg("a1") void * data ) = "\tjsr\t-1680(a6)";
#define BIO_set_ex_data(bio, idx, data) __BIO_set_ex_data(AmiSSLBase, (bio), (idx), (data))

void * __BIO_get_ex_data(__reg("a6") struct Library * , __reg("a0") const BIO * bio , __reg("d0") int idx ) = "\tjsr\t-1686(a6)";
#define BIO_get_ex_data(bio, idx) __BIO_get_ex_data(AmiSSLBase, (bio), (idx))

int __OBSOLETE_BIO_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dup_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-1692(a6)";
#define OBSOLETE_BIO_get_ex_new_index(argl, argp, new_func, dup_func, free_func) __OBSOLETE_BIO_get_ex_new_index(AmiSSLBase, (argl), (argp), (new_func), (dup_func), (free_func))

uint64_t __BIO_number_read(__reg("a6") struct Library * , __reg("a0") BIO * bio ) = "\tjsr\t-1698(a6)";
#define BIO_number_read(bio) __BIO_number_read(AmiSSLBase, (bio))

uint64_t __BIO_number_written(__reg("a6") struct Library * , __reg("a0") BIO * bio ) = "\tjsr\t-1704(a6)";
#define BIO_number_written(bio) __BIO_number_written(AmiSSLBase, (bio))

const BIO_METHOD * __BIO_s_file(__reg("a6") struct Library * ) = "\tjsr\t-1710(a6)";
#define BIO_s_file() __BIO_s_file(AmiSSLBase)

BIO * __BIO_new_file(__reg("a6") struct Library * , __reg("a0") const char * filename , __reg("a1") const char * mode ) = "\tjsr\t-1716(a6)";
#define BIO_new_file(filename, mode) __BIO_new_file(AmiSSLBase, (filename), (mode))

BIO * __BIO_new_fp_amiga(__reg("a6") struct Library * , __reg("a0") BPTR stream , __reg("d0") int close_flag ) = "\tjsr\t-1722(a6)";
#define BIO_new_fp_amiga(stream, close_flag) __BIO_new_fp_amiga(AmiSSLBase, (stream), (close_flag))

BIO * __BIO_new(__reg("a6") struct Library * , __reg("a0") const BIO_METHOD * type ) = "\tjsr\t-1728(a6)";
#define BIO_new(type) __BIO_new(AmiSSLBase, (type))

int __BIO_free(__reg("a6") struct Library * , __reg("a0") BIO * a ) = "\tjsr\t-1740(a6)";
#define BIO_free(a) __BIO_free(AmiSSLBase, (a))

void __BIO_vfree(__reg("a6") struct Library * , __reg("a0") BIO * a ) = "\tjsr\t-1746(a6)";
#define BIO_vfree(a) __BIO_vfree(AmiSSLBase, (a))

int __BIO_read(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") void * data , __reg("d0") int dlen ) = "\tjsr\t-1752(a6)";
#define BIO_read(b, data, dlen) __BIO_read(AmiSSLBase, (b), (data), (dlen))

int __BIO_gets(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") char * buf , __reg("d0") int size ) = "\tjsr\t-1758(a6)";
#define BIO_gets(bp, buf, size) __BIO_gets(AmiSSLBase, (bp), (buf), (size))

int __BIO_write(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") const void * data , __reg("d0") int dlen ) = "\tjsr\t-1764(a6)";
#define BIO_write(b, data, dlen) __BIO_write(AmiSSLBase, (b), (data), (dlen))

int __BIO_puts(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const char * buf ) = "\tjsr\t-1770(a6)";
#define BIO_puts(bp, buf) __BIO_puts(AmiSSLBase, (bp), (buf))

int __BIO_indent(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("d0") int indent , __reg("d1") int max ) = "\tjsr\t-1776(a6)";
#define BIO_indent(b, indent, max) __BIO_indent(AmiSSLBase, (b), (indent), (max))

long __BIO_ctrl(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("d0") int cmd , __reg("d1") long larg , __reg("a1") void * parg ) = "\tjsr\t-1782(a6)";
#define BIO_ctrl(bp, cmd, larg, parg) __BIO_ctrl(AmiSSLBase, (bp), (cmd), (larg), (parg))

long __BIO_callback_ctrl(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("d0") int cmd , __reg("a1") BIO_info_cb * fp ) = "\tjsr\t-1788(a6)";
#define BIO_callback_ctrl(b, cmd, fp) __BIO_callback_ctrl(AmiSSLBase, (b), (cmd), (fp))

void * __BIO_ptr_ctrl(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("d0") int cmd , __reg("d1") long larg ) = "\tjsr\t-1794(a6)";
#define BIO_ptr_ctrl(bp, cmd, larg) __BIO_ptr_ctrl(AmiSSLBase, (bp), (cmd), (larg))

long __BIO_int_ctrl(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("d0") int cmd , __reg("d1") long larg , __reg("d2") int iarg ) = "\tjsr\t-1800(a6)";
#define BIO_int_ctrl(bp, cmd, larg, iarg) __BIO_int_ctrl(AmiSSLBase, (bp), (cmd), (larg), (iarg))

BIO * __BIO_push(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") BIO * append ) = "\tjsr\t-1806(a6)";
#define BIO_push(b, append) __BIO_push(AmiSSLBase, (b), (append))

BIO * __BIO_pop(__reg("a6") struct Library * , __reg("a0") BIO * b ) = "\tjsr\t-1812(a6)";
#define BIO_pop(b) __BIO_pop(AmiSSLBase, (b))

void __BIO_free_all(__reg("a6") struct Library * , __reg("a0") BIO * a ) = "\tjsr\t-1818(a6)";
#define BIO_free_all(a) __BIO_free_all(AmiSSLBase, (a))

BIO * __BIO_find_type(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("d0") int bio_type ) = "\tjsr\t-1824(a6)";
#define BIO_find_type(b, bio_type) __BIO_find_type(AmiSSLBase, (b), (bio_type))

BIO * __BIO_next(__reg("a6") struct Library * , __reg("a0") BIO * b ) = "\tjsr\t-1830(a6)";
#define BIO_next(b) __BIO_next(AmiSSLBase, (b))

BIO * __BIO_get_retry_BIO(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") int * reason ) = "\tjsr\t-1836(a6)";
#define BIO_get_retry_BIO(bio, reason) __BIO_get_retry_BIO(AmiSSLBase, (bio), (reason))

int __BIO_get_retry_reason(__reg("a6") struct Library * , __reg("a0") BIO * bio ) = "\tjsr\t-1842(a6)";
#define BIO_get_retry_reason(bio) __BIO_get_retry_reason(AmiSSLBase, (bio))

BIO * __BIO_dup_chain(__reg("a6") struct Library * , __reg("a0") BIO * in ) = "\tjsr\t-1848(a6)";
#define BIO_dup_chain(in) __BIO_dup_chain(AmiSSLBase, (in))

int __BIO_nread0(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") char ** buf ) = "\tjsr\t-1854(a6)";
#define BIO_nread0(bio, buf) __BIO_nread0(AmiSSLBase, (bio), (buf))

int __BIO_nread(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") char ** buf , __reg("d0") int num ) = "\tjsr\t-1860(a6)";
#define BIO_nread(bio, buf, num) __BIO_nread(AmiSSLBase, (bio), (buf), (num))

int __BIO_nwrite0(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") char ** buf ) = "\tjsr\t-1866(a6)";
#define BIO_nwrite0(bio, buf) __BIO_nwrite0(AmiSSLBase, (bio), (buf))

int __BIO_nwrite(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") char ** buf , __reg("d0") int num ) = "\tjsr\t-1872(a6)";
#define BIO_nwrite(bio, buf, num) __BIO_nwrite(AmiSSLBase, (bio), (buf), (num))

long __BIO_debug_callback(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("d0") int cmd , __reg("a1") const char * argp , __reg("d1") int argi , __reg("d2") long argl , __reg("d3") long ret ) = "\tjsr\t-1878(a6)";
#define BIO_debug_callback(bio, cmd, argp, argi, argl, ret) __BIO_debug_callback(AmiSSLBase, (bio), (cmd), (argp), (argi), (argl), (ret))

const BIO_METHOD * __BIO_s_mem(__reg("a6") struct Library * ) = "\tjsr\t-1884(a6)";
#define BIO_s_mem() __BIO_s_mem(AmiSSLBase)

BIO * __BIO_new_mem_buf(__reg("a6") struct Library * , __reg("a0") const void * buf , __reg("d0") int len ) = "\tjsr\t-1890(a6)";
#define BIO_new_mem_buf(buf, len) __BIO_new_mem_buf(AmiSSLBase, (buf), (len))

const BIO_METHOD * __BIO_s_socket(__reg("a6") struct Library * ) = "\tjsr\t-1896(a6)";
#define BIO_s_socket() __BIO_s_socket(AmiSSLBase)

const BIO_METHOD * __BIO_s_connect(__reg("a6") struct Library * ) = "\tjsr\t-1902(a6)";
#define BIO_s_connect() __BIO_s_connect(AmiSSLBase)

const BIO_METHOD * __BIO_s_accept(__reg("a6") struct Library * ) = "\tjsr\t-1908(a6)";
#define BIO_s_accept() __BIO_s_accept(AmiSSLBase)

const BIO_METHOD * __BIO_s_fd(__reg("a6") struct Library * ) = "\tjsr\t-1914(a6)";
#define BIO_s_fd() __BIO_s_fd(AmiSSLBase)

const BIO_METHOD * __BIO_s_log(__reg("a6") struct Library * ) = "\tjsr\t-1920(a6)";
#define BIO_s_log() __BIO_s_log(AmiSSLBase)

const BIO_METHOD * __BIO_s_bio(__reg("a6") struct Library * ) = "\tjsr\t-1926(a6)";
#define BIO_s_bio() __BIO_s_bio(AmiSSLBase)

const BIO_METHOD * __BIO_s_null(__reg("a6") struct Library * ) = "\tjsr\t-1932(a6)";
#define BIO_s_null() __BIO_s_null(AmiSSLBase)

const BIO_METHOD * __BIO_f_null(__reg("a6") struct Library * ) = "\tjsr\t-1938(a6)";
#define BIO_f_null() __BIO_f_null(AmiSSLBase)

const BIO_METHOD * __BIO_f_buffer(__reg("a6") struct Library * ) = "\tjsr\t-1944(a6)";
#define BIO_f_buffer() __BIO_f_buffer(AmiSSLBase)

const BIO_METHOD * __BIO_f_nbio_test(__reg("a6") struct Library * ) = "\tjsr\t-1950(a6)";
#define BIO_f_nbio_test() __BIO_f_nbio_test(AmiSSLBase)

int __BIO_sock_should_retry(__reg("a6") struct Library * , __reg("d0") int i ) = "\tjsr\t-1956(a6)";
#define BIO_sock_should_retry(i) __BIO_sock_should_retry(AmiSSLBase, (i))

int __BIO_sock_non_fatal_error(__reg("a6") struct Library * , __reg("d0") int error ) = "\tjsr\t-1962(a6)";
#define BIO_sock_non_fatal_error(error) __BIO_sock_non_fatal_error(AmiSSLBase, (error))

int __BIO_fd_should_retry(__reg("a6") struct Library * , __reg("d0") int i ) = "\tjsr\t-1968(a6)";
#define BIO_fd_should_retry(i) __BIO_fd_should_retry(AmiSSLBase, (i))

int __BIO_fd_non_fatal_error(__reg("a6") struct Library * , __reg("d0") int error ) = "\tjsr\t-1974(a6)";
#define BIO_fd_non_fatal_error(error) __BIO_fd_non_fatal_error(AmiSSLBase, (error))

int __BIO_dump(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") const void * bytes , __reg("d0") int len ) = "\tjsr\t-1980(a6)";
#define BIO_dump(b, bytes, len) __BIO_dump(AmiSSLBase, (b), (bytes), (len))

int __BIO_dump_indent(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") const void * bytes , __reg("d0") int len , __reg("d1") int indent ) = "\tjsr\t-1986(a6)";
#define BIO_dump_indent(b, bytes, len, indent) __BIO_dump_indent(AmiSSLBase, (b), (bytes), (len), (indent))

struct hostent * __BIO_gethostbyname(__reg("a6") struct Library * , __reg("a0") const char * name ) = "\tjsr\t-1992(a6)";
#define BIO_gethostbyname(name) __BIO_gethostbyname(AmiSSLBase, (name))

int __BIO_sock_error(__reg("a6") struct Library * , __reg("d0") int sock ) = "\tjsr\t-1998(a6)";
#define BIO_sock_error(sock) __BIO_sock_error(AmiSSLBase, (sock))

int __BIO_socket_ioctl(__reg("a6") struct Library * , __reg("d0") int fd , __reg("d1") long type , __reg("a0") void * arg ) = "\tjsr\t-2004(a6)";
#define BIO_socket_ioctl(fd, type, arg) __BIO_socket_ioctl(AmiSSLBase, (fd), (type), (arg))

int __BIO_socket_nbio(__reg("a6") struct Library * , __reg("d0") int fd , __reg("d1") int mode ) = "\tjsr\t-2010(a6)";
#define BIO_socket_nbio(fd, mode) __BIO_socket_nbio(AmiSSLBase, (fd), (mode))

int __BIO_get_port(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("a1") unsigned short * port_ptr ) = "\tjsr\t-2016(a6)";
#define BIO_get_port(str, port_ptr) __BIO_get_port(AmiSSLBase, (str), (port_ptr))

int __BIO_get_host_ip(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("a1") unsigned char * ip ) = "\tjsr\t-2022(a6)";
#define BIO_get_host_ip(str, ip) __BIO_get_host_ip(AmiSSLBase, (str), (ip))

int __BIO_get_accept_socket(__reg("a6") struct Library * , __reg("a0") char * host_port , __reg("d0") int mode ) = "\tjsr\t-2028(a6)";
#define BIO_get_accept_socket(host_port, mode) __BIO_get_accept_socket(AmiSSLBase, (host_port), (mode))

int __BIO_accept(__reg("a6") struct Library * , __reg("d0") int sock , __reg("a0") char ** ip_port ) = "\tjsr\t-2034(a6)";
#define BIO_accept(sock, ip_port) __BIO_accept(AmiSSLBase, (sock), (ip_port))

int __BIO_sock_init(__reg("a6") struct Library * ) = "\tjsr\t-2040(a6)";
#define BIO_sock_init() __BIO_sock_init(AmiSSLBase)

int __BIO_set_tcp_ndelay(__reg("a6") struct Library * , __reg("d0") int sock , __reg("d1") int turn_on ) = "\tjsr\t-2052(a6)";
#define BIO_set_tcp_ndelay(sock, turn_on) __BIO_set_tcp_ndelay(AmiSSLBase, (sock), (turn_on))

BIO * __BIO_new_socket(__reg("a6") struct Library * , __reg("d0") int sock , __reg("d1") int close_flag ) = "\tjsr\t-2058(a6)";
#define BIO_new_socket(sock, close_flag) __BIO_new_socket(AmiSSLBase, (sock), (close_flag))

BIO * __BIO_new_fd(__reg("a6") struct Library * , __reg("d0") int fd , __reg("d1") int close_flag ) = "\tjsr\t-2064(a6)";
#define BIO_new_fd(fd, close_flag) __BIO_new_fd(AmiSSLBase, (fd), (close_flag))

BIO * __BIO_new_connect(__reg("a6") struct Library * , __reg("a0") const char * host_port ) = "\tjsr\t-2070(a6)";
#define BIO_new_connect(host_port) __BIO_new_connect(AmiSSLBase, (host_port))

BIO * __BIO_new_accept(__reg("a6") struct Library * , __reg("a0") const char * host_port ) = "\tjsr\t-2076(a6)";
#define BIO_new_accept(host_port) __BIO_new_accept(AmiSSLBase, (host_port))

int __BIO_new_bio_pair(__reg("a6") struct Library * , __reg("a0") BIO ** bio1 , __reg("d0") size_t writebuf1 , __reg("a1") BIO ** bio2 , __reg("d1") size_t writebuf2 ) = "\tjsr\t-2082(a6)";
#define BIO_new_bio_pair(bio1, writebuf1, bio2, writebuf2) __BIO_new_bio_pair(AmiSSLBase, (bio1), (writebuf1), (bio2), (writebuf2))

void __BIO_copy_next_retry(__reg("a6") struct Library * , __reg("a0") BIO * b ) = "\tjsr\t-2088(a6)";
#define BIO_copy_next_retry(b) __BIO_copy_next_retry(AmiSSLBase, (b))

int __BIO_vprintf(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") const char * format , __reg("a2") va_list args ) = "\tjsr\t-2094(a6)";
#define BIO_vprintf(bio, format, args) __BIO_vprintf(AmiSSLBase, (bio), (format), (args))

#if !defined(NO_INLINE_STDARG) && (__STDC__ == 1L) && (__STDC_VERSION__ >= 199901L)
int __BIO_printf(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") const char * format , long dummy , ... ) = "\tmove.l\ta2,-(a7)\n\tlea\t4(a7),a2\n\tjsr\t-2094(a6)\n\tmovea.l\t(a7)+,a2";
#define BIO_printf(bio, format, ...) __BIO_printf(AmiSSLBase, (bio), (format), __VA_ARGS__)
#endif

int __BIO_vsnprintf(__reg("a6") struct Library * , __reg("a0") char * buf , __reg("d0") size_t n , __reg("a1") const char * format , __reg("a2") va_list args ) = "\tjsr\t-2100(a6)";
#define BIO_vsnprintf(buf, n, format, args) __BIO_vsnprintf(AmiSSLBase, (buf), (n), (format), (args))

#if !defined(NO_INLINE_STDARG) && (__STDC__ == 1L) && (__STDC_VERSION__ >= 199901L)
int __BIO_snprintf(__reg("a6") struct Library * , __reg("a0") char * buf , __reg("d0") size_t n , __reg("a1") const char * format , long dummy , ... ) = "\tmove.l\ta2,-(a7)\n\tlea\t4(a7),a2\n\tjsr\t-2100(a6)\n\tmovea.l\t(a7)+,a2";
#define BIO_snprintf(buf, n, format, ...) __BIO_snprintf(AmiSSLBase, (buf), (n), (format), __VA_ARGS__)
#endif

int __ERR_load_BIO_strings(__reg("a6") struct Library * ) = "\tjsr\t-2106(a6)";
#define ERR_load_BIO_strings() __ERR_load_BIO_strings(AmiSSLBase)

const BIGNUM * __BN_value_one(__reg("a6") struct Library * ) = "\tjsr\t-2112(a6)";
#define BN_value_one() __BN_value_one(AmiSSLBase)

char * __BN_options(__reg("a6") struct Library * ) = "\tjsr\t-2118(a6)";
#define BN_options() __BN_options(AmiSSLBase)

BN_CTX * __BN_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-2124(a6)";
#define BN_CTX_new() __BN_CTX_new(AmiSSLBase)

void __BN_CTX_free(__reg("a6") struct Library * , __reg("a0") BN_CTX * c ) = "\tjsr\t-2136(a6)";
#define BN_CTX_free(c) __BN_CTX_free(AmiSSLBase, (c))

void __BN_CTX_start(__reg("a6") struct Library * , __reg("a0") BN_CTX * ctx ) = "\tjsr\t-2142(a6)";
#define BN_CTX_start(ctx) __BN_CTX_start(AmiSSLBase, (ctx))

BIGNUM * __BN_CTX_get(__reg("a6") struct Library * , __reg("a0") BN_CTX * ctx ) = "\tjsr\t-2148(a6)";
#define BN_CTX_get(ctx) __BN_CTX_get(AmiSSLBase, (ctx))

void __BN_CTX_end(__reg("a6") struct Library * , __reg("a0") BN_CTX * ctx ) = "\tjsr\t-2154(a6)";
#define BN_CTX_end(ctx) __BN_CTX_end(AmiSSLBase, (ctx))

int __BN_rand(__reg("a6") struct Library * , __reg("a0") BIGNUM * rnd , __reg("d0") int bits , __reg("d1") int top , __reg("d2") int bottom ) = "\tjsr\t-2160(a6)";
#define BN_rand(rnd, bits, top, bottom) __BN_rand(AmiSSLBase, (rnd), (bits), (top), (bottom))

int __BN_pseudo_rand(__reg("a6") struct Library * , __reg("a0") BIGNUM * rnd , __reg("d0") int bits , __reg("d1") int top , __reg("d2") int bottom ) = "\tjsr\t-2166(a6)";
#define BN_pseudo_rand(rnd, bits, top, bottom) __BN_pseudo_rand(AmiSSLBase, (rnd), (bits), (top), (bottom))

int __BN_rand_range(__reg("a6") struct Library * , __reg("a0") BIGNUM * rnd , __reg("a1") const BIGNUM * range ) = "\tjsr\t-2172(a6)";
#define BN_rand_range(rnd, range) __BN_rand_range(AmiSSLBase, (rnd), (range))

int __BN_pseudo_rand_range(__reg("a6") struct Library * , __reg("a0") BIGNUM * rnd , __reg("a1") const BIGNUM * range ) = "\tjsr\t-2178(a6)";
#define BN_pseudo_rand_range(rnd, range) __BN_pseudo_rand_range(AmiSSLBase, (rnd), (range))

int __BN_num_bits(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a ) = "\tjsr\t-2184(a6)";
#define BN_num_bits(a) __BN_num_bits(AmiSSLBase, (a))

int __BN_num_bits_word(__reg("a6") struct Library * , __reg("d0") BN_ULONG a ) = "\tjsr\t-2190(a6)";
#define BN_num_bits_word(a) __BN_num_bits_word(AmiSSLBase, (a))

BIGNUM * __BN_new(__reg("a6") struct Library * ) = "\tjsr\t-2196(a6)";
#define BN_new() __BN_new(AmiSSLBase)

void __BN_clear_free(__reg("a6") struct Library * , __reg("a0") BIGNUM * a ) = "\tjsr\t-2208(a6)";
#define BN_clear_free(a) __BN_clear_free(AmiSSLBase, (a))

BIGNUM * __BN_copy(__reg("a6") struct Library * , __reg("a0") BIGNUM * a , __reg("a1") const BIGNUM * b ) = "\tjsr\t-2214(a6)";
#define BN_copy(a, b) __BN_copy(AmiSSLBase, (a), (b))

void __BN_swap(__reg("a6") struct Library * , __reg("a0") BIGNUM * a , __reg("a1") BIGNUM * b ) = "\tjsr\t-2220(a6)";
#define BN_swap(a, b) __BN_swap(AmiSSLBase, (a), (b))

BIGNUM * __BN_bin2bn(__reg("a6") struct Library * , __reg("a0") const unsigned char * s , __reg("d0") int len , __reg("a1") BIGNUM * ret ) = "\tjsr\t-2226(a6)";
#define BN_bin2bn(s, len, ret) __BN_bin2bn(AmiSSLBase, (s), (len), (ret))

int __BN_bn2bin(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("a1") unsigned char * to ) = "\tjsr\t-2232(a6)";
#define BN_bn2bin(a, to) __BN_bn2bin(AmiSSLBase, (a), (to))

BIGNUM * __BN_mpi2bn(__reg("a6") struct Library * , __reg("a0") const unsigned char * s , __reg("d0") int len , __reg("a1") BIGNUM * ret ) = "\tjsr\t-2238(a6)";
#define BN_mpi2bn(s, len, ret) __BN_mpi2bn(AmiSSLBase, (s), (len), (ret))

int __BN_bn2mpi(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("a1") unsigned char * to ) = "\tjsr\t-2244(a6)";
#define BN_bn2mpi(a, to) __BN_bn2mpi(AmiSSLBase, (a), (to))

int __BN_sub(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b ) = "\tjsr\t-2250(a6)";
#define BN_sub(r, a, b) __BN_sub(AmiSSLBase, (r), (a), (b))

int __BN_usub(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b ) = "\tjsr\t-2256(a6)";
#define BN_usub(r, a, b) __BN_usub(AmiSSLBase, (r), (a), (b))

int __BN_uadd(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b ) = "\tjsr\t-2262(a6)";
#define BN_uadd(r, a, b) __BN_uadd(AmiSSLBase, (r), (a), (b))

int __BN_add(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b ) = "\tjsr\t-2268(a6)";
#define BN_add(r, a, b) __BN_add(AmiSSLBase, (r), (a), (b))

int __BN_mul(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-2274(a6)";
#define BN_mul(r, a, b, ctx) __BN_mul(AmiSSLBase, (r), (a), (b), (ctx))

int __BN_sqr(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-2280(a6)";
#define BN_sqr(r, a, ctx) __BN_sqr(AmiSSLBase, (r), (a), (ctx))

int __BN_div(__reg("a6") struct Library * , __reg("a0") BIGNUM * dv , __reg("a1") BIGNUM * rem , __reg("a2") const BIGNUM * m , __reg("a3") const BIGNUM * d , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-2286(a6)";
#define BN_div(dv, rem, m, d, ctx) __BN_div(AmiSSLBase, (dv), (rem), (m), (d), (ctx))

int __BN_nnmod(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * m , __reg("a2") const BIGNUM * d , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-2292(a6)";
#define BN_nnmod(r, m, d, ctx) __BN_nnmod(AmiSSLBase, (r), (m), (d), (ctx))

int __BN_mod_add(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") const BIGNUM * m , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-2298(a6)";
#define BN_mod_add(r, a, b, m, ctx) __BN_mod_add(AmiSSLBase, (r), (a), (b), (m), (ctx))

int __BN_mod_add_quick(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") const BIGNUM * m ) = "\tjsr\t-2304(a6)";
#define BN_mod_add_quick(r, a, b, m) __BN_mod_add_quick(AmiSSLBase, (r), (a), (b), (m))

int __BN_mod_sub(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") const BIGNUM * m , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-2310(a6)";
#define BN_mod_sub(r, a, b, m, ctx) __BN_mod_sub(AmiSSLBase, (r), (a), (b), (m), (ctx))

int __BN_mod_sub_quick(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") const BIGNUM * m ) = "\tjsr\t-2316(a6)";
#define BN_mod_sub_quick(r, a, b, m) __BN_mod_sub_quick(AmiSSLBase, (r), (a), (b), (m))

int __BN_mod_mul(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") const BIGNUM * m , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-2322(a6)";
#define BN_mod_mul(r, a, b, m, ctx) __BN_mod_mul(AmiSSLBase, (r), (a), (b), (m), (ctx))

int __BN_mod_sqr(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * m , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-2328(a6)";
#define BN_mod_sqr(r, a, m, ctx) __BN_mod_sqr(AmiSSLBase, (r), (a), (m), (ctx))

int __BN_mod_lshift1(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * m , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-2334(a6)";
#define BN_mod_lshift1(r, a, m, ctx) __BN_mod_lshift1(AmiSSLBase, (r), (a), (m), (ctx))

int __BN_mod_lshift1_quick(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * m ) = "\tjsr\t-2340(a6)";
#define BN_mod_lshift1_quick(r, a, m) __BN_mod_lshift1_quick(AmiSSLBase, (r), (a), (m))

int __BN_mod_lshift(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("d0") int n , __reg("a2") const BIGNUM * m , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-2346(a6)";
#define BN_mod_lshift(r, a, n, m, ctx) __BN_mod_lshift(AmiSSLBase, (r), (a), (n), (m), (ctx))

int __BN_mod_lshift_quick(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("d0") int n , __reg("a2") const BIGNUM * m ) = "\tjsr\t-2352(a6)";
#define BN_mod_lshift_quick(r, a, n, m) __BN_mod_lshift_quick(AmiSSLBase, (r), (a), (n), (m))

BN_ULONG __BN_mod_word(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("d0") BN_ULONG w ) = "\tjsr\t-2358(a6)";
#define BN_mod_word(a, w) __BN_mod_word(AmiSSLBase, (a), (w))

BN_ULONG __BN_div_word(__reg("a6") struct Library * , __reg("a0") BIGNUM * a , __reg("d0") BN_ULONG w ) = "\tjsr\t-2364(a6)";
#define BN_div_word(a, w) __BN_div_word(AmiSSLBase, (a), (w))

int __BN_mul_word(__reg("a6") struct Library * , __reg("a0") BIGNUM * a , __reg("d0") BN_ULONG w ) = "\tjsr\t-2370(a6)";
#define BN_mul_word(a, w) __BN_mul_word(AmiSSLBase, (a), (w))

int __BN_add_word(__reg("a6") struct Library * , __reg("a0") BIGNUM * a , __reg("d0") BN_ULONG w ) = "\tjsr\t-2376(a6)";
#define BN_add_word(a, w) __BN_add_word(AmiSSLBase, (a), (w))

int __BN_sub_word(__reg("a6") struct Library * , __reg("a0") BIGNUM * a , __reg("d0") BN_ULONG w ) = "\tjsr\t-2382(a6)";
#define BN_sub_word(a, w) __BN_sub_word(AmiSSLBase, (a), (w))

int __BN_set_word(__reg("a6") struct Library * , __reg("a0") BIGNUM * a , __reg("d0") BN_ULONG w ) = "\tjsr\t-2388(a6)";
#define BN_set_word(a, w) __BN_set_word(AmiSSLBase, (a), (w))

BN_ULONG __BN_get_word(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a ) = "\tjsr\t-2394(a6)";
#define BN_get_word(a) __BN_get_word(AmiSSLBase, (a))

int __BN_cmp(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("a1") const BIGNUM * b ) = "\tjsr\t-2400(a6)";
#define BN_cmp(a, b) __BN_cmp(AmiSSLBase, (a), (b))

void __BN_free(__reg("a6") struct Library * , __reg("a0") BIGNUM * a ) = "\tjsr\t-2406(a6)";
#define BN_free(a) __BN_free(AmiSSLBase, (a))

int __BN_is_bit_set(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("d0") int n ) = "\tjsr\t-2412(a6)";
#define BN_is_bit_set(a, n) __BN_is_bit_set(AmiSSLBase, (a), (n))

int __BN_lshift(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("d0") int n ) = "\tjsr\t-2418(a6)";
#define BN_lshift(r, a, n) __BN_lshift(AmiSSLBase, (r), (a), (n))

int __BN_lshift1(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a ) = "\tjsr\t-2424(a6)";
#define BN_lshift1(r, a) __BN_lshift1(AmiSSLBase, (r), (a))

int __BN_exp(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-2430(a6)";
#define BN_exp(r, a, p, ctx) __BN_exp(AmiSSLBase, (r), (a), (p), (ctx))

int __BN_mod_exp(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") const BIGNUM * m , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-2436(a6)";
#define BN_mod_exp(r, a, p, m, ctx) __BN_mod_exp(AmiSSLBase, (r), (a), (p), (m), (ctx))

int __BN_mod_exp_mont(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") const BIGNUM * m , __reg("d0") BN_CTX * ctx , __reg("d1") BN_MONT_CTX * m_ctx ) = "\tjsr\t-2442(a6)";
#define BN_mod_exp_mont(r, a, p, m, ctx, m_ctx) __BN_mod_exp_mont(AmiSSLBase, (r), (a), (p), (m), (ctx), (m_ctx))

int __BN_mod_exp_mont_word(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("d0") BN_ULONG a , __reg("a1") const BIGNUM * p , __reg("a2") const BIGNUM * m , __reg("a3") BN_CTX * ctx , __reg("d1") BN_MONT_CTX * m_ctx ) = "\tjsr\t-2448(a6)";
#define BN_mod_exp_mont_word(r, a, p, m, ctx, m_ctx) __BN_mod_exp_mont_word(AmiSSLBase, (r), (a), (p), (m), (ctx), (m_ctx))

int __BN_mod_exp2_mont(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a1 , __reg("a2") const BIGNUM * p1 , __reg("a3") const BIGNUM * a2 , __reg("d0") const BIGNUM * p2 , __reg("d1") const BIGNUM * m , __reg("d2") BN_CTX * ctx , __reg("d3") BN_MONT_CTX * m_ctx ) = "\tjsr\t-2454(a6)";
#define BN_mod_exp2_mont(r, a1, p1, a2, p2, m, ctx, m_ctx) __BN_mod_exp2_mont(AmiSSLBase, (r), (a1), (p1), (a2), (p2), (m), (ctx), (m_ctx))

int __BN_mod_exp_simple(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") const BIGNUM * m , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-2460(a6)";
#define BN_mod_exp_simple(r, a, p, m, ctx) __BN_mod_exp_simple(AmiSSLBase, (r), (a), (p), (m), (ctx))

int __BN_mask_bits(__reg("a6") struct Library * , __reg("a0") BIGNUM * a , __reg("d0") int n ) = "\tjsr\t-2466(a6)";
#define BN_mask_bits(a, n) __BN_mask_bits(AmiSSLBase, (a), (n))

int __BN_print(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") const BIGNUM * a ) = "\tjsr\t-2472(a6)";
#define BN_print(fp, a) __BN_print(AmiSSLBase, (fp), (a))

int __BN_reciprocal(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * m , __reg("d0") int len , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-2478(a6)";
#define BN_reciprocal(r, m, len, ctx) __BN_reciprocal(AmiSSLBase, (r), (m), (len), (ctx))

int __BN_rshift(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("d0") int n ) = "\tjsr\t-2484(a6)";
#define BN_rshift(r, a, n) __BN_rshift(AmiSSLBase, (r), (a), (n))

int __BN_rshift1(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a ) = "\tjsr\t-2490(a6)";
#define BN_rshift1(r, a) __BN_rshift1(AmiSSLBase, (r), (a))

void __BN_clear(__reg("a6") struct Library * , __reg("a0") BIGNUM * a ) = "\tjsr\t-2496(a6)";
#define BN_clear(a) __BN_clear(AmiSSLBase, (a))

BIGNUM * __BN_dup(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a ) = "\tjsr\t-2502(a6)";
#define BN_dup(a) __BN_dup(AmiSSLBase, (a))

int __BN_ucmp(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("a1") const BIGNUM * b ) = "\tjsr\t-2508(a6)";
#define BN_ucmp(a, b) __BN_ucmp(AmiSSLBase, (a), (b))

int __BN_set_bit(__reg("a6") struct Library * , __reg("a0") BIGNUM * a , __reg("d0") int n ) = "\tjsr\t-2514(a6)";
#define BN_set_bit(a, n) __BN_set_bit(AmiSSLBase, (a), (n))

int __BN_clear_bit(__reg("a6") struct Library * , __reg("a0") BIGNUM * a , __reg("d0") int n ) = "\tjsr\t-2520(a6)";
#define BN_clear_bit(a, n) __BN_clear_bit(AmiSSLBase, (a), (n))

char * __BN_bn2hex(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a ) = "\tjsr\t-2526(a6)";
#define BN_bn2hex(a) __BN_bn2hex(AmiSSLBase, (a))

char * __BN_bn2dec(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a ) = "\tjsr\t-2532(a6)";
#define BN_bn2dec(a) __BN_bn2dec(AmiSSLBase, (a))

int __BN_hex2bn(__reg("a6") struct Library * , __reg("a0") BIGNUM ** a , __reg("a1") const char * str ) = "\tjsr\t-2538(a6)";
#define BN_hex2bn(a, str) __BN_hex2bn(AmiSSLBase, (a), (str))

int __BN_dec2bn(__reg("a6") struct Library * , __reg("a0") BIGNUM ** a , __reg("a1") const char * str ) = "\tjsr\t-2544(a6)";
#define BN_dec2bn(a, str) __BN_dec2bn(AmiSSLBase, (a), (str))

int __BN_gcd(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-2550(a6)";
#define BN_gcd(r, a, b, ctx) __BN_gcd(AmiSSLBase, (r), (a), (b), (ctx))

int __BN_kronecker(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("a1") const BIGNUM * b , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-2556(a6)";
#define BN_kronecker(a, b, ctx) __BN_kronecker(AmiSSLBase, (a), (b), (ctx))

BIGNUM * __BN_mod_inverse(__reg("a6") struct Library * , __reg("a0") BIGNUM * ret , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * n , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-2562(a6)";
#define BN_mod_inverse(ret, a, n, ctx) __BN_mod_inverse(AmiSSLBase, (ret), (a), (n), (ctx))

BIGNUM * __BN_mod_sqrt(__reg("a6") struct Library * , __reg("a0") BIGNUM * ret , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * n , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-2568(a6)";
#define BN_mod_sqrt(ret, a, n, ctx) __BN_mod_sqrt(AmiSSLBase, (ret), (a), (n), (ctx))

BIGNUM * __BN_generate_prime(__reg("a6") struct Library * , __reg("a0") BIGNUM * ret , __reg("d0") int bits , __reg("d1") int safe , __reg("a1") const BIGNUM * add , __reg("a2") const BIGNUM * rem , __reg("a3") void (*callback)(int,int,void *) , __reg("d2") void * cb_arg ) = "\tjsr\t-2574(a6)";
#define BN_generate_prime(ret, bits, safe, add, rem, callback, cb_arg) __BN_generate_prime(AmiSSLBase, (ret), (bits), (safe), (add), (rem), (callback), (cb_arg))

int __BN_is_prime(__reg("a6") struct Library * , __reg("a0") const BIGNUM * p , __reg("d0") int nchecks , __reg("a1") void (*callback)(int,int,void *) , __reg("a2") BN_CTX * ctx , __reg("a3") void * cb_arg ) = "\tjsr\t-2580(a6)";
#define BN_is_prime(p, nchecks, callback, ctx, cb_arg) __BN_is_prime(AmiSSLBase, (p), (nchecks), (callback), (ctx), (cb_arg))

int __BN_is_prime_fasttest(__reg("a6") struct Library * , __reg("a0") const BIGNUM * p , __reg("d0") int nchecks , __reg("a1") void (*callback)(int,int,void *) , __reg("a2") BN_CTX * ctx , __reg("a3") void * cb_arg , __reg("d1") int do_trial_division ) = "\tjsr\t-2586(a6)";
#define BN_is_prime_fasttest(p, nchecks, callback, ctx, cb_arg, do_trial_division) __BN_is_prime_fasttest(AmiSSLBase, (p), (nchecks), (callback), (ctx), (cb_arg), (do_trial_division))

BN_MONT_CTX * __BN_MONT_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-2592(a6)";
#define BN_MONT_CTX_new() __BN_MONT_CTX_new(AmiSSLBase)

int __BN_mod_mul_montgomery(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") BN_MONT_CTX * mont , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-2604(a6)";
#define BN_mod_mul_montgomery(r, a, b, mont, ctx) __BN_mod_mul_montgomery(AmiSSLBase, (r), (a), (b), (mont), (ctx))

int __BN_from_montgomery(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") BN_MONT_CTX * mont , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-2610(a6)";
#define BN_from_montgomery(r, a, mont, ctx) __BN_from_montgomery(AmiSSLBase, (r), (a), (mont), (ctx))

void __BN_MONT_CTX_free(__reg("a6") struct Library * , __reg("a0") BN_MONT_CTX * mont ) = "\tjsr\t-2616(a6)";
#define BN_MONT_CTX_free(mont) __BN_MONT_CTX_free(AmiSSLBase, (mont))

int __BN_MONT_CTX_set(__reg("a6") struct Library * , __reg("a0") BN_MONT_CTX * mont , __reg("a1") const BIGNUM * mod , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-2622(a6)";
#define BN_MONT_CTX_set(mont, mod, ctx) __BN_MONT_CTX_set(AmiSSLBase, (mont), (mod), (ctx))

BN_MONT_CTX * __BN_MONT_CTX_copy(__reg("a6") struct Library * , __reg("a0") BN_MONT_CTX * to , __reg("a1") BN_MONT_CTX * from ) = "\tjsr\t-2628(a6)";
#define BN_MONT_CTX_copy(to, from) __BN_MONT_CTX_copy(AmiSSLBase, (to), (from))

BN_BLINDING * __BN_BLINDING_new(__reg("a6") struct Library * , __reg("a0") const BIGNUM * A , __reg("a1") const BIGNUM * Ai , __reg("a2") BIGNUM * mod ) = "\tjsr\t-2634(a6)";
#define BN_BLINDING_new(A, Ai, mod) __BN_BLINDING_new(AmiSSLBase, (A), (Ai), (mod))

void __BN_BLINDING_free(__reg("a6") struct Library * , __reg("a0") BN_BLINDING * b ) = "\tjsr\t-2640(a6)";
#define BN_BLINDING_free(b) __BN_BLINDING_free(AmiSSLBase, (b))

int __BN_BLINDING_update(__reg("a6") struct Library * , __reg("a0") BN_BLINDING * b , __reg("a1") BN_CTX * ctx ) = "\tjsr\t-2646(a6)";
#define BN_BLINDING_update(b, ctx) __BN_BLINDING_update(AmiSSLBase, (b), (ctx))

int __BN_BLINDING_convert(__reg("a6") struct Library * , __reg("a0") BIGNUM * n , __reg("a1") BN_BLINDING * r , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-2652(a6)";
#define BN_BLINDING_convert(n, r, ctx) __BN_BLINDING_convert(AmiSSLBase, (n), (r), (ctx))

int __BN_BLINDING_invert(__reg("a6") struct Library * , __reg("a0") BIGNUM * n , __reg("a1") BN_BLINDING * b , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-2658(a6)";
#define BN_BLINDING_invert(n, b, ctx) __BN_BLINDING_invert(AmiSSLBase, (n), (b), (ctx))

void __BN_set_params(__reg("a6") struct Library * , __reg("d0") int mul , __reg("d1") int high , __reg("d2") int low , __reg("d3") int mont ) = "\tjsr\t-2664(a6)";
#define BN_set_params(mul, high, low, mont) __BN_set_params(AmiSSLBase, (mul), (high), (low), (mont))

int __BN_get_params(__reg("a6") struct Library * , __reg("d0") int which ) = "\tjsr\t-2670(a6)";
#define BN_get_params(which) __BN_get_params(AmiSSLBase, (which))

BN_RECP_CTX * __BN_RECP_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-2682(a6)";
#define BN_RECP_CTX_new() __BN_RECP_CTX_new(AmiSSLBase)

void __BN_RECP_CTX_free(__reg("a6") struct Library * , __reg("a0") BN_RECP_CTX * recp ) = "\tjsr\t-2688(a6)";
#define BN_RECP_CTX_free(recp) __BN_RECP_CTX_free(AmiSSLBase, (recp))

int __BN_RECP_CTX_set(__reg("a6") struct Library * , __reg("a0") BN_RECP_CTX * recp , __reg("a1") const BIGNUM * rdiv , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-2694(a6)";
#define BN_RECP_CTX_set(recp, rdiv, ctx) __BN_RECP_CTX_set(AmiSSLBase, (recp), (rdiv), (ctx))

int __BN_mod_mul_reciprocal(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * x , __reg("a2") const BIGNUM * y , __reg("a3") BN_RECP_CTX * recp , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-2700(a6)";
#define BN_mod_mul_reciprocal(r, x, y, recp, ctx) __BN_mod_mul_reciprocal(AmiSSLBase, (r), (x), (y), (recp), (ctx))

int __BN_mod_exp_recp(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") const BIGNUM * m , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-2706(a6)";
#define BN_mod_exp_recp(r, a, p, m, ctx) __BN_mod_exp_recp(AmiSSLBase, (r), (a), (p), (m), (ctx))

int __BN_div_recp(__reg("a6") struct Library * , __reg("a0") BIGNUM * dv , __reg("a1") BIGNUM * rem , __reg("a2") const BIGNUM * m , __reg("a3") BN_RECP_CTX * recp , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-2712(a6)";
#define BN_div_recp(dv, rem, m, recp, ctx) __BN_div_recp(AmiSSLBase, (dv), (rem), (m), (recp), (ctx))

int __BN_bntest_rand(__reg("a6") struct Library * , __reg("a0") BIGNUM * rnd , __reg("d0") int bits , __reg("d1") int top , __reg("d2") int bottom ) = "\tjsr\t-2766(a6)";
#define BN_bntest_rand(rnd, bits, top, bottom) __BN_bntest_rand(AmiSSLBase, (rnd), (bits), (top), (bottom))

int __ERR_load_BN_strings(__reg("a6") struct Library * ) = "\tjsr\t-2772(a6)";
#define ERR_load_BN_strings() __ERR_load_BN_strings(AmiSSLBase)

BUF_MEM * __BUF_MEM_new(__reg("a6") struct Library * ) = "\tjsr\t-2778(a6)";
#define BUF_MEM_new() __BUF_MEM_new(AmiSSLBase)

void __BUF_MEM_free(__reg("a6") struct Library * , __reg("a0") BUF_MEM * a ) = "\tjsr\t-2784(a6)";
#define BUF_MEM_free(a) __BUF_MEM_free(AmiSSLBase, (a))

size_t __BUF_MEM_grow(__reg("a6") struct Library * , __reg("a0") BUF_MEM * str , __reg("d0") size_t len ) = "\tjsr\t-2790(a6)";
#define BUF_MEM_grow(str, len) __BUF_MEM_grow(AmiSSLBase, (str), (len))

size_t __BUF_MEM_grow_clean(__reg("a6") struct Library * , __reg("a0") BUF_MEM * str , __reg("d0") size_t len ) = "\tjsr\t-2796(a6)";
#define BUF_MEM_grow_clean(str, len) __BUF_MEM_grow_clean(AmiSSLBase, (str), (len))

char * __OBSOLETE_BUF_strdup(__reg("a6") struct Library * , __reg("a0") const char * str ) = "\tjsr\t-2802(a6)";
#define OBSOLETE_BUF_strdup(str) __OBSOLETE_BUF_strdup(AmiSSLBase, (str))

size_t __OBSOLETE_BUF_strlcpy(__reg("a6") struct Library * , __reg("a0") char * dst , __reg("a1") const char * src , __reg("d0") size_t siz ) = "\tjsr\t-2808(a6)";
#define OBSOLETE_BUF_strlcpy(dst, src, siz) __OBSOLETE_BUF_strlcpy(AmiSSLBase, (dst), (src), (siz))

size_t __OBSOLETE_BUF_strlcat(__reg("a6") struct Library * , __reg("a0") char * dst , __reg("a1") const char * src , __reg("d0") size_t siz ) = "\tjsr\t-2814(a6)";
#define OBSOLETE_BUF_strlcat(dst, src, siz) __OBSOLETE_BUF_strlcat(AmiSSLBase, (dst), (src), (siz))

int __ERR_load_BUF_strings(__reg("a6") struct Library * ) = "\tjsr\t-2820(a6)";
#define ERR_load_BUF_strings() __ERR_load_BUF_strings(AmiSSLBase)

COMP_CTX * __COMP_CTX_new(__reg("a6") struct Library * , __reg("a0") COMP_METHOD * meth ) = "\tjsr\t-2826(a6)";
#define COMP_CTX_new(meth) __COMP_CTX_new(AmiSSLBase, (meth))

void __COMP_CTX_free(__reg("a6") struct Library * , __reg("a0") COMP_CTX * ctx ) = "\tjsr\t-2832(a6)";
#define COMP_CTX_free(ctx) __COMP_CTX_free(AmiSSLBase, (ctx))

int __COMP_compress_block(__reg("a6") struct Library * , __reg("a0") COMP_CTX * ctx , __reg("a1") unsigned char * out , __reg("d0") int olen , __reg("a2") unsigned char * in , __reg("d1") int ilen ) = "\tjsr\t-2838(a6)";
#define COMP_compress_block(ctx, out, olen, in, ilen) __COMP_compress_block(AmiSSLBase, (ctx), (out), (olen), (in), (ilen))

int __COMP_expand_block(__reg("a6") struct Library * , __reg("a0") COMP_CTX * ctx , __reg("a1") unsigned char * out , __reg("d0") int olen , __reg("a2") unsigned char * in , __reg("d1") int ilen ) = "\tjsr\t-2844(a6)";
#define COMP_expand_block(ctx, out, olen, in, ilen) __COMP_expand_block(AmiSSLBase, (ctx), (out), (olen), (in), (ilen))

COMP_METHOD * __COMP_zlib(__reg("a6") struct Library * ) = "\tjsr\t-2856(a6)";
#define COMP_zlib() __COMP_zlib(AmiSSLBase)

int __ERR_load_COMP_strings(__reg("a6") struct Library * ) = "\tjsr\t-2862(a6)";
#define ERR_load_COMP_strings() __ERR_load_COMP_strings(AmiSSLBase)

int __CONF_set_default_method(__reg("a6") struct Library * , __reg("a0") CONF_METHOD * meth ) = "\tjsr\t-2868(a6)";
#define CONF_set_default_method(meth) __CONF_set_default_method(AmiSSLBase, (meth))

void __CONF_set_nconf(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") LHASH_OF(CONF_VALUE) * hash ) = "\tjsr\t-2874(a6)";
#define CONF_set_nconf(conf, hash) __CONF_set_nconf(AmiSSLBase, (conf), (hash))

LHASH_OF(CONF_VALUE) * __CONF_load(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf , __reg("a1") const char * file , __reg("a2") long * eline ) = "\tjsr\t-2880(a6)";
#define CONF_load(conf, file, eline) __CONF_load(AmiSSLBase, (conf), (file), (eline))

LHASH_OF(CONF_VALUE) * __CONF_load_bio(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf , __reg("a1") BIO * bp , __reg("a2") long * eline ) = "\tjsr\t-2886(a6)";
#define CONF_load_bio(conf, bp, eline) __CONF_load_bio(AmiSSLBase, (conf), (bp), (eline))

STACK_OF(CONF_VALUE) * __CONF_get_section(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf , __reg("a1") const char * section ) = "\tjsr\t-2892(a6)";
#define CONF_get_section(conf, section) __CONF_get_section(AmiSSLBase, (conf), (section))

char * __CONF_get_string(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf , __reg("a1") const char * group , __reg("a2") const char * name ) = "\tjsr\t-2898(a6)";
#define CONF_get_string(conf, group, name) __CONF_get_string(AmiSSLBase, (conf), (group), (name))

long __CONF_get_number(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf , __reg("a1") const char * group , __reg("a2") const char * name ) = "\tjsr\t-2904(a6)";
#define CONF_get_number(conf, group, name) __CONF_get_number(AmiSSLBase, (conf), (group), (name))

void __CONF_free(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf ) = "\tjsr\t-2910(a6)";
#define CONF_free(conf) __CONF_free(AmiSSLBase, (conf))

int __CONF_dump_bio(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf , __reg("a1") BIO * out ) = "\tjsr\t-2916(a6)";
#define CONF_dump_bio(conf, out) __CONF_dump_bio(AmiSSLBase, (conf), (out))

void __OPENSSL_config(__reg("a6") struct Library * , __reg("a0") const char * config_name ) = "\tjsr\t-2922(a6)";
#define OPENSSL_config(config_name) __OPENSSL_config(AmiSSLBase, (config_name))

void __OBSOLETE_OPENSSL_no_config(__reg("a6") struct Library * ) = "\tjsr\t-2928(a6)";
#define OBSOLETE_OPENSSL_no_config() __OBSOLETE_OPENSSL_no_config(AmiSSLBase)

CONF * __NCONF_new(__reg("a6") struct Library * , __reg("a0") CONF_METHOD * meth ) = "\tjsr\t-2934(a6)";
#define NCONF_new(meth) __NCONF_new(AmiSSLBase, (meth))

CONF_METHOD * __NCONF_default(__reg("a6") struct Library * ) = "\tjsr\t-2940(a6)";
#define NCONF_default() __NCONF_default(AmiSSLBase)

CONF_METHOD * __NCONF_WIN32(__reg("a6") struct Library * ) = "\tjsr\t-2946(a6)";
#define NCONF_WIN32() __NCONF_WIN32(AmiSSLBase)

void __NCONF_free(__reg("a6") struct Library * , __reg("a0") CONF * conf ) = "\tjsr\t-2952(a6)";
#define NCONF_free(conf) __NCONF_free(AmiSSLBase, (conf))

void __NCONF_free_data(__reg("a6") struct Library * , __reg("a0") CONF * conf ) = "\tjsr\t-2958(a6)";
#define NCONF_free_data(conf) __NCONF_free_data(AmiSSLBase, (conf))

int __NCONF_load(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * file , __reg("a2") long * eline ) = "\tjsr\t-2964(a6)";
#define NCONF_load(conf, file, eline) __NCONF_load(AmiSSLBase, (conf), (file), (eline))

int __NCONF_load_bio(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") BIO * bp , __reg("a2") long * eline ) = "\tjsr\t-2970(a6)";
#define NCONF_load_bio(conf, bp, eline) __NCONF_load_bio(AmiSSLBase, (conf), (bp), (eline))

STACK_OF(CONF_VALUE) * __NCONF_get_section(__reg("a6") struct Library * , __reg("a0") const CONF * conf , __reg("a1") const char * section ) = "\tjsr\t-2976(a6)";
#define NCONF_get_section(conf, section) __NCONF_get_section(AmiSSLBase, (conf), (section))

char * __NCONF_get_string(__reg("a6") struct Library * , __reg("a0") const CONF * conf , __reg("a1") const char * group , __reg("a2") const char * name ) = "\tjsr\t-2982(a6)";
#define NCONF_get_string(conf, group, name) __NCONF_get_string(AmiSSLBase, (conf), (group), (name))

int __NCONF_get_number_e(__reg("a6") struct Library * , __reg("a0") const CONF * conf , __reg("a1") const char * group , __reg("a2") const char * name , __reg("a3") long * result ) = "\tjsr\t-2988(a6)";
#define NCONF_get_number_e(conf, group, name, result) __NCONF_get_number_e(AmiSSLBase, (conf), (group), (name), (result))

int __NCONF_dump_bio(__reg("a6") struct Library * , __reg("a0") const CONF * conf , __reg("a1") BIO * out ) = "\tjsr\t-2994(a6)";
#define NCONF_dump_bio(conf, out) __NCONF_dump_bio(AmiSSLBase, (conf), (out))

int __CONF_modules_load(__reg("a6") struct Library * , __reg("a0") const CONF * cnf , __reg("a1") const char * appname , __reg("d0") unsigned long flags ) = "\tjsr\t-3000(a6)";
#define CONF_modules_load(cnf, appname, flags) __CONF_modules_load(AmiSSLBase, (cnf), (appname), (flags))

int __CONF_modules_load_file(__reg("a6") struct Library * , __reg("a0") const char * filename , __reg("a1") const char * appname , __reg("d0") unsigned long flags ) = "\tjsr\t-3006(a6)";
#define CONF_modules_load_file(filename, appname, flags) __CONF_modules_load_file(AmiSSLBase, (filename), (appname), (flags))

void __CONF_modules_unload(__reg("a6") struct Library * , __reg("d0") int all ) = "\tjsr\t-3012(a6)";
#define CONF_modules_unload(all) __CONF_modules_unload(AmiSSLBase, (all))

void __CONF_modules_finish(__reg("a6") struct Library * ) = "\tjsr\t-3018(a6)";
#define CONF_modules_finish() __CONF_modules_finish(AmiSSLBase)

int __CONF_module_add(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("a1") conf_init_func * ifunc , __reg("a2") conf_finish_func * ffunc ) = "\tjsr\t-3030(a6)";
#define CONF_module_add(name, ifunc, ffunc) __CONF_module_add(AmiSSLBase, (name), (ifunc), (ffunc))

const char * __CONF_imodule_get_name(__reg("a6") struct Library * , __reg("a0") const CONF_IMODULE * md ) = "\tjsr\t-3036(a6)";
#define CONF_imodule_get_name(md) __CONF_imodule_get_name(AmiSSLBase, (md))

const char * __CONF_imodule_get_value(__reg("a6") struct Library * , __reg("a0") const CONF_IMODULE * md ) = "\tjsr\t-3042(a6)";
#define CONF_imodule_get_value(md) __CONF_imodule_get_value(AmiSSLBase, (md))

void * __CONF_imodule_get_usr_data(__reg("a6") struct Library * , __reg("a0") const CONF_IMODULE * md ) = "\tjsr\t-3048(a6)";
#define CONF_imodule_get_usr_data(md) __CONF_imodule_get_usr_data(AmiSSLBase, (md))

void __CONF_imodule_set_usr_data(__reg("a6") struct Library * , __reg("a0") CONF_IMODULE * md , __reg("a1") void * usr_data ) = "\tjsr\t-3054(a6)";
#define CONF_imodule_set_usr_data(md, usr_data) __CONF_imodule_set_usr_data(AmiSSLBase, (md), (usr_data))

CONF_MODULE * __CONF_imodule_get_module(__reg("a6") struct Library * , __reg("a0") const CONF_IMODULE * md ) = "\tjsr\t-3060(a6)";
#define CONF_imodule_get_module(md) __CONF_imodule_get_module(AmiSSLBase, (md))

unsigned long __CONF_imodule_get_flags(__reg("a6") struct Library * , __reg("a0") const CONF_IMODULE * md ) = "\tjsr\t-3066(a6)";
#define CONF_imodule_get_flags(md) __CONF_imodule_get_flags(AmiSSLBase, (md))

void __CONF_imodule_set_flags(__reg("a6") struct Library * , __reg("a0") CONF_IMODULE * md , __reg("d0") unsigned long flags ) = "\tjsr\t-3072(a6)";
#define CONF_imodule_set_flags(md, flags) __CONF_imodule_set_flags(AmiSSLBase, (md), (flags))

void * __CONF_module_get_usr_data(__reg("a6") struct Library * , __reg("a0") CONF_MODULE * pmod ) = "\tjsr\t-3078(a6)";
#define CONF_module_get_usr_data(pmod) __CONF_module_get_usr_data(AmiSSLBase, (pmod))

void __CONF_module_set_usr_data(__reg("a6") struct Library * , __reg("a0") CONF_MODULE * pmod , __reg("a1") void * usr_data ) = "\tjsr\t-3084(a6)";
#define CONF_module_set_usr_data(pmod, usr_data) __CONF_module_set_usr_data(AmiSSLBase, (pmod), (usr_data))

char * __CONF_get1_default_config_file(__reg("a6") struct Library * ) = "\tjsr\t-3090(a6)";
#define CONF_get1_default_config_file() __CONF_get1_default_config_file(AmiSSLBase)

int __CONF_parse_list(__reg("a6") struct Library * , __reg("a0") const char * list , __reg("d0") int sep , __reg("d1") int nospc , __reg("a1") int (*list_cb)(const char *elem,int len,void *usr) , __reg("a2") void * arg ) = "\tjsr\t-3096(a6)";
#define CONF_parse_list(list, sep, nospc, list_cb, arg) __CONF_parse_list(AmiSSLBase, (list), (sep), (nospc), (list_cb), (arg))

void __OPENSSL_load_builtin_modules(__reg("a6") struct Library * ) = "\tjsr\t-3102(a6)";
#define OPENSSL_load_builtin_modules() __OPENSSL_load_builtin_modules(AmiSSLBase)

int __ERR_load_CONF_strings(__reg("a6") struct Library * ) = "\tjsr\t-3108(a6)";
#define ERR_load_CONF_strings() __ERR_load_CONF_strings(AmiSSLBase)

const char * __OBSOLETE_SSLeay_version(__reg("a6") struct Library * , __reg("d0") int type ) = "\tjsr\t-3168(a6)";
#define OBSOLETE_SSLeay_version(type) __OBSOLETE_SSLeay_version(AmiSSLBase, (type))

unsigned long __OBSOLETE_SSLeay(__reg("a6") struct Library * ) = "\tjsr\t-3174(a6)";
#define OBSOLETE_SSLeay() __OBSOLETE_SSLeay(AmiSSLBase)

int __OPENSSL_issetugid(__reg("a6") struct Library * ) = "\tjsr\t-3180(a6)";
#define OPENSSL_issetugid() __OPENSSL_issetugid(AmiSSLBase)

int __CRYPTO_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") int class_index , __reg("d1") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dup_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-3204(a6)";
#define CRYPTO_get_ex_new_index(class_index, argl, argp, new_func, dup_func, free_func) __CRYPTO_get_ex_new_index(AmiSSLBase, (class_index), (argl), (argp), (new_func), (dup_func), (free_func))

int __CRYPTO_new_ex_data(__reg("a6") struct Library * , __reg("d0") int class_index , __reg("a0") void * obj , __reg("a1") CRYPTO_EX_DATA * ad ) = "\tjsr\t-3210(a6)";
#define CRYPTO_new_ex_data(class_index, obj, ad) __CRYPTO_new_ex_data(AmiSSLBase, (class_index), (obj), (ad))

int __CRYPTO_dup_ex_data(__reg("a6") struct Library * , __reg("d0") int class_index , __reg("a0") CRYPTO_EX_DATA * to , __reg("a1") const CRYPTO_EX_DATA * from ) = "\tjsr\t-3216(a6)";
#define CRYPTO_dup_ex_data(class_index, to, from) __CRYPTO_dup_ex_data(AmiSSLBase, (class_index), (to), (from))

void __CRYPTO_free_ex_data(__reg("a6") struct Library * , __reg("d0") int class_index , __reg("a0") void * obj , __reg("a1") CRYPTO_EX_DATA * ad ) = "\tjsr\t-3222(a6)";
#define CRYPTO_free_ex_data(class_index, obj, ad) __CRYPTO_free_ex_data(AmiSSLBase, (class_index), (obj), (ad))

int __CRYPTO_set_ex_data(__reg("a6") struct Library * , __reg("a0") CRYPTO_EX_DATA * ad , __reg("d0") int idx , __reg("a1") void * val ) = "\tjsr\t-3228(a6)";
#define CRYPTO_set_ex_data(ad, idx, val) __CRYPTO_set_ex_data(AmiSSLBase, (ad), (idx), (val))

void * __CRYPTO_get_ex_data(__reg("a6") struct Library * , __reg("a0") const CRYPTO_EX_DATA * ad , __reg("d0") int idx ) = "\tjsr\t-3234(a6)";
#define CRYPTO_get_ex_data(ad, idx) __CRYPTO_get_ex_data(AmiSSLBase, (ad), (idx))

int __CRYPTO_set_mem_functions(__reg("a6") struct Library * , __reg("a0") CRYPTO_malloc_fn malloc_fn , __reg("a1") CRYPTO_realloc_fn realloc_fn , __reg("a2") CRYPTO_free_fn free_fn ) = "\tjsr\t-3372(a6)";
#define CRYPTO_set_mem_functions(malloc_fn, realloc_fn, free_fn) __CRYPTO_set_mem_functions(AmiSSLBase, (malloc_fn), (realloc_fn), (free_fn))

void __CRYPTO_get_mem_functions(__reg("a6") struct Library * , __reg("a0") CRYPTO_malloc_fn * malloc_fn , __reg("a1") CRYPTO_realloc_fn * realloc_fn , __reg("a2") CRYPTO_free_fn * free_fn ) = "\tjsr\t-3402(a6)";
#define CRYPTO_get_mem_functions(malloc_fn, realloc_fn, free_fn) __CRYPTO_get_mem_functions(AmiSSLBase, (malloc_fn), (realloc_fn), (free_fn))

void * __CRYPTO_malloc(__reg("a6") struct Library * , __reg("d0") size_t num , __reg("a0") const char * file , __reg("d1") int line ) = "\tjsr\t-3444(a6)";
#define CRYPTO_malloc(num, file, line) __CRYPTO_malloc(AmiSSLBase, (num), (file), (line))

void __CRYPTO_free(__reg("a6") struct Library * , __reg("a0") void * str , __reg("a1") const char * file , __reg("d0") int line ) = "\tjsr\t-3450(a6)";
#define CRYPTO_free(str, file, line) __CRYPTO_free(AmiSSLBase, (str), (file), (line))

void * __CRYPTO_realloc(__reg("a6") struct Library * , __reg("a0") void * addr , __reg("d0") size_t num , __reg("a1") const char * file , __reg("d1") int line ) = "\tjsr\t-3456(a6)";
#define CRYPTO_realloc(addr, num, file, line) __CRYPTO_realloc(AmiSSLBase, (addr), (num), (file), (line))

void __OPENSSL_cleanse(__reg("a6") struct Library * , __reg("a0") void * ptr , __reg("d0") size_t len ) = "\tjsr\t-3474(a6)";
#define OPENSSL_cleanse(ptr, len) __OPENSSL_cleanse(AmiSSLBase, (ptr), (len))

int __ERR_load_CRYPTO_strings(__reg("a6") struct Library * ) = "\tjsr\t-3558(a6)";
#define ERR_load_CRYPTO_strings() __ERR_load_CRYPTO_strings(AmiSSLBase)

const EC_METHOD * __EC_GFp_simple_method(__reg("a6") struct Library * ) = "\tjsr\t-3714(a6)";
#define EC_GFp_simple_method() __EC_GFp_simple_method(AmiSSLBase)

const EC_METHOD * __EC_GFp_mont_method(__reg("a6") struct Library * ) = "\tjsr\t-3720(a6)";
#define EC_GFp_mont_method() __EC_GFp_mont_method(AmiSSLBase)

EC_GROUP * __EC_GROUP_new(__reg("a6") struct Library * , __reg("a0") const EC_METHOD * a ) = "\tjsr\t-3726(a6)";
#define EC_GROUP_new(a) __EC_GROUP_new(AmiSSLBase, (a))

void __EC_GROUP_free(__reg("a6") struct Library * , __reg("a0") EC_GROUP * a ) = "\tjsr\t-3732(a6)";
#define EC_GROUP_free(a) __EC_GROUP_free(AmiSSLBase, (a))

void __EC_GROUP_clear_free(__reg("a6") struct Library * , __reg("a0") EC_GROUP * a ) = "\tjsr\t-3738(a6)";
#define EC_GROUP_clear_free(a) __EC_GROUP_clear_free(AmiSSLBase, (a))

int __EC_GROUP_copy(__reg("a6") struct Library * , __reg("a0") EC_GROUP * a , __reg("a1") const EC_GROUP * b ) = "\tjsr\t-3744(a6)";
#define EC_GROUP_copy(a, b) __EC_GROUP_copy(AmiSSLBase, (a), (b))

const EC_METHOD * __EC_GROUP_method_of(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a ) = "\tjsr\t-3750(a6)";
#define EC_GROUP_method_of(a) __EC_GROUP_method_of(AmiSSLBase, (a))

int __EC_GROUP_set_curve_GFp(__reg("a6") struct Library * , __reg("a0") EC_GROUP * a1 , __reg("a1") const BIGNUM * p , __reg("a2") const BIGNUM * a , __reg("a3") const BIGNUM * b , __reg("d0") BN_CTX * a2 ) = "\tjsr\t-3756(a6)";
#define EC_GROUP_set_curve_GFp(a1, p, a, b, a2) __EC_GROUP_set_curve_GFp(AmiSSLBase, (a1), (p), (a), (b), (a2))

int __EC_GROUP_get_curve_GFp(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") BIGNUM * p , __reg("a2") BIGNUM * a , __reg("a3") BIGNUM * b , __reg("d0") BN_CTX * a2 ) = "\tjsr\t-3762(a6)";
#define EC_GROUP_get_curve_GFp(a1, p, a, b, a2) __EC_GROUP_get_curve_GFp(AmiSSLBase, (a1), (p), (a), (b), (a2))

EC_GROUP * __EC_GROUP_new_curve_GFp(__reg("a6") struct Library * , __reg("a0") const BIGNUM * p , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") BN_CTX * a1 ) = "\tjsr\t-3768(a6)";
#define EC_GROUP_new_curve_GFp(p, a, b, a1) __EC_GROUP_new_curve_GFp(AmiSSLBase, (p), (a), (b), (a1))

int __EC_GROUP_set_generator(__reg("a6") struct Library * , __reg("a0") EC_GROUP * a1 , __reg("a1") const EC_POINT * generator , __reg("a2") const BIGNUM * order , __reg("a3") const BIGNUM * cofactor ) = "\tjsr\t-3774(a6)";
#define EC_GROUP_set_generator(a1, generator, order, cofactor) __EC_GROUP_set_generator(AmiSSLBase, (a1), (generator), (order), (cofactor))

const EC_POINT * __EC_GROUP_get0_generator(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 ) = "\tjsr\t-3780(a6)";
#define EC_GROUP_get0_generator(a1) __EC_GROUP_get0_generator(AmiSSLBase, (a1))

int __EC_GROUP_get_order(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") BIGNUM * order , __reg("a2") BN_CTX * a2 ) = "\tjsr\t-3786(a6)";
#define EC_GROUP_get_order(a1, order, a2) __EC_GROUP_get_order(AmiSSLBase, (a1), (order), (a2))

int __EC_GROUP_get_cofactor(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") BIGNUM * cofactor , __reg("a2") BN_CTX * a2 ) = "\tjsr\t-3792(a6)";
#define EC_GROUP_get_cofactor(a1, cofactor, a2) __EC_GROUP_get_cofactor(AmiSSLBase, (a1), (cofactor), (a2))

EC_POINT * __EC_POINT_new(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a ) = "\tjsr\t-3798(a6)";
#define EC_POINT_new(a) __EC_POINT_new(AmiSSLBase, (a))

void __EC_POINT_free(__reg("a6") struct Library * , __reg("a0") EC_POINT * a ) = "\tjsr\t-3804(a6)";
#define EC_POINT_free(a) __EC_POINT_free(AmiSSLBase, (a))

void __EC_POINT_clear_free(__reg("a6") struct Library * , __reg("a0") EC_POINT * a ) = "\tjsr\t-3810(a6)";
#define EC_POINT_clear_free(a) __EC_POINT_clear_free(AmiSSLBase, (a))

int __EC_POINT_copy(__reg("a6") struct Library * , __reg("a0") EC_POINT * a , __reg("a1") const EC_POINT * b ) = "\tjsr\t-3816(a6)";
#define EC_POINT_copy(a, b) __EC_POINT_copy(AmiSSLBase, (a), (b))

const EC_METHOD * __EC_POINT_method_of(__reg("a6") struct Library * , __reg("a0") const EC_POINT * a ) = "\tjsr\t-3822(a6)";
#define EC_POINT_method_of(a) __EC_POINT_method_of(AmiSSLBase, (a))

int __EC_POINT_set_to_infinity(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a , __reg("a1") EC_POINT * b ) = "\tjsr\t-3828(a6)";
#define EC_POINT_set_to_infinity(a, b) __EC_POINT_set_to_infinity(AmiSSLBase, (a), (b))

int __EC_POINT_set_Jprojective_coordinates_GFp(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") EC_POINT * a2 , __reg("a2") const BIGNUM * x , __reg("a3") const BIGNUM * y , __reg("d0") const BIGNUM * z , __reg("d1") BN_CTX * a3 ) = "\tjsr\t-3834(a6)";
#define EC_POINT_set_Jprojective_coordinates_GFp(a1, a2, x, y, z, a3) __EC_POINT_set_Jprojective_coordinates_GFp(AmiSSLBase, (a1), (a2), (x), (y), (z), (a3))

int __EC_POINT_get_Jprojective_coordinates_GFp(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") const EC_POINT * a2 , __reg("a2") BIGNUM * x , __reg("a3") BIGNUM * y , __reg("d0") BIGNUM * z , __reg("d1") BN_CTX * a3 ) = "\tjsr\t-3840(a6)";
#define EC_POINT_get_Jprojective_coordinates_GFp(a1, a2, x, y, z, a3) __EC_POINT_get_Jprojective_coordinates_GFp(AmiSSLBase, (a1), (a2), (x), (y), (z), (a3))

int __EC_POINT_set_affine_coordinates_GFp(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") EC_POINT * a2 , __reg("a2") const BIGNUM * x , __reg("a3") const BIGNUM * y , __reg("d0") BN_CTX * a3 ) = "\tjsr\t-3846(a6)";
#define EC_POINT_set_affine_coordinates_GFp(a1, a2, x, y, a3) __EC_POINT_set_affine_coordinates_GFp(AmiSSLBase, (a1), (a2), (x), (y), (a3))

int __EC_POINT_get_affine_coordinates_GFp(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") const EC_POINT * a2 , __reg("a2") BIGNUM * x , __reg("a3") BIGNUM * y , __reg("d0") BN_CTX * a3 ) = "\tjsr\t-3852(a6)";
#define EC_POINT_get_affine_coordinates_GFp(a1, a2, x, y, a3) __EC_POINT_get_affine_coordinates_GFp(AmiSSLBase, (a1), (a2), (x), (y), (a3))

int __EC_POINT_set_compressed_coordinates_GFp(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") EC_POINT * a2 , __reg("a2") const BIGNUM * x , __reg("d0") int y_bit , __reg("a3") BN_CTX * a3 ) = "\tjsr\t-3858(a6)";
#define EC_POINT_set_compressed_coordinates_GFp(a1, a2, x, y_bit, a3) __EC_POINT_set_compressed_coordinates_GFp(AmiSSLBase, (a1), (a2), (x), (y_bit), (a3))

size_t __EC_POINT_point2oct(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") const EC_POINT * a2 , __reg("d0") point_conversion_form_t form , __reg("a2") unsigned char * buf , __reg("d1") size_t len , __reg("a3") BN_CTX * a3 ) = "\tjsr\t-3864(a6)";
#define EC_POINT_point2oct(a1, a2, form, buf, len, a3) __EC_POINT_point2oct(AmiSSLBase, (a1), (a2), (form), (buf), (len), (a3))

int __EC_POINT_oct2point(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") EC_POINT * a2 , __reg("a2") const unsigned char * buf , __reg("d0") size_t len , __reg("a3") BN_CTX * a3 ) = "\tjsr\t-3870(a6)";
#define EC_POINT_oct2point(a1, a2, buf, len, a3) __EC_POINT_oct2point(AmiSSLBase, (a1), (a2), (buf), (len), (a3))

int __EC_POINT_add(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") EC_POINT * r , __reg("a2") const EC_POINT * a , __reg("a3") const EC_POINT * b , __reg("d0") BN_CTX * a2 ) = "\tjsr\t-3876(a6)";
#define EC_POINT_add(a1, r, a, b, a2) __EC_POINT_add(AmiSSLBase, (a1), (r), (a), (b), (a2))

int __EC_POINT_dbl(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") EC_POINT * r , __reg("a2") const EC_POINT * a , __reg("a3") BN_CTX * a2 ) = "\tjsr\t-3882(a6)";
#define EC_POINT_dbl(a1, r, a, a2) __EC_POINT_dbl(AmiSSLBase, (a1), (r), (a), (a2))

int __EC_POINT_invert(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") EC_POINT * a2 , __reg("a2") BN_CTX * a3 ) = "\tjsr\t-3888(a6)";
#define EC_POINT_invert(a1, a2, a3) __EC_POINT_invert(AmiSSLBase, (a1), (a2), (a3))

int __EC_POINT_is_at_infinity(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a , __reg("a1") const EC_POINT * b ) = "\tjsr\t-3894(a6)";
#define EC_POINT_is_at_infinity(a, b) __EC_POINT_is_at_infinity(AmiSSLBase, (a), (b))

int __EC_POINT_is_on_curve(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a , __reg("a1") const EC_POINT * b , __reg("a2") BN_CTX * c ) = "\tjsr\t-3900(a6)";
#define EC_POINT_is_on_curve(a, b, c) __EC_POINT_is_on_curve(AmiSSLBase, (a), (b), (c))

int __EC_POINT_cmp(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") const EC_POINT * a , __reg("a2") const EC_POINT * b , __reg("a3") BN_CTX * a2 ) = "\tjsr\t-3906(a6)";
#define EC_POINT_cmp(a1, a, b, a2) __EC_POINT_cmp(AmiSSLBase, (a1), (a), (b), (a2))

int __EC_POINT_make_affine(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a , __reg("a1") EC_POINT * b , __reg("a2") BN_CTX * c ) = "\tjsr\t-3912(a6)";
#define EC_POINT_make_affine(a, b, c) __EC_POINT_make_affine(AmiSSLBase, (a), (b), (c))

int __EC_POINTs_make_affine(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("d0") size_t num , __reg("a1") EC_POINT ** a2 , __reg("a2") BN_CTX * a3 ) = "\tjsr\t-3918(a6)";
#define EC_POINTs_make_affine(a1, num, a2, a3) __EC_POINTs_make_affine(AmiSSLBase, (a1), (num), (a2), (a3))

int __EC_POINTs_mul(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") EC_POINT * r , __reg("a2") const BIGNUM * a2 , __reg("d0") size_t num , __reg("a3") const EC_POINT ** a3 , __reg("d1") const BIGNUM ** a4 , __reg("d2") BN_CTX * a5 ) = "\tjsr\t-3924(a6)";
#define EC_POINTs_mul(a1, r, a2, num, a3, a4, a5) __EC_POINTs_mul(AmiSSLBase, (a1), (r), (a2), (num), (a3), (a4), (a5))

int __EC_POINT_mul(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a1 , __reg("a1") EC_POINT * r , __reg("a2") const BIGNUM * a2 , __reg("a3") const EC_POINT * a3 , __reg("d0") const BIGNUM * a4 , __reg("d1") BN_CTX * a5 ) = "\tjsr\t-3930(a6)";
#define EC_POINT_mul(a1, r, a2, a3, a4, a5) __EC_POINT_mul(AmiSSLBase, (a1), (r), (a2), (a3), (a4), (a5))

int __EC_GROUP_precompute_mult(__reg("a6") struct Library * , __reg("a0") EC_GROUP * a , __reg("a1") BN_CTX * b ) = "\tjsr\t-3936(a6)";
#define EC_GROUP_precompute_mult(a, b) __EC_GROUP_precompute_mult(AmiSSLBase, (a), (b))

int __ERR_load_EC_strings(__reg("a6") struct Library * ) = "\tjsr\t-3942(a6)";
#define ERR_load_EC_strings() __ERR_load_EC_strings(AmiSSLBase)

void __OBSOLETE_ERR_put_error(__reg("a6") struct Library * , __reg("d0") int lib , __reg("d1") int func , __reg("d2") int reason , __reg("a0") const char * file , __reg("d3") int line ) = "\tjsr\t-3948(a6)";
#define OBSOLETE_ERR_put_error(lib, func, reason, file, line) __OBSOLETE_ERR_put_error(AmiSSLBase, (lib), (func), (reason), (file), (line))

void __ERR_set_error_data(__reg("a6") struct Library * , __reg("a0") char * data , __reg("d0") int flags ) = "\tjsr\t-3954(a6)";
#define ERR_set_error_data(data, flags) __ERR_set_error_data(AmiSSLBase, (data), (flags))

unsigned long __ERR_get_error(__reg("a6") struct Library * ) = "\tjsr\t-3960(a6)";
#define ERR_get_error() __ERR_get_error(AmiSSLBase)

unsigned long __ERR_get_error_line(__reg("a6") struct Library * , __reg("a0") const char ** file , __reg("a1") int * line ) = "\tjsr\t-3966(a6)";
#define ERR_get_error_line(file, line) __ERR_get_error_line(AmiSSLBase, (file), (line))

unsigned long __ERR_get_error_line_data(__reg("a6") struct Library * , __reg("a0") const char ** file , __reg("a1") int * line , __reg("a2") const char ** data , __reg("a3") int * flags ) = "\tjsr\t-3972(a6)";
#define ERR_get_error_line_data(file, line, data, flags) __ERR_get_error_line_data(AmiSSLBase, (file), (line), (data), (flags))

unsigned long __ERR_peek_error(__reg("a6") struct Library * ) = "\tjsr\t-3978(a6)";
#define ERR_peek_error() __ERR_peek_error(AmiSSLBase)

unsigned long __ERR_peek_error_line(__reg("a6") struct Library * , __reg("a0") const char ** file , __reg("a1") int * line ) = "\tjsr\t-3984(a6)";
#define ERR_peek_error_line(file, line) __ERR_peek_error_line(AmiSSLBase, (file), (line))

unsigned long __ERR_peek_error_line_data(__reg("a6") struct Library * , __reg("a0") const char ** file , __reg("a1") int * line , __reg("a2") const char ** data , __reg("a3") int * flags ) = "\tjsr\t-3990(a6)";
#define ERR_peek_error_line_data(file, line, data, flags) __ERR_peek_error_line_data(AmiSSLBase, (file), (line), (data), (flags))

unsigned long __ERR_peek_last_error(__reg("a6") struct Library * ) = "\tjsr\t-3996(a6)";
#define ERR_peek_last_error() __ERR_peek_last_error(AmiSSLBase)

unsigned long __ERR_peek_last_error_line(__reg("a6") struct Library * , __reg("a0") const char ** file , __reg("a1") int * line ) = "\tjsr\t-4002(a6)";
#define ERR_peek_last_error_line(file, line) __ERR_peek_last_error_line(AmiSSLBase, (file), (line))

unsigned long __ERR_peek_last_error_line_data(__reg("a6") struct Library * , __reg("a0") const char ** file , __reg("a1") int * line , __reg("a2") const char ** data , __reg("a3") int * flags ) = "\tjsr\t-4008(a6)";
#define ERR_peek_last_error_line_data(file, line, data, flags) __ERR_peek_last_error_line_data(AmiSSLBase, (file), (line), (data), (flags))

void __ERR_clear_error(__reg("a6") struct Library * ) = "\tjsr\t-4014(a6)";
#define ERR_clear_error() __ERR_clear_error(AmiSSLBase)

char * __ERR_error_string(__reg("a6") struct Library * , __reg("d0") unsigned long e , __reg("a0") char * buf ) = "\tjsr\t-4020(a6)";
#define ERR_error_string(e, buf) __ERR_error_string(AmiSSLBase, (e), (buf))

void __ERR_error_string_n(__reg("a6") struct Library * , __reg("d0") unsigned long e , __reg("a0") char * buf , __reg("d1") size_t len ) = "\tjsr\t-4026(a6)";
#define ERR_error_string_n(e, buf, len) __ERR_error_string_n(AmiSSLBase, (e), (buf), (len))

const char * __ERR_lib_error_string(__reg("a6") struct Library * , __reg("d0") unsigned long e ) = "\tjsr\t-4032(a6)";
#define ERR_lib_error_string(e) __ERR_lib_error_string(AmiSSLBase, (e))

const char * __ERR_func_error_string(__reg("a6") struct Library * , __reg("d0") unsigned long e ) = "\tjsr\t-4038(a6)";
#define ERR_func_error_string(e) __ERR_func_error_string(AmiSSLBase, (e))

const char * __ERR_reason_error_string(__reg("a6") struct Library * , __reg("d0") unsigned long e ) = "\tjsr\t-4044(a6)";
#define ERR_reason_error_string(e) __ERR_reason_error_string(AmiSSLBase, (e))

void __ERR_print_errors_cb(__reg("a6") struct Library * , __reg("a0") int (*cb)(const char *str,size_t len,void *u) , __reg("a1") void * u ) = "\tjsr\t-4050(a6)";
#define ERR_print_errors_cb(cb, u) __ERR_print_errors_cb(AmiSSLBase, (cb), (u))

void __ERR_print_errors(__reg("a6") struct Library * , __reg("a0") BIO * bp ) = "\tjsr\t-4056(a6)";
#define ERR_print_errors(bp) __ERR_print_errors(AmiSSLBase, (bp))

void __ERR_add_error_vdata(__reg("a6") struct Library * , __reg("d0") int num , __reg("a0") va_list args ) = "\tjsr\t-4062(a6)";
#define ERR_add_error_vdata(num, args) __ERR_add_error_vdata(AmiSSLBase, (num), (args))

#if !defined(NO_INLINE_STDARG) && (__STDC__ == 1L) && (__STDC_VERSION__ >= 199901L)
void __ERR_add_error_data(__reg("a6") struct Library * , __reg("d0") int num , long dummy , ... ) = "\tmove.l\ta0,-(a7)\n\tlea\t4(a7),a0\n\tjsr\t-4062(a6)\n\tmovea.l\t(a7)+,a0";
#define ERR_add_error_data(num, ...) __ERR_add_error_data(AmiSSLBase, (num), __VA_ARGS__)
#endif

int __ERR_load_strings(__reg("a6") struct Library * , __reg("d0") int lib , __reg("a0") ERR_STRING_DATA * str ) = "\tjsr\t-4068(a6)";
#define ERR_load_strings(lib, str) __ERR_load_strings(AmiSSLBase, (lib), (str))

int __ERR_unload_strings(__reg("a6") struct Library * , __reg("d0") int lib , __reg("a0") ERR_STRING_DATA * str ) = "\tjsr\t-4074(a6)";
#define ERR_unload_strings(lib, str) __ERR_unload_strings(AmiSSLBase, (lib), (str))

int __ERR_load_ERR_strings(__reg("a6") struct Library * ) = "\tjsr\t-4080(a6)";
#define ERR_load_ERR_strings() __ERR_load_ERR_strings(AmiSSLBase)

void __OBSOLETE_ERR_load_crypto_strings(__reg("a6") struct Library * ) = "\tjsr\t-4086(a6)";
#define OBSOLETE_ERR_load_crypto_strings() __OBSOLETE_ERR_load_crypto_strings(AmiSSLBase)

ERR_STATE * __ERR_get_state(__reg("a6") struct Library * ) = "\tjsr\t-4104(a6)";
#define ERR_get_state() __ERR_get_state(AmiSSLBase)

int __ERR_get_next_error_library(__reg("a6") struct Library * ) = "\tjsr\t-4128(a6)";
#define ERR_get_next_error_library() __ERR_get_next_error_library(AmiSSLBase)

void __OBSOLETE_EVP_MD_CTX_init(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx ) = "\tjsr\t-4146(a6)";
#define OBSOLETE_EVP_MD_CTX_init(ctx) __OBSOLETE_EVP_MD_CTX_init(AmiSSLBase, (ctx))

EVP_MD_CTX * __OBSOLETE_EVP_MD_CTX_create(__reg("a6") struct Library * ) = "\tjsr\t-4158(a6)";
#define OBSOLETE_EVP_MD_CTX_create() __OBSOLETE_EVP_MD_CTX_create(AmiSSLBase)

void __OBSOLETE_EVP_MD_CTX_destroy(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx ) = "\tjsr\t-4164(a6)";
#define OBSOLETE_EVP_MD_CTX_destroy(ctx) __OBSOLETE_EVP_MD_CTX_destroy(AmiSSLBase, (ctx))

int __EVP_MD_CTX_copy_ex(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * out , __reg("a1") const EVP_MD_CTX * in ) = "\tjsr\t-4170(a6)";
#define EVP_MD_CTX_copy_ex(out, in) __EVP_MD_CTX_copy_ex(AmiSSLBase, (out), (in))

int __EVP_DigestInit_ex(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") const EVP_MD * type , __reg("a2") ENGINE * impl ) = "\tjsr\t-4176(a6)";
#define EVP_DigestInit_ex(ctx, type, impl) __EVP_DigestInit_ex(AmiSSLBase, (ctx), (type), (impl))

int __EVP_DigestUpdate(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") const void * d , __reg("d0") unsigned int cnt ) = "\tjsr\t-4182(a6)";
#define EVP_DigestUpdate(ctx, d, cnt) __EVP_DigestUpdate(AmiSSLBase, (ctx), (d), (cnt))

int __EVP_DigestFinal_ex(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") unsigned char * md , __reg("a2") unsigned int * s ) = "\tjsr\t-4188(a6)";
#define EVP_DigestFinal_ex(ctx, md, s) __EVP_DigestFinal_ex(AmiSSLBase, (ctx), (md), (s))

int __EVP_Digest(__reg("a6") struct Library * , __reg("a0") const void * data , __reg("d0") size_t count , __reg("a1") unsigned char * md , __reg("a2") unsigned int * size , __reg("a3") const EVP_MD * type , __reg("d1") ENGINE * impl ) = "\tjsr\t-4194(a6)";
#define EVP_Digest(data, count, md, size, type, impl) __EVP_Digest(AmiSSLBase, (data), (count), (md), (size), (type), (impl))

int __EVP_MD_CTX_copy(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * out , __reg("a1") const EVP_MD_CTX * in ) = "\tjsr\t-4200(a6)";
#define EVP_MD_CTX_copy(out, in) __EVP_MD_CTX_copy(AmiSSLBase, (out), (in))

int __EVP_DigestInit(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") const EVP_MD * type ) = "\tjsr\t-4206(a6)";
#define EVP_DigestInit(ctx, type) __EVP_DigestInit(AmiSSLBase, (ctx), (type))

int __EVP_DigestFinal(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") unsigned char * md , __reg("a2") unsigned int * s ) = "\tjsr\t-4212(a6)";
#define EVP_DigestFinal(ctx, md, s) __EVP_DigestFinal(AmiSSLBase, (ctx), (md), (s))

int __EVP_read_pw_string(__reg("a6") struct Library * , __reg("a0") char * buf , __reg("d0") int length , __reg("a1") const char * prompt , __reg("d1") int verify ) = "\tjsr\t-4218(a6)";
#define EVP_read_pw_string(buf, length, prompt, verify) __EVP_read_pw_string(AmiSSLBase, (buf), (length), (prompt), (verify))

void __EVP_set_pw_prompt(__reg("a6") struct Library * , __reg("a0") const char * prompt ) = "\tjsr\t-4224(a6)";
#define EVP_set_pw_prompt(prompt) __EVP_set_pw_prompt(AmiSSLBase, (prompt))

char * __EVP_get_pw_prompt(__reg("a6") struct Library * ) = "\tjsr\t-4230(a6)";
#define EVP_get_pw_prompt() __EVP_get_pw_prompt(AmiSSLBase)

int __EVP_BytesToKey(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * type , __reg("a1") const EVP_MD * md , __reg("a2") const unsigned char * salt , __reg("a3") const unsigned char * data , __reg("d0") int datal , __reg("d1") int count , __reg("d2") unsigned char * key , __reg("d3") unsigned char * iv ) = "\tjsr\t-4236(a6)";
#define EVP_BytesToKey(type, md, salt, data, datal, count, key, iv) __EVP_BytesToKey(AmiSSLBase, (type), (md), (salt), (data), (datal), (count), (key), (iv))

int __EVP_EncryptInit(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const EVP_CIPHER * cipher , __reg("a2") const unsigned char * key , __reg("a3") const unsigned char * iv ) = "\tjsr\t-4242(a6)";
#define EVP_EncryptInit(ctx, cipher, key, iv) __EVP_EncryptInit(AmiSSLBase, (ctx), (cipher), (key), (iv))

int __EVP_EncryptInit_ex(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const EVP_CIPHER * cipher , __reg("a2") ENGINE * impl , __reg("a3") const unsigned char * key , __reg("d0") const unsigned char * iv ) = "\tjsr\t-4248(a6)";
#define EVP_EncryptInit_ex(ctx, cipher, impl, key, iv) __EVP_EncryptInit_ex(AmiSSLBase, (ctx), (cipher), (impl), (key), (iv))

int __EVP_EncryptUpdate(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") int * outl , __reg("a3") const unsigned char * in , __reg("d0") int inl ) = "\tjsr\t-4254(a6)";
#define EVP_EncryptUpdate(ctx, out, outl, in, inl) __EVP_EncryptUpdate(AmiSSLBase, (ctx), (out), (outl), (in), (inl))

int __EVP_EncryptFinal_ex(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") int * outl ) = "\tjsr\t-4260(a6)";
#define EVP_EncryptFinal_ex(ctx, out, outl) __EVP_EncryptFinal_ex(AmiSSLBase, (ctx), (out), (outl))

int __EVP_EncryptFinal(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") int * outl ) = "\tjsr\t-4266(a6)";
#define EVP_EncryptFinal(ctx, out, outl) __EVP_EncryptFinal(AmiSSLBase, (ctx), (out), (outl))

int __EVP_DecryptInit(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const EVP_CIPHER * cipher , __reg("a2") const unsigned char * key , __reg("a3") const unsigned char * iv ) = "\tjsr\t-4272(a6)";
#define EVP_DecryptInit(ctx, cipher, key, iv) __EVP_DecryptInit(AmiSSLBase, (ctx), (cipher), (key), (iv))

int __EVP_DecryptInit_ex(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const EVP_CIPHER * cipher , __reg("a2") ENGINE * impl , __reg("a3") const unsigned char * key , __reg("d0") const unsigned char * iv ) = "\tjsr\t-4278(a6)";
#define EVP_DecryptInit_ex(ctx, cipher, impl, key, iv) __EVP_DecryptInit_ex(AmiSSLBase, (ctx), (cipher), (impl), (key), (iv))

int __EVP_DecryptUpdate(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") int * outl , __reg("a3") const unsigned char * in , __reg("d0") int inl ) = "\tjsr\t-4284(a6)";
#define EVP_DecryptUpdate(ctx, out, outl, in, inl) __EVP_DecryptUpdate(AmiSSLBase, (ctx), (out), (outl), (in), (inl))

int __EVP_DecryptFinal(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * outm , __reg("a2") int * outl ) = "\tjsr\t-4290(a6)";
#define EVP_DecryptFinal(ctx, outm, outl) __EVP_DecryptFinal(AmiSSLBase, (ctx), (outm), (outl))

int __EVP_DecryptFinal_ex(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * outm , __reg("a2") int * outl ) = "\tjsr\t-4296(a6)";
#define EVP_DecryptFinal_ex(ctx, outm, outl) __EVP_DecryptFinal_ex(AmiSSLBase, (ctx), (outm), (outl))

int __EVP_CipherInit(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const EVP_CIPHER * cipher , __reg("a2") const unsigned char * key , __reg("a3") const unsigned char * iv , __reg("d0") int enc ) = "\tjsr\t-4302(a6)";
#define EVP_CipherInit(ctx, cipher, key, iv, enc) __EVP_CipherInit(AmiSSLBase, (ctx), (cipher), (key), (iv), (enc))

int __EVP_CipherInit_ex(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const EVP_CIPHER * cipher , __reg("a2") ENGINE * impl , __reg("a3") const unsigned char * key , __reg("d0") const unsigned char * iv , __reg("d1") int enc ) = "\tjsr\t-4308(a6)";
#define EVP_CipherInit_ex(ctx, cipher, impl, key, iv, enc) __EVP_CipherInit_ex(AmiSSLBase, (ctx), (cipher), (impl), (key), (iv), (enc))

int __EVP_CipherUpdate(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") int * outl , __reg("a3") const unsigned char * in , __reg("d0") int inl ) = "\tjsr\t-4314(a6)";
#define EVP_CipherUpdate(ctx, out, outl, in, inl) __EVP_CipherUpdate(AmiSSLBase, (ctx), (out), (outl), (in), (inl))

int __EVP_CipherFinal(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * outm , __reg("a2") int * outl ) = "\tjsr\t-4320(a6)";
#define EVP_CipherFinal(ctx, outm, outl) __EVP_CipherFinal(AmiSSLBase, (ctx), (outm), (outl))

int __EVP_CipherFinal_ex(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * outm , __reg("a2") int * outl ) = "\tjsr\t-4326(a6)";
#define EVP_CipherFinal_ex(ctx, outm, outl) __EVP_CipherFinal_ex(AmiSSLBase, (ctx), (outm), (outl))

int __EVP_SignFinal(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") unsigned char * md , __reg("a2") unsigned int * s , __reg("a3") EVP_PKEY * pkey ) = "\tjsr\t-4332(a6)";
#define EVP_SignFinal(ctx, md, s, pkey) __EVP_SignFinal(AmiSSLBase, (ctx), (md), (s), (pkey))

int __EVP_VerifyFinal(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") const unsigned char * sigbuf , __reg("d0") unsigned int siglen , __reg("a2") EVP_PKEY * pkey ) = "\tjsr\t-4338(a6)";
#define EVP_VerifyFinal(ctx, sigbuf, siglen, pkey) __EVP_VerifyFinal(AmiSSLBase, (ctx), (sigbuf), (siglen), (pkey))

int __EVP_OpenInit(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const EVP_CIPHER * type , __reg("a2") const unsigned char * ek , __reg("d0") int ekl , __reg("a3") const unsigned char * iv , __reg("d1") EVP_PKEY * priv ) = "\tjsr\t-4344(a6)";
#define EVP_OpenInit(ctx, type, ek, ekl, iv, priv) __EVP_OpenInit(AmiSSLBase, (ctx), (type), (ek), (ekl), (iv), (priv))

int __EVP_OpenFinal(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") int * outl ) = "\tjsr\t-4350(a6)";
#define EVP_OpenFinal(ctx, out, outl) __EVP_OpenFinal(AmiSSLBase, (ctx), (out), (outl))

int __EVP_SealInit(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const EVP_CIPHER * type , __reg("a2") unsigned char ** ek , __reg("a3") int * ekl , __reg("d0") unsigned char * iv , __reg("d1") EVP_PKEY ** pubk , __reg("d2") int npubk ) = "\tjsr\t-4356(a6)";
#define EVP_SealInit(ctx, type, ek, ekl, iv, pubk, npubk) __EVP_SealInit(AmiSSLBase, (ctx), (type), (ek), (ekl), (iv), (pubk), (npubk))

int __EVP_SealFinal(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") int * outl ) = "\tjsr\t-4362(a6)";
#define EVP_SealFinal(ctx, out, outl) __EVP_SealFinal(AmiSSLBase, (ctx), (out), (outl))

void __EVP_EncodeInit(__reg("a6") struct Library * , __reg("a0") EVP_ENCODE_CTX * ctx ) = "\tjsr\t-4368(a6)";
#define EVP_EncodeInit(ctx) __EVP_EncodeInit(AmiSSLBase, (ctx))

int __EVP_EncodeUpdate(__reg("a6") struct Library * , __reg("a0") EVP_ENCODE_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") int * outl , __reg("a3") const unsigned char * in , __reg("d0") int inl ) = "\tjsr\t-4374(a6)";
#define EVP_EncodeUpdate(ctx, out, outl, in, inl) __EVP_EncodeUpdate(AmiSSLBase, (ctx), (out), (outl), (in), (inl))

void __EVP_EncodeFinal(__reg("a6") struct Library * , __reg("a0") EVP_ENCODE_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") int * outl ) = "\tjsr\t-4380(a6)";
#define EVP_EncodeFinal(ctx, out, outl) __EVP_EncodeFinal(AmiSSLBase, (ctx), (out), (outl))

int __EVP_EncodeBlock(__reg("a6") struct Library * , __reg("a0") unsigned char * t , __reg("a1") const unsigned char * f , __reg("d0") int n ) = "\tjsr\t-4386(a6)";
#define EVP_EncodeBlock(t, f, n) __EVP_EncodeBlock(AmiSSLBase, (t), (f), (n))

void __EVP_DecodeInit(__reg("a6") struct Library * , __reg("a0") EVP_ENCODE_CTX * ctx ) = "\tjsr\t-4392(a6)";
#define EVP_DecodeInit(ctx) __EVP_DecodeInit(AmiSSLBase, (ctx))

int __EVP_DecodeUpdate(__reg("a6") struct Library * , __reg("a0") EVP_ENCODE_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") int * outl , __reg("a3") const unsigned char * in , __reg("d0") int inl ) = "\tjsr\t-4398(a6)";
#define EVP_DecodeUpdate(ctx, out, outl, in, inl) __EVP_DecodeUpdate(AmiSSLBase, (ctx), (out), (outl), (in), (inl))

int __EVP_DecodeFinal(__reg("a6") struct Library * , __reg("a0") EVP_ENCODE_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") int * outl ) = "\tjsr\t-4404(a6)";
#define EVP_DecodeFinal(ctx, out, outl) __EVP_DecodeFinal(AmiSSLBase, (ctx), (out), (outl))

int __EVP_DecodeBlock(__reg("a6") struct Library * , __reg("a0") unsigned char * t , __reg("a1") const unsigned char * f , __reg("d0") int n ) = "\tjsr\t-4410(a6)";
#define EVP_DecodeBlock(t, f, n) __EVP_DecodeBlock(AmiSSLBase, (t), (f), (n))

void __OBSOLETE_EVP_CIPHER_CTX_init(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * a ) = "\tjsr\t-4416(a6)";
#define OBSOLETE_EVP_CIPHER_CTX_init(a) __OBSOLETE_EVP_CIPHER_CTX_init(AmiSSLBase, (a))

int __OBSOLETE_EVP_CIPHER_CTX_cleanup(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * a ) = "\tjsr\t-4422(a6)";
#define OBSOLETE_EVP_CIPHER_CTX_cleanup(a) __OBSOLETE_EVP_CIPHER_CTX_cleanup(AmiSSLBase, (a))

int __EVP_CIPHER_CTX_set_key_length(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * x , __reg("d0") int keylen ) = "\tjsr\t-4428(a6)";
#define EVP_CIPHER_CTX_set_key_length(x, keylen) __EVP_CIPHER_CTX_set_key_length(AmiSSLBase, (x), (keylen))

int __EVP_CIPHER_CTX_set_padding(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * c , __reg("d0") int pad ) = "\tjsr\t-4434(a6)";
#define EVP_CIPHER_CTX_set_padding(c, pad) __EVP_CIPHER_CTX_set_padding(AmiSSLBase, (c), (pad))

int __EVP_CIPHER_CTX_ctrl(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("d0") int type , __reg("d1") int arg , __reg("a1") void * ptr ) = "\tjsr\t-4440(a6)";
#define EVP_CIPHER_CTX_ctrl(ctx, type, arg, ptr) __EVP_CIPHER_CTX_ctrl(AmiSSLBase, (ctx), (type), (arg), (ptr))

const BIO_METHOD * __BIO_f_md(__reg("a6") struct Library * ) = "\tjsr\t-4446(a6)";
#define BIO_f_md() __BIO_f_md(AmiSSLBase)

const BIO_METHOD * __BIO_f_base64(__reg("a6") struct Library * ) = "\tjsr\t-4452(a6)";
#define BIO_f_base64() __BIO_f_base64(AmiSSLBase)

const BIO_METHOD * __BIO_f_cipher(__reg("a6") struct Library * ) = "\tjsr\t-4458(a6)";
#define BIO_f_cipher() __BIO_f_cipher(AmiSSLBase)

const BIO_METHOD * __BIO_f_reliable(__reg("a6") struct Library * ) = "\tjsr\t-4464(a6)";
#define BIO_f_reliable() __BIO_f_reliable(AmiSSLBase)

int __BIO_set_cipher(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") const EVP_CIPHER * c , __reg("a2") const unsigned char * k , __reg("a3") const unsigned char * i , __reg("d0") int enc ) = "\tjsr\t-4470(a6)";
#define BIO_set_cipher(b, c, k, i, enc) __BIO_set_cipher(AmiSSLBase, (b), (c), (k), (i), (enc))

const EVP_MD * __EVP_md_null(__reg("a6") struct Library * ) = "\tjsr\t-4476(a6)";
#define EVP_md_null() __EVP_md_null(AmiSSLBase)

const EVP_MD * __EVP_md2(__reg("a6") struct Library * ) = "\tjsr\t-4482(a6)";
#define EVP_md2() __EVP_md2(AmiSSLBase)

const EVP_MD * __EVP_md4(__reg("a6") struct Library * ) = "\tjsr\t-4488(a6)";
#define EVP_md4() __EVP_md4(AmiSSLBase)

const EVP_MD * __EVP_md5(__reg("a6") struct Library * ) = "\tjsr\t-4494(a6)";
#define EVP_md5() __EVP_md5(AmiSSLBase)

const EVP_MD * __EVP_sha1(__reg("a6") struct Library * ) = "\tjsr\t-4506(a6)";
#define EVP_sha1() __EVP_sha1(AmiSSLBase)

const EVP_MD * __EVP_mdc2(__reg("a6") struct Library * ) = "\tjsr\t-4524(a6)";
#define EVP_mdc2() __EVP_mdc2(AmiSSLBase)

const EVP_MD * __EVP_ripemd160(__reg("a6") struct Library * ) = "\tjsr\t-4530(a6)";
#define EVP_ripemd160() __EVP_ripemd160(AmiSSLBase)

const EVP_CIPHER * __EVP_enc_null(__reg("a6") struct Library * ) = "\tjsr\t-4536(a6)";
#define EVP_enc_null() __EVP_enc_null(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ecb(__reg("a6") struct Library * ) = "\tjsr\t-4542(a6)";
#define EVP_des_ecb() __EVP_des_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede(__reg("a6") struct Library * ) = "\tjsr\t-4548(a6)";
#define EVP_des_ede() __EVP_des_ede(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede3(__reg("a6") struct Library * ) = "\tjsr\t-4554(a6)";
#define EVP_des_ede3() __EVP_des_ede3(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede_ecb(__reg("a6") struct Library * ) = "\tjsr\t-4560(a6)";
#define EVP_des_ede_ecb() __EVP_des_ede_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede3_ecb(__reg("a6") struct Library * ) = "\tjsr\t-4566(a6)";
#define EVP_des_ede3_ecb() __EVP_des_ede3_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_des_cfb64(__reg("a6") struct Library * ) = "\tjsr\t-4572(a6)";
#define EVP_des_cfb64() __EVP_des_cfb64(AmiSSLBase)

const EVP_CIPHER * __EVP_des_cfb1(__reg("a6") struct Library * ) = "\tjsr\t-4578(a6)";
#define EVP_des_cfb1() __EVP_des_cfb1(AmiSSLBase)

const EVP_CIPHER * __EVP_des_cfb8(__reg("a6") struct Library * ) = "\tjsr\t-4584(a6)";
#define EVP_des_cfb8() __EVP_des_cfb8(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede_cfb64(__reg("a6") struct Library * ) = "\tjsr\t-4590(a6)";
#define EVP_des_ede_cfb64() __EVP_des_ede_cfb64(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede3_cfb64(__reg("a6") struct Library * ) = "\tjsr\t-4596(a6)";
#define EVP_des_ede3_cfb64() __EVP_des_ede3_cfb64(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede3_cfb1(__reg("a6") struct Library * ) = "\tjsr\t-4602(a6)";
#define EVP_des_ede3_cfb1() __EVP_des_ede3_cfb1(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede3_cfb8(__reg("a6") struct Library * ) = "\tjsr\t-4608(a6)";
#define EVP_des_ede3_cfb8() __EVP_des_ede3_cfb8(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ofb(__reg("a6") struct Library * ) = "\tjsr\t-4614(a6)";
#define EVP_des_ofb() __EVP_des_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede_ofb(__reg("a6") struct Library * ) = "\tjsr\t-4620(a6)";
#define EVP_des_ede_ofb() __EVP_des_ede_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede3_ofb(__reg("a6") struct Library * ) = "\tjsr\t-4626(a6)";
#define EVP_des_ede3_ofb() __EVP_des_ede3_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_des_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4632(a6)";
#define EVP_des_cbc() __EVP_des_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4638(a6)";
#define EVP_des_ede_cbc() __EVP_des_ede_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede3_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4644(a6)";
#define EVP_des_ede3_cbc() __EVP_des_ede3_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_desx_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4650(a6)";
#define EVP_desx_cbc() __EVP_desx_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_rc4(__reg("a6") struct Library * ) = "\tjsr\t-4656(a6)";
#define EVP_rc4() __EVP_rc4(AmiSSLBase)

const EVP_CIPHER * __EVP_rc4_40(__reg("a6") struct Library * ) = "\tjsr\t-4662(a6)";
#define EVP_rc4_40() __EVP_rc4_40(AmiSSLBase)

const EVP_CIPHER * __EVP_idea_ecb(__reg("a6") struct Library * ) = "\tjsr\t-4668(a6)";
#define EVP_idea_ecb() __EVP_idea_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_idea_cfb64(__reg("a6") struct Library * ) = "\tjsr\t-4674(a6)";
#define EVP_idea_cfb64() __EVP_idea_cfb64(AmiSSLBase)

const EVP_CIPHER * __EVP_idea_ofb(__reg("a6") struct Library * ) = "\tjsr\t-4680(a6)";
#define EVP_idea_ofb() __EVP_idea_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_idea_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4686(a6)";
#define EVP_idea_cbc() __EVP_idea_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_rc2_ecb(__reg("a6") struct Library * ) = "\tjsr\t-4692(a6)";
#define EVP_rc2_ecb() __EVP_rc2_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_rc2_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4698(a6)";
#define EVP_rc2_cbc() __EVP_rc2_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_rc2_40_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4704(a6)";
#define EVP_rc2_40_cbc() __EVP_rc2_40_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_rc2_64_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4710(a6)";
#define EVP_rc2_64_cbc() __EVP_rc2_64_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_rc2_cfb64(__reg("a6") struct Library * ) = "\tjsr\t-4716(a6)";
#define EVP_rc2_cfb64() __EVP_rc2_cfb64(AmiSSLBase)

const EVP_CIPHER * __EVP_rc2_ofb(__reg("a6") struct Library * ) = "\tjsr\t-4722(a6)";
#define EVP_rc2_ofb() __EVP_rc2_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_bf_ecb(__reg("a6") struct Library * ) = "\tjsr\t-4728(a6)";
#define EVP_bf_ecb() __EVP_bf_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_bf_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4734(a6)";
#define EVP_bf_cbc() __EVP_bf_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_bf_cfb64(__reg("a6") struct Library * ) = "\tjsr\t-4740(a6)";
#define EVP_bf_cfb64() __EVP_bf_cfb64(AmiSSLBase)

const EVP_CIPHER * __EVP_bf_ofb(__reg("a6") struct Library * ) = "\tjsr\t-4746(a6)";
#define EVP_bf_ofb() __EVP_bf_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_cast5_ecb(__reg("a6") struct Library * ) = "\tjsr\t-4752(a6)";
#define EVP_cast5_ecb() __EVP_cast5_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_cast5_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4758(a6)";
#define EVP_cast5_cbc() __EVP_cast5_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_cast5_cfb64(__reg("a6") struct Library * ) = "\tjsr\t-4764(a6)";
#define EVP_cast5_cfb64() __EVP_cast5_cfb64(AmiSSLBase)

const EVP_CIPHER * __EVP_cast5_ofb(__reg("a6") struct Library * ) = "\tjsr\t-4770(a6)";
#define EVP_cast5_ofb() __EVP_cast5_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_rc5_32_12_16_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4776(a6)";
#define EVP_rc5_32_12_16_cbc() __EVP_rc5_32_12_16_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_rc5_32_12_16_ecb(__reg("a6") struct Library * ) = "\tjsr\t-4782(a6)";
#define EVP_rc5_32_12_16_ecb() __EVP_rc5_32_12_16_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_rc5_32_12_16_cfb64(__reg("a6") struct Library * ) = "\tjsr\t-4788(a6)";
#define EVP_rc5_32_12_16_cfb64() __EVP_rc5_32_12_16_cfb64(AmiSSLBase)

const EVP_CIPHER * __EVP_rc5_32_12_16_ofb(__reg("a6") struct Library * ) = "\tjsr\t-4794(a6)";
#define EVP_rc5_32_12_16_ofb() __EVP_rc5_32_12_16_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_ecb(__reg("a6") struct Library * ) = "\tjsr\t-4800(a6)";
#define EVP_aes_128_ecb() __EVP_aes_128_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4806(a6)";
#define EVP_aes_128_cbc() __EVP_aes_128_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_cfb1(__reg("a6") struct Library * ) = "\tjsr\t-4812(a6)";
#define EVP_aes_128_cfb1() __EVP_aes_128_cfb1(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_cfb8(__reg("a6") struct Library * ) = "\tjsr\t-4818(a6)";
#define EVP_aes_128_cfb8() __EVP_aes_128_cfb8(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_cfb128(__reg("a6") struct Library * ) = "\tjsr\t-4824(a6)";
#define EVP_aes_128_cfb128() __EVP_aes_128_cfb128(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_ofb(__reg("a6") struct Library * ) = "\tjsr\t-4830(a6)";
#define EVP_aes_128_ofb() __EVP_aes_128_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_192_ecb(__reg("a6") struct Library * ) = "\tjsr\t-4836(a6)";
#define EVP_aes_192_ecb() __EVP_aes_192_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_192_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4842(a6)";
#define EVP_aes_192_cbc() __EVP_aes_192_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_192_cfb1(__reg("a6") struct Library * ) = "\tjsr\t-4848(a6)";
#define EVP_aes_192_cfb1() __EVP_aes_192_cfb1(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_192_cfb8(__reg("a6") struct Library * ) = "\tjsr\t-4854(a6)";
#define EVP_aes_192_cfb8() __EVP_aes_192_cfb8(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_192_cfb128(__reg("a6") struct Library * ) = "\tjsr\t-4860(a6)";
#define EVP_aes_192_cfb128() __EVP_aes_192_cfb128(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_192_ofb(__reg("a6") struct Library * ) = "\tjsr\t-4866(a6)";
#define EVP_aes_192_ofb() __EVP_aes_192_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_ecb(__reg("a6") struct Library * ) = "\tjsr\t-4872(a6)";
#define EVP_aes_256_ecb() __EVP_aes_256_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_cbc(__reg("a6") struct Library * ) = "\tjsr\t-4878(a6)";
#define EVP_aes_256_cbc() __EVP_aes_256_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_cfb1(__reg("a6") struct Library * ) = "\tjsr\t-4884(a6)";
#define EVP_aes_256_cfb1() __EVP_aes_256_cfb1(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_cfb8(__reg("a6") struct Library * ) = "\tjsr\t-4890(a6)";
#define EVP_aes_256_cfb8() __EVP_aes_256_cfb8(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_cfb128(__reg("a6") struct Library * ) = "\tjsr\t-4896(a6)";
#define EVP_aes_256_cfb128() __EVP_aes_256_cfb128(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_ofb(__reg("a6") struct Library * ) = "\tjsr\t-4902(a6)";
#define EVP_aes_256_ofb() __EVP_aes_256_ofb(AmiSSLBase)

void __OBSOLETE_OPENSSL_add_all_algorithms_noconf(__reg("a6") struct Library * ) = "\tjsr\t-4908(a6)";
#define OBSOLETE_OPENSSL_add_all_algorithms_noconf() __OBSOLETE_OPENSSL_add_all_algorithms_noconf(AmiSSLBase)

void __OBSOLETE_OPENSSL_add_all_algorithms_conf(__reg("a6") struct Library * ) = "\tjsr\t-4914(a6)";
#define OBSOLETE_OPENSSL_add_all_algorithms_conf() __OBSOLETE_OPENSSL_add_all_algorithms_conf(AmiSSLBase)

void __OBSOLETE_OpenSSL_add_all_ciphers(__reg("a6") struct Library * ) = "\tjsr\t-4920(a6)";
#define OBSOLETE_OpenSSL_add_all_ciphers() __OBSOLETE_OpenSSL_add_all_ciphers(AmiSSLBase)

void __OBSOLETE_OpenSSL_add_all_digests(__reg("a6") struct Library * ) = "\tjsr\t-4926(a6)";
#define OBSOLETE_OpenSSL_add_all_digests() __OBSOLETE_OpenSSL_add_all_digests(AmiSSLBase)

int __EVP_add_cipher(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) = "\tjsr\t-4932(a6)";
#define EVP_add_cipher(cipher) __EVP_add_cipher(AmiSSLBase, (cipher))

int __EVP_add_digest(__reg("a6") struct Library * , __reg("a0") const EVP_MD * digest ) = "\tjsr\t-4938(a6)";
#define EVP_add_digest(digest) __EVP_add_digest(AmiSSLBase, (digest))

const EVP_CIPHER * __EVP_get_cipherbyname(__reg("a6") struct Library * , __reg("a0") const char * name ) = "\tjsr\t-4944(a6)";
#define EVP_get_cipherbyname(name) __EVP_get_cipherbyname(AmiSSLBase, (name))

const EVP_MD * __EVP_get_digestbyname(__reg("a6") struct Library * , __reg("a0") const char * name ) = "\tjsr\t-4950(a6)";
#define EVP_get_digestbyname(name) __EVP_get_digestbyname(AmiSSLBase, (name))

int __EVP_PKEY_decrypt(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") size_t * outlen , __reg("a3") const unsigned char * in , __reg("d0") size_t inlen ) = "\tjsr\t-4962(a6)";
#define EVP_PKEY_decrypt(ctx, out, outlen, in, inlen) __EVP_PKEY_decrypt(AmiSSLBase, (ctx), (out), (outlen), (in), (inlen))

int __EVP_PKEY_encrypt(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") size_t * outlen , __reg("a3") const unsigned char * in , __reg("d0") size_t inlen ) = "\tjsr\t-4968(a6)";
#define EVP_PKEY_encrypt(ctx, out, outlen, in, inlen) __EVP_PKEY_encrypt(AmiSSLBase, (ctx), (out), (outlen), (in), (inlen))

int __EVP_PKEY_type(__reg("a6") struct Library * , __reg("d0") int type ) = "\tjsr\t-4974(a6)";
#define EVP_PKEY_type(type) __EVP_PKEY_type(AmiSSLBase, (type))

int __EVP_PKEY_get_bits(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-4980(a6)";
#define EVP_PKEY_get_bits(pkey) __EVP_PKEY_get_bits(AmiSSLBase, (pkey))

int __EVP_PKEY_get_size(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-4986(a6)";
#define EVP_PKEY_get_size(pkey) __EVP_PKEY_get_size(AmiSSLBase, (pkey))

int __EVP_PKEY_assign(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("d0") int type , __reg("a1") void * key ) = "\tjsr\t-4992(a6)";
#define EVP_PKEY_assign(pkey, type, key) __EVP_PKEY_assign(AmiSSLBase, (pkey), (type), (key))

int __EVP_PKEY_set1_RSA(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") struct rsa_st * key ) = "\tjsr\t-4998(a6)";
#define EVP_PKEY_set1_RSA(pkey, key) __EVP_PKEY_set1_RSA(AmiSSLBase, (pkey), (key))

struct rsa_st * __EVP_PKEY_get1_RSA(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey ) = "\tjsr\t-5004(a6)";
#define EVP_PKEY_get1_RSA(pkey) __EVP_PKEY_get1_RSA(AmiSSLBase, (pkey))

int __EVP_PKEY_set1_DSA(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") struct dsa_st * key ) = "\tjsr\t-5010(a6)";
#define EVP_PKEY_set1_DSA(pkey, key) __EVP_PKEY_set1_DSA(AmiSSLBase, (pkey), (key))

struct dsa_st * __EVP_PKEY_get1_DSA(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey ) = "\tjsr\t-5016(a6)";
#define EVP_PKEY_get1_DSA(pkey) __EVP_PKEY_get1_DSA(AmiSSLBase, (pkey))

int __EVP_PKEY_set1_DH(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") struct dh_st * key ) = "\tjsr\t-5022(a6)";
#define EVP_PKEY_set1_DH(pkey, key) __EVP_PKEY_set1_DH(AmiSSLBase, (pkey), (key))

struct dh_st * __EVP_PKEY_get1_DH(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey ) = "\tjsr\t-5028(a6)";
#define EVP_PKEY_get1_DH(pkey) __EVP_PKEY_get1_DH(AmiSSLBase, (pkey))

EVP_PKEY * __EVP_PKEY_new(__reg("a6") struct Library * ) = "\tjsr\t-5034(a6)";
#define EVP_PKEY_new() __EVP_PKEY_new(AmiSSLBase)

void __EVP_PKEY_free(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey ) = "\tjsr\t-5040(a6)";
#define EVP_PKEY_free(pkey) __EVP_PKEY_free(AmiSSLBase, (pkey))

EVP_PKEY * __d2i_PublicKey(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") EVP_PKEY ** a , __reg("a1") const unsigned char ** pp , __reg("d1") long length ) = "\tjsr\t-5046(a6)";
#define d2i_PublicKey(type, a, pp, length) __d2i_PublicKey(AmiSSLBase, (type), (a), (pp), (length))

int __i2d_PublicKey(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-5052(a6)";
#define i2d_PublicKey(a, pp) __i2d_PublicKey(AmiSSLBase, (a), (pp))

EVP_PKEY * __d2i_PrivateKey(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") EVP_PKEY ** a , __reg("a1") const unsigned char ** pp , __reg("d1") long length ) = "\tjsr\t-5058(a6)";
#define d2i_PrivateKey(type, a, pp, length) __d2i_PrivateKey(AmiSSLBase, (type), (a), (pp), (length))

EVP_PKEY * __d2i_AutoPrivateKey(__reg("a6") struct Library * , __reg("a0") EVP_PKEY ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-5064(a6)";
#define d2i_AutoPrivateKey(a, pp, length) __d2i_AutoPrivateKey(AmiSSLBase, (a), (pp), (length))

int __i2d_PrivateKey(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-5070(a6)";
#define i2d_PrivateKey(a, pp) __i2d_PrivateKey(AmiSSLBase, (a), (pp))

int __EVP_PKEY_copy_parameters(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * to , __reg("a1") const EVP_PKEY * from ) = "\tjsr\t-5076(a6)";
#define EVP_PKEY_copy_parameters(to, from) __EVP_PKEY_copy_parameters(AmiSSLBase, (to), (from))

int __EVP_PKEY_missing_parameters(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-5082(a6)";
#define EVP_PKEY_missing_parameters(pkey) __EVP_PKEY_missing_parameters(AmiSSLBase, (pkey))

int __EVP_PKEY_save_parameters(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("d0") int mode ) = "\tjsr\t-5088(a6)";
#define EVP_PKEY_save_parameters(pkey, mode) __EVP_PKEY_save_parameters(AmiSSLBase, (pkey), (mode))

int __EVP_PKEY_cmp_parameters(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * a , __reg("a1") const EVP_PKEY * b ) = "\tjsr\t-5094(a6)";
#define EVP_PKEY_cmp_parameters(a, b) __EVP_PKEY_cmp_parameters(AmiSSLBase, (a), (b))

int __EVP_CIPHER_get_type(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * ctx ) = "\tjsr\t-5100(a6)";
#define EVP_CIPHER_get_type(ctx) __EVP_CIPHER_get_type(AmiSSLBase, (ctx))

int __EVP_CIPHER_param_to_asn1(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * c , __reg("a1") ASN1_TYPE * type ) = "\tjsr\t-5106(a6)";
#define EVP_CIPHER_param_to_asn1(c, type) __EVP_CIPHER_param_to_asn1(AmiSSLBase, (c), (type))

int __EVP_CIPHER_asn1_to_param(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * c , __reg("a1") ASN1_TYPE * type ) = "\tjsr\t-5112(a6)";
#define EVP_CIPHER_asn1_to_param(c, type) __EVP_CIPHER_asn1_to_param(AmiSSLBase, (c), (type))

int __EVP_CIPHER_set_asn1_iv(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * c , __reg("a1") ASN1_TYPE * type ) = "\tjsr\t-5118(a6)";
#define EVP_CIPHER_set_asn1_iv(c, type) __EVP_CIPHER_set_asn1_iv(AmiSSLBase, (c), (type))

int __EVP_CIPHER_get_asn1_iv(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * c , __reg("a1") ASN1_TYPE * type ) = "\tjsr\t-5124(a6)";
#define EVP_CIPHER_get_asn1_iv(c, type) __EVP_CIPHER_get_asn1_iv(AmiSSLBase, (c), (type))

int __PKCS5_PBE_keyivgen(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const char * pass , __reg("d0") int passlen , __reg("a2") ASN1_TYPE * param , __reg("a3") const EVP_CIPHER * cipher , __reg("d1") const EVP_MD * md , __reg("d2") int en_de ) = "\tjsr\t-5130(a6)";
#define PKCS5_PBE_keyivgen(ctx, pass, passlen, param, cipher, md, en_de) __PKCS5_PBE_keyivgen(AmiSSLBase, (ctx), (pass), (passlen), (param), (cipher), (md), (en_de))

int __PKCS5_PBKDF2_HMAC_SHA1(__reg("a6") struct Library * , __reg("a0") const char * pass , __reg("d0") int passlen , __reg("a1") const unsigned char * salt , __reg("d1") int saltlen , __reg("d2") int iter , __reg("d3") int keylen , __reg("a2") unsigned char * out ) = "\tjsr\t-5136(a6)";
#define PKCS5_PBKDF2_HMAC_SHA1(pass, passlen, salt, saltlen, iter, keylen, out) __PKCS5_PBKDF2_HMAC_SHA1(AmiSSLBase, (pass), (passlen), (salt), (saltlen), (iter), (keylen), (out))

int __PKCS5_v2_PBE_keyivgen(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const char * pass , __reg("d0") int passlen , __reg("a2") ASN1_TYPE * param , __reg("a3") const EVP_CIPHER * cipher , __reg("d1") const EVP_MD * md , __reg("d2") int en_de ) = "\tjsr\t-5142(a6)";
#define PKCS5_v2_PBE_keyivgen(ctx, pass, passlen, param, cipher, md, en_de) __PKCS5_v2_PBE_keyivgen(AmiSSLBase, (ctx), (pass), (passlen), (param), (cipher), (md), (en_de))

void __PKCS5_PBE_add(__reg("a6") struct Library * ) = "\tjsr\t-5148(a6)";
#define PKCS5_PBE_add() __PKCS5_PBE_add(AmiSSLBase)

int __EVP_PBE_CipherInit(__reg("a6") struct Library * , __reg("a0") ASN1_OBJECT * pbe_obj , __reg("a1") const char * pass , __reg("d0") int passlen , __reg("a2") ASN1_TYPE * param , __reg("a3") EVP_CIPHER_CTX * ctx , __reg("d1") int en_de ) = "\tjsr\t-5154(a6)";
#define EVP_PBE_CipherInit(pbe_obj, pass, passlen, param, ctx, en_de) __EVP_PBE_CipherInit(AmiSSLBase, (pbe_obj), (pass), (passlen), (param), (ctx), (en_de))

int __EVP_PBE_alg_add(__reg("a6") struct Library * , __reg("d0") int nid , __reg("a0") const EVP_CIPHER * cipher , __reg("a1") const EVP_MD * md , __reg("a2") EVP_PBE_KEYGEN * keygen ) = "\tjsr\t-5160(a6)";
#define EVP_PBE_alg_add(nid, cipher, md, keygen) __EVP_PBE_alg_add(AmiSSLBase, (nid), (cipher), (md), (keygen))

void __EVP_PBE_cleanup(__reg("a6") struct Library * ) = "\tjsr\t-5166(a6)";
#define EVP_PBE_cleanup() __EVP_PBE_cleanup(AmiSSLBase)

int __ERR_load_EVP_strings(__reg("a6") struct Library * ) = "\tjsr\t-5172(a6)";
#define ERR_load_EVP_strings() __ERR_load_EVP_strings(AmiSSLBase)

int __HMAC_Init(__reg("a6") struct Library * , __reg("a0") HMAC_CTX * ctx , __reg("a1") const void * key , __reg("d0") int len , __reg("a2") const EVP_MD * md ) = "\tjsr\t-5190(a6)";
#define HMAC_Init(ctx, key, len, md) __HMAC_Init(AmiSSLBase, (ctx), (key), (len), (md))

int __HMAC_Init_ex(__reg("a6") struct Library * , __reg("a0") HMAC_CTX * ctx , __reg("a1") const void * key , __reg("d0") int len , __reg("a2") const EVP_MD * md , __reg("a3") ENGINE * impl ) = "\tjsr\t-5196(a6)";
#define HMAC_Init_ex(ctx, key, len, md, impl) __HMAC_Init_ex(AmiSSLBase, (ctx), (key), (len), (md), (impl))

int __HMAC_Update(__reg("a6") struct Library * , __reg("a0") HMAC_CTX * ctx , __reg("a1") const unsigned char * data , __reg("d0") size_t len ) = "\tjsr\t-5202(a6)";
#define HMAC_Update(ctx, data, len) __HMAC_Update(AmiSSLBase, (ctx), (data), (len))

int __HMAC_Final(__reg("a6") struct Library * , __reg("a0") HMAC_CTX * ctx , __reg("a1") unsigned char * md , __reg("a2") unsigned int * len ) = "\tjsr\t-5208(a6)";
#define HMAC_Final(ctx, md, len) __HMAC_Final(AmiSSLBase, (ctx), (md), (len))

unsigned char * __HMAC(__reg("a6") struct Library * , __reg("a0") const EVP_MD * evp_md , __reg("a1") const void * key , __reg("d0") int key_len , __reg("a2") const unsigned char * data , __reg("d1") size_t data_len , __reg("a3") unsigned char * md , __reg("d2") unsigned int * md_len ) = "\tjsr\t-5214(a6)";
#define HMAC(evp_md, key, key_len, data, data_len, md, md_len) __HMAC(AmiSSLBase, (evp_md), (key), (key_len), (data), (data_len), (md), (md_len))

OPENSSL_LHASH * __OPENSSL_LH_new(__reg("a6") struct Library * , __reg("a0") OPENSSL_LH_HASHFUNC h , __reg("a1") OPENSSL_LH_COMPFUNC c ) = "\tjsr\t-5550(a6)";
#define OPENSSL_LH_new(h, c) __OPENSSL_LH_new(AmiSSLBase, (h), (c))

void __OPENSSL_LH_free(__reg("a6") struct Library * , __reg("a0") OPENSSL_LHASH * lh ) = "\tjsr\t-5556(a6)";
#define OPENSSL_LH_free(lh) __OPENSSL_LH_free(AmiSSLBase, (lh))

void * __OPENSSL_LH_insert(__reg("a6") struct Library * , __reg("a0") OPENSSL_LHASH * lh , __reg("a1") void * data ) = "\tjsr\t-5562(a6)";
#define OPENSSL_LH_insert(lh, data) __OPENSSL_LH_insert(AmiSSLBase, (lh), (data))

void * __OPENSSL_LH_delete(__reg("a6") struct Library * , __reg("a0") OPENSSL_LHASH * lh , __reg("a1") const void * data ) = "\tjsr\t-5568(a6)";
#define OPENSSL_LH_delete(lh, data) __OPENSSL_LH_delete(AmiSSLBase, (lh), (data))

void * __OPENSSL_LH_retrieve(__reg("a6") struct Library * , __reg("a0") OPENSSL_LHASH * lh , __reg("a1") const void * data ) = "\tjsr\t-5574(a6)";
#define OPENSSL_LH_retrieve(lh, data) __OPENSSL_LH_retrieve(AmiSSLBase, (lh), (data))

void __OPENSSL_LH_doall(__reg("a6") struct Library * , __reg("a0") OPENSSL_LHASH * lh , __reg("a1") OPENSSL_LH_DOALL_FUNC func ) = "\tjsr\t-5580(a6)";
#define OPENSSL_LH_doall(lh, func) __OPENSSL_LH_doall(AmiSSLBase, (lh), (func))

void __OPENSSL_LH_doall_arg(__reg("a6") struct Library * , __reg("a0") OPENSSL_LHASH * lh , __reg("a1") OPENSSL_LH_DOALL_FUNCARG func , __reg("a2") void * arg ) = "\tjsr\t-5586(a6)";
#define OPENSSL_LH_doall_arg(lh, func, arg) __OPENSSL_LH_doall_arg(AmiSSLBase, (lh), (func), (arg))

unsigned long __OPENSSL_LH_strhash(__reg("a6") struct Library * , __reg("a0") const char * c ) = "\tjsr\t-5592(a6)";
#define OPENSSL_LH_strhash(c) __OPENSSL_LH_strhash(AmiSSLBase, (c))

unsigned long __OPENSSL_LH_num_items(__reg("a6") struct Library * , __reg("a0") const OPENSSL_LHASH * lh ) = "\tjsr\t-5598(a6)";
#define OPENSSL_LH_num_items(lh) __OPENSSL_LH_num_items(AmiSSLBase, (lh))

void __OPENSSL_LH_stats_bio(__reg("a6") struct Library * , __reg("a0") const OPENSSL_LHASH * lh , __reg("a1") BIO * out ) = "\tjsr\t-5604(a6)";
#define OPENSSL_LH_stats_bio(lh, out) __OPENSSL_LH_stats_bio(AmiSSLBase, (lh), (out))

void __OPENSSL_LH_node_stats_bio(__reg("a6") struct Library * , __reg("a0") const OPENSSL_LHASH * lh , __reg("a1") BIO * out ) = "\tjsr\t-5610(a6)";
#define OPENSSL_LH_node_stats_bio(lh, out) __OPENSSL_LH_node_stats_bio(AmiSSLBase, (lh), (out))

void __OPENSSL_LH_node_usage_stats_bio(__reg("a6") struct Library * , __reg("a0") const OPENSSL_LHASH * lh , __reg("a1") BIO * out ) = "\tjsr\t-5616(a6)";
#define OPENSSL_LH_node_usage_stats_bio(lh, out) __OPENSSL_LH_node_usage_stats_bio(AmiSSLBase, (lh), (out))

int __OBJ_NAME_init(__reg("a6") struct Library * ) = "\tjsr\t-5622(a6)";
#define OBJ_NAME_init() __OBJ_NAME_init(AmiSSLBase)

int __OBJ_NAME_new_index(__reg("a6") struct Library * , __reg("a0") unsigned long (*hash_func)(const char *) , __reg("a1") int (*cmp_func)(const char *,const char *) , __reg("a2") void (*free_func)(const char *,int,const char *) ) = "\tjsr\t-5628(a6)";
#define OBJ_NAME_new_index(hash_func, cmp_func, free_func) __OBJ_NAME_new_index(AmiSSLBase, (hash_func), (cmp_func), (free_func))

const char * __OBJ_NAME_get(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("d0") int type ) = "\tjsr\t-5634(a6)";
#define OBJ_NAME_get(name, type) __OBJ_NAME_get(AmiSSLBase, (name), (type))

int __OBJ_NAME_add(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("d0") int type , __reg("a1") const char * data ) = "\tjsr\t-5640(a6)";
#define OBJ_NAME_add(name, type, data) __OBJ_NAME_add(AmiSSLBase, (name), (type), (data))

int __OBJ_NAME_remove(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("d0") int type ) = "\tjsr\t-5646(a6)";
#define OBJ_NAME_remove(name, type) __OBJ_NAME_remove(AmiSSLBase, (name), (type))

void __OBJ_NAME_cleanup(__reg("a6") struct Library * , __reg("d0") int type ) = "\tjsr\t-5652(a6)";
#define OBJ_NAME_cleanup(type) __OBJ_NAME_cleanup(AmiSSLBase, (type))

void __OBJ_NAME_do_all(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") void (*fn)(const OBJ_NAME *,void *arg) , __reg("a1") void * arg ) = "\tjsr\t-5658(a6)";
#define OBJ_NAME_do_all(type, fn, arg) __OBJ_NAME_do_all(AmiSSLBase, (type), (fn), (arg))

void __OBJ_NAME_do_all_sorted(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") void (*fn)(const OBJ_NAME *,void *arg) , __reg("a1") void * arg ) = "\tjsr\t-5664(a6)";
#define OBJ_NAME_do_all_sorted(type, fn, arg) __OBJ_NAME_do_all_sorted(AmiSSLBase, (type), (fn), (arg))

ASN1_OBJECT * __OBJ_dup(__reg("a6") struct Library * , __reg("a0") const ASN1_OBJECT * o ) = "\tjsr\t-5670(a6)";
#define OBJ_dup(o) __OBJ_dup(AmiSSLBase, (o))

ASN1_OBJECT * __OBJ_nid2obj(__reg("a6") struct Library * , __reg("d0") int n ) = "\tjsr\t-5676(a6)";
#define OBJ_nid2obj(n) __OBJ_nid2obj(AmiSSLBase, (n))

const char * __OBJ_nid2ln(__reg("a6") struct Library * , __reg("d0") int n ) = "\tjsr\t-5682(a6)";
#define OBJ_nid2ln(n) __OBJ_nid2ln(AmiSSLBase, (n))

const char * __OBJ_nid2sn(__reg("a6") struct Library * , __reg("d0") int n ) = "\tjsr\t-5688(a6)";
#define OBJ_nid2sn(n) __OBJ_nid2sn(AmiSSLBase, (n))

int __OBJ_obj2nid(__reg("a6") struct Library * , __reg("a0") const ASN1_OBJECT * o ) = "\tjsr\t-5694(a6)";
#define OBJ_obj2nid(o) __OBJ_obj2nid(AmiSSLBase, (o))

ASN1_OBJECT * __OBJ_txt2obj(__reg("a6") struct Library * , __reg("a0") const char * s , __reg("d0") int no_name ) = "\tjsr\t-5700(a6)";
#define OBJ_txt2obj(s, no_name) __OBJ_txt2obj(AmiSSLBase, (s), (no_name))

int __OBJ_obj2txt(__reg("a6") struct Library * , __reg("a0") char * buf , __reg("d0") int buf_len , __reg("a1") const ASN1_OBJECT * a , __reg("d1") int no_name ) = "\tjsr\t-5706(a6)";
#define OBJ_obj2txt(buf, buf_len, a, no_name) __OBJ_obj2txt(AmiSSLBase, (buf), (buf_len), (a), (no_name))

int __OBJ_txt2nid(__reg("a6") struct Library * , __reg("a0") const char * s ) = "\tjsr\t-5712(a6)";
#define OBJ_txt2nid(s) __OBJ_txt2nid(AmiSSLBase, (s))

int __OBJ_ln2nid(__reg("a6") struct Library * , __reg("a0") const char * s ) = "\tjsr\t-5718(a6)";
#define OBJ_ln2nid(s) __OBJ_ln2nid(AmiSSLBase, (s))

int __OBJ_sn2nid(__reg("a6") struct Library * , __reg("a0") const char * s ) = "\tjsr\t-5724(a6)";
#define OBJ_sn2nid(s) __OBJ_sn2nid(AmiSSLBase, (s))

int __OBJ_cmp(__reg("a6") struct Library * , __reg("a0") const ASN1_OBJECT * a , __reg("a1") const ASN1_OBJECT * b ) = "\tjsr\t-5730(a6)";
#define OBJ_cmp(a, b) __OBJ_cmp(AmiSSLBase, (a), (b))

int __OBJ_new_nid(__reg("a6") struct Library * , __reg("d0") int num ) = "\tjsr\t-5742(a6)";
#define OBJ_new_nid(num) __OBJ_new_nid(AmiSSLBase, (num))

int __OBJ_add_object(__reg("a6") struct Library * , __reg("a0") const ASN1_OBJECT * obj ) = "\tjsr\t-5748(a6)";
#define OBJ_add_object(obj) __OBJ_add_object(AmiSSLBase, (obj))

int __OBJ_create(__reg("a6") struct Library * , __reg("a0") const char * oid , __reg("a1") const char * sn , __reg("a2") const char * ln ) = "\tjsr\t-5754(a6)";
#define OBJ_create(oid, sn, ln) __OBJ_create(AmiSSLBase, (oid), (sn), (ln))

int __OBJ_create_objects(__reg("a6") struct Library * , __reg("a0") BIO * in ) = "\tjsr\t-5766(a6)";
#define OBJ_create_objects(in) __OBJ_create_objects(AmiSSLBase, (in))

int __ERR_load_OBJ_strings(__reg("a6") struct Library * ) = "\tjsr\t-5772(a6)";
#define ERR_load_OBJ_strings() __ERR_load_OBJ_strings(AmiSSLBase)

OCSP_RESPONSE * __OCSP_sendreq_bio(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") const char * path , __reg("a2") OCSP_REQUEST * req ) = "\tjsr\t-5778(a6)";
#define OCSP_sendreq_bio(b, path, req) __OCSP_sendreq_bio(AmiSSLBase, (b), (path), (req))

OCSP_CERTID * __OCSP_cert_to_id(__reg("a6") struct Library * , __reg("a0") const EVP_MD * dgst , __reg("a1") const X509 * subject , __reg("a2") const X509 * issuer ) = "\tjsr\t-5784(a6)";
#define OCSP_cert_to_id(dgst, subject, issuer) __OCSP_cert_to_id(AmiSSLBase, (dgst), (subject), (issuer))

OCSP_CERTID * __OCSP_cert_id_new(__reg("a6") struct Library * , __reg("a0") const EVP_MD * dgst , __reg("a1") const X509_NAME * issuerName , __reg("a2") const ASN1_BIT_STRING * issuerKey , __reg("a3") const ASN1_INTEGER * serialNumber ) = "\tjsr\t-5790(a6)";
#define OCSP_cert_id_new(dgst, issuerName, issuerKey, serialNumber) __OCSP_cert_id_new(AmiSSLBase, (dgst), (issuerName), (issuerKey), (serialNumber))

OCSP_ONEREQ * __OCSP_request_add0_id(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * req , __reg("a1") OCSP_CERTID * cid ) = "\tjsr\t-5796(a6)";
#define OCSP_request_add0_id(req, cid) __OCSP_request_add0_id(AmiSSLBase, (req), (cid))

int __OCSP_request_add1_nonce(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * req , __reg("a1") unsigned char * val , __reg("d0") int len ) = "\tjsr\t-5802(a6)";
#define OCSP_request_add1_nonce(req, val, len) __OCSP_request_add1_nonce(AmiSSLBase, (req), (val), (len))

int __OCSP_basic_add1_nonce(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * resp , __reg("a1") unsigned char * val , __reg("d0") int len ) = "\tjsr\t-5808(a6)";
#define OCSP_basic_add1_nonce(resp, val, len) __OCSP_basic_add1_nonce(AmiSSLBase, (resp), (val), (len))

int __OCSP_check_nonce(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * req , __reg("a1") OCSP_BASICRESP * bs ) = "\tjsr\t-5814(a6)";
#define OCSP_check_nonce(req, bs) __OCSP_check_nonce(AmiSSLBase, (req), (bs))

int __OCSP_copy_nonce(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * resp , __reg("a1") OCSP_REQUEST * req ) = "\tjsr\t-5820(a6)";
#define OCSP_copy_nonce(resp, req) __OCSP_copy_nonce(AmiSSLBase, (resp), (req))

int __OCSP_request_set1_name(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * req , __reg("a1") const X509_NAME * nm ) = "\tjsr\t-5826(a6)";
#define OCSP_request_set1_name(req, nm) __OCSP_request_set1_name(AmiSSLBase, (req), (nm))

int __OCSP_request_add1_cert(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * req , __reg("a1") X509 * cert ) = "\tjsr\t-5832(a6)";
#define OCSP_request_add1_cert(req, cert) __OCSP_request_add1_cert(AmiSSLBase, (req), (cert))

int __OCSP_request_sign(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * req , __reg("a1") X509 * signer , __reg("a2") EVP_PKEY * key , __reg("a3") const EVP_MD * dgst , __reg("d0") STACK_OF(X509) * certs , __reg("d1") unsigned long flags ) = "\tjsr\t-5838(a6)";
#define OCSP_request_sign(req, signer, key, dgst, certs, flags) __OCSP_request_sign(AmiSSLBase, (req), (signer), (key), (dgst), (certs), (flags))

int __OCSP_response_status(__reg("a6") struct Library * , __reg("a0") OCSP_RESPONSE * resp ) = "\tjsr\t-5844(a6)";
#define OCSP_response_status(resp) __OCSP_response_status(AmiSSLBase, (resp))

OCSP_BASICRESP * __OCSP_response_get1_basic(__reg("a6") struct Library * , __reg("a0") OCSP_RESPONSE * resp ) = "\tjsr\t-5850(a6)";
#define OCSP_response_get1_basic(resp) __OCSP_response_get1_basic(AmiSSLBase, (resp))

int __OCSP_resp_count(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * bs ) = "\tjsr\t-5856(a6)";
#define OCSP_resp_count(bs) __OCSP_resp_count(AmiSSLBase, (bs))

OCSP_SINGLERESP * __OCSP_resp_get0(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * bs , __reg("d0") int idx ) = "\tjsr\t-5862(a6)";
#define OCSP_resp_get0(bs, idx) __OCSP_resp_get0(AmiSSLBase, (bs), (idx))

int __OCSP_resp_find(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * bs , __reg("a1") OCSP_CERTID * id , __reg("d0") int last ) = "\tjsr\t-5868(a6)";
#define OCSP_resp_find(bs, id, last) __OCSP_resp_find(AmiSSLBase, (bs), (id), (last))

int __OCSP_single_get0_status(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP * single , __reg("a1") int * reason , __reg("a2") ASN1_GENERALIZEDTIME ** revtime , __reg("a3") ASN1_GENERALIZEDTIME ** thisupd , __reg("d0") ASN1_GENERALIZEDTIME ** nextupd ) = "\tjsr\t-5874(a6)";
#define OCSP_single_get0_status(single, reason, revtime, thisupd, nextupd) __OCSP_single_get0_status(AmiSSLBase, (single), (reason), (revtime), (thisupd), (nextupd))

int __OCSP_resp_find_status(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * bs , __reg("a1") OCSP_CERTID * id , __reg("a2") int * status , __reg("a3") int * reason , __reg("d0") ASN1_GENERALIZEDTIME ** revtime , __reg("d1") ASN1_GENERALIZEDTIME ** thisupd , __reg("d2") ASN1_GENERALIZEDTIME ** nextupd ) = "\tjsr\t-5880(a6)";
#define OCSP_resp_find_status(bs, id, status, reason, revtime, thisupd, nextupd) __OCSP_resp_find_status(AmiSSLBase, (bs), (id), (status), (reason), (revtime), (thisupd), (nextupd))

int __OCSP_check_validity(__reg("a6") struct Library * , __reg("a0") ASN1_GENERALIZEDTIME * thisupd , __reg("a1") ASN1_GENERALIZEDTIME * nextupd , __reg("d0") long sec , __reg("d1") long maxsec ) = "\tjsr\t-5886(a6)";
#define OCSP_check_validity(thisupd, nextupd, sec, maxsec) __OCSP_check_validity(AmiSSLBase, (thisupd), (nextupd), (sec), (maxsec))

int __OCSP_request_verify(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * req , __reg("a1") STACK_OF(X509) * certs , __reg("a2") X509_STORE * store , __reg("d0") unsigned long flags ) = "\tjsr\t-5892(a6)";
#define OCSP_request_verify(req, certs, store, flags) __OCSP_request_verify(AmiSSLBase, (req), (certs), (store), (flags))

int __OBSOLETE_OCSP_parse_url(__reg("a6") struct Library * , __reg("a0") const char * url , __reg("a1") char ** phost , __reg("a2") char ** pport , __reg("a3") char ** ppath , __reg("d0") int * pssl ) = "\tjsr\t-5898(a6)";
#define OBSOLETE_OCSP_parse_url(url, phost, pport, ppath, pssl) __OBSOLETE_OCSP_parse_url(AmiSSLBase, (url), (phost), (pport), (ppath), (pssl))

int __OCSP_id_issuer_cmp(__reg("a6") struct Library * , __reg("a0") const OCSP_CERTID * a , __reg("a1") const OCSP_CERTID * b ) = "\tjsr\t-5904(a6)";
#define OCSP_id_issuer_cmp(a, b) __OCSP_id_issuer_cmp(AmiSSLBase, (a), (b))

int __OCSP_id_cmp(__reg("a6") struct Library * , __reg("a0") const OCSP_CERTID * a , __reg("a1") const OCSP_CERTID * b ) = "\tjsr\t-5910(a6)";
#define OCSP_id_cmp(a, b) __OCSP_id_cmp(AmiSSLBase, (a), (b))

int __OCSP_request_onereq_count(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * req ) = "\tjsr\t-5916(a6)";
#define OCSP_request_onereq_count(req) __OCSP_request_onereq_count(AmiSSLBase, (req))

OCSP_ONEREQ * __OCSP_request_onereq_get0(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * req , __reg("d0") int i ) = "\tjsr\t-5922(a6)";
#define OCSP_request_onereq_get0(req, i) __OCSP_request_onereq_get0(AmiSSLBase, (req), (i))

OCSP_CERTID * __OCSP_onereq_get0_id(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ * one ) = "\tjsr\t-5928(a6)";
#define OCSP_onereq_get0_id(one) __OCSP_onereq_get0_id(AmiSSLBase, (one))

int __OCSP_id_get0_info(__reg("a6") struct Library * , __reg("a0") ASN1_OCTET_STRING ** piNameHash , __reg("a1") ASN1_OBJECT ** pmd , __reg("a2") ASN1_OCTET_STRING ** pikeyHash , __reg("a3") ASN1_INTEGER ** pserial , __reg("d0") OCSP_CERTID * cid ) = "\tjsr\t-5934(a6)";
#define OCSP_id_get0_info(piNameHash, pmd, pikeyHash, pserial, cid) __OCSP_id_get0_info(AmiSSLBase, (piNameHash), (pmd), (pikeyHash), (pserial), (cid))

int __OCSP_request_is_signed(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * req ) = "\tjsr\t-5940(a6)";
#define OCSP_request_is_signed(req) __OCSP_request_is_signed(AmiSSLBase, (req))

OCSP_RESPONSE * __OCSP_response_create(__reg("a6") struct Library * , __reg("d0") int status , __reg("a0") OCSP_BASICRESP * bs ) = "\tjsr\t-5946(a6)";
#define OCSP_response_create(status, bs) __OCSP_response_create(AmiSSLBase, (status), (bs))

OCSP_SINGLERESP * __OCSP_basic_add1_status(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * rsp , __reg("a1") OCSP_CERTID * cid , __reg("d0") int status , __reg("d1") int reason , __reg("a2") ASN1_TIME * revtime , __reg("a3") ASN1_TIME * thisupd , __reg("d2") ASN1_TIME * nextupd ) = "\tjsr\t-5952(a6)";
#define OCSP_basic_add1_status(rsp, cid, status, reason, revtime, thisupd, nextupd) __OCSP_basic_add1_status(AmiSSLBase, (rsp), (cid), (status), (reason), (revtime), (thisupd), (nextupd))

int __OCSP_basic_add1_cert(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * resp , __reg("a1") X509 * cert ) = "\tjsr\t-5958(a6)";
#define OCSP_basic_add1_cert(resp, cert) __OCSP_basic_add1_cert(AmiSSLBase, (resp), (cert))

int __OCSP_basic_sign(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * brsp , __reg("a1") X509 * signer , __reg("a2") EVP_PKEY * key , __reg("a3") const EVP_MD * dgst , __reg("d0") STACK_OF(X509) * certs , __reg("d1") unsigned long flags ) = "\tjsr\t-5964(a6)";
#define OCSP_basic_sign(brsp, signer, key, dgst, certs, flags) __OCSP_basic_sign(AmiSSLBase, (brsp), (signer), (key), (dgst), (certs), (flags))

X509_EXTENSION * __OCSP_crlID_new(__reg("a6") struct Library * , __reg("a0") const char * url , __reg("a1") long * n , __reg("a2") char * tim ) = "\tjsr\t-5976(a6)";
#define OCSP_crlID_new(url, n, tim) __OCSP_crlID_new(AmiSSLBase, (url), (n), (tim))

X509_EXTENSION * __OCSP_accept_responses_new(__reg("a6") struct Library * , __reg("a0") char ** oids ) = "\tjsr\t-5982(a6)";
#define OCSP_accept_responses_new(oids) __OCSP_accept_responses_new(AmiSSLBase, (oids))

X509_EXTENSION * __OCSP_archive_cutoff_new(__reg("a6") struct Library * , __reg("a0") char * tim ) = "\tjsr\t-5988(a6)";
#define OCSP_archive_cutoff_new(tim) __OCSP_archive_cutoff_new(AmiSSLBase, (tim))

X509_EXTENSION * __OCSP_url_svcloc_new(__reg("a6") struct Library * , __reg("a0") const X509_NAME * issuer , __reg("a1") const char ** urls ) = "\tjsr\t-5994(a6)";
#define OCSP_url_svcloc_new(issuer, urls) __OCSP_url_svcloc_new(AmiSSLBase, (issuer), (urls))

int __OCSP_REQUEST_get_ext_count(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * x ) = "\tjsr\t-6000(a6)";
#define OCSP_REQUEST_get_ext_count(x) __OCSP_REQUEST_get_ext_count(AmiSSLBase, (x))

int __OCSP_REQUEST_get_ext_by_NID(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * x , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-6006(a6)";
#define OCSP_REQUEST_get_ext_by_NID(x, nid, lastpos) __OCSP_REQUEST_get_ext_by_NID(AmiSSLBase, (x), (nid), (lastpos))

int __OCSP_REQUEST_get_ext_by_OBJ(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * x , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-6012(a6)";
#define OCSP_REQUEST_get_ext_by_OBJ(x, obj, lastpos) __OCSP_REQUEST_get_ext_by_OBJ(AmiSSLBase, (x), (obj), (lastpos))

int __OCSP_REQUEST_get_ext_by_critical(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * x , __reg("d0") int crit , __reg("d1") int lastpos ) = "\tjsr\t-6018(a6)";
#define OCSP_REQUEST_get_ext_by_critical(x, crit, lastpos) __OCSP_REQUEST_get_ext_by_critical(AmiSSLBase, (x), (crit), (lastpos))

X509_EXTENSION * __OCSP_REQUEST_get_ext(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * x , __reg("d0") int loc ) = "\tjsr\t-6024(a6)";
#define OCSP_REQUEST_get_ext(x, loc) __OCSP_REQUEST_get_ext(AmiSSLBase, (x), (loc))

X509_EXTENSION * __OCSP_REQUEST_delete_ext(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * x , __reg("d0") int loc ) = "\tjsr\t-6030(a6)";
#define OCSP_REQUEST_delete_ext(x, loc) __OCSP_REQUEST_delete_ext(AmiSSLBase, (x), (loc))

void * __OCSP_REQUEST_get1_ext_d2i(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * x , __reg("d0") int nid , __reg("a1") int * crit , __reg("a2") int * idx ) = "\tjsr\t-6036(a6)";
#define OCSP_REQUEST_get1_ext_d2i(x, nid, crit, idx) __OCSP_REQUEST_get1_ext_d2i(AmiSSLBase, (x), (nid), (crit), (idx))

int __OCSP_REQUEST_add1_ext_i2d(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * x , __reg("d0") int nid , __reg("a1") void * value , __reg("d1") int crit , __reg("d2") unsigned long flags ) = "\tjsr\t-6042(a6)";
#define OCSP_REQUEST_add1_ext_i2d(x, nid, value, crit, flags) __OCSP_REQUEST_add1_ext_i2d(AmiSSLBase, (x), (nid), (value), (crit), (flags))

int __OCSP_REQUEST_add_ext(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * x , __reg("a1") X509_EXTENSION * ex , __reg("d0") int loc ) = "\tjsr\t-6048(a6)";
#define OCSP_REQUEST_add_ext(x, ex, loc) __OCSP_REQUEST_add_ext(AmiSSLBase, (x), (ex), (loc))

int __OCSP_ONEREQ_get_ext_count(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ * x ) = "\tjsr\t-6054(a6)";
#define OCSP_ONEREQ_get_ext_count(x) __OCSP_ONEREQ_get_ext_count(AmiSSLBase, (x))

int __OCSP_ONEREQ_get_ext_by_NID(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ * x , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-6060(a6)";
#define OCSP_ONEREQ_get_ext_by_NID(x, nid, lastpos) __OCSP_ONEREQ_get_ext_by_NID(AmiSSLBase, (x), (nid), (lastpos))

int __OCSP_ONEREQ_get_ext_by_OBJ(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ * x , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-6066(a6)";
#define OCSP_ONEREQ_get_ext_by_OBJ(x, obj, lastpos) __OCSP_ONEREQ_get_ext_by_OBJ(AmiSSLBase, (x), (obj), (lastpos))

int __OCSP_ONEREQ_get_ext_by_critical(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ * x , __reg("d0") int crit , __reg("d1") int lastpos ) = "\tjsr\t-6072(a6)";
#define OCSP_ONEREQ_get_ext_by_critical(x, crit, lastpos) __OCSP_ONEREQ_get_ext_by_critical(AmiSSLBase, (x), (crit), (lastpos))

X509_EXTENSION * __OCSP_ONEREQ_get_ext(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ * x , __reg("d0") int loc ) = "\tjsr\t-6078(a6)";
#define OCSP_ONEREQ_get_ext(x, loc) __OCSP_ONEREQ_get_ext(AmiSSLBase, (x), (loc))

X509_EXTENSION * __OCSP_ONEREQ_delete_ext(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ * x , __reg("d0") int loc ) = "\tjsr\t-6084(a6)";
#define OCSP_ONEREQ_delete_ext(x, loc) __OCSP_ONEREQ_delete_ext(AmiSSLBase, (x), (loc))

void * __OCSP_ONEREQ_get1_ext_d2i(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ * x , __reg("d0") int nid , __reg("a1") int * crit , __reg("a2") int * idx ) = "\tjsr\t-6090(a6)";
#define OCSP_ONEREQ_get1_ext_d2i(x, nid, crit, idx) __OCSP_ONEREQ_get1_ext_d2i(AmiSSLBase, (x), (nid), (crit), (idx))

int __OCSP_ONEREQ_add1_ext_i2d(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ * x , __reg("d0") int nid , __reg("a1") void * value , __reg("d1") int crit , __reg("d2") unsigned long flags ) = "\tjsr\t-6096(a6)";
#define OCSP_ONEREQ_add1_ext_i2d(x, nid, value, crit, flags) __OCSP_ONEREQ_add1_ext_i2d(AmiSSLBase, (x), (nid), (value), (crit), (flags))

int __OCSP_ONEREQ_add_ext(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ * x , __reg("a1") X509_EXTENSION * ex , __reg("d0") int loc ) = "\tjsr\t-6102(a6)";
#define OCSP_ONEREQ_add_ext(x, ex, loc) __OCSP_ONEREQ_add_ext(AmiSSLBase, (x), (ex), (loc))

int __OCSP_BASICRESP_get_ext_count(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * x ) = "\tjsr\t-6108(a6)";
#define OCSP_BASICRESP_get_ext_count(x) __OCSP_BASICRESP_get_ext_count(AmiSSLBase, (x))

int __OCSP_BASICRESP_get_ext_by_NID(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * x , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-6114(a6)";
#define OCSP_BASICRESP_get_ext_by_NID(x, nid, lastpos) __OCSP_BASICRESP_get_ext_by_NID(AmiSSLBase, (x), (nid), (lastpos))

int __OCSP_BASICRESP_get_ext_by_OBJ(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * x , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-6120(a6)";
#define OCSP_BASICRESP_get_ext_by_OBJ(x, obj, lastpos) __OCSP_BASICRESP_get_ext_by_OBJ(AmiSSLBase, (x), (obj), (lastpos))

int __OCSP_BASICRESP_get_ext_by_critical(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * x , __reg("d0") int crit , __reg("d1") int lastpos ) = "\tjsr\t-6126(a6)";
#define OCSP_BASICRESP_get_ext_by_critical(x, crit, lastpos) __OCSP_BASICRESP_get_ext_by_critical(AmiSSLBase, (x), (crit), (lastpos))

X509_EXTENSION * __OCSP_BASICRESP_get_ext(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * x , __reg("d0") int loc ) = "\tjsr\t-6132(a6)";
#define OCSP_BASICRESP_get_ext(x, loc) __OCSP_BASICRESP_get_ext(AmiSSLBase, (x), (loc))

X509_EXTENSION * __OCSP_BASICRESP_delete_ext(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * x , __reg("d0") int loc ) = "\tjsr\t-6138(a6)";
#define OCSP_BASICRESP_delete_ext(x, loc) __OCSP_BASICRESP_delete_ext(AmiSSLBase, (x), (loc))

void * __OCSP_BASICRESP_get1_ext_d2i(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * x , __reg("d0") int nid , __reg("a1") int * crit , __reg("a2") int * idx ) = "\tjsr\t-6144(a6)";
#define OCSP_BASICRESP_get1_ext_d2i(x, nid, crit, idx) __OCSP_BASICRESP_get1_ext_d2i(AmiSSLBase, (x), (nid), (crit), (idx))

int __OCSP_BASICRESP_add1_ext_i2d(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * x , __reg("d0") int nid , __reg("a1") void * value , __reg("d1") int crit , __reg("d2") unsigned long flags ) = "\tjsr\t-6150(a6)";
#define OCSP_BASICRESP_add1_ext_i2d(x, nid, value, crit, flags) __OCSP_BASICRESP_add1_ext_i2d(AmiSSLBase, (x), (nid), (value), (crit), (flags))

int __OCSP_BASICRESP_add_ext(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * x , __reg("a1") X509_EXTENSION * ex , __reg("d0") int loc ) = "\tjsr\t-6156(a6)";
#define OCSP_BASICRESP_add_ext(x, ex, loc) __OCSP_BASICRESP_add_ext(AmiSSLBase, (x), (ex), (loc))

int __OCSP_SINGLERESP_get_ext_count(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP * x ) = "\tjsr\t-6162(a6)";
#define OCSP_SINGLERESP_get_ext_count(x) __OCSP_SINGLERESP_get_ext_count(AmiSSLBase, (x))

int __OCSP_SINGLERESP_get_ext_by_NID(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP * x , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-6168(a6)";
#define OCSP_SINGLERESP_get_ext_by_NID(x, nid, lastpos) __OCSP_SINGLERESP_get_ext_by_NID(AmiSSLBase, (x), (nid), (lastpos))

int __OCSP_SINGLERESP_get_ext_by_OBJ(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP * x , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-6174(a6)";
#define OCSP_SINGLERESP_get_ext_by_OBJ(x, obj, lastpos) __OCSP_SINGLERESP_get_ext_by_OBJ(AmiSSLBase, (x), (obj), (lastpos))

int __OCSP_SINGLERESP_get_ext_by_critical(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP * x , __reg("d0") int crit , __reg("d1") int lastpos ) = "\tjsr\t-6180(a6)";
#define OCSP_SINGLERESP_get_ext_by_critical(x, crit, lastpos) __OCSP_SINGLERESP_get_ext_by_critical(AmiSSLBase, (x), (crit), (lastpos))

X509_EXTENSION * __OCSP_SINGLERESP_get_ext(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP * x , __reg("d0") int loc ) = "\tjsr\t-6186(a6)";
#define OCSP_SINGLERESP_get_ext(x, loc) __OCSP_SINGLERESP_get_ext(AmiSSLBase, (x), (loc))

X509_EXTENSION * __OCSP_SINGLERESP_delete_ext(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP * x , __reg("d0") int loc ) = "\tjsr\t-6192(a6)";
#define OCSP_SINGLERESP_delete_ext(x, loc) __OCSP_SINGLERESP_delete_ext(AmiSSLBase, (x), (loc))

void * __OCSP_SINGLERESP_get1_ext_d2i(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP * x , __reg("d0") int nid , __reg("a1") int * crit , __reg("a2") int * idx ) = "\tjsr\t-6198(a6)";
#define OCSP_SINGLERESP_get1_ext_d2i(x, nid, crit, idx) __OCSP_SINGLERESP_get1_ext_d2i(AmiSSLBase, (x), (nid), (crit), (idx))

int __OCSP_SINGLERESP_add1_ext_i2d(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP * x , __reg("d0") int nid , __reg("a1") void * value , __reg("d1") int crit , __reg("d2") unsigned long flags ) = "\tjsr\t-6204(a6)";
#define OCSP_SINGLERESP_add1_ext_i2d(x, nid, value, crit, flags) __OCSP_SINGLERESP_add1_ext_i2d(AmiSSLBase, (x), (nid), (value), (crit), (flags))

int __OCSP_SINGLERESP_add_ext(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP * x , __reg("a1") X509_EXTENSION * ex , __reg("d0") int loc ) = "\tjsr\t-6210(a6)";
#define OCSP_SINGLERESP_add_ext(x, ex, loc) __OCSP_SINGLERESP_add_ext(AmiSSLBase, (x), (ex), (loc))

OCSP_SINGLERESP * __OCSP_SINGLERESP_new(__reg("a6") struct Library * ) = "\tjsr\t-6216(a6)";
#define OCSP_SINGLERESP_new() __OCSP_SINGLERESP_new(AmiSSLBase)

void __OCSP_SINGLERESP_free(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP * a ) = "\tjsr\t-6222(a6)";
#define OCSP_SINGLERESP_free(a) __OCSP_SINGLERESP_free(AmiSSLBase, (a))

OCSP_SINGLERESP * __d2i_OCSP_SINGLERESP(__reg("a6") struct Library * , __reg("a0") OCSP_SINGLERESP ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6228(a6)";
#define d2i_OCSP_SINGLERESP(a, in, len) __d2i_OCSP_SINGLERESP(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_SINGLERESP(__reg("a6") struct Library * , __reg("a0") const OCSP_SINGLERESP * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6234(a6)";
#define i2d_OCSP_SINGLERESP(a, out) __i2d_OCSP_SINGLERESP(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_SINGLERESP_it(__reg("a6") struct Library * ) = "\tjsr\t-6240(a6)";
#define OCSP_SINGLERESP_it() __OCSP_SINGLERESP_it(AmiSSLBase)

OCSP_CERTSTATUS * __OCSP_CERTSTATUS_new(__reg("a6") struct Library * ) = "\tjsr\t-6246(a6)";
#define OCSP_CERTSTATUS_new() __OCSP_CERTSTATUS_new(AmiSSLBase)

void __OCSP_CERTSTATUS_free(__reg("a6") struct Library * , __reg("a0") OCSP_CERTSTATUS * a ) = "\tjsr\t-6252(a6)";
#define OCSP_CERTSTATUS_free(a) __OCSP_CERTSTATUS_free(AmiSSLBase, (a))

OCSP_CERTSTATUS * __d2i_OCSP_CERTSTATUS(__reg("a6") struct Library * , __reg("a0") OCSP_CERTSTATUS ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6258(a6)";
#define d2i_OCSP_CERTSTATUS(a, in, len) __d2i_OCSP_CERTSTATUS(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_CERTSTATUS(__reg("a6") struct Library * , __reg("a0") const OCSP_CERTSTATUS * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6264(a6)";
#define i2d_OCSP_CERTSTATUS(a, out) __i2d_OCSP_CERTSTATUS(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_CERTSTATUS_it(__reg("a6") struct Library * ) = "\tjsr\t-6270(a6)";
#define OCSP_CERTSTATUS_it() __OCSP_CERTSTATUS_it(AmiSSLBase)

OCSP_REVOKEDINFO * __OCSP_REVOKEDINFO_new(__reg("a6") struct Library * ) = "\tjsr\t-6276(a6)";
#define OCSP_REVOKEDINFO_new() __OCSP_REVOKEDINFO_new(AmiSSLBase)

void __OCSP_REVOKEDINFO_free(__reg("a6") struct Library * , __reg("a0") OCSP_REVOKEDINFO * a ) = "\tjsr\t-6282(a6)";
#define OCSP_REVOKEDINFO_free(a) __OCSP_REVOKEDINFO_free(AmiSSLBase, (a))

OCSP_REVOKEDINFO * __d2i_OCSP_REVOKEDINFO(__reg("a6") struct Library * , __reg("a0") OCSP_REVOKEDINFO ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6288(a6)";
#define d2i_OCSP_REVOKEDINFO(a, in, len) __d2i_OCSP_REVOKEDINFO(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_REVOKEDINFO(__reg("a6") struct Library * , __reg("a0") const OCSP_REVOKEDINFO * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6294(a6)";
#define i2d_OCSP_REVOKEDINFO(a, out) __i2d_OCSP_REVOKEDINFO(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_REVOKEDINFO_it(__reg("a6") struct Library * ) = "\tjsr\t-6300(a6)";
#define OCSP_REVOKEDINFO_it() __OCSP_REVOKEDINFO_it(AmiSSLBase)

OCSP_BASICRESP * __OCSP_BASICRESP_new(__reg("a6") struct Library * ) = "\tjsr\t-6306(a6)";
#define OCSP_BASICRESP_new() __OCSP_BASICRESP_new(AmiSSLBase)

void __OCSP_BASICRESP_free(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * a ) = "\tjsr\t-6312(a6)";
#define OCSP_BASICRESP_free(a) __OCSP_BASICRESP_free(AmiSSLBase, (a))

OCSP_BASICRESP * __d2i_OCSP_BASICRESP(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6318(a6)";
#define d2i_OCSP_BASICRESP(a, in, len) __d2i_OCSP_BASICRESP(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_BASICRESP(__reg("a6") struct Library * , __reg("a0") const OCSP_BASICRESP * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6324(a6)";
#define i2d_OCSP_BASICRESP(a, out) __i2d_OCSP_BASICRESP(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_BASICRESP_it(__reg("a6") struct Library * ) = "\tjsr\t-6330(a6)";
#define OCSP_BASICRESP_it() __OCSP_BASICRESP_it(AmiSSLBase)

OCSP_RESPDATA * __OCSP_RESPDATA_new(__reg("a6") struct Library * ) = "\tjsr\t-6336(a6)";
#define OCSP_RESPDATA_new() __OCSP_RESPDATA_new(AmiSSLBase)

void __OCSP_RESPDATA_free(__reg("a6") struct Library * , __reg("a0") OCSP_RESPDATA * a ) = "\tjsr\t-6342(a6)";
#define OCSP_RESPDATA_free(a) __OCSP_RESPDATA_free(AmiSSLBase, (a))

OCSP_RESPDATA * __d2i_OCSP_RESPDATA(__reg("a6") struct Library * , __reg("a0") OCSP_RESPDATA ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6348(a6)";
#define d2i_OCSP_RESPDATA(a, in, len) __d2i_OCSP_RESPDATA(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_RESPDATA(__reg("a6") struct Library * , __reg("a0") const OCSP_RESPDATA * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6354(a6)";
#define i2d_OCSP_RESPDATA(a, out) __i2d_OCSP_RESPDATA(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_RESPDATA_it(__reg("a6") struct Library * ) = "\tjsr\t-6360(a6)";
#define OCSP_RESPDATA_it() __OCSP_RESPDATA_it(AmiSSLBase)

OCSP_RESPID * __OCSP_RESPID_new(__reg("a6") struct Library * ) = "\tjsr\t-6366(a6)";
#define OCSP_RESPID_new() __OCSP_RESPID_new(AmiSSLBase)

void __OCSP_RESPID_free(__reg("a6") struct Library * , __reg("a0") OCSP_RESPID * a ) = "\tjsr\t-6372(a6)";
#define OCSP_RESPID_free(a) __OCSP_RESPID_free(AmiSSLBase, (a))

OCSP_RESPID * __d2i_OCSP_RESPID(__reg("a6") struct Library * , __reg("a0") OCSP_RESPID ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6378(a6)";
#define d2i_OCSP_RESPID(a, in, len) __d2i_OCSP_RESPID(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_RESPID(__reg("a6") struct Library * , __reg("a0") const OCSP_RESPID * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6384(a6)";
#define i2d_OCSP_RESPID(a, out) __i2d_OCSP_RESPID(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_RESPID_it(__reg("a6") struct Library * ) = "\tjsr\t-6390(a6)";
#define OCSP_RESPID_it() __OCSP_RESPID_it(AmiSSLBase)

OCSP_RESPONSE * __OCSP_RESPONSE_new(__reg("a6") struct Library * ) = "\tjsr\t-6396(a6)";
#define OCSP_RESPONSE_new() __OCSP_RESPONSE_new(AmiSSLBase)

void __OCSP_RESPONSE_free(__reg("a6") struct Library * , __reg("a0") OCSP_RESPONSE * a ) = "\tjsr\t-6402(a6)";
#define OCSP_RESPONSE_free(a) __OCSP_RESPONSE_free(AmiSSLBase, (a))

OCSP_RESPONSE * __d2i_OCSP_RESPONSE(__reg("a6") struct Library * , __reg("a0") OCSP_RESPONSE ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6408(a6)";
#define d2i_OCSP_RESPONSE(a, in, len) __d2i_OCSP_RESPONSE(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_RESPONSE(__reg("a6") struct Library * , __reg("a0") const OCSP_RESPONSE * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6414(a6)";
#define i2d_OCSP_RESPONSE(a, out) __i2d_OCSP_RESPONSE(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_RESPONSE_it(__reg("a6") struct Library * ) = "\tjsr\t-6420(a6)";
#define OCSP_RESPONSE_it() __OCSP_RESPONSE_it(AmiSSLBase)

OCSP_RESPBYTES * __OCSP_RESPBYTES_new(__reg("a6") struct Library * ) = "\tjsr\t-6426(a6)";
#define OCSP_RESPBYTES_new() __OCSP_RESPBYTES_new(AmiSSLBase)

void __OCSP_RESPBYTES_free(__reg("a6") struct Library * , __reg("a0") OCSP_RESPBYTES * a ) = "\tjsr\t-6432(a6)";
#define OCSP_RESPBYTES_free(a) __OCSP_RESPBYTES_free(AmiSSLBase, (a))

OCSP_RESPBYTES * __d2i_OCSP_RESPBYTES(__reg("a6") struct Library * , __reg("a0") OCSP_RESPBYTES ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6438(a6)";
#define d2i_OCSP_RESPBYTES(a, in, len) __d2i_OCSP_RESPBYTES(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_RESPBYTES(__reg("a6") struct Library * , __reg("a0") const OCSP_RESPBYTES * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6444(a6)";
#define i2d_OCSP_RESPBYTES(a, out) __i2d_OCSP_RESPBYTES(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_RESPBYTES_it(__reg("a6") struct Library * ) = "\tjsr\t-6450(a6)";
#define OCSP_RESPBYTES_it() __OCSP_RESPBYTES_it(AmiSSLBase)

OCSP_ONEREQ * __OCSP_ONEREQ_new(__reg("a6") struct Library * ) = "\tjsr\t-6456(a6)";
#define OCSP_ONEREQ_new() __OCSP_ONEREQ_new(AmiSSLBase)

void __OCSP_ONEREQ_free(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ * a ) = "\tjsr\t-6462(a6)";
#define OCSP_ONEREQ_free(a) __OCSP_ONEREQ_free(AmiSSLBase, (a))

OCSP_ONEREQ * __d2i_OCSP_ONEREQ(__reg("a6") struct Library * , __reg("a0") OCSP_ONEREQ ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6468(a6)";
#define d2i_OCSP_ONEREQ(a, in, len) __d2i_OCSP_ONEREQ(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_ONEREQ(__reg("a6") struct Library * , __reg("a0") const OCSP_ONEREQ * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6474(a6)";
#define i2d_OCSP_ONEREQ(a, out) __i2d_OCSP_ONEREQ(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_ONEREQ_it(__reg("a6") struct Library * ) = "\tjsr\t-6480(a6)";
#define OCSP_ONEREQ_it() __OCSP_ONEREQ_it(AmiSSLBase)

OCSP_CERTID * __OCSP_CERTID_new(__reg("a6") struct Library * ) = "\tjsr\t-6486(a6)";
#define OCSP_CERTID_new() __OCSP_CERTID_new(AmiSSLBase)

void __OCSP_CERTID_free(__reg("a6") struct Library * , __reg("a0") OCSP_CERTID * a ) = "\tjsr\t-6492(a6)";
#define OCSP_CERTID_free(a) __OCSP_CERTID_free(AmiSSLBase, (a))

OCSP_CERTID * __d2i_OCSP_CERTID(__reg("a6") struct Library * , __reg("a0") OCSP_CERTID ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6498(a6)";
#define d2i_OCSP_CERTID(a, in, len) __d2i_OCSP_CERTID(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_CERTID(__reg("a6") struct Library * , __reg("a0") const OCSP_CERTID * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6504(a6)";
#define i2d_OCSP_CERTID(a, out) __i2d_OCSP_CERTID(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_CERTID_it(__reg("a6") struct Library * ) = "\tjsr\t-6510(a6)";
#define OCSP_CERTID_it() __OCSP_CERTID_it(AmiSSLBase)

OCSP_REQUEST * __OCSP_REQUEST_new(__reg("a6") struct Library * ) = "\tjsr\t-6516(a6)";
#define OCSP_REQUEST_new() __OCSP_REQUEST_new(AmiSSLBase)

void __OCSP_REQUEST_free(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST * a ) = "\tjsr\t-6522(a6)";
#define OCSP_REQUEST_free(a) __OCSP_REQUEST_free(AmiSSLBase, (a))

OCSP_REQUEST * __d2i_OCSP_REQUEST(__reg("a6") struct Library * , __reg("a0") OCSP_REQUEST ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6528(a6)";
#define d2i_OCSP_REQUEST(a, in, len) __d2i_OCSP_REQUEST(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_REQUEST(__reg("a6") struct Library * , __reg("a0") const OCSP_REQUEST * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6534(a6)";
#define i2d_OCSP_REQUEST(a, out) __i2d_OCSP_REQUEST(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_REQUEST_it(__reg("a6") struct Library * ) = "\tjsr\t-6540(a6)";
#define OCSP_REQUEST_it() __OCSP_REQUEST_it(AmiSSLBase)

OCSP_SIGNATURE * __OCSP_SIGNATURE_new(__reg("a6") struct Library * ) = "\tjsr\t-6546(a6)";
#define OCSP_SIGNATURE_new() __OCSP_SIGNATURE_new(AmiSSLBase)

void __OCSP_SIGNATURE_free(__reg("a6") struct Library * , __reg("a0") OCSP_SIGNATURE * a ) = "\tjsr\t-6552(a6)";
#define OCSP_SIGNATURE_free(a) __OCSP_SIGNATURE_free(AmiSSLBase, (a))

OCSP_SIGNATURE * __d2i_OCSP_SIGNATURE(__reg("a6") struct Library * , __reg("a0") OCSP_SIGNATURE ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6558(a6)";
#define d2i_OCSP_SIGNATURE(a, in, len) __d2i_OCSP_SIGNATURE(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_SIGNATURE(__reg("a6") struct Library * , __reg("a0") const OCSP_SIGNATURE * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6564(a6)";
#define i2d_OCSP_SIGNATURE(a, out) __i2d_OCSP_SIGNATURE(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_SIGNATURE_it(__reg("a6") struct Library * ) = "\tjsr\t-6570(a6)";
#define OCSP_SIGNATURE_it() __OCSP_SIGNATURE_it(AmiSSLBase)

OCSP_REQINFO * __OCSP_REQINFO_new(__reg("a6") struct Library * ) = "\tjsr\t-6576(a6)";
#define OCSP_REQINFO_new() __OCSP_REQINFO_new(AmiSSLBase)

void __OCSP_REQINFO_free(__reg("a6") struct Library * , __reg("a0") OCSP_REQINFO * a ) = "\tjsr\t-6582(a6)";
#define OCSP_REQINFO_free(a) __OCSP_REQINFO_free(AmiSSLBase, (a))

OCSP_REQINFO * __d2i_OCSP_REQINFO(__reg("a6") struct Library * , __reg("a0") OCSP_REQINFO ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6588(a6)";
#define d2i_OCSP_REQINFO(a, in, len) __d2i_OCSP_REQINFO(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_REQINFO(__reg("a6") struct Library * , __reg("a0") const OCSP_REQINFO * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6594(a6)";
#define i2d_OCSP_REQINFO(a, out) __i2d_OCSP_REQINFO(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_REQINFO_it(__reg("a6") struct Library * ) = "\tjsr\t-6600(a6)";
#define OCSP_REQINFO_it() __OCSP_REQINFO_it(AmiSSLBase)

OCSP_CRLID * __OCSP_CRLID_new(__reg("a6") struct Library * ) = "\tjsr\t-6606(a6)";
#define OCSP_CRLID_new() __OCSP_CRLID_new(AmiSSLBase)

void __OCSP_CRLID_free(__reg("a6") struct Library * , __reg("a0") OCSP_CRLID * a ) = "\tjsr\t-6612(a6)";
#define OCSP_CRLID_free(a) __OCSP_CRLID_free(AmiSSLBase, (a))

OCSP_CRLID * __d2i_OCSP_CRLID(__reg("a6") struct Library * , __reg("a0") OCSP_CRLID ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6618(a6)";
#define d2i_OCSP_CRLID(a, in, len) __d2i_OCSP_CRLID(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_CRLID(__reg("a6") struct Library * , __reg("a0") const OCSP_CRLID * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6624(a6)";
#define i2d_OCSP_CRLID(a, out) __i2d_OCSP_CRLID(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_CRLID_it(__reg("a6") struct Library * ) = "\tjsr\t-6630(a6)";
#define OCSP_CRLID_it() __OCSP_CRLID_it(AmiSSLBase)

OCSP_SERVICELOC * __OCSP_SERVICELOC_new(__reg("a6") struct Library * ) = "\tjsr\t-6636(a6)";
#define OCSP_SERVICELOC_new() __OCSP_SERVICELOC_new(AmiSSLBase)

void __OCSP_SERVICELOC_free(__reg("a6") struct Library * , __reg("a0") OCSP_SERVICELOC * a ) = "\tjsr\t-6642(a6)";
#define OCSP_SERVICELOC_free(a) __OCSP_SERVICELOC_free(AmiSSLBase, (a))

OCSP_SERVICELOC * __d2i_OCSP_SERVICELOC(__reg("a6") struct Library * , __reg("a0") OCSP_SERVICELOC ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-6648(a6)";
#define d2i_OCSP_SERVICELOC(a, in, len) __d2i_OCSP_SERVICELOC(AmiSSLBase, (a), (in), (len))

int __i2d_OCSP_SERVICELOC(__reg("a6") struct Library * , __reg("a0") const OCSP_SERVICELOC * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-6654(a6)";
#define i2d_OCSP_SERVICELOC(a, out) __i2d_OCSP_SERVICELOC(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OCSP_SERVICELOC_it(__reg("a6") struct Library * ) = "\tjsr\t-6660(a6)";
#define OCSP_SERVICELOC_it() __OCSP_SERVICELOC_it(AmiSSLBase)

const char * __OCSP_response_status_str(__reg("a6") struct Library * , __reg("d0") long s ) = "\tjsr\t-6666(a6)";
#define OCSP_response_status_str(s) __OCSP_response_status_str(AmiSSLBase, (s))

const char * __OCSP_cert_status_str(__reg("a6") struct Library * , __reg("d0") long s ) = "\tjsr\t-6672(a6)";
#define OCSP_cert_status_str(s) __OCSP_cert_status_str(AmiSSLBase, (s))

const char * __OCSP_crl_reason_str(__reg("a6") struct Library * , __reg("d0") long s ) = "\tjsr\t-6678(a6)";
#define OCSP_crl_reason_str(s) __OCSP_crl_reason_str(AmiSSLBase, (s))

int __OCSP_REQUEST_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") OCSP_REQUEST * a , __reg("d0") unsigned long flags ) = "\tjsr\t-6684(a6)";
#define OCSP_REQUEST_print(bp, a, flags) __OCSP_REQUEST_print(AmiSSLBase, (bp), (a), (flags))

int __OCSP_RESPONSE_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") OCSP_RESPONSE * o , __reg("d0") unsigned long flags ) = "\tjsr\t-6690(a6)";
#define OCSP_RESPONSE_print(bp, o, flags) __OCSP_RESPONSE_print(AmiSSLBase, (bp), (o), (flags))

int __OCSP_basic_verify(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * bs , __reg("a1") STACK_OF(X509) * certs , __reg("a2") X509_STORE * st , __reg("d0") unsigned long flags ) = "\tjsr\t-6696(a6)";
#define OCSP_basic_verify(bs, certs, st, flags) __OCSP_basic_verify(AmiSSLBase, (bs), (certs), (st), (flags))

int __ERR_load_OCSP_strings(__reg("a6") struct Library * ) = "\tjsr\t-6702(a6)";
#define ERR_load_OCSP_strings() __ERR_load_OCSP_strings(AmiSSLBase)

int __PEM_get_EVP_CIPHER_INFO(__reg("a6") struct Library * , __reg("a0") char * header , __reg("a1") EVP_CIPHER_INFO * cipher ) = "\tjsr\t-6708(a6)";
#define PEM_get_EVP_CIPHER_INFO(header, cipher) __PEM_get_EVP_CIPHER_INFO(AmiSSLBase, (header), (cipher))

int __PEM_do_header(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_INFO * cipher , __reg("a1") unsigned char * data , __reg("a2") long * len , __reg("a3") pem_password_cb * callback , __reg("d0") void * u ) = "\tjsr\t-6714(a6)";
#define PEM_do_header(cipher, data, len, callback, u) __PEM_do_header(AmiSSLBase, (cipher), (data), (len), (callback), (u))

int __PEM_read_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") char ** name , __reg("a2") char ** header , __reg("a3") unsigned char ** data , __reg("d0") long * len ) = "\tjsr\t-6720(a6)";
#define PEM_read_bio(bp, name, header, data, len) __PEM_read_bio(AmiSSLBase, (bp), (name), (header), (data), (len))

int __PEM_write_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const char * name , __reg("a2") const char * hdr , __reg("a3") const unsigned char * data , __reg("d0") long len ) = "\tjsr\t-6726(a6)";
#define PEM_write_bio(bp, name, hdr, data, len) __PEM_write_bio(AmiSSLBase, (bp), (name), (hdr), (data), (len))

int __PEM_bytes_read_bio(__reg("a6") struct Library * , __reg("a0") unsigned char ** pdata , __reg("a1") long * plen , __reg("a2") char ** pnm , __reg("a3") const char * name , __reg("d0") BIO * bp , __reg("d1") pem_password_cb * cb , __reg("d2") void * u ) = "\tjsr\t-6732(a6)";
#define PEM_bytes_read_bio(pdata, plen, pnm, name, bp, cb, u) __PEM_bytes_read_bio(AmiSSLBase, (pdata), (plen), (pnm), (name), (bp), (cb), (u))

void * __PEM_ASN1_read_bio(__reg("a6") struct Library * , __reg("a0") d2i_of_void * d2i , __reg("a1") const char * name , __reg("a2") BIO * bp , __reg("a3") void ** x , __reg("d0") pem_password_cb * cb , __reg("d1") void * u ) = "\tjsr\t-6738(a6)";
#define PEM_ASN1_read_bio(d2i, name, bp, x, cb, u) __PEM_ASN1_read_bio(AmiSSLBase, (d2i), (name), (bp), (x), (cb), (u))

int __PEM_ASN1_write_bio(__reg("a6") struct Library * , __reg("a0") i2d_of_void * i2d , __reg("a1") const char * name , __reg("a2") BIO * bp , __reg("a3") const void * x , __reg("d0") const EVP_CIPHER * enc , __reg("d1") const unsigned char * kstr , __reg("d2") int klen , __reg("d3") pem_password_cb * cb , __reg("d4") void * u ) = "\tjsr\t-6744(a6)";
#define PEM_ASN1_write_bio(i2d, name, bp, x, enc, kstr, klen, cb, u) __PEM_ASN1_write_bio(AmiSSLBase, (i2d), (name), (bp), (x), (enc), (kstr), (klen), (cb), (u))

STACK_OF(X509_INFO) * __PEM_X509_INFO_read_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") STACK_OF(X509_INFO) * sk , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6750(a6)";
#define PEM_X509_INFO_read_bio(bp, sk, cb, u) __PEM_X509_INFO_read_bio(AmiSSLBase, (bp), (sk), (cb), (u))

int __PEM_X509_INFO_write_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509_INFO * xi , __reg("a2") EVP_CIPHER * enc , __reg("a3") const unsigned char * kstr , __reg("d0") int klen , __reg("d1") pem_password_cb * cd , __reg("d2") void * u ) = "\tjsr\t-6756(a6)";
#define PEM_X509_INFO_write_bio(bp, xi, enc, kstr, klen, cd, u) __PEM_X509_INFO_write_bio(AmiSSLBase, (bp), (xi), (enc), (kstr), (klen), (cd), (u))

int __PEM_SignInit(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") EVP_MD * type ) = "\tjsr\t-6780(a6)";
#define PEM_SignInit(ctx, type) __PEM_SignInit(AmiSSLBase, (ctx), (type))

int __PEM_SignUpdate(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") const unsigned char * d , __reg("d0") unsigned int cnt ) = "\tjsr\t-6786(a6)";
#define PEM_SignUpdate(ctx, d, cnt) __PEM_SignUpdate(AmiSSLBase, (ctx), (d), (cnt))

int __PEM_SignFinal(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") unsigned char * sigret , __reg("a2") unsigned int * siglen , __reg("a3") EVP_PKEY * pkey ) = "\tjsr\t-6792(a6)";
#define PEM_SignFinal(ctx, sigret, siglen, pkey) __PEM_SignFinal(AmiSSLBase, (ctx), (sigret), (siglen), (pkey))

int __PEM_def_callback(__reg("a6") struct Library * , __reg("a0") char * buf , __reg("d0") int num , __reg("d1") int w , __reg("a1") void * key ) = "\tjsr\t-6798(a6)";
#define PEM_def_callback(buf, num, w, key) __PEM_def_callback(AmiSSLBase, (buf), (num), (w), (key))

void __PEM_proc_type(__reg("a6") struct Library * , __reg("a0") char * buf , __reg("d0") int type ) = "\tjsr\t-6804(a6)";
#define PEM_proc_type(buf, type) __PEM_proc_type(AmiSSLBase, (buf), (type))

void __PEM_dek_info(__reg("a6") struct Library * , __reg("a0") char * buf , __reg("a1") const char * type , __reg("d0") int len , __reg("a2") const char * str ) = "\tjsr\t-6810(a6)";
#define PEM_dek_info(buf, type, len, str) __PEM_dek_info(AmiSSLBase, (buf), (type), (len), (str))

X509 * __PEM_read_bio_X509(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509 ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6816(a6)";
#define PEM_read_bio_X509(bp, x, cb, u) __PEM_read_bio_X509(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_X509(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509 * x ) = "\tjsr\t-6822(a6)";
#define PEM_write_bio_X509(bp, x) __PEM_write_bio_X509(AmiSSLBase, (bp), (x))

X509 * __PEM_read_bio_X509_AUX(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509 ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6828(a6)";
#define PEM_read_bio_X509_AUX(bp, x, cb, u) __PEM_read_bio_X509_AUX(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_X509_AUX(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509 * x ) = "\tjsr\t-6834(a6)";
#define PEM_write_bio_X509_AUX(bp, x) __PEM_write_bio_X509_AUX(AmiSSLBase, (bp), (x))

X509_REQ * __PEM_read_bio_X509_REQ(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509_REQ ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6840(a6)";
#define PEM_read_bio_X509_REQ(bp, x, cb, u) __PEM_read_bio_X509_REQ(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_X509_REQ(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509_REQ * x ) = "\tjsr\t-6846(a6)";
#define PEM_write_bio_X509_REQ(bp, x) __PEM_write_bio_X509_REQ(AmiSSLBase, (bp), (x))

int __PEM_write_bio_X509_REQ_NEW(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509_REQ * x ) = "\tjsr\t-6852(a6)";
#define PEM_write_bio_X509_REQ_NEW(bp, x) __PEM_write_bio_X509_REQ_NEW(AmiSSLBase, (bp), (x))

X509_CRL * __PEM_read_bio_X509_CRL(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509_CRL ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6858(a6)";
#define PEM_read_bio_X509_CRL(bp, x, cb, u) __PEM_read_bio_X509_CRL(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_X509_CRL(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509_CRL * x ) = "\tjsr\t-6864(a6)";
#define PEM_write_bio_X509_CRL(bp, x) __PEM_write_bio_X509_CRL(AmiSSLBase, (bp), (x))

PKCS7 * __PEM_read_bio_PKCS7(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") PKCS7 ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6870(a6)";
#define PEM_read_bio_PKCS7(bp, x, cb, u) __PEM_read_bio_PKCS7(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_PKCS7(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const PKCS7 * x ) = "\tjsr\t-6876(a6)";
#define PEM_write_bio_PKCS7(bp, x) __PEM_write_bio_PKCS7(AmiSSLBase, (bp), (x))

NETSCAPE_CERT_SEQUENCE * __PEM_read_bio_NETSCAPE_CERT_SEQUENCE(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") NETSCAPE_CERT_SEQUENCE ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6882(a6)";
#define PEM_read_bio_NETSCAPE_CERT_SEQUENCE(bp, x, cb, u) __PEM_read_bio_NETSCAPE_CERT_SEQUENCE(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_NETSCAPE_CERT_SEQUENCE(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const NETSCAPE_CERT_SEQUENCE * x ) = "\tjsr\t-6888(a6)";
#define PEM_write_bio_NETSCAPE_CERT_SEQUENCE(bp, x) __PEM_write_bio_NETSCAPE_CERT_SEQUENCE(AmiSSLBase, (bp), (x))

X509_SIG * __PEM_read_bio_PKCS8(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509_SIG ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6894(a6)";
#define PEM_read_bio_PKCS8(bp, x, cb, u) __PEM_read_bio_PKCS8(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_PKCS8(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509_SIG * x ) = "\tjsr\t-6900(a6)";
#define PEM_write_bio_PKCS8(bp, x) __PEM_write_bio_PKCS8(AmiSSLBase, (bp), (x))

PKCS8_PRIV_KEY_INFO * __PEM_read_bio_PKCS8_PRIV_KEY_INFO(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") PKCS8_PRIV_KEY_INFO ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6906(a6)";
#define PEM_read_bio_PKCS8_PRIV_KEY_INFO(bp, x, cb, u) __PEM_read_bio_PKCS8_PRIV_KEY_INFO(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_PKCS8_PRIV_KEY_INFO(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const PKCS8_PRIV_KEY_INFO * x ) = "\tjsr\t-6912(a6)";
#define PEM_write_bio_PKCS8_PRIV_KEY_INFO(bp, x) __PEM_write_bio_PKCS8_PRIV_KEY_INFO(AmiSSLBase, (bp), (x))

RSA * __PEM_read_bio_RSAPrivateKey(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") RSA ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6918(a6)";
#define PEM_read_bio_RSAPrivateKey(bp, x, cb, u) __PEM_read_bio_RSAPrivateKey(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_RSAPrivateKey(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const RSA * x , __reg("a2") const EVP_CIPHER * enc , __reg("a3") const unsigned char * kstr , __reg("d0") int klen , __reg("d1") pem_password_cb * cb , __reg("d2") void * u ) = "\tjsr\t-6924(a6)";
#define PEM_write_bio_RSAPrivateKey(bp, x, enc, kstr, klen, cb, u) __PEM_write_bio_RSAPrivateKey(AmiSSLBase, (bp), (x), (enc), (kstr), (klen), (cb), (u))

RSA * __PEM_read_bio_RSAPublicKey(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") RSA ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6930(a6)";
#define PEM_read_bio_RSAPublicKey(bp, x, cb, u) __PEM_read_bio_RSAPublicKey(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_RSAPublicKey(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const RSA * x ) = "\tjsr\t-6936(a6)";
#define PEM_write_bio_RSAPublicKey(bp, x) __PEM_write_bio_RSAPublicKey(AmiSSLBase, (bp), (x))

RSA * __PEM_read_bio_RSA_PUBKEY(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") RSA ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6942(a6)";
#define PEM_read_bio_RSA_PUBKEY(bp, x, cb, u) __PEM_read_bio_RSA_PUBKEY(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_RSA_PUBKEY(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const RSA * x ) = "\tjsr\t-6948(a6)";
#define PEM_write_bio_RSA_PUBKEY(bp, x) __PEM_write_bio_RSA_PUBKEY(AmiSSLBase, (bp), (x))

DSA * __PEM_read_bio_DSAPrivateKey(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") DSA ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6954(a6)";
#define PEM_read_bio_DSAPrivateKey(bp, x, cb, u) __PEM_read_bio_DSAPrivateKey(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_DSAPrivateKey(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const DSA * x , __reg("a2") const EVP_CIPHER * enc , __reg("a3") const unsigned char * kstr , __reg("d0") int klen , __reg("d1") pem_password_cb * cb , __reg("d2") void * u ) = "\tjsr\t-6960(a6)";
#define PEM_write_bio_DSAPrivateKey(bp, x, enc, kstr, klen, cb, u) __PEM_write_bio_DSAPrivateKey(AmiSSLBase, (bp), (x), (enc), (kstr), (klen), (cb), (u))

DSA * __PEM_read_bio_DSA_PUBKEY(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") DSA ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6966(a6)";
#define PEM_read_bio_DSA_PUBKEY(bp, x, cb, u) __PEM_read_bio_DSA_PUBKEY(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_DSA_PUBKEY(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const DSA * x ) = "\tjsr\t-6972(a6)";
#define PEM_write_bio_DSA_PUBKEY(bp, x) __PEM_write_bio_DSA_PUBKEY(AmiSSLBase, (bp), (x))

DSA * __PEM_read_bio_DSAparams(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") DSA ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6978(a6)";
#define PEM_read_bio_DSAparams(bp, x, cb, u) __PEM_read_bio_DSAparams(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_DSAparams(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const DSA * x ) = "\tjsr\t-6984(a6)";
#define PEM_write_bio_DSAparams(bp, x) __PEM_write_bio_DSAparams(AmiSSLBase, (bp), (x))

DH * __PEM_read_bio_DHparams(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") DH ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-6990(a6)";
#define PEM_read_bio_DHparams(bp, x, cb, u) __PEM_read_bio_DHparams(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_DHparams(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const DH * x ) = "\tjsr\t-6996(a6)";
#define PEM_write_bio_DHparams(bp, x) __PEM_write_bio_DHparams(AmiSSLBase, (bp), (x))

EVP_PKEY * __PEM_read_bio_PrivateKey(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") EVP_PKEY ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-7002(a6)";
#define PEM_read_bio_PrivateKey(bp, x, cb, u) __PEM_read_bio_PrivateKey(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_PrivateKey(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EVP_PKEY * x , __reg("a2") const EVP_CIPHER * enc , __reg("a3") const unsigned char * kstr , __reg("d0") int klen , __reg("d1") pem_password_cb * cb , __reg("d2") void * u ) = "\tjsr\t-7008(a6)";
#define PEM_write_bio_PrivateKey(bp, x, enc, kstr, klen, cb, u) __PEM_write_bio_PrivateKey(AmiSSLBase, (bp), (x), (enc), (kstr), (klen), (cb), (u))

EVP_PKEY * __PEM_read_bio_PUBKEY(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") EVP_PKEY ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-7014(a6)";
#define PEM_read_bio_PUBKEY(bp, x, cb, u) __PEM_read_bio_PUBKEY(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_PUBKEY(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EVP_PKEY * x ) = "\tjsr\t-7020(a6)";
#define PEM_write_bio_PUBKEY(bp, x) __PEM_write_bio_PUBKEY(AmiSSLBase, (bp), (x))

int __PEM_write_bio_PKCS8PrivateKey_nid(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EVP_PKEY * x , __reg("d0") int nid , __reg("a2") const char * kstr , __reg("d1") int klen , __reg("a3") pem_password_cb * cb , __reg("d2") void * u ) = "\tjsr\t-7026(a6)";
#define PEM_write_bio_PKCS8PrivateKey_nid(bp, x, nid, kstr, klen, cb, u) __PEM_write_bio_PKCS8PrivateKey_nid(AmiSSLBase, (bp), (x), (nid), (kstr), (klen), (cb), (u))

int __PEM_write_bio_PKCS8PrivateKey(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EVP_PKEY * x , __reg("a2") const EVP_CIPHER * enc , __reg("a3") const char * kstr , __reg("d0") int klen , __reg("d1") pem_password_cb * cb , __reg("d2") void * u ) = "\tjsr\t-7032(a6)";
#define PEM_write_bio_PKCS8PrivateKey(bp, x, enc, kstr, klen, cb, u) __PEM_write_bio_PKCS8PrivateKey(AmiSSLBase, (bp), (x), (enc), (kstr), (klen), (cb), (u))

int __i2d_PKCS8PrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EVP_PKEY * x , __reg("a2") const EVP_CIPHER * enc , __reg("a3") const char * kstr , __reg("d0") int klen , __reg("d1") pem_password_cb * cb , __reg("d2") void * u ) = "\tjsr\t-7038(a6)";
#define i2d_PKCS8PrivateKey_bio(bp, x, enc, kstr, klen, cb, u) __i2d_PKCS8PrivateKey_bio(AmiSSLBase, (bp), (x), (enc), (kstr), (klen), (cb), (u))

int __i2d_PKCS8PrivateKey_nid_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EVP_PKEY * x , __reg("d0") int nid , __reg("a2") const char * kstr , __reg("d1") int klen , __reg("a3") pem_password_cb * cb , __reg("d2") void * u ) = "\tjsr\t-7044(a6)";
#define i2d_PKCS8PrivateKey_nid_bio(bp, x, nid, kstr, klen, cb, u) __i2d_PKCS8PrivateKey_nid_bio(AmiSSLBase, (bp), (x), (nid), (kstr), (klen), (cb), (u))

EVP_PKEY * __d2i_PKCS8PrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") EVP_PKEY ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-7050(a6)";
#define d2i_PKCS8PrivateKey_bio(bp, x, cb, u) __d2i_PKCS8PrivateKey_bio(AmiSSLBase, (bp), (x), (cb), (u))

int __ERR_load_PEM_strings(__reg("a6") struct Library * ) = "\tjsr\t-7056(a6)";
#define ERR_load_PEM_strings() __ERR_load_PEM_strings(AmiSSLBase)

PKCS12_SAFEBAG * __OBSOLETE_PKCS12_x5092certbag(__reg("a6") struct Library * , __reg("a0") X509 * x509 ) = "\tjsr\t-7062(a6)";
#define OBSOLETE_PKCS12_x5092certbag(x509) __OBSOLETE_PKCS12_x5092certbag(AmiSSLBase, (x509))

PKCS12_SAFEBAG * __OBSOLETE_PKCS12_x509crl2certbag(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl ) = "\tjsr\t-7068(a6)";
#define OBSOLETE_PKCS12_x509crl2certbag(crl) __OBSOLETE_PKCS12_x509crl2certbag(AmiSSLBase, (crl))

X509 * __OBSOLETE_PKCS12_certbag2x509(__reg("a6") struct Library * , __reg("a0") PKCS12_SAFEBAG * bag ) = "\tjsr\t-7074(a6)";
#define OBSOLETE_PKCS12_certbag2x509(bag) __OBSOLETE_PKCS12_certbag2x509(AmiSSLBase, (bag))

PKCS12_SAFEBAG * __PKCS12_item_pack_safebag(__reg("a6") struct Library * , __reg("a0") void * obj , __reg("a1") const ASN1_ITEM * it , __reg("d0") int nid1 , __reg("d1") int nid2 ) = "\tjsr\t-7086(a6)";
#define PKCS12_item_pack_safebag(obj, it, nid1, nid2) __PKCS12_item_pack_safebag(AmiSSLBase, (obj), (it), (nid1), (nid2))

PKCS12_SAFEBAG * __OBSOLETE_PKCS12_MAKE_KEYBAG(__reg("a6") struct Library * , __reg("a0") PKCS8_PRIV_KEY_INFO * p8 ) = "\tjsr\t-7092(a6)";
#define OBSOLETE_PKCS12_MAKE_KEYBAG(p8) __OBSOLETE_PKCS12_MAKE_KEYBAG(AmiSSLBase, (p8))

PKCS8_PRIV_KEY_INFO * __PKCS8_decrypt(__reg("a6") struct Library * , __reg("a0") const X509_SIG * p8 , __reg("a1") const char * pass , __reg("d0") int passlen ) = "\tjsr\t-7098(a6)";
#define PKCS8_decrypt(p8, pass, passlen) __PKCS8_decrypt(AmiSSLBase, (p8), (pass), (passlen))

PKCS8_PRIV_KEY_INFO * __PKCS12_decrypt_skey(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag , __reg("a1") const char * pass , __reg("d0") int passlen ) = "\tjsr\t-7104(a6)";
#define PKCS12_decrypt_skey(bag, pass, passlen) __PKCS12_decrypt_skey(AmiSSLBase, (bag), (pass), (passlen))

X509_SIG * __PKCS8_encrypt(__reg("a6") struct Library * , __reg("d0") int pbe_nid , __reg("a0") const EVP_CIPHER * cipher , __reg("a1") const char * pass , __reg("d1") int passlen , __reg("a2") unsigned char * salt , __reg("d2") int saltlen , __reg("d3") int iter , __reg("a3") PKCS8_PRIV_KEY_INFO * p8 ) = "\tjsr\t-7110(a6)";
#define PKCS8_encrypt(pbe_nid, cipher, pass, passlen, salt, saltlen, iter, p8) __PKCS8_encrypt(AmiSSLBase, (pbe_nid), (cipher), (pass), (passlen), (salt), (saltlen), (iter), (p8))

PKCS12_SAFEBAG * __OBSOLETE_PKCS12_MAKE_SHKEYBAG(__reg("a6") struct Library * , __reg("d0") int pbe_nid , __reg("a0") const char * pass , __reg("d1") int passlen , __reg("a1") unsigned char * salt , __reg("d2") int saltlen , __reg("d3") int iter , __reg("a2") PKCS8_PRIV_KEY_INFO * p8 ) = "\tjsr\t-7116(a6)";
#define OBSOLETE_PKCS12_MAKE_SHKEYBAG(pbe_nid, pass, passlen, salt, saltlen, iter, p8) __OBSOLETE_PKCS12_MAKE_SHKEYBAG(AmiSSLBase, (pbe_nid), (pass), (passlen), (salt), (saltlen), (iter), (p8))

PKCS7 * __PKCS12_pack_p7data(__reg("a6") struct Library * , __reg("a0") STACK_OF(PKCS12_SAFEBAG) * sk ) = "\tjsr\t-7122(a6)";
#define PKCS12_pack_p7data(sk) __PKCS12_pack_p7data(AmiSSLBase, (sk))

STACK_OF(PKCS12_SAFEBAG) * __PKCS12_unpack_p7data(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 ) = "\tjsr\t-7128(a6)";
#define PKCS12_unpack_p7data(p7) __PKCS12_unpack_p7data(AmiSSLBase, (p7))

PKCS7 * __PKCS12_pack_p7encdata(__reg("a6") struct Library * , __reg("d0") int pbe_nid , __reg("a0") const char * pass , __reg("d1") int passlen , __reg("a1") unsigned char * salt , __reg("d2") int saltlen , __reg("d3") int iter , __reg("a2") STACK_OF(PKCS12_SAFEBAG) * bags ) = "\tjsr\t-7134(a6)";
#define PKCS12_pack_p7encdata(pbe_nid, pass, passlen, salt, saltlen, iter, bags) __PKCS12_pack_p7encdata(AmiSSLBase, (pbe_nid), (pass), (passlen), (salt), (saltlen), (iter), (bags))

STACK_OF(PKCS12_SAFEBAG) * __PKCS12_unpack_p7encdata(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") const char * pass , __reg("d0") int passlen ) = "\tjsr\t-7140(a6)";
#define PKCS12_unpack_p7encdata(p7, pass, passlen) __PKCS12_unpack_p7encdata(AmiSSLBase, (p7), (pass), (passlen))

int __PKCS12_pack_authsafes(__reg("a6") struct Library * , __reg("a0") PKCS12 * p12 , __reg("a1") STACK_OF(PKCS7) * safes ) = "\tjsr\t-7146(a6)";
#define PKCS12_pack_authsafes(p12, safes) __PKCS12_pack_authsafes(AmiSSLBase, (p12), (safes))

STACK_OF(PKCS7) * __PKCS12_unpack_authsafes(__reg("a6") struct Library * , __reg("a0") const PKCS12 * p12 ) = "\tjsr\t-7152(a6)";
#define PKCS12_unpack_authsafes(p12) __PKCS12_unpack_authsafes(AmiSSLBase, (p12))

int __PKCS12_add_localkeyid(__reg("a6") struct Library * , __reg("a0") PKCS12_SAFEBAG * bag , __reg("a1") unsigned char * name , __reg("d0") int namelen ) = "\tjsr\t-7158(a6)";
#define PKCS12_add_localkeyid(bag, name, namelen) __PKCS12_add_localkeyid(AmiSSLBase, (bag), (name), (namelen))

int __PKCS12_add_friendlyname_asc(__reg("a6") struct Library * , __reg("a0") PKCS12_SAFEBAG * bag , __reg("a1") const char * name , __reg("d0") int namelen ) = "\tjsr\t-7164(a6)";
#define PKCS12_add_friendlyname_asc(bag, name, namelen) __PKCS12_add_friendlyname_asc(AmiSSLBase, (bag), (name), (namelen))

int __PKCS12_add_CSPName_asc(__reg("a6") struct Library * , __reg("a0") PKCS12_SAFEBAG * bag , __reg("a1") const char * name , __reg("d0") int namelen ) = "\tjsr\t-7170(a6)";
#define PKCS12_add_CSPName_asc(bag, name, namelen) __PKCS12_add_CSPName_asc(AmiSSLBase, (bag), (name), (namelen))

int __PKCS12_add_friendlyname_uni(__reg("a6") struct Library * , __reg("a0") PKCS12_SAFEBAG * bag , __reg("a1") const unsigned char * name , __reg("d0") int namelen ) = "\tjsr\t-7176(a6)";
#define PKCS12_add_friendlyname_uni(bag, name, namelen) __PKCS12_add_friendlyname_uni(AmiSSLBase, (bag), (name), (namelen))

int __PKCS8_add_keyusage(__reg("a6") struct Library * , __reg("a0") PKCS8_PRIV_KEY_INFO * p8 , __reg("d0") int usage ) = "\tjsr\t-7182(a6)";
#define PKCS8_add_keyusage(p8, usage) __PKCS8_add_keyusage(AmiSSLBase, (p8), (usage))

ASN1_TYPE * __PKCS12_get_attr_gen(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_ATTRIBUTE) * attrs , __reg("d0") int attr_nid ) = "\tjsr\t-7188(a6)";
#define PKCS12_get_attr_gen(attrs, attr_nid) __PKCS12_get_attr_gen(AmiSSLBase, (attrs), (attr_nid))

char * __PKCS12_get_friendlyname(__reg("a6") struct Library * , __reg("a0") PKCS12_SAFEBAG * bag ) = "\tjsr\t-7194(a6)";
#define PKCS12_get_friendlyname(bag) __PKCS12_get_friendlyname(AmiSSLBase, (bag))

unsigned char * __PKCS12_pbe_crypt(__reg("a6") struct Library * , __reg("a0") const X509_ALGOR * algor , __reg("a1") const char * pass , __reg("d0") int passlen , __reg("a2") const unsigned char * in , __reg("d1") int inlen , __reg("a3") unsigned char ** data , __reg("d2") int * datalen , __reg("d3") int en_de ) = "\tjsr\t-7200(a6)";
#define PKCS12_pbe_crypt(algor, pass, passlen, in, inlen, data, datalen, en_de) __PKCS12_pbe_crypt(AmiSSLBase, (algor), (pass), (passlen), (in), (inlen), (data), (datalen), (en_de))

void * __PKCS12_item_decrypt_d2i(__reg("a6") struct Library * , __reg("a0") const X509_ALGOR * algor , __reg("a1") const ASN1_ITEM * it , __reg("a2") const char * pass , __reg("d0") int passlen , __reg("a3") const ASN1_OCTET_STRING * oct , __reg("d1") int zbuf ) = "\tjsr\t-7206(a6)";
#define PKCS12_item_decrypt_d2i(algor, it, pass, passlen, oct, zbuf) __PKCS12_item_decrypt_d2i(AmiSSLBase, (algor), (it), (pass), (passlen), (oct), (zbuf))

ASN1_OCTET_STRING * __PKCS12_item_i2d_encrypt(__reg("a6") struct Library * , __reg("a0") X509_ALGOR * algor , __reg("a1") const ASN1_ITEM * it , __reg("a2") const char * pass , __reg("d0") int passlen , __reg("a3") void * obj , __reg("d1") int zbuf ) = "\tjsr\t-7212(a6)";
#define PKCS12_item_i2d_encrypt(algor, it, pass, passlen, obj, zbuf) __PKCS12_item_i2d_encrypt(AmiSSLBase, (algor), (it), (pass), (passlen), (obj), (zbuf))

PKCS12 * __PKCS12_init(__reg("a6") struct Library * , __reg("d0") int mode ) = "\tjsr\t-7218(a6)";
#define PKCS12_init(mode) __PKCS12_init(AmiSSLBase, (mode))

int __PKCS12_key_gen_asc(__reg("a6") struct Library * , __reg("a0") const char * pass , __reg("d0") int passlen , __reg("a1") unsigned char * salt , __reg("d1") int saltlen , __reg("d2") int id , __reg("d3") int iter , __reg("d4") int n , __reg("a2") unsigned char * out , __reg("a3") const EVP_MD * md_type ) = "\tjsr\t-7224(a6)";
#define PKCS12_key_gen_asc(pass, passlen, salt, saltlen, id, iter, n, out, md_type) __PKCS12_key_gen_asc(AmiSSLBase, (pass), (passlen), (salt), (saltlen), (id), (iter), (n), (out), (md_type))

int __PKCS12_key_gen_uni(__reg("a6") struct Library * , __reg("a0") unsigned char * pass , __reg("d0") int passlen , __reg("a1") unsigned char * salt , __reg("d1") int saltlen , __reg("d2") int id , __reg("d3") int iter , __reg("d4") int n , __reg("a2") unsigned char * out , __reg("a3") const EVP_MD * md_type ) = "\tjsr\t-7230(a6)";
#define PKCS12_key_gen_uni(pass, passlen, salt, saltlen, id, iter, n, out, md_type) __PKCS12_key_gen_uni(AmiSSLBase, (pass), (passlen), (salt), (saltlen), (id), (iter), (n), (out), (md_type))

int __PKCS12_PBE_keyivgen(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const char * pass , __reg("d0") int passlen , __reg("a2") ASN1_TYPE * param , __reg("a3") const EVP_CIPHER * cipher , __reg("d1") const EVP_MD * md_type , __reg("d2") int en_de ) = "\tjsr\t-7236(a6)";
#define PKCS12_PBE_keyivgen(ctx, pass, passlen, param, cipher, md_type, en_de) __PKCS12_PBE_keyivgen(AmiSSLBase, (ctx), (pass), (passlen), (param), (cipher), (md_type), (en_de))

int __PKCS12_gen_mac(__reg("a6") struct Library * , __reg("a0") PKCS12 * p12 , __reg("a1") const char * pass , __reg("d0") int passlen , __reg("a2") unsigned char * mac , __reg("a3") unsigned int * maclen ) = "\tjsr\t-7242(a6)";
#define PKCS12_gen_mac(p12, pass, passlen, mac, maclen) __PKCS12_gen_mac(AmiSSLBase, (p12), (pass), (passlen), (mac), (maclen))

int __PKCS12_verify_mac(__reg("a6") struct Library * , __reg("a0") PKCS12 * p12 , __reg("a1") const char * pass , __reg("d0") int passlen ) = "\tjsr\t-7248(a6)";
#define PKCS12_verify_mac(p12, pass, passlen) __PKCS12_verify_mac(AmiSSLBase, (p12), (pass), (passlen))

int __PKCS12_set_mac(__reg("a6") struct Library * , __reg("a0") PKCS12 * p12 , __reg("a1") const char * pass , __reg("d0") int passlen , __reg("a2") unsigned char * salt , __reg("d1") int saltlen , __reg("d2") int iter , __reg("a3") const EVP_MD * md_type ) = "\tjsr\t-7254(a6)";
#define PKCS12_set_mac(p12, pass, passlen, salt, saltlen, iter, md_type) __PKCS12_set_mac(AmiSSLBase, (p12), (pass), (passlen), (salt), (saltlen), (iter), (md_type))

int __PKCS12_setup_mac(__reg("a6") struct Library * , __reg("a0") PKCS12 * p12 , __reg("d0") int iter , __reg("a1") unsigned char * salt , __reg("d1") int saltlen , __reg("a2") const EVP_MD * md_type ) = "\tjsr\t-7260(a6)";
#define PKCS12_setup_mac(p12, iter, salt, saltlen, md_type) __PKCS12_setup_mac(AmiSSLBase, (p12), (iter), (salt), (saltlen), (md_type))

unsigned char * __OPENSSL_asc2uni(__reg("a6") struct Library * , __reg("a0") const char * asc , __reg("d0") int asclen , __reg("a1") unsigned char ** uni , __reg("a2") int * unilen ) = "\tjsr\t-7266(a6)";
#define OPENSSL_asc2uni(asc, asclen, uni, unilen) __OPENSSL_asc2uni(AmiSSLBase, (asc), (asclen), (uni), (unilen))

char * __OPENSSL_uni2asc(__reg("a6") struct Library * , __reg("a0") const unsigned char * uni , __reg("d0") int unilen ) = "\tjsr\t-7272(a6)";
#define OPENSSL_uni2asc(uni, unilen) __OPENSSL_uni2asc(AmiSSLBase, (uni), (unilen))

PKCS12 * __PKCS12_new(__reg("a6") struct Library * ) = "\tjsr\t-7278(a6)";
#define PKCS12_new() __PKCS12_new(AmiSSLBase)

void __PKCS12_free(__reg("a6") struct Library * , __reg("a0") PKCS12 * a ) = "\tjsr\t-7284(a6)";
#define PKCS12_free(a) __PKCS12_free(AmiSSLBase, (a))

PKCS12 * __d2i_PKCS12(__reg("a6") struct Library * , __reg("a0") PKCS12 ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7290(a6)";
#define d2i_PKCS12(a, in, len) __d2i_PKCS12(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS12(__reg("a6") struct Library * , __reg("a0") const PKCS12 * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7296(a6)";
#define i2d_PKCS12(a, out) __i2d_PKCS12(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS12_it(__reg("a6") struct Library * ) = "\tjsr\t-7302(a6)";
#define PKCS12_it() __PKCS12_it(AmiSSLBase)

PKCS12_MAC_DATA * __PKCS12_MAC_DATA_new(__reg("a6") struct Library * ) = "\tjsr\t-7308(a6)";
#define PKCS12_MAC_DATA_new() __PKCS12_MAC_DATA_new(AmiSSLBase)

void __PKCS12_MAC_DATA_free(__reg("a6") struct Library * , __reg("a0") PKCS12_MAC_DATA * a ) = "\tjsr\t-7314(a6)";
#define PKCS12_MAC_DATA_free(a) __PKCS12_MAC_DATA_free(AmiSSLBase, (a))

PKCS12_MAC_DATA * __d2i_PKCS12_MAC_DATA(__reg("a6") struct Library * , __reg("a0") PKCS12_MAC_DATA ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7320(a6)";
#define d2i_PKCS12_MAC_DATA(a, in, len) __d2i_PKCS12_MAC_DATA(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS12_MAC_DATA(__reg("a6") struct Library * , __reg("a0") const PKCS12_MAC_DATA * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7326(a6)";
#define i2d_PKCS12_MAC_DATA(a, out) __i2d_PKCS12_MAC_DATA(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS12_MAC_DATA_it(__reg("a6") struct Library * ) = "\tjsr\t-7332(a6)";
#define PKCS12_MAC_DATA_it() __PKCS12_MAC_DATA_it(AmiSSLBase)

PKCS12_SAFEBAG * __PKCS12_SAFEBAG_new(__reg("a6") struct Library * ) = "\tjsr\t-7338(a6)";
#define PKCS12_SAFEBAG_new() __PKCS12_SAFEBAG_new(AmiSSLBase)

void __PKCS12_SAFEBAG_free(__reg("a6") struct Library * , __reg("a0") PKCS12_SAFEBAG * a ) = "\tjsr\t-7344(a6)";
#define PKCS12_SAFEBAG_free(a) __PKCS12_SAFEBAG_free(AmiSSLBase, (a))

PKCS12_SAFEBAG * __d2i_PKCS12_SAFEBAG(__reg("a6") struct Library * , __reg("a0") PKCS12_SAFEBAG ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7350(a6)";
#define d2i_PKCS12_SAFEBAG(a, in, len) __d2i_PKCS12_SAFEBAG(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS12_SAFEBAG(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7356(a6)";
#define i2d_PKCS12_SAFEBAG(a, out) __i2d_PKCS12_SAFEBAG(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS12_SAFEBAG_it(__reg("a6") struct Library * ) = "\tjsr\t-7362(a6)";
#define PKCS12_SAFEBAG_it() __PKCS12_SAFEBAG_it(AmiSSLBase)

PKCS12_BAGS * __PKCS12_BAGS_new(__reg("a6") struct Library * ) = "\tjsr\t-7368(a6)";
#define PKCS12_BAGS_new() __PKCS12_BAGS_new(AmiSSLBase)

void __PKCS12_BAGS_free(__reg("a6") struct Library * , __reg("a0") PKCS12_BAGS * a ) = "\tjsr\t-7374(a6)";
#define PKCS12_BAGS_free(a) __PKCS12_BAGS_free(AmiSSLBase, (a))

PKCS12_BAGS * __d2i_PKCS12_BAGS(__reg("a6") struct Library * , __reg("a0") PKCS12_BAGS ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7380(a6)";
#define d2i_PKCS12_BAGS(a, in, len) __d2i_PKCS12_BAGS(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS12_BAGS(__reg("a6") struct Library * , __reg("a0") const PKCS12_BAGS * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7386(a6)";
#define i2d_PKCS12_BAGS(a, out) __i2d_PKCS12_BAGS(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS12_BAGS_it(__reg("a6") struct Library * ) = "\tjsr\t-7392(a6)";
#define PKCS12_BAGS_it() __PKCS12_BAGS_it(AmiSSLBase)

const ASN1_ITEM * __PKCS12_SAFEBAGS_it(__reg("a6") struct Library * ) = "\tjsr\t-7398(a6)";
#define PKCS12_SAFEBAGS_it() __PKCS12_SAFEBAGS_it(AmiSSLBase)

const ASN1_ITEM * __PKCS12_AUTHSAFES_it(__reg("a6") struct Library * ) = "\tjsr\t-7404(a6)";
#define PKCS12_AUTHSAFES_it() __PKCS12_AUTHSAFES_it(AmiSSLBase)

void __PKCS12_PBE_add(__reg("a6") struct Library * ) = "\tjsr\t-7410(a6)";
#define PKCS12_PBE_add() __PKCS12_PBE_add(AmiSSLBase)

int __PKCS12_parse(__reg("a6") struct Library * , __reg("a0") PKCS12 * p12 , __reg("a1") const char * pass , __reg("a2") EVP_PKEY ** pkey , __reg("a3") X509 ** cert , __reg("d0") STACK_OF(X509) ** ca ) = "\tjsr\t-7416(a6)";
#define PKCS12_parse(p12, pass, pkey, cert, ca) __PKCS12_parse(AmiSSLBase, (p12), (pass), (pkey), (cert), (ca))

PKCS12 * __PKCS12_create(__reg("a6") struct Library * , __reg("a0") const char * pass , __reg("a1") const char * name , __reg("a2") EVP_PKEY * pkey , __reg("a3") X509 * cert , __reg("d0") STACK_OF(X509) * ca , __reg("d1") int nid_key , __reg("d2") int nid_cert , __reg("d3") int iter , __reg("d4") int mac_iter , __reg("d5") int keytype ) = "\tjsr\t-7422(a6)";
#define PKCS12_create(pass, name, pkey, cert, ca, nid_key, nid_cert, iter, mac_iter, keytype) __PKCS12_create(AmiSSLBase, (pass), (name), (pkey), (cert), (ca), (nid_key), (nid_cert), (iter), (mac_iter), (keytype))

int __i2d_PKCS12_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const PKCS12 * p12 ) = "\tjsr\t-7428(a6)";
#define i2d_PKCS12_bio(bp, p12) __i2d_PKCS12_bio(AmiSSLBase, (bp), (p12))

PKCS12 * __d2i_PKCS12_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") PKCS12 ** p12 ) = "\tjsr\t-7434(a6)";
#define d2i_PKCS12_bio(bp, p12) __d2i_PKCS12_bio(AmiSSLBase, (bp), (p12))

int __PKCS12_newpass(__reg("a6") struct Library * , __reg("a0") PKCS12 * p12 , __reg("a1") const char * oldpass , __reg("a2") const char * newpass ) = "\tjsr\t-7440(a6)";
#define PKCS12_newpass(p12, oldpass, newpass) __PKCS12_newpass(AmiSSLBase, (p12), (oldpass), (newpass))

int __ERR_load_PKCS12_strings(__reg("a6") struct Library * ) = "\tjsr\t-7446(a6)";
#define ERR_load_PKCS12_strings() __ERR_load_PKCS12_strings(AmiSSLBase)

int __PKCS7_ISSUER_AND_SERIAL_digest(__reg("a6") struct Library * , __reg("a0") PKCS7_ISSUER_AND_SERIAL * data , __reg("a1") const EVP_MD * type , __reg("a2") unsigned char * md , __reg("a3") unsigned int * len ) = "\tjsr\t-7452(a6)";
#define PKCS7_ISSUER_AND_SERIAL_digest(data, type, md, len) __PKCS7_ISSUER_AND_SERIAL_digest(AmiSSLBase, (data), (type), (md), (len))

PKCS7 * __PKCS7_dup(__reg("a6") struct Library * , __reg("a0") const PKCS7 * p7 ) = "\tjsr\t-7458(a6)";
#define PKCS7_dup(p7) __PKCS7_dup(AmiSSLBase, (p7))

PKCS7 * __d2i_PKCS7_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") PKCS7 ** p7 ) = "\tjsr\t-7464(a6)";
#define d2i_PKCS7_bio(bp, p7) __d2i_PKCS7_bio(AmiSSLBase, (bp), (p7))

int __i2d_PKCS7_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const PKCS7 * p7 ) = "\tjsr\t-7470(a6)";
#define i2d_PKCS7_bio(bp, p7) __i2d_PKCS7_bio(AmiSSLBase, (bp), (p7))

PKCS7_ISSUER_AND_SERIAL * __PKCS7_ISSUER_AND_SERIAL_new(__reg("a6") struct Library * ) = "\tjsr\t-7476(a6)";
#define PKCS7_ISSUER_AND_SERIAL_new() __PKCS7_ISSUER_AND_SERIAL_new(AmiSSLBase)

void __PKCS7_ISSUER_AND_SERIAL_free(__reg("a6") struct Library * , __reg("a0") PKCS7_ISSUER_AND_SERIAL * a ) = "\tjsr\t-7482(a6)";
#define PKCS7_ISSUER_AND_SERIAL_free(a) __PKCS7_ISSUER_AND_SERIAL_free(AmiSSLBase, (a))

PKCS7_ISSUER_AND_SERIAL * __d2i_PKCS7_ISSUER_AND_SERIAL(__reg("a6") struct Library * , __reg("a0") PKCS7_ISSUER_AND_SERIAL ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7488(a6)";
#define d2i_PKCS7_ISSUER_AND_SERIAL(a, in, len) __d2i_PKCS7_ISSUER_AND_SERIAL(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS7_ISSUER_AND_SERIAL(__reg("a6") struct Library * , __reg("a0") const PKCS7_ISSUER_AND_SERIAL * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7494(a6)";
#define i2d_PKCS7_ISSUER_AND_SERIAL(a, out) __i2d_PKCS7_ISSUER_AND_SERIAL(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS7_ISSUER_AND_SERIAL_it(__reg("a6") struct Library * ) = "\tjsr\t-7500(a6)";
#define PKCS7_ISSUER_AND_SERIAL_it() __PKCS7_ISSUER_AND_SERIAL_it(AmiSSLBase)

PKCS7_SIGNER_INFO * __PKCS7_SIGNER_INFO_new(__reg("a6") struct Library * ) = "\tjsr\t-7506(a6)";
#define PKCS7_SIGNER_INFO_new() __PKCS7_SIGNER_INFO_new(AmiSSLBase)

void __PKCS7_SIGNER_INFO_free(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * a ) = "\tjsr\t-7512(a6)";
#define PKCS7_SIGNER_INFO_free(a) __PKCS7_SIGNER_INFO_free(AmiSSLBase, (a))

PKCS7_SIGNER_INFO * __d2i_PKCS7_SIGNER_INFO(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7518(a6)";
#define d2i_PKCS7_SIGNER_INFO(a, in, len) __d2i_PKCS7_SIGNER_INFO(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS7_SIGNER_INFO(__reg("a6") struct Library * , __reg("a0") const PKCS7_SIGNER_INFO * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7524(a6)";
#define i2d_PKCS7_SIGNER_INFO(a, out) __i2d_PKCS7_SIGNER_INFO(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS7_SIGNER_INFO_it(__reg("a6") struct Library * ) = "\tjsr\t-7530(a6)";
#define PKCS7_SIGNER_INFO_it() __PKCS7_SIGNER_INFO_it(AmiSSLBase)

PKCS7_RECIP_INFO * __PKCS7_RECIP_INFO_new(__reg("a6") struct Library * ) = "\tjsr\t-7536(a6)";
#define PKCS7_RECIP_INFO_new() __PKCS7_RECIP_INFO_new(AmiSSLBase)

void __PKCS7_RECIP_INFO_free(__reg("a6") struct Library * , __reg("a0") PKCS7_RECIP_INFO * a ) = "\tjsr\t-7542(a6)";
#define PKCS7_RECIP_INFO_free(a) __PKCS7_RECIP_INFO_free(AmiSSLBase, (a))

PKCS7_RECIP_INFO * __d2i_PKCS7_RECIP_INFO(__reg("a6") struct Library * , __reg("a0") PKCS7_RECIP_INFO ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7548(a6)";
#define d2i_PKCS7_RECIP_INFO(a, in, len) __d2i_PKCS7_RECIP_INFO(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS7_RECIP_INFO(__reg("a6") struct Library * , __reg("a0") const PKCS7_RECIP_INFO * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7554(a6)";
#define i2d_PKCS7_RECIP_INFO(a, out) __i2d_PKCS7_RECIP_INFO(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS7_RECIP_INFO_it(__reg("a6") struct Library * ) = "\tjsr\t-7560(a6)";
#define PKCS7_RECIP_INFO_it() __PKCS7_RECIP_INFO_it(AmiSSLBase)

PKCS7_SIGNED * __PKCS7_SIGNED_new(__reg("a6") struct Library * ) = "\tjsr\t-7566(a6)";
#define PKCS7_SIGNED_new() __PKCS7_SIGNED_new(AmiSSLBase)

void __PKCS7_SIGNED_free(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNED * a ) = "\tjsr\t-7572(a6)";
#define PKCS7_SIGNED_free(a) __PKCS7_SIGNED_free(AmiSSLBase, (a))

PKCS7_SIGNED * __d2i_PKCS7_SIGNED(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNED ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7578(a6)";
#define d2i_PKCS7_SIGNED(a, in, len) __d2i_PKCS7_SIGNED(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS7_SIGNED(__reg("a6") struct Library * , __reg("a0") const PKCS7_SIGNED * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7584(a6)";
#define i2d_PKCS7_SIGNED(a, out) __i2d_PKCS7_SIGNED(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS7_SIGNED_it(__reg("a6") struct Library * ) = "\tjsr\t-7590(a6)";
#define PKCS7_SIGNED_it() __PKCS7_SIGNED_it(AmiSSLBase)

PKCS7_ENC_CONTENT * __PKCS7_ENC_CONTENT_new(__reg("a6") struct Library * ) = "\tjsr\t-7596(a6)";
#define PKCS7_ENC_CONTENT_new() __PKCS7_ENC_CONTENT_new(AmiSSLBase)

void __PKCS7_ENC_CONTENT_free(__reg("a6") struct Library * , __reg("a0") PKCS7_ENC_CONTENT * a ) = "\tjsr\t-7602(a6)";
#define PKCS7_ENC_CONTENT_free(a) __PKCS7_ENC_CONTENT_free(AmiSSLBase, (a))

PKCS7_ENC_CONTENT * __d2i_PKCS7_ENC_CONTENT(__reg("a6") struct Library * , __reg("a0") PKCS7_ENC_CONTENT ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7608(a6)";
#define d2i_PKCS7_ENC_CONTENT(a, in, len) __d2i_PKCS7_ENC_CONTENT(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS7_ENC_CONTENT(__reg("a6") struct Library * , __reg("a0") const PKCS7_ENC_CONTENT * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7614(a6)";
#define i2d_PKCS7_ENC_CONTENT(a, out) __i2d_PKCS7_ENC_CONTENT(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS7_ENC_CONTENT_it(__reg("a6") struct Library * ) = "\tjsr\t-7620(a6)";
#define PKCS7_ENC_CONTENT_it() __PKCS7_ENC_CONTENT_it(AmiSSLBase)

PKCS7_ENVELOPE * __PKCS7_ENVELOPE_new(__reg("a6") struct Library * ) = "\tjsr\t-7626(a6)";
#define PKCS7_ENVELOPE_new() __PKCS7_ENVELOPE_new(AmiSSLBase)

void __PKCS7_ENVELOPE_free(__reg("a6") struct Library * , __reg("a0") PKCS7_ENVELOPE * a ) = "\tjsr\t-7632(a6)";
#define PKCS7_ENVELOPE_free(a) __PKCS7_ENVELOPE_free(AmiSSLBase, (a))

PKCS7_ENVELOPE * __d2i_PKCS7_ENVELOPE(__reg("a6") struct Library * , __reg("a0") PKCS7_ENVELOPE ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7638(a6)";
#define d2i_PKCS7_ENVELOPE(a, in, len) __d2i_PKCS7_ENVELOPE(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS7_ENVELOPE(__reg("a6") struct Library * , __reg("a0") const PKCS7_ENVELOPE * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7644(a6)";
#define i2d_PKCS7_ENVELOPE(a, out) __i2d_PKCS7_ENVELOPE(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS7_ENVELOPE_it(__reg("a6") struct Library * ) = "\tjsr\t-7650(a6)";
#define PKCS7_ENVELOPE_it() __PKCS7_ENVELOPE_it(AmiSSLBase)

PKCS7_SIGN_ENVELOPE * __PKCS7_SIGN_ENVELOPE_new(__reg("a6") struct Library * ) = "\tjsr\t-7656(a6)";
#define PKCS7_SIGN_ENVELOPE_new() __PKCS7_SIGN_ENVELOPE_new(AmiSSLBase)

void __PKCS7_SIGN_ENVELOPE_free(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGN_ENVELOPE * a ) = "\tjsr\t-7662(a6)";
#define PKCS7_SIGN_ENVELOPE_free(a) __PKCS7_SIGN_ENVELOPE_free(AmiSSLBase, (a))

PKCS7_SIGN_ENVELOPE * __d2i_PKCS7_SIGN_ENVELOPE(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGN_ENVELOPE ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7668(a6)";
#define d2i_PKCS7_SIGN_ENVELOPE(a, in, len) __d2i_PKCS7_SIGN_ENVELOPE(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS7_SIGN_ENVELOPE(__reg("a6") struct Library * , __reg("a0") const PKCS7_SIGN_ENVELOPE * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7674(a6)";
#define i2d_PKCS7_SIGN_ENVELOPE(a, out) __i2d_PKCS7_SIGN_ENVELOPE(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS7_SIGN_ENVELOPE_it(__reg("a6") struct Library * ) = "\tjsr\t-7680(a6)";
#define PKCS7_SIGN_ENVELOPE_it() __PKCS7_SIGN_ENVELOPE_it(AmiSSLBase)

PKCS7_DIGEST * __PKCS7_DIGEST_new(__reg("a6") struct Library * ) = "\tjsr\t-7686(a6)";
#define PKCS7_DIGEST_new() __PKCS7_DIGEST_new(AmiSSLBase)

void __PKCS7_DIGEST_free(__reg("a6") struct Library * , __reg("a0") PKCS7_DIGEST * a ) = "\tjsr\t-7692(a6)";
#define PKCS7_DIGEST_free(a) __PKCS7_DIGEST_free(AmiSSLBase, (a))

PKCS7_DIGEST * __d2i_PKCS7_DIGEST(__reg("a6") struct Library * , __reg("a0") PKCS7_DIGEST ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7698(a6)";
#define d2i_PKCS7_DIGEST(a, in, len) __d2i_PKCS7_DIGEST(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS7_DIGEST(__reg("a6") struct Library * , __reg("a0") const PKCS7_DIGEST * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7704(a6)";
#define i2d_PKCS7_DIGEST(a, out) __i2d_PKCS7_DIGEST(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS7_DIGEST_it(__reg("a6") struct Library * ) = "\tjsr\t-7710(a6)";
#define PKCS7_DIGEST_it() __PKCS7_DIGEST_it(AmiSSLBase)

PKCS7_ENCRYPT * __PKCS7_ENCRYPT_new(__reg("a6") struct Library * ) = "\tjsr\t-7716(a6)";
#define PKCS7_ENCRYPT_new() __PKCS7_ENCRYPT_new(AmiSSLBase)

void __PKCS7_ENCRYPT_free(__reg("a6") struct Library * , __reg("a0") PKCS7_ENCRYPT * a ) = "\tjsr\t-7722(a6)";
#define PKCS7_ENCRYPT_free(a) __PKCS7_ENCRYPT_free(AmiSSLBase, (a))

PKCS7_ENCRYPT * __d2i_PKCS7_ENCRYPT(__reg("a6") struct Library * , __reg("a0") PKCS7_ENCRYPT ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7728(a6)";
#define d2i_PKCS7_ENCRYPT(a, in, len) __d2i_PKCS7_ENCRYPT(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS7_ENCRYPT(__reg("a6") struct Library * , __reg("a0") const PKCS7_ENCRYPT * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7734(a6)";
#define i2d_PKCS7_ENCRYPT(a, out) __i2d_PKCS7_ENCRYPT(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS7_ENCRYPT_it(__reg("a6") struct Library * ) = "\tjsr\t-7740(a6)";
#define PKCS7_ENCRYPT_it() __PKCS7_ENCRYPT_it(AmiSSLBase)

PKCS7 * __PKCS7_new(__reg("a6") struct Library * ) = "\tjsr\t-7746(a6)";
#define PKCS7_new() __PKCS7_new(AmiSSLBase)

void __PKCS7_free(__reg("a6") struct Library * , __reg("a0") PKCS7 * a ) = "\tjsr\t-7752(a6)";
#define PKCS7_free(a) __PKCS7_free(AmiSSLBase, (a))

PKCS7 * __d2i_PKCS7(__reg("a6") struct Library * , __reg("a0") PKCS7 ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-7758(a6)";
#define d2i_PKCS7(a, in, len) __d2i_PKCS7(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS7(__reg("a6") struct Library * , __reg("a0") const PKCS7 * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-7764(a6)";
#define i2d_PKCS7(a, out) __i2d_PKCS7(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS7_it(__reg("a6") struct Library * ) = "\tjsr\t-7770(a6)";
#define PKCS7_it() __PKCS7_it(AmiSSLBase)

const ASN1_ITEM * __PKCS7_ATTR_SIGN_it(__reg("a6") struct Library * ) = "\tjsr\t-7776(a6)";
#define PKCS7_ATTR_SIGN_it() __PKCS7_ATTR_SIGN_it(AmiSSLBase)

const ASN1_ITEM * __PKCS7_ATTR_VERIFY_it(__reg("a6") struct Library * ) = "\tjsr\t-7782(a6)";
#define PKCS7_ATTR_VERIFY_it() __PKCS7_ATTR_VERIFY_it(AmiSSLBase)

long __PKCS7_ctrl(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("d0") int cmd , __reg("d1") long larg , __reg("a1") char * parg ) = "\tjsr\t-7788(a6)";
#define PKCS7_ctrl(p7, cmd, larg, parg) __PKCS7_ctrl(AmiSSLBase, (p7), (cmd), (larg), (parg))

int __PKCS7_set_type(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("d0") int type ) = "\tjsr\t-7794(a6)";
#define PKCS7_set_type(p7, type) __PKCS7_set_type(AmiSSLBase, (p7), (type))

int __PKCS7_set_content(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") PKCS7 * p7_data ) = "\tjsr\t-7800(a6)";
#define PKCS7_set_content(p7, p7_data) __PKCS7_set_content(AmiSSLBase, (p7), (p7_data))

int __PKCS7_SIGNER_INFO_set(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * p7i , __reg("a1") X509 * x509 , __reg("a2") EVP_PKEY * pkey , __reg("a3") const EVP_MD * dgst ) = "\tjsr\t-7806(a6)";
#define PKCS7_SIGNER_INFO_set(p7i, x509, pkey, dgst) __PKCS7_SIGNER_INFO_set(AmiSSLBase, (p7i), (x509), (pkey), (dgst))

int __PKCS7_add_signer(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") PKCS7_SIGNER_INFO * p7i ) = "\tjsr\t-7812(a6)";
#define PKCS7_add_signer(p7, p7i) __PKCS7_add_signer(AmiSSLBase, (p7), (p7i))

int __PKCS7_add_certificate(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") X509 * cert ) = "\tjsr\t-7818(a6)";
#define PKCS7_add_certificate(p7, cert) __PKCS7_add_certificate(AmiSSLBase, (p7), (cert))

int __PKCS7_add_crl(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") X509_CRL * crl ) = "\tjsr\t-7824(a6)";
#define PKCS7_add_crl(p7, crl) __PKCS7_add_crl(AmiSSLBase, (p7), (crl))

int __PKCS7_content_new(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("d0") int nid ) = "\tjsr\t-7830(a6)";
#define PKCS7_content_new(p7, nid) __PKCS7_content_new(AmiSSLBase, (p7), (nid))

int __PKCS7_dataVerify(__reg("a6") struct Library * , __reg("a0") X509_STORE * cert_store , __reg("a1") X509_STORE_CTX * ctx , __reg("a2") BIO * bio , __reg("a3") PKCS7 * p7 , __reg("d0") PKCS7_SIGNER_INFO * si ) = "\tjsr\t-7836(a6)";
#define PKCS7_dataVerify(cert_store, ctx, bio, p7, si) __PKCS7_dataVerify(AmiSSLBase, (cert_store), (ctx), (bio), (p7), (si))

int __PKCS7_signatureVerify(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") PKCS7 * p7 , __reg("a2") PKCS7_SIGNER_INFO * si , __reg("a3") X509 * signer ) = "\tjsr\t-7842(a6)";
#define PKCS7_signatureVerify(bio, p7, si, signer) __PKCS7_signatureVerify(AmiSSLBase, (bio), (p7), (si), (signer))

BIO * __PKCS7_dataInit(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") BIO * bio ) = "\tjsr\t-7848(a6)";
#define PKCS7_dataInit(p7, bio) __PKCS7_dataInit(AmiSSLBase, (p7), (bio))

int __PKCS7_dataFinal(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") BIO * bio ) = "\tjsr\t-7854(a6)";
#define PKCS7_dataFinal(p7, bio) __PKCS7_dataFinal(AmiSSLBase, (p7), (bio))

BIO * __PKCS7_dataDecode(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") EVP_PKEY * pkey , __reg("a2") BIO * in_bio , __reg("a3") X509 * pcert ) = "\tjsr\t-7860(a6)";
#define PKCS7_dataDecode(p7, pkey, in_bio, pcert) __PKCS7_dataDecode(AmiSSLBase, (p7), (pkey), (in_bio), (pcert))

PKCS7_SIGNER_INFO * __PKCS7_add_signature(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") X509 * x509 , __reg("a2") EVP_PKEY * pkey , __reg("a3") const EVP_MD * dgst ) = "\tjsr\t-7866(a6)";
#define PKCS7_add_signature(p7, x509, pkey, dgst) __PKCS7_add_signature(AmiSSLBase, (p7), (x509), (pkey), (dgst))

X509 * __PKCS7_cert_from_signer_info(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") PKCS7_SIGNER_INFO * si ) = "\tjsr\t-7872(a6)";
#define PKCS7_cert_from_signer_info(p7, si) __PKCS7_cert_from_signer_info(AmiSSLBase, (p7), (si))

STACK_OF(PKCS7_SIGNER_INFO) * __PKCS7_get_signer_info(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 ) = "\tjsr\t-7878(a6)";
#define PKCS7_get_signer_info(p7) __PKCS7_get_signer_info(AmiSSLBase, (p7))

PKCS7_RECIP_INFO * __PKCS7_add_recipient(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") X509 * x509 ) = "\tjsr\t-7884(a6)";
#define PKCS7_add_recipient(p7, x509) __PKCS7_add_recipient(AmiSSLBase, (p7), (x509))

int __PKCS7_add_recipient_info(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") PKCS7_RECIP_INFO * ri ) = "\tjsr\t-7890(a6)";
#define PKCS7_add_recipient_info(p7, ri) __PKCS7_add_recipient_info(AmiSSLBase, (p7), (ri))

int __PKCS7_RECIP_INFO_set(__reg("a6") struct Library * , __reg("a0") PKCS7_RECIP_INFO * p7i , __reg("a1") X509 * x509 ) = "\tjsr\t-7896(a6)";
#define PKCS7_RECIP_INFO_set(p7i, x509) __PKCS7_RECIP_INFO_set(AmiSSLBase, (p7i), (x509))

int __PKCS7_set_cipher(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") const EVP_CIPHER * cipher ) = "\tjsr\t-7902(a6)";
#define PKCS7_set_cipher(p7, cipher) __PKCS7_set_cipher(AmiSSLBase, (p7), (cipher))

PKCS7_ISSUER_AND_SERIAL * __PKCS7_get_issuer_and_serial(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("d0") int idx ) = "\tjsr\t-7908(a6)";
#define PKCS7_get_issuer_and_serial(p7, idx) __PKCS7_get_issuer_and_serial(AmiSSLBase, (p7), (idx))

ASN1_OCTET_STRING * __PKCS7_digest_from_attributes(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_ATTRIBUTE) * sk ) = "\tjsr\t-7914(a6)";
#define PKCS7_digest_from_attributes(sk) __PKCS7_digest_from_attributes(AmiSSLBase, (sk))

int __PKCS7_add_signed_attribute(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * p7si , __reg("d0") int nid , __reg("d1") int type , __reg("a1") void * data ) = "\tjsr\t-7920(a6)";
#define PKCS7_add_signed_attribute(p7si, nid, type, data) __PKCS7_add_signed_attribute(AmiSSLBase, (p7si), (nid), (type), (data))

int __PKCS7_add_attribute(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * p7si , __reg("d0") int nid , __reg("d1") int atrtype , __reg("a1") void * value ) = "\tjsr\t-7926(a6)";
#define PKCS7_add_attribute(p7si, nid, atrtype, value) __PKCS7_add_attribute(AmiSSLBase, (p7si), (nid), (atrtype), (value))

ASN1_TYPE * __PKCS7_get_attribute(__reg("a6") struct Library * , __reg("a0") const PKCS7_SIGNER_INFO * si , __reg("d0") int nid ) = "\tjsr\t-7932(a6)";
#define PKCS7_get_attribute(si, nid) __PKCS7_get_attribute(AmiSSLBase, (si), (nid))

ASN1_TYPE * __PKCS7_get_signed_attribute(__reg("a6") struct Library * , __reg("a0") const PKCS7_SIGNER_INFO * si , __reg("d0") int nid ) = "\tjsr\t-7938(a6)";
#define PKCS7_get_signed_attribute(si, nid) __PKCS7_get_signed_attribute(AmiSSLBase, (si), (nid))

int __PKCS7_set_signed_attributes(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * p7si , __reg("a1") STACK_OF(X509_ATTRIBUTE) * sk ) = "\tjsr\t-7944(a6)";
#define PKCS7_set_signed_attributes(p7si, sk) __PKCS7_set_signed_attributes(AmiSSLBase, (p7si), (sk))

int __PKCS7_set_attributes(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * p7si , __reg("a1") STACK_OF(X509_ATTRIBUTE) * sk ) = "\tjsr\t-7950(a6)";
#define PKCS7_set_attributes(p7si, sk) __PKCS7_set_attributes(AmiSSLBase, (p7si), (sk))

PKCS7 * __PKCS7_sign(__reg("a6") struct Library * , __reg("a0") X509 * signcert , __reg("a1") EVP_PKEY * pkey , __reg("a2") STACK_OF(X509) * certs , __reg("a3") BIO * data , __reg("d0") int flags ) = "\tjsr\t-7956(a6)";
#define PKCS7_sign(signcert, pkey, certs, data, flags) __PKCS7_sign(AmiSSLBase, (signcert), (pkey), (certs), (data), (flags))

int __PKCS7_verify(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") STACK_OF(X509) * certs , __reg("a2") X509_STORE * store , __reg("a3") BIO * indata , __reg("d0") BIO * out , __reg("d1") int flags ) = "\tjsr\t-7962(a6)";
#define PKCS7_verify(p7, certs, store, indata, out, flags) __PKCS7_verify(AmiSSLBase, (p7), (certs), (store), (indata), (out), (flags))

STACK_OF(X509) * __PKCS7_get0_signers(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") STACK_OF(X509) * certs , __reg("d0") int flags ) = "\tjsr\t-7968(a6)";
#define PKCS7_get0_signers(p7, certs, flags) __PKCS7_get0_signers(AmiSSLBase, (p7), (certs), (flags))

PKCS7 * __PKCS7_encrypt(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509) * certs , __reg("a1") BIO * in , __reg("a2") const EVP_CIPHER * cipher , __reg("d0") int flags ) = "\tjsr\t-7974(a6)";
#define PKCS7_encrypt(certs, in, cipher, flags) __PKCS7_encrypt(AmiSSLBase, (certs), (in), (cipher), (flags))

int __PKCS7_decrypt(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") EVP_PKEY * pkey , __reg("a2") X509 * cert , __reg("a3") BIO * data , __reg("d0") int flags ) = "\tjsr\t-7980(a6)";
#define PKCS7_decrypt(p7, pkey, cert, data, flags) __PKCS7_decrypt(AmiSSLBase, (p7), (pkey), (cert), (data), (flags))

int __PKCS7_add_attrib_smimecap(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * si , __reg("a1") STACK_OF(X509_ALGOR) * cap ) = "\tjsr\t-7986(a6)";
#define PKCS7_add_attrib_smimecap(si, cap) __PKCS7_add_attrib_smimecap(AmiSSLBase, (si), (cap))

STACK_OF(X509_ALGOR) * __PKCS7_get_smimecap(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * si ) = "\tjsr\t-7992(a6)";
#define PKCS7_get_smimecap(si) __PKCS7_get_smimecap(AmiSSLBase, (si))

int __PKCS7_simple_smimecap(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_ALGOR) * sk , __reg("d0") int nid , __reg("d1") int arg ) = "\tjsr\t-7998(a6)";
#define PKCS7_simple_smimecap(sk, nid, arg) __PKCS7_simple_smimecap(AmiSSLBase, (sk), (nid), (arg))

int __SMIME_write_PKCS7(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") PKCS7 * p7 , __reg("a2") BIO * data , __reg("d0") int flags ) = "\tjsr\t-8004(a6)";
#define SMIME_write_PKCS7(bio, p7, data, flags) __SMIME_write_PKCS7(AmiSSLBase, (bio), (p7), (data), (flags))

PKCS7 * __SMIME_read_PKCS7(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") BIO ** bcont ) = "\tjsr\t-8010(a6)";
#define SMIME_read_PKCS7(bio, bcont) __SMIME_read_PKCS7(AmiSSLBase, (bio), (bcont))

int __SMIME_crlf_copy(__reg("a6") struct Library * , __reg("a0") BIO * in , __reg("a1") BIO * out , __reg("d0") int flags ) = "\tjsr\t-8016(a6)";
#define SMIME_crlf_copy(in, out, flags) __SMIME_crlf_copy(AmiSSLBase, (in), (out), (flags))

int __SMIME_text(__reg("a6") struct Library * , __reg("a0") BIO * in , __reg("a1") BIO * out ) = "\tjsr\t-8022(a6)";
#define SMIME_text(in, out) __SMIME_text(AmiSSLBase, (in), (out))

int __ERR_load_PKCS7_strings(__reg("a6") struct Library * ) = "\tjsr\t-8028(a6)";
#define ERR_load_PKCS7_strings() __ERR_load_PKCS7_strings(AmiSSLBase)

int __RAND_set_rand_method(__reg("a6") struct Library * , __reg("a0") const RAND_METHOD * meth ) = "\tjsr\t-8034(a6)";
#define RAND_set_rand_method(meth) __RAND_set_rand_method(AmiSSLBase, (meth))

const RAND_METHOD * __RAND_get_rand_method(__reg("a6") struct Library * ) = "\tjsr\t-8040(a6)";
#define RAND_get_rand_method() __RAND_get_rand_method(AmiSSLBase)

int __RAND_bytes(__reg("a6") struct Library * , __reg("a0") unsigned char * buf , __reg("d0") int num ) = "\tjsr\t-8058(a6)";
#define RAND_bytes(buf, num) __RAND_bytes(AmiSSLBase, (buf), (num))

int __RAND_pseudo_bytes(__reg("a6") struct Library * , __reg("a0") unsigned char * buf , __reg("d0") int num ) = "\tjsr\t-8064(a6)";
#define RAND_pseudo_bytes(buf, num) __RAND_pseudo_bytes(AmiSSLBase, (buf), (num))

void __RAND_seed(__reg("a6") struct Library * , __reg("a0") const void * buf , __reg("d0") int num ) = "\tjsr\t-8070(a6)";
#define RAND_seed(buf, num) __RAND_seed(AmiSSLBase, (buf), (num))

void __RAND_add(__reg("a6") struct Library * , __reg("a0") const void * buf , __reg("d2") int num , __reg("d0/d1") double randomness ) = "\tjsr\t-8076(a6)";
#define RAND_add(buf, num, randomness) __RAND_add(AmiSSLBase, (buf), (num), (randomness))

int __RAND_load_file(__reg("a6") struct Library * , __reg("a0") const char * file , __reg("d0") long max_bytes ) = "\tjsr\t-8082(a6)";
#define RAND_load_file(file, max_bytes) __RAND_load_file(AmiSSLBase, (file), (max_bytes))

int __RAND_write_file(__reg("a6") struct Library * , __reg("a0") const char * file ) = "\tjsr\t-8088(a6)";
#define RAND_write_file(file) __RAND_write_file(AmiSSLBase, (file))

const char * __RAND_file_name(__reg("a6") struct Library * , __reg("a0") char * file , __reg("d0") size_t num ) = "\tjsr\t-8094(a6)";
#define RAND_file_name(file, num) __RAND_file_name(AmiSSLBase, (file), (num))

int __RAND_status(__reg("a6") struct Library * ) = "\tjsr\t-8100(a6)";
#define RAND_status() __RAND_status(AmiSSLBase)

int __RAND_poll(__reg("a6") struct Library * ) = "\tjsr\t-8124(a6)";
#define RAND_poll() __RAND_poll(AmiSSLBase)

int __ERR_load_RAND_strings(__reg("a6") struct Library * ) = "\tjsr\t-8130(a6)";
#define ERR_load_RAND_strings() __ERR_load_RAND_strings(AmiSSLBase)

void __SSL_CTX_set_msg_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") void (*cb)(int write_p,int version,int content_type,const void *buf,size_t len,SSL *ssl,void *arg) ) = "\tjsr\t-8136(a6)";
#define SSL_CTX_set_msg_callback(ctx, cb) __SSL_CTX_set_msg_callback(AmiSSLBase, (ctx), (cb))

void __SSL_set_msg_callback(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") void (*cb)(int write_p,int version,int content_type,const void *buf,size_t len,SSL *ssl,void *arg) ) = "\tjsr\t-8142(a6)";
#define SSL_set_msg_callback(ssl, cb) __SSL_set_msg_callback(AmiSSLBase, (ssl), (cb))

LHASH_OF(SSL_SESSION) * __SSL_CTX_sessions(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-8148(a6)";
#define SSL_CTX_sessions(ctx) __SSL_CTX_sessions(AmiSSLBase, (ctx))

size_t __SSL_get_finished(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("a1") void * buf , __reg("d0") size_t count ) = "\tjsr\t-8154(a6)";
#define SSL_get_finished(s, buf, count) __SSL_get_finished(AmiSSLBase, (s), (buf), (count))

size_t __SSL_get_peer_finished(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("a1") void * buf , __reg("d0") size_t count ) = "\tjsr\t-8160(a6)";
#define SSL_get_peer_finished(s, buf, count) __SSL_get_peer_finished(AmiSSLBase, (s), (buf), (count))

const BIO_METHOD * __BIO_f_ssl(__reg("a6") struct Library * ) = "\tjsr\t-8166(a6)";
#define BIO_f_ssl() __BIO_f_ssl(AmiSSLBase)

BIO * __BIO_new_ssl(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int client ) = "\tjsr\t-8172(a6)";
#define BIO_new_ssl(ctx, client) __BIO_new_ssl(AmiSSLBase, (ctx), (client))

BIO * __BIO_new_ssl_connect(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-8178(a6)";
#define BIO_new_ssl_connect(ctx) __BIO_new_ssl_connect(AmiSSLBase, (ctx))

BIO * __BIO_new_buffer_ssl_connect(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-8184(a6)";
#define BIO_new_buffer_ssl_connect(ctx) __BIO_new_buffer_ssl_connect(AmiSSLBase, (ctx))

int __BIO_ssl_copy_session_id(__reg("a6") struct Library * , __reg("a0") BIO * to , __reg("a1") BIO * from ) = "\tjsr\t-8190(a6)";
#define BIO_ssl_copy_session_id(to, from) __BIO_ssl_copy_session_id(AmiSSLBase, (to), (from))

void __BIO_ssl_shutdown(__reg("a6") struct Library * , __reg("a0") BIO * ssl_bio ) = "\tjsr\t-8196(a6)";
#define BIO_ssl_shutdown(ssl_bio) __BIO_ssl_shutdown(AmiSSLBase, (ssl_bio))

int __SSL_CTX_set_cipher_list(__reg("a6") struct Library * , __reg("a0") SSL_CTX * a , __reg("a1") const char * str ) = "\tjsr\t-8202(a6)";
#define SSL_CTX_set_cipher_list(a, str) __SSL_CTX_set_cipher_list(AmiSSLBase, (a), (str))

SSL_CTX * __SSL_CTX_new(__reg("a6") struct Library * , __reg("a0") const SSL_METHOD * meth ) = "\tjsr\t-8208(a6)";
#define SSL_CTX_new(meth) __SSL_CTX_new(AmiSSLBase, (meth))

void __SSL_CTX_free(__reg("a6") struct Library * , __reg("a0") SSL_CTX * a ) = "\tjsr\t-8214(a6)";
#define SSL_CTX_free(a) __SSL_CTX_free(AmiSSLBase, (a))

long __SSL_CTX_set_timeout(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") long t ) = "\tjsr\t-8220(a6)";
#define SSL_CTX_set_timeout(ctx, t) __SSL_CTX_set_timeout(AmiSSLBase, (ctx), (t))

long __SSL_CTX_get_timeout(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-8226(a6)";
#define SSL_CTX_get_timeout(ctx) __SSL_CTX_get_timeout(AmiSSLBase, (ctx))

X509_STORE * __SSL_CTX_get_cert_store(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * a ) = "\tjsr\t-8232(a6)";
#define SSL_CTX_get_cert_store(a) __SSL_CTX_get_cert_store(AmiSSLBase, (a))

void __SSL_CTX_set_cert_store(__reg("a6") struct Library * , __reg("a0") SSL_CTX * a , __reg("a1") X509_STORE * b ) = "\tjsr\t-8238(a6)";
#define SSL_CTX_set_cert_store(a, b) __SSL_CTX_set_cert_store(AmiSSLBase, (a), (b))

int __SSL_want(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8244(a6)";
#define SSL_want(s) __SSL_want(AmiSSLBase, (s))

int __SSL_clear(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-8250(a6)";
#define SSL_clear(s) __SSL_clear(AmiSSLBase, (s))

void __SSL_CTX_flush_sessions(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") long tm ) = "\tjsr\t-8256(a6)";
#define SSL_CTX_flush_sessions(ctx, tm) __SSL_CTX_flush_sessions(AmiSSLBase, (ctx), (tm))

const SSL_CIPHER * __SSL_get_current_cipher(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8262(a6)";
#define SSL_get_current_cipher(s) __SSL_get_current_cipher(AmiSSLBase, (s))

int __SSL_CIPHER_get_bits(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c , __reg("a1") int * alg_bits ) = "\tjsr\t-8268(a6)";
#define SSL_CIPHER_get_bits(c, alg_bits) __SSL_CIPHER_get_bits(AmiSSLBase, (c), (alg_bits))

const char * __SSL_CIPHER_get_version(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c ) = "\tjsr\t-8274(a6)";
#define SSL_CIPHER_get_version(c) __SSL_CIPHER_get_version(AmiSSLBase, (c))

const char * __SSL_CIPHER_get_name(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c ) = "\tjsr\t-8280(a6)";
#define SSL_CIPHER_get_name(c) __SSL_CIPHER_get_name(AmiSSLBase, (c))

const char * __SSL_CIPHER_get_mac(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * cipher ) = "\tjsr\t-8286(a6)";
#define SSL_CIPHER_get_mac(cipher) __SSL_CIPHER_get_mac(AmiSSLBase, (cipher))

const char * __SSL_CIPHER_get_encryption(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * cipher ) = "\tjsr\t-8292(a6)";
#define SSL_CIPHER_get_encryption(cipher) __SSL_CIPHER_get_encryption(AmiSSLBase, (cipher))

const char * __SSL_CIPHER_get_authentication(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * cipher ) = "\tjsr\t-8298(a6)";
#define SSL_CIPHER_get_authentication(cipher) __SSL_CIPHER_get_authentication(AmiSSLBase, (cipher))

const char * __SSL_CIPHER_get_key_exchange(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * cipher ) = "\tjsr\t-8304(a6)";
#define SSL_CIPHER_get_key_exchange(cipher) __SSL_CIPHER_get_key_exchange(AmiSSLBase, (cipher))

int __SSL_get_fd(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8316(a6)";
#define SSL_get_fd(s) __SSL_get_fd(AmiSSLBase, (s))

int __SSL_get_rfd(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8322(a6)";
#define SSL_get_rfd(s) __SSL_get_rfd(AmiSSLBase, (s))

int __SSL_get_wfd(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8328(a6)";
#define SSL_get_wfd(s) __SSL_get_wfd(AmiSSLBase, (s))

const char * __SSL_get_cipher_list(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("d0") int n ) = "\tjsr\t-8334(a6)";
#define SSL_get_cipher_list(s, n) __SSL_get_cipher_list(AmiSSLBase, (s), (n))

char * __SSL_get_shared_ciphers(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("a1") char * buf , __reg("d0") int size ) = "\tjsr\t-8340(a6)";
#define SSL_get_shared_ciphers(s, buf, size) __SSL_get_shared_ciphers(AmiSSLBase, (s), (buf), (size))

int __SSL_get_read_ahead(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8346(a6)";
#define SSL_get_read_ahead(s) __SSL_get_read_ahead(AmiSSLBase, (s))

int __SSL_pending(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8352(a6)";
#define SSL_pending(s) __SSL_pending(AmiSSLBase, (s))

int __SSL_set_fd(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int fd ) = "\tjsr\t-8358(a6)";
#define SSL_set_fd(s, fd) __SSL_set_fd(AmiSSLBase, (s), (fd))

int __SSL_set_rfd(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int fd ) = "\tjsr\t-8364(a6)";
#define SSL_set_rfd(s, fd) __SSL_set_rfd(AmiSSLBase, (s), (fd))

int __SSL_set_wfd(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int fd ) = "\tjsr\t-8370(a6)";
#define SSL_set_wfd(s, fd) __SSL_set_wfd(AmiSSLBase, (s), (fd))

void __SSL_set_bio(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") BIO * rbio , __reg("a2") BIO * wbio ) = "\tjsr\t-8376(a6)";
#define SSL_set_bio(s, rbio, wbio) __SSL_set_bio(AmiSSLBase, (s), (rbio), (wbio))

BIO * __SSL_get_rbio(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8382(a6)";
#define SSL_get_rbio(s) __SSL_get_rbio(AmiSSLBase, (s))

BIO * __SSL_get_wbio(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8388(a6)";
#define SSL_get_wbio(s) __SSL_get_wbio(AmiSSLBase, (s))

int __SSL_set_cipher_list(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const char * str ) = "\tjsr\t-8394(a6)";
#define SSL_set_cipher_list(s, str) __SSL_set_cipher_list(AmiSSLBase, (s), (str))

void __SSL_set_read_ahead(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int yes ) = "\tjsr\t-8400(a6)";
#define SSL_set_read_ahead(s, yes) __SSL_set_read_ahead(AmiSSLBase, (s), (yes))

int __SSL_get_verify_mode(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8406(a6)";
#define SSL_get_verify_mode(s) __SSL_get_verify_mode(AmiSSLBase, (s))

int __SSL_get_verify_depth(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8412(a6)";
#define SSL_get_verify_depth(s) __SSL_get_verify_depth(AmiSSLBase, (s))

int  (* __SSL_get_verify_callback(__reg("a6") struct Library * , __reg("a0") const SSL * s ) )(int, X509_STORE_CTX *) =  "\tjsr\t-8418(a6)";
#define SSL_get_verify_callback(s) __SSL_get_verify_callback(AmiSSLBase, (s))

void __SSL_set_verify(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int mode , __reg("a1") int (*callback)(int,X509_STORE_CTX *) ) = "\tjsr\t-8424(a6)";
#define SSL_set_verify(s, mode, callback) __SSL_set_verify(AmiSSLBase, (s), (mode), (callback))

void __SSL_set_verify_depth(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int depth ) = "\tjsr\t-8430(a6)";
#define SSL_set_verify_depth(s, depth) __SSL_set_verify_depth(AmiSSLBase, (s), (depth))

int __SSL_use_RSAPrivateKey(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") RSA * rsa ) = "\tjsr\t-8436(a6)";
#define SSL_use_RSAPrivateKey(ssl, rsa) __SSL_use_RSAPrivateKey(AmiSSLBase, (ssl), (rsa))

int __SSL_use_RSAPrivateKey_ASN1(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const unsigned char * d , __reg("d0") long len ) = "\tjsr\t-8442(a6)";
#define SSL_use_RSAPrivateKey_ASN1(ssl, d, len) __SSL_use_RSAPrivateKey_ASN1(AmiSSLBase, (ssl), (d), (len))

int __SSL_use_PrivateKey(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") EVP_PKEY * pkey ) = "\tjsr\t-8448(a6)";
#define SSL_use_PrivateKey(ssl, pkey) __SSL_use_PrivateKey(AmiSSLBase, (ssl), (pkey))

int __SSL_use_PrivateKey_ASN1(__reg("a6") struct Library * , __reg("d0") int pk , __reg("a0") SSL * ssl , __reg("a1") const unsigned char * d , __reg("d1") long len ) = "\tjsr\t-8454(a6)";
#define SSL_use_PrivateKey_ASN1(pk, ssl, d, len) __SSL_use_PrivateKey_ASN1(AmiSSLBase, (pk), (ssl), (d), (len))

int __SSL_use_certificate(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") X509 * x ) = "\tjsr\t-8460(a6)";
#define SSL_use_certificate(ssl, x) __SSL_use_certificate(AmiSSLBase, (ssl), (x))

int __SSL_use_certificate_ASN1(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const unsigned char * d , __reg("d0") int len ) = "\tjsr\t-8466(a6)";
#define SSL_use_certificate_ASN1(ssl, d, len) __SSL_use_certificate_ASN1(AmiSSLBase, (ssl), (d), (len))

int __SSL_use_RSAPrivateKey_file(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const char * file , __reg("d0") int type ) = "\tjsr\t-8472(a6)";
#define SSL_use_RSAPrivateKey_file(ssl, file, type) __SSL_use_RSAPrivateKey_file(AmiSSLBase, (ssl), (file), (type))

int __SSL_use_PrivateKey_file(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const char * file , __reg("d0") int type ) = "\tjsr\t-8478(a6)";
#define SSL_use_PrivateKey_file(ssl, file, type) __SSL_use_PrivateKey_file(AmiSSLBase, (ssl), (file), (type))

int __SSL_use_certificate_file(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const char * file , __reg("d0") int type ) = "\tjsr\t-8484(a6)";
#define SSL_use_certificate_file(ssl, file, type) __SSL_use_certificate_file(AmiSSLBase, (ssl), (file), (type))

int __SSL_CTX_use_RSAPrivateKey_file(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * file , __reg("d0") int type ) = "\tjsr\t-8490(a6)";
#define SSL_CTX_use_RSAPrivateKey_file(ctx, file, type) __SSL_CTX_use_RSAPrivateKey_file(AmiSSLBase, (ctx), (file), (type))

int __SSL_CTX_use_PrivateKey_file(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * file , __reg("d0") int type ) = "\tjsr\t-8496(a6)";
#define SSL_CTX_use_PrivateKey_file(ctx, file, type) __SSL_CTX_use_PrivateKey_file(AmiSSLBase, (ctx), (file), (type))

int __SSL_CTX_use_certificate_file(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * file , __reg("d0") int type ) = "\tjsr\t-8502(a6)";
#define SSL_CTX_use_certificate_file(ctx, file, type) __SSL_CTX_use_certificate_file(AmiSSLBase, (ctx), (file), (type))

int __SSL_CTX_use_certificate_chain_file(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * file ) = "\tjsr\t-8508(a6)";
#define SSL_CTX_use_certificate_chain_file(ctx, file) __SSL_CTX_use_certificate_chain_file(AmiSSLBase, (ctx), (file))

STACK_OF(X509_NAME) * __SSL_load_client_CA_file(__reg("a6") struct Library * , __reg("a0") const char * file ) = "\tjsr\t-8514(a6)";
#define SSL_load_client_CA_file(file) __SSL_load_client_CA_file(AmiSSLBase, (file))

int __SSL_add_file_cert_subjects_to_stack(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_NAME) * stackCAs , __reg("a1") const char * file ) = "\tjsr\t-8520(a6)";
#define SSL_add_file_cert_subjects_to_stack(stackCAs, file) __SSL_add_file_cert_subjects_to_stack(AmiSSLBase, (stackCAs), (file))

int __SSL_add_dir_cert_subjects_to_stack(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_NAME) * stackCAs , __reg("a1") const char * dir ) = "\tjsr\t-8526(a6)";
#define SSL_add_dir_cert_subjects_to_stack(stackCAs, dir) __SSL_add_dir_cert_subjects_to_stack(AmiSSLBase, (stackCAs), (dir))

void __OBSOLETE_SSL_load_error_strings(__reg("a6") struct Library * ) = "\tjsr\t-8532(a6)";
#define OBSOLETE_SSL_load_error_strings() __OBSOLETE_SSL_load_error_strings(AmiSSLBase)

const char * __SSL_state_string(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8538(a6)";
#define SSL_state_string(s) __SSL_state_string(AmiSSLBase, (s))

const char * __SSL_rstate_string(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8544(a6)";
#define SSL_rstate_string(s) __SSL_rstate_string(AmiSSLBase, (s))

const char * __SSL_state_string_long(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8550(a6)";
#define SSL_state_string_long(s) __SSL_state_string_long(AmiSSLBase, (s))

const char * __SSL_rstate_string_long(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8556(a6)";
#define SSL_rstate_string_long(s) __SSL_rstate_string_long(AmiSSLBase, (s))

long __SSL_SESSION_get_time(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s ) = "\tjsr\t-8562(a6)";
#define SSL_SESSION_get_time(s) __SSL_SESSION_get_time(AmiSSLBase, (s))

long __SSL_SESSION_set_time(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * s , __reg("d0") long t ) = "\tjsr\t-8568(a6)";
#define SSL_SESSION_set_time(s, t) __SSL_SESSION_set_time(AmiSSLBase, (s), (t))

long __SSL_SESSION_get_timeout(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s ) = "\tjsr\t-8574(a6)";
#define SSL_SESSION_get_timeout(s) __SSL_SESSION_get_timeout(AmiSSLBase, (s))

long __SSL_SESSION_set_timeout(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * s , __reg("d0") long t ) = "\tjsr\t-8580(a6)";
#define SSL_SESSION_set_timeout(s, t) __SSL_SESSION_set_timeout(AmiSSLBase, (s), (t))

int __SSL_copy_session_id(__reg("a6") struct Library * , __reg("a0") SSL * to , __reg("a1") const SSL * from ) = "\tjsr\t-8586(a6)";
#define SSL_copy_session_id(to, from) __SSL_copy_session_id(AmiSSLBase, (to), (from))

SSL_SESSION * __SSL_SESSION_new(__reg("a6") struct Library * ) = "\tjsr\t-8592(a6)";
#define SSL_SESSION_new() __SSL_SESSION_new(AmiSSLBase)

int __SSL_SESSION_print(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") const SSL_SESSION * ses ) = "\tjsr\t-8610(a6)";
#define SSL_SESSION_print(fp, ses) __SSL_SESSION_print(AmiSSLBase, (fp), (ses))

void __SSL_SESSION_free(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * ses ) = "\tjsr\t-8616(a6)";
#define SSL_SESSION_free(ses) __SSL_SESSION_free(AmiSSLBase, (ses))

int __i2d_SSL_SESSION(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * in , __reg("a1") unsigned char ** pp ) = "\tjsr\t-8622(a6)";
#define i2d_SSL_SESSION(in, pp) __i2d_SSL_SESSION(AmiSSLBase, (in), (pp))

int __SSL_set_session(__reg("a6") struct Library * , __reg("a0") SSL * to , __reg("a1") SSL_SESSION * session ) = "\tjsr\t-8628(a6)";
#define SSL_set_session(to, session) __SSL_set_session(AmiSSLBase, (to), (session))

int __SSL_CTX_add_session(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_SESSION * session ) = "\tjsr\t-8634(a6)";
#define SSL_CTX_add_session(ctx, session) __SSL_CTX_add_session(AmiSSLBase, (ctx), (session))

int __SSL_CTX_remove_session(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_SESSION * session ) = "\tjsr\t-8640(a6)";
#define SSL_CTX_remove_session(ctx, session) __SSL_CTX_remove_session(AmiSSLBase, (ctx), (session))

int __SSL_CTX_set_generate_session_id(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") GEN_SESSION_CB cb ) = "\tjsr\t-8646(a6)";
#define SSL_CTX_set_generate_session_id(ctx, cb) __SSL_CTX_set_generate_session_id(AmiSSLBase, (ctx), (cb))

int __SSL_set_generate_session_id(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") GEN_SESSION_CB cb ) = "\tjsr\t-8652(a6)";
#define SSL_set_generate_session_id(s, cb) __SSL_set_generate_session_id(AmiSSLBase, (s), (cb))

int __SSL_has_matching_session_id(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("a1") const unsigned char * id , __reg("d0") unsigned int id_len ) = "\tjsr\t-8658(a6)";
#define SSL_has_matching_session_id(s, id, id_len) __SSL_has_matching_session_id(AmiSSLBase, (s), (id), (id_len))

SSL_SESSION * __d2i_SSL_SESSION(__reg("a6") struct Library * , __reg("a0") SSL_SESSION ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-8664(a6)";
#define d2i_SSL_SESSION(a, pp, length) __d2i_SSL_SESSION(AmiSSLBase, (a), (pp), (length))

X509 * __SSL_get1_peer_certificate(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8670(a6)";
#define SSL_get1_peer_certificate(s) __SSL_get1_peer_certificate(AmiSSLBase, (s))

STACK_OF(X509) * __SSL_get_peer_cert_chain(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8676(a6)";
#define SSL_get_peer_cert_chain(s) __SSL_get_peer_cert_chain(AmiSSLBase, (s))

int __SSL_CTX_get_verify_mode(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-8682(a6)";
#define SSL_CTX_get_verify_mode(ctx) __SSL_CTX_get_verify_mode(AmiSSLBase, (ctx))

int __SSL_CTX_get_verify_depth(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-8688(a6)";
#define SSL_CTX_get_verify_depth(ctx) __SSL_CTX_get_verify_depth(AmiSSLBase, (ctx))

int  (* __SSL_CTX_get_verify_callback(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) )(int, X509_STORE_CTX *) =  "\tjsr\t-8694(a6)";
#define SSL_CTX_get_verify_callback(ctx) __SSL_CTX_get_verify_callback(AmiSSLBase, (ctx))

void __SSL_CTX_set_verify(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int mode , __reg("a1") int (*callback)(int,X509_STORE_CTX *) ) = "\tjsr\t-8700(a6)";
#define SSL_CTX_set_verify(ctx, mode, callback) __SSL_CTX_set_verify(AmiSSLBase, (ctx), (mode), (callback))

void __SSL_CTX_set_verify_depth(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int depth ) = "\tjsr\t-8706(a6)";
#define SSL_CTX_set_verify_depth(ctx, depth) __SSL_CTX_set_verify_depth(AmiSSLBase, (ctx), (depth))

void __SSL_CTX_set_cert_verify_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*cb)(X509_STORE_CTX *,void *) , __reg("a2") void * arg ) = "\tjsr\t-8712(a6)";
#define SSL_CTX_set_cert_verify_callback(ctx, cb, arg) __SSL_CTX_set_cert_verify_callback(AmiSSLBase, (ctx), (cb), (arg))

int __SSL_CTX_use_RSAPrivateKey(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") RSA * rsa ) = "\tjsr\t-8718(a6)";
#define SSL_CTX_use_RSAPrivateKey(ctx, rsa) __SSL_CTX_use_RSAPrivateKey(AmiSSLBase, (ctx), (rsa))

int __SSL_CTX_use_RSAPrivateKey_ASN1(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const unsigned char * d , __reg("d0") long len ) = "\tjsr\t-8724(a6)";
#define SSL_CTX_use_RSAPrivateKey_ASN1(ctx, d, len) __SSL_CTX_use_RSAPrivateKey_ASN1(AmiSSLBase, (ctx), (d), (len))

int __SSL_CTX_use_PrivateKey(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") EVP_PKEY * pkey ) = "\tjsr\t-8730(a6)";
#define SSL_CTX_use_PrivateKey(ctx, pkey) __SSL_CTX_use_PrivateKey(AmiSSLBase, (ctx), (pkey))

int __SSL_CTX_use_PrivateKey_ASN1(__reg("a6") struct Library * , __reg("d0") int pk , __reg("a0") SSL_CTX * ctx , __reg("a1") const unsigned char * d , __reg("d1") long len ) = "\tjsr\t-8736(a6)";
#define SSL_CTX_use_PrivateKey_ASN1(pk, ctx, d, len) __SSL_CTX_use_PrivateKey_ASN1(AmiSSLBase, (pk), (ctx), (d), (len))

int __SSL_CTX_use_certificate(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") X509 * x ) = "\tjsr\t-8742(a6)";
#define SSL_CTX_use_certificate(ctx, x) __SSL_CTX_use_certificate(AmiSSLBase, (ctx), (x))

int __SSL_CTX_use_certificate_ASN1(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int len , __reg("a1") const unsigned char * d ) = "\tjsr\t-8748(a6)";
#define SSL_CTX_use_certificate_ASN1(ctx, len, d) __SSL_CTX_use_certificate_ASN1(AmiSSLBase, (ctx), (len), (d))

void __SSL_CTX_set_default_passwd_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") pem_password_cb * cb ) = "\tjsr\t-8754(a6)";
#define SSL_CTX_set_default_passwd_cb(ctx, cb) __SSL_CTX_set_default_passwd_cb(AmiSSLBase, (ctx), (cb))

void __SSL_CTX_set_default_passwd_cb_userdata(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") void * u ) = "\tjsr\t-8760(a6)";
#define SSL_CTX_set_default_passwd_cb_userdata(ctx, u) __SSL_CTX_set_default_passwd_cb_userdata(AmiSSLBase, (ctx), (u))

int __SSL_CTX_check_private_key(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-8766(a6)";
#define SSL_CTX_check_private_key(ctx) __SSL_CTX_check_private_key(AmiSSLBase, (ctx))

int __SSL_check_private_key(__reg("a6") struct Library * , __reg("a0") const SSL * ctx ) = "\tjsr\t-8772(a6)";
#define SSL_check_private_key(ctx) __SSL_check_private_key(AmiSSLBase, (ctx))

int __SSL_CTX_set_session_id_context(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const unsigned char * sid_ctx , __reg("d0") unsigned int sid_ctx_len ) = "\tjsr\t-8778(a6)";
#define SSL_CTX_set_session_id_context(ctx, sid_ctx, sid_ctx_len) __SSL_CTX_set_session_id_context(AmiSSLBase, (ctx), (sid_ctx), (sid_ctx_len))

SSL * __SSL_new(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-8784(a6)";
#define SSL_new(ctx) __SSL_new(AmiSSLBase, (ctx))

int __SSL_set_session_id_context(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const unsigned char * sid_ctx , __reg("d0") unsigned int sid_ctx_len ) = "\tjsr\t-8790(a6)";
#define SSL_set_session_id_context(ssl, sid_ctx, sid_ctx_len) __SSL_set_session_id_context(AmiSSLBase, (ssl), (sid_ctx), (sid_ctx_len))

int __SSL_CTX_set_purpose(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int purpose ) = "\tjsr\t-8796(a6)";
#define SSL_CTX_set_purpose(ctx, purpose) __SSL_CTX_set_purpose(AmiSSLBase, (ctx), (purpose))

int __SSL_set_purpose(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("d0") int purpose ) = "\tjsr\t-8802(a6)";
#define SSL_set_purpose(ssl, purpose) __SSL_set_purpose(AmiSSLBase, (ssl), (purpose))

int __SSL_CTX_set_trust(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int trust ) = "\tjsr\t-8808(a6)";
#define SSL_CTX_set_trust(ctx, trust) __SSL_CTX_set_trust(AmiSSLBase, (ctx), (trust))

int __SSL_set_trust(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("d0") int trust ) = "\tjsr\t-8814(a6)";
#define SSL_set_trust(ssl, trust) __SSL_set_trust(AmiSSLBase, (ssl), (trust))

void __SSL_free(__reg("a6") struct Library * , __reg("a0") SSL * ssl ) = "\tjsr\t-8820(a6)";
#define SSL_free(ssl) __SSL_free(AmiSSLBase, (ssl))

int __SSL_accept(__reg("a6") struct Library * , __reg("a0") SSL * ssl ) = "\tjsr\t-8826(a6)";
#define SSL_accept(ssl) __SSL_accept(AmiSSLBase, (ssl))

int __SSL_connect(__reg("a6") struct Library * , __reg("a0") SSL * ssl ) = "\tjsr\t-8832(a6)";
#define SSL_connect(ssl) __SSL_connect(AmiSSLBase, (ssl))

int __SSL_read(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") void * buf , __reg("d0") int num ) = "\tjsr\t-8838(a6)";
#define SSL_read(ssl, buf, num) __SSL_read(AmiSSLBase, (ssl), (buf), (num))

int __SSL_peek(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") void * buf , __reg("d0") int num ) = "\tjsr\t-8844(a6)";
#define SSL_peek(ssl, buf, num) __SSL_peek(AmiSSLBase, (ssl), (buf), (num))

int __SSL_write(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const void * buf , __reg("d0") int num ) = "\tjsr\t-8850(a6)";
#define SSL_write(ssl, buf, num) __SSL_write(AmiSSLBase, (ssl), (buf), (num))

long __SSL_ctrl(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("d0") int cmd , __reg("d1") long larg , __reg("a1") void * parg ) = "\tjsr\t-8856(a6)";
#define SSL_ctrl(ssl, cmd, larg, parg) __SSL_ctrl(AmiSSLBase, (ssl), (cmd), (larg), (parg))

long __SSL_callback_ctrl(__reg("a6") struct Library * , __reg("a0") SSL * a , __reg("d0") int a1 , __reg("a1") void (*b)() ) = "\tjsr\t-8862(a6)";
#define SSL_callback_ctrl(a, a1, b) __SSL_callback_ctrl(AmiSSLBase, (a), (a1), (b))

long __SSL_CTX_ctrl(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int cmd , __reg("d1") long larg , __reg("a1") void * parg ) = "\tjsr\t-8868(a6)";
#define SSL_CTX_ctrl(ctx, cmd, larg, parg) __SSL_CTX_ctrl(AmiSSLBase, (ctx), (cmd), (larg), (parg))

long __SSL_CTX_callback_ctrl(__reg("a6") struct Library * , __reg("a0") SSL_CTX * a1 , __reg("d0") int a2 , __reg("a1") void (*a3)(void) ) = "\tjsr\t-8874(a6)";
#define SSL_CTX_callback_ctrl(a1, a2, a3) __SSL_CTX_callback_ctrl(AmiSSLBase, (a1), (a2), (a3))

int __SSL_get_error(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("d0") int ret_code ) = "\tjsr\t-8880(a6)";
#define SSL_get_error(s, ret_code) __SSL_get_error(AmiSSLBase, (s), (ret_code))

const char * __SSL_get_version(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8886(a6)";
#define SSL_get_version(s) __SSL_get_version(AmiSSLBase, (s))

int __SSL_CTX_set_ssl_version(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const SSL_METHOD * meth ) = "\tjsr\t-8892(a6)";
#define SSL_CTX_set_ssl_version(ctx, meth) __SSL_CTX_set_ssl_version(AmiSSLBase, (ctx), (meth))

const SSL_METHOD * __TLSv1_method(__reg("a6") struct Library * ) = "\tjsr\t-8952(a6)";
#define TLSv1_method() __TLSv1_method(AmiSSLBase)

const SSL_METHOD * __TLSv1_server_method(__reg("a6") struct Library * ) = "\tjsr\t-8958(a6)";
#define TLSv1_server_method() __TLSv1_server_method(AmiSSLBase)

const SSL_METHOD * __TLSv1_client_method(__reg("a6") struct Library * ) = "\tjsr\t-8964(a6)";
#define TLSv1_client_method() __TLSv1_client_method(AmiSSLBase)

STACK_OF(SSL_CIPHER) * __SSL_get_ciphers(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8970(a6)";
#define SSL_get_ciphers(s) __SSL_get_ciphers(AmiSSLBase, (s))

int __SSL_do_handshake(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-8976(a6)";
#define SSL_do_handshake(s) __SSL_do_handshake(AmiSSLBase, (s))

int __SSL_renegotiate(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-8982(a6)";
#define SSL_renegotiate(s) __SSL_renegotiate(AmiSSLBase, (s))

int __SSL_renegotiate_pending(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-8988(a6)";
#define SSL_renegotiate_pending(s) __SSL_renegotiate_pending(AmiSSLBase, (s))

int __SSL_shutdown(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-8994(a6)";
#define SSL_shutdown(s) __SSL_shutdown(AmiSSLBase, (s))

const SSL_METHOD * __SSL_get_ssl_method(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-9000(a6)";
#define SSL_get_ssl_method(s) __SSL_get_ssl_method(AmiSSLBase, (s))

int __SSL_set_ssl_method(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const SSL_METHOD * method ) = "\tjsr\t-9006(a6)";
#define SSL_set_ssl_method(s, method) __SSL_set_ssl_method(AmiSSLBase, (s), (method))

const char * __SSL_alert_type_string_long(__reg("a6") struct Library * , __reg("d0") int value ) = "\tjsr\t-9012(a6)";
#define SSL_alert_type_string_long(value) __SSL_alert_type_string_long(AmiSSLBase, (value))

const char * __SSL_alert_type_string(__reg("a6") struct Library * , __reg("d0") int value ) = "\tjsr\t-9018(a6)";
#define SSL_alert_type_string(value) __SSL_alert_type_string(AmiSSLBase, (value))

const char * __SSL_alert_desc_string_long(__reg("a6") struct Library * , __reg("d0") int value ) = "\tjsr\t-9024(a6)";
#define SSL_alert_desc_string_long(value) __SSL_alert_desc_string_long(AmiSSLBase, (value))

const char * __SSL_alert_desc_string(__reg("a6") struct Library * , __reg("d0") int value ) = "\tjsr\t-9030(a6)";
#define SSL_alert_desc_string(value) __SSL_alert_desc_string(AmiSSLBase, (value))

void __SSL_set_client_CA_list(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") STACK_OF(X509_NAME) * name_list ) = "\tjsr\t-9036(a6)";
#define SSL_set_client_CA_list(s, name_list) __SSL_set_client_CA_list(AmiSSLBase, (s), (name_list))

void __SSL_CTX_set_client_CA_list(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") STACK_OF(X509_NAME) * name_list ) = "\tjsr\t-9042(a6)";
#define SSL_CTX_set_client_CA_list(ctx, name_list) __SSL_CTX_set_client_CA_list(AmiSSLBase, (ctx), (name_list))

STACK_OF(X509_NAME) * __SSL_get_client_CA_list(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-9048(a6)";
#define SSL_get_client_CA_list(s) __SSL_get_client_CA_list(AmiSSLBase, (s))

STACK_OF(X509_NAME) * __SSL_CTX_get_client_CA_list(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * s ) = "\tjsr\t-9054(a6)";
#define SSL_CTX_get_client_CA_list(s) __SSL_CTX_get_client_CA_list(AmiSSLBase, (s))

int __SSL_add_client_CA(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") X509 * x ) = "\tjsr\t-9060(a6)";
#define SSL_add_client_CA(ssl, x) __SSL_add_client_CA(AmiSSLBase, (ssl), (x))

int __SSL_CTX_add_client_CA(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") X509 * x ) = "\tjsr\t-9066(a6)";
#define SSL_CTX_add_client_CA(ctx, x) __SSL_CTX_add_client_CA(AmiSSLBase, (ctx), (x))

void __SSL_set_connect_state(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-9072(a6)";
#define SSL_set_connect_state(s) __SSL_set_connect_state(AmiSSLBase, (s))

void __SSL_set_accept_state(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-9078(a6)";
#define SSL_set_accept_state(s) __SSL_set_accept_state(AmiSSLBase, (s))

long __SSL_get_default_timeout(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-9084(a6)";
#define SSL_get_default_timeout(s) __SSL_get_default_timeout(AmiSSLBase, (s))

int __OBSOLETE_SSL_library_init(__reg("a6") struct Library * ) = "\tjsr\t-9090(a6)";
#define OBSOLETE_SSL_library_init() __OBSOLETE_SSL_library_init(AmiSSLBase)

char * __SSL_CIPHER_description(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * a1 , __reg("a1") char * buf , __reg("d0") int size ) = "\tjsr\t-9096(a6)";
#define SSL_CIPHER_description(a1, buf, size) __SSL_CIPHER_description(AmiSSLBase, (a1), (buf), (size))

STACK_OF(X509_NAME) * __SSL_dup_CA_list(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_NAME) * sk ) = "\tjsr\t-9102(a6)";
#define SSL_dup_CA_list(sk) __SSL_dup_CA_list(AmiSSLBase, (sk))

SSL * __SSL_dup(__reg("a6") struct Library * , __reg("a0") SSL * ssl ) = "\tjsr\t-9108(a6)";
#define SSL_dup(ssl) __SSL_dup(AmiSSLBase, (ssl))

X509 * __SSL_get_certificate(__reg("a6") struct Library * , __reg("a0") const SSL * ssl ) = "\tjsr\t-9114(a6)";
#define SSL_get_certificate(ssl) __SSL_get_certificate(AmiSSLBase, (ssl))

struct evp_pkey_st * __SSL_get_privatekey(__reg("a6") struct Library * , __reg("a0") const SSL * ssl ) = "\tjsr\t-9120(a6)";
#define SSL_get_privatekey(ssl) __SSL_get_privatekey(AmiSSLBase, (ssl))

void __SSL_CTX_set_quiet_shutdown(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int mode ) = "\tjsr\t-9126(a6)";
#define SSL_CTX_set_quiet_shutdown(ctx, mode) __SSL_CTX_set_quiet_shutdown(AmiSSLBase, (ctx), (mode))

int __SSL_CTX_get_quiet_shutdown(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-9132(a6)";
#define SSL_CTX_get_quiet_shutdown(ctx) __SSL_CTX_get_quiet_shutdown(AmiSSLBase, (ctx))

void __SSL_set_quiet_shutdown(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("d0") int mode ) = "\tjsr\t-9138(a6)";
#define SSL_set_quiet_shutdown(ssl, mode) __SSL_set_quiet_shutdown(AmiSSLBase, (ssl), (mode))

int __SSL_get_quiet_shutdown(__reg("a6") struct Library * , __reg("a0") const SSL * ssl ) = "\tjsr\t-9144(a6)";
#define SSL_get_quiet_shutdown(ssl) __SSL_get_quiet_shutdown(AmiSSLBase, (ssl))

void __SSL_set_shutdown(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("d0") int mode ) = "\tjsr\t-9150(a6)";
#define SSL_set_shutdown(ssl, mode) __SSL_set_shutdown(AmiSSLBase, (ssl), (mode))

int __SSL_get_shutdown(__reg("a6") struct Library * , __reg("a0") const SSL * ssl ) = "\tjsr\t-9156(a6)";
#define SSL_get_shutdown(ssl) __SSL_get_shutdown(AmiSSLBase, (ssl))

int __SSL_version(__reg("a6") struct Library * , __reg("a0") const SSL * ssl ) = "\tjsr\t-9162(a6)";
#define SSL_version(ssl) __SSL_version(AmiSSLBase, (ssl))

int __SSL_CTX_set_default_verify_paths(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-9168(a6)";
#define SSL_CTX_set_default_verify_paths(ctx) __SSL_CTX_set_default_verify_paths(AmiSSLBase, (ctx))

int __SSL_CTX_load_verify_locations(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * CAfile , __reg("a2") const char * CApath ) = "\tjsr\t-9174(a6)";
#define SSL_CTX_load_verify_locations(ctx, CAfile, CApath) __SSL_CTX_load_verify_locations(AmiSSLBase, (ctx), (CAfile), (CApath))

SSL_SESSION * __SSL_get_session(__reg("a6") struct Library * , __reg("a0") const SSL * ssl ) = "\tjsr\t-9180(a6)";
#define SSL_get_session(ssl) __SSL_get_session(AmiSSLBase, (ssl))

SSL_SESSION * __SSL_get1_session(__reg("a6") struct Library * , __reg("a0") SSL * ssl ) = "\tjsr\t-9186(a6)";
#define SSL_get1_session(ssl) __SSL_get1_session(AmiSSLBase, (ssl))

SSL_CTX * __SSL_get_SSL_CTX(__reg("a6") struct Library * , __reg("a0") const SSL * ssl ) = "\tjsr\t-9192(a6)";
#define SSL_get_SSL_CTX(ssl) __SSL_get_SSL_CTX(AmiSSLBase, (ssl))

void __SSL_set_info_callback(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") void (*cb)(const SSL *ssl,int type,int val) ) = "\tjsr\t-9198(a6)";
#define SSL_set_info_callback(ssl, cb) __SSL_set_info_callback(AmiSSLBase, (ssl), (cb))

void  (* __SSL_get_info_callback(__reg("a6") struct Library * , __reg("a0") const SSL * ssl ) )(const SSL *ssl, int type, int val) =  "\tjsr\t-9204(a6)";
#define SSL_get_info_callback(ssl) __SSL_get_info_callback(AmiSSLBase, (ssl))

void __SSL_set_verify_result(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("d0") long v ) = "\tjsr\t-9216(a6)";
#define SSL_set_verify_result(ssl, v) __SSL_set_verify_result(AmiSSLBase, (ssl), (v))

long __SSL_get_verify_result(__reg("a6") struct Library * , __reg("a0") const SSL * ssl ) = "\tjsr\t-9222(a6)";
#define SSL_get_verify_result(ssl) __SSL_get_verify_result(AmiSSLBase, (ssl))

int __SSL_set_ex_data(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("d0") int idx , __reg("a1") void * data ) = "\tjsr\t-9228(a6)";
#define SSL_set_ex_data(ssl, idx, data) __SSL_set_ex_data(AmiSSLBase, (ssl), (idx), (data))

void * __SSL_get_ex_data(__reg("a6") struct Library * , __reg("a0") const SSL * ssl , __reg("d0") int idx ) = "\tjsr\t-9234(a6)";
#define SSL_get_ex_data(ssl, idx) __SSL_get_ex_data(AmiSSLBase, (ssl), (idx))

int __OBSOLETE_SSL_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dup_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-9240(a6)";
#define OBSOLETE_SSL_get_ex_new_index(argl, argp, new_func, dup_func, free_func) __OBSOLETE_SSL_get_ex_new_index(AmiSSLBase, (argl), (argp), (new_func), (dup_func), (free_func))

int __SSL_SESSION_set_ex_data(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * ss , __reg("d0") int idx , __reg("a1") void * data ) = "\tjsr\t-9246(a6)";
#define SSL_SESSION_set_ex_data(ss, idx, data) __SSL_SESSION_set_ex_data(AmiSSLBase, (ss), (idx), (data))

void * __SSL_SESSION_get_ex_data(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * ss , __reg("d0") int idx ) = "\tjsr\t-9252(a6)";
#define SSL_SESSION_get_ex_data(ss, idx) __SSL_SESSION_get_ex_data(AmiSSLBase, (ss), (idx))

int __OBSOLETE_SSL_SESSION_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dup_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-9258(a6)";
#define OBSOLETE_SSL_SESSION_get_ex_new_index(argl, argp, new_func, dup_func, free_func) __OBSOLETE_SSL_SESSION_get_ex_new_index(AmiSSLBase, (argl), (argp), (new_func), (dup_func), (free_func))

int __SSL_CTX_set_ex_data(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ssl , __reg("d0") int idx , __reg("a1") void * data ) = "\tjsr\t-9264(a6)";
#define SSL_CTX_set_ex_data(ssl, idx, data) __SSL_CTX_set_ex_data(AmiSSLBase, (ssl), (idx), (data))

void * __SSL_CTX_get_ex_data(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ssl , __reg("d0") int idx ) = "\tjsr\t-9270(a6)";
#define SSL_CTX_get_ex_data(ssl, idx) __SSL_CTX_get_ex_data(AmiSSLBase, (ssl), (idx))

int __OBSOLETE_SSL_CTX_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dup_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-9276(a6)";
#define OBSOLETE_SSL_CTX_get_ex_new_index(argl, argp, new_func, dup_func, free_func) __OBSOLETE_SSL_CTX_get_ex_new_index(AmiSSLBase, (argl), (argp), (new_func), (dup_func), (free_func))

int __SSL_get_ex_data_X509_STORE_CTX_idx(__reg("a6") struct Library * ) = "\tjsr\t-9282(a6)";
#define SSL_get_ex_data_X509_STORE_CTX_idx() __SSL_get_ex_data_X509_STORE_CTX_idx(AmiSSLBase)

void __SSL_CTX_set_tmp_dh_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") DH * (*dh)(SSL *ssl,int is_export,int keylength) ) = "\tjsr\t-9300(a6)";
#define SSL_CTX_set_tmp_dh_callback(ctx, dh) __SSL_CTX_set_tmp_dh_callback(AmiSSLBase, (ctx), (dh))

void __SSL_set_tmp_dh_callback(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") DH * (*dh)(SSL *ssl,int is_export,int keylength) ) = "\tjsr\t-9306(a6)";
#define SSL_set_tmp_dh_callback(ssl, dh) __SSL_set_tmp_dh_callback(AmiSSLBase, (ssl), (dh))

int __SSL_COMP_add_compression_method(__reg("a6") struct Library * , __reg("d0") int id , __reg("a0") COMP_METHOD * cm ) = "\tjsr\t-9312(a6)";
#define SSL_COMP_add_compression_method(id, cm) __SSL_COMP_add_compression_method(AmiSSLBase, (id), (cm))

int __ERR_load_SSL_strings(__reg("a6") struct Library * ) = "\tjsr\t-9318(a6)";
#define ERR_load_SSL_strings() __ERR_load_SSL_strings(AmiSSLBase)

int __OPENSSL_sk_num(__reg("a6") struct Library * , __reg("a0") const OPENSSL_STACK * a ) = "\tjsr\t-9324(a6)";
#define OPENSSL_sk_num(a) __OPENSSL_sk_num(AmiSSLBase, (a))

void * __OPENSSL_sk_value(__reg("a6") struct Library * , __reg("a0") const OPENSSL_STACK * a , __reg("d0") int b ) = "\tjsr\t-9330(a6)";
#define OPENSSL_sk_value(a, b) __OPENSSL_sk_value(AmiSSLBase, (a), (b))

void * __OPENSSL_sk_set(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * a , __reg("d0") int b , __reg("a1") const void * c ) = "\tjsr\t-9336(a6)";
#define OPENSSL_sk_set(a, b, c) __OPENSSL_sk_set(AmiSSLBase, (a), (b), (c))

OPENSSL_STACK * __OPENSSL_sk_new(__reg("a6") struct Library * , __reg("a0") int (*cmp)(const void *,const void *) ) = "\tjsr\t-9342(a6)";
#define OPENSSL_sk_new(cmp) __OPENSSL_sk_new(AmiSSLBase, (cmp))

OPENSSL_STACK * __OPENSSL_sk_new_null(__reg("a6") struct Library * ) = "\tjsr\t-9348(a6)";
#define OPENSSL_sk_new_null() __OPENSSL_sk_new_null(AmiSSLBase)

void __OPENSSL_sk_free(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * a ) = "\tjsr\t-9354(a6)";
#define OPENSSL_sk_free(a) __OPENSSL_sk_free(AmiSSLBase, (a))

void __OPENSSL_sk_pop_free(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st , __reg("a1") void (*func)(void *) ) = "\tjsr\t-9360(a6)";
#define OPENSSL_sk_pop_free(st, func) __OPENSSL_sk_pop_free(AmiSSLBase, (st), (func))

int __OPENSSL_sk_insert(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * sk , __reg("a1") const void * data , __reg("d0") int where ) = "\tjsr\t-9366(a6)";
#define OPENSSL_sk_insert(sk, data, where) __OPENSSL_sk_insert(AmiSSLBase, (sk), (data), (where))

void * __OPENSSL_sk_delete(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st , __reg("d0") int loc ) = "\tjsr\t-9372(a6)";
#define OPENSSL_sk_delete(st, loc) __OPENSSL_sk_delete(AmiSSLBase, (st), (loc))

void * __OPENSSL_sk_delete_ptr(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st , __reg("a1") const void * p ) = "\tjsr\t-9378(a6)";
#define OPENSSL_sk_delete_ptr(st, p) __OPENSSL_sk_delete_ptr(AmiSSLBase, (st), (p))

int __OPENSSL_sk_find(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st , __reg("a1") const void * data ) = "\tjsr\t-9384(a6)";
#define OPENSSL_sk_find(st, data) __OPENSSL_sk_find(AmiSSLBase, (st), (data))

int __OPENSSL_sk_push(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st , __reg("a1") const void * data ) = "\tjsr\t-9390(a6)";
#define OPENSSL_sk_push(st, data) __OPENSSL_sk_push(AmiSSLBase, (st), (data))

int __OPENSSL_sk_unshift(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st , __reg("a1") const void * data ) = "\tjsr\t-9396(a6)";
#define OPENSSL_sk_unshift(st, data) __OPENSSL_sk_unshift(AmiSSLBase, (st), (data))

void * __OPENSSL_sk_shift(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st ) = "\tjsr\t-9402(a6)";
#define OPENSSL_sk_shift(st) __OPENSSL_sk_shift(AmiSSLBase, (st))

void * __OPENSSL_sk_pop(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st ) = "\tjsr\t-9408(a6)";
#define OPENSSL_sk_pop(st) __OPENSSL_sk_pop(AmiSSLBase, (st))

void __OPENSSL_sk_zero(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st ) = "\tjsr\t-9414(a6)";
#define OPENSSL_sk_zero(st) __OPENSSL_sk_zero(AmiSSLBase, (st))

int  (* __OPENSSL_sk_set_cmp_func(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * sk , __reg("a1") int (*c)(const void *,const void *) ) )(const void *, const void *) =  "\tjsr\t-9420(a6)";
#define OPENSSL_sk_set_cmp_func(sk, c) __OPENSSL_sk_set_cmp_func(AmiSSLBase, (sk), (c))

OPENSSL_STACK * __OPENSSL_sk_dup(__reg("a6") struct Library * , __reg("a0") const OPENSSL_STACK * st ) = "\tjsr\t-9426(a6)";
#define OPENSSL_sk_dup(st) __OPENSSL_sk_dup(AmiSSLBase, (st))

void __OPENSSL_sk_sort(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st ) = "\tjsr\t-9432(a6)";
#define OPENSSL_sk_sort(st) __OPENSSL_sk_sort(AmiSSLBase, (st))

int __OPENSSL_sk_is_sorted(__reg("a6") struct Library * , __reg("a0") const OPENSSL_STACK * st ) = "\tjsr\t-9438(a6)";
#define OPENSSL_sk_is_sorted(st) __OPENSSL_sk_is_sorted(AmiSSLBase, (st))

TXT_DB * __TXT_DB_read(__reg("a6") struct Library * , __reg("a0") BIO * in , __reg("d0") int num ) = "\tjsr\t-9474(a6)";
#define TXT_DB_read(in, num) __TXT_DB_read(AmiSSLBase, (in), (num))

long __TXT_DB_write(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") TXT_DB * db ) = "\tjsr\t-9480(a6)";
#define TXT_DB_write(out, db) __TXT_DB_write(AmiSSLBase, (out), (db))

int __TXT_DB_create_index(__reg("a6") struct Library * , __reg("a0") TXT_DB * db , __reg("d0") int field , __reg("a1") int (*qual)(OPENSSL_STRING *) , __reg("d1") OPENSSL_LH_HASHFUNC hash , __reg("d2") OPENSSL_LH_COMPFUNC cmp ) = "\tjsr\t-9486(a6)";
#define TXT_DB_create_index(db, field, qual, hash, cmp) __TXT_DB_create_index(AmiSSLBase, (db), (field), (qual), (hash), (cmp))

void __TXT_DB_free(__reg("a6") struct Library * , __reg("a0") TXT_DB * db ) = "\tjsr\t-9492(a6)";
#define TXT_DB_free(db) __TXT_DB_free(AmiSSLBase, (db))

char ** __TXT_DB_get_by_index(__reg("a6") struct Library * , __reg("a0") TXT_DB * db , __reg("d0") int idx , __reg("a1") char ** value ) = "\tjsr\t-9498(a6)";
#define TXT_DB_get_by_index(db, idx, value) __TXT_DB_get_by_index(AmiSSLBase, (db), (idx), (value))

int __TXT_DB_insert(__reg("a6") struct Library * , __reg("a0") TXT_DB * db , __reg("a1") char ** value ) = "\tjsr\t-9504(a6)";
#define TXT_DB_insert(db, value) __TXT_DB_insert(AmiSSLBase, (db), (value))

UI * __UI_new(__reg("a6") struct Library * ) = "\tjsr\t-9510(a6)";
#define UI_new() __UI_new(AmiSSLBase)

UI * __UI_new_method(__reg("a6") struct Library * , __reg("a0") const UI_METHOD * method ) = "\tjsr\t-9516(a6)";
#define UI_new_method(method) __UI_new_method(AmiSSLBase, (method))

void __UI_free(__reg("a6") struct Library * , __reg("a0") UI * ui ) = "\tjsr\t-9522(a6)";
#define UI_free(ui) __UI_free(AmiSSLBase, (ui))

int __UI_add_input_string(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") const char * prompt , __reg("d0") int flags , __reg("a2") char * result_buf , __reg("d1") int minsize , __reg("d2") int maxsize ) = "\tjsr\t-9528(a6)";
#define UI_add_input_string(ui, prompt, flags, result_buf, minsize, maxsize) __UI_add_input_string(AmiSSLBase, (ui), (prompt), (flags), (result_buf), (minsize), (maxsize))

int __UI_dup_input_string(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") const char * prompt , __reg("d0") int flags , __reg("a2") char * result_buf , __reg("d1") int minsize , __reg("d2") int maxsize ) = "\tjsr\t-9534(a6)";
#define UI_dup_input_string(ui, prompt, flags, result_buf, minsize, maxsize) __UI_dup_input_string(AmiSSLBase, (ui), (prompt), (flags), (result_buf), (minsize), (maxsize))

int __UI_add_verify_string(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") const char * prompt , __reg("d0") int flags , __reg("a2") char * result_buf , __reg("d1") int minsize , __reg("d2") int maxsize , __reg("a3") const char * test_buf ) = "\tjsr\t-9540(a6)";
#define UI_add_verify_string(ui, prompt, flags, result_buf, minsize, maxsize, test_buf) __UI_add_verify_string(AmiSSLBase, (ui), (prompt), (flags), (result_buf), (minsize), (maxsize), (test_buf))

int __UI_dup_verify_string(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") const char * prompt , __reg("d0") int flags , __reg("a2") char * result_buf , __reg("d1") int minsize , __reg("d2") int maxsize , __reg("a3") const char * test_buf ) = "\tjsr\t-9546(a6)";
#define UI_dup_verify_string(ui, prompt, flags, result_buf, minsize, maxsize, test_buf) __UI_dup_verify_string(AmiSSLBase, (ui), (prompt), (flags), (result_buf), (minsize), (maxsize), (test_buf))

int __UI_add_input_boolean(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") const char * prompt , __reg("a2") const char * action_desc , __reg("a3") const char * ok_chars , __reg("d0") const char * cancel_chars , __reg("d1") int flags , __reg("d2") char * result_buf ) = "\tjsr\t-9552(a6)";
#define UI_add_input_boolean(ui, prompt, action_desc, ok_chars, cancel_chars, flags, result_buf) __UI_add_input_boolean(AmiSSLBase, (ui), (prompt), (action_desc), (ok_chars), (cancel_chars), (flags), (result_buf))

int __UI_dup_input_boolean(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") const char * prompt , __reg("a2") const char * action_desc , __reg("a3") const char * ok_chars , __reg("d0") const char * cancel_chars , __reg("d1") int flags , __reg("d2") char * result_buf ) = "\tjsr\t-9558(a6)";
#define UI_dup_input_boolean(ui, prompt, action_desc, ok_chars, cancel_chars, flags, result_buf) __UI_dup_input_boolean(AmiSSLBase, (ui), (prompt), (action_desc), (ok_chars), (cancel_chars), (flags), (result_buf))

int __UI_add_info_string(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") const char * text ) = "\tjsr\t-9564(a6)";
#define UI_add_info_string(ui, text) __UI_add_info_string(AmiSSLBase, (ui), (text))

int __UI_dup_info_string(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") const char * text ) = "\tjsr\t-9570(a6)";
#define UI_dup_info_string(ui, text) __UI_dup_info_string(AmiSSLBase, (ui), (text))

int __UI_add_error_string(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") const char * text ) = "\tjsr\t-9576(a6)";
#define UI_add_error_string(ui, text) __UI_add_error_string(AmiSSLBase, (ui), (text))

int __UI_dup_error_string(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") const char * text ) = "\tjsr\t-9582(a6)";
#define UI_dup_error_string(ui, text) __UI_dup_error_string(AmiSSLBase, (ui), (text))

char * __UI_construct_prompt(__reg("a6") struct Library * , __reg("a0") UI * ui_method , __reg("a1") const char * object_desc , __reg("a2") const char * object_name ) = "\tjsr\t-9588(a6)";
#define UI_construct_prompt(ui_method, object_desc, object_name) __UI_construct_prompt(AmiSSLBase, (ui_method), (object_desc), (object_name))

void * __UI_add_user_data(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") void * user_data ) = "\tjsr\t-9594(a6)";
#define UI_add_user_data(ui, user_data) __UI_add_user_data(AmiSSLBase, (ui), (user_data))

void * __UI_get0_user_data(__reg("a6") struct Library * , __reg("a0") UI * ui ) = "\tjsr\t-9600(a6)";
#define UI_get0_user_data(ui) __UI_get0_user_data(AmiSSLBase, (ui))

const char * __UI_get0_result(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("d0") int i ) = "\tjsr\t-9606(a6)";
#define UI_get0_result(ui, i) __UI_get0_result(AmiSSLBase, (ui), (i))

int __UI_process(__reg("a6") struct Library * , __reg("a0") UI * ui ) = "\tjsr\t-9612(a6)";
#define UI_process(ui) __UI_process(AmiSSLBase, (ui))

int __UI_ctrl(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("d0") int cmd , __reg("d1") long i , __reg("a1") void * p , __reg("a2") void (*f)() ) = "\tjsr\t-9618(a6)";
#define UI_ctrl(ui, cmd, i, p, f) __UI_ctrl(AmiSSLBase, (ui), (cmd), (i), (p), (f))

int __OBSOLETE_UI_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dup_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-9624(a6)";
#define OBSOLETE_UI_get_ex_new_index(argl, argp, new_func, dup_func, free_func) __OBSOLETE_UI_get_ex_new_index(AmiSSLBase, (argl), (argp), (new_func), (dup_func), (free_func))

int __UI_set_ex_data(__reg("a6") struct Library * , __reg("a0") UI * r , __reg("d0") int idx , __reg("a1") void * arg ) = "\tjsr\t-9630(a6)";
#define UI_set_ex_data(r, idx, arg) __UI_set_ex_data(AmiSSLBase, (r), (idx), (arg))

void * __UI_get_ex_data(__reg("a6") struct Library * , __reg("a0") const UI * r , __reg("d0") int idx ) = "\tjsr\t-9636(a6)";
#define UI_get_ex_data(r, idx) __UI_get_ex_data(AmiSSLBase, (r), (idx))

void __UI_set_default_method(__reg("a6") struct Library * , __reg("a0") const UI_METHOD * meth ) = "\tjsr\t-9642(a6)";
#define UI_set_default_method(meth) __UI_set_default_method(AmiSSLBase, (meth))

const UI_METHOD * __UI_get_default_method(__reg("a6") struct Library * ) = "\tjsr\t-9648(a6)";
#define UI_get_default_method() __UI_get_default_method(AmiSSLBase)

const UI_METHOD * __UI_get_method(__reg("a6") struct Library * , __reg("a0") UI * ui ) = "\tjsr\t-9654(a6)";
#define UI_get_method(ui) __UI_get_method(AmiSSLBase, (ui))

const UI_METHOD * __UI_set_method(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") const UI_METHOD * meth ) = "\tjsr\t-9660(a6)";
#define UI_set_method(ui, meth) __UI_set_method(AmiSSLBase, (ui), (meth))

UI_METHOD * __UI_OpenSSL(__reg("a6") struct Library * ) = "\tjsr\t-9666(a6)";
#define UI_OpenSSL() __UI_OpenSSL(AmiSSLBase)

UI_METHOD * __UI_create_method(__reg("a6") struct Library * , __reg("a0") const char * name ) = "\tjsr\t-9672(a6)";
#define UI_create_method(name) __UI_create_method(AmiSSLBase, (name))

void __UI_destroy_method(__reg("a6") struct Library * , __reg("a0") UI_METHOD * ui_method ) = "\tjsr\t-9678(a6)";
#define UI_destroy_method(ui_method) __UI_destroy_method(AmiSSLBase, (ui_method))

int __UI_method_set_opener(__reg("a6") struct Library * , __reg("a0") UI_METHOD * method , __reg("a1") int (*opener)(UI *ui) ) = "\tjsr\t-9684(a6)";
#define UI_method_set_opener(method, opener) __UI_method_set_opener(AmiSSLBase, (method), (opener))

int __UI_method_set_writer(__reg("a6") struct Library * , __reg("a0") UI_METHOD * method , __reg("a1") int (*writer)(UI *ui,UI_STRING *uis) ) = "\tjsr\t-9690(a6)";
#define UI_method_set_writer(method, writer) __UI_method_set_writer(AmiSSLBase, (method), (writer))

int __UI_method_set_flusher(__reg("a6") struct Library * , __reg("a0") UI_METHOD * method , __reg("a1") int (*flusher)(UI *ui) ) = "\tjsr\t-9696(a6)";
#define UI_method_set_flusher(method, flusher) __UI_method_set_flusher(AmiSSLBase, (method), (flusher))

int __UI_method_set_reader(__reg("a6") struct Library * , __reg("a0") UI_METHOD * method , __reg("a1") int (*reader)(UI *ui,UI_STRING *uis) ) = "\tjsr\t-9702(a6)";
#define UI_method_set_reader(method, reader) __UI_method_set_reader(AmiSSLBase, (method), (reader))

int __UI_method_set_closer(__reg("a6") struct Library * , __reg("a0") UI_METHOD * method , __reg("a1") int (*closer)(UI *ui) ) = "\tjsr\t-9708(a6)";
#define UI_method_set_closer(method, closer) __UI_method_set_closer(AmiSSLBase, (method), (closer))

int  (* __UI_method_get_opener(__reg("a6") struct Library * , __reg("a0") const UI_METHOD * method ) )(UI *) =  "\tjsr\t-9714(a6)";
#define UI_method_get_opener(method) __UI_method_get_opener(AmiSSLBase, (method))

int  (* __UI_method_get_writer(__reg("a6") struct Library * , __reg("a0") const UI_METHOD * method ) )(UI *, UI_STRING *) =  "\tjsr\t-9720(a6)";
#define UI_method_get_writer(method) __UI_method_get_writer(AmiSSLBase, (method))

int  (* __UI_method_get_flusher(__reg("a6") struct Library * , __reg("a0") const UI_METHOD * method ) )(UI *) =  "\tjsr\t-9726(a6)";
#define UI_method_get_flusher(method) __UI_method_get_flusher(AmiSSLBase, (method))

int  (* __UI_method_get_reader(__reg("a6") struct Library * , __reg("a0") const UI_METHOD * method ) )(UI *, UI_STRING *) =  "\tjsr\t-9732(a6)";
#define UI_method_get_reader(method) __UI_method_get_reader(AmiSSLBase, (method))

int  (* __UI_method_get_closer(__reg("a6") struct Library * , __reg("a0") const UI_METHOD * method ) )(UI *) =  "\tjsr\t-9738(a6)";
#define UI_method_get_closer(method) __UI_method_get_closer(AmiSSLBase, (method))

enum UI_string_types __UI_get_string_type(__reg("a6") struct Library * , __reg("a0") UI_STRING * uis ) = "\tjsr\t-9744(a6)";
#define UI_get_string_type(uis) __UI_get_string_type(AmiSSLBase, (uis))

int __UI_get_input_flags(__reg("a6") struct Library * , __reg("a0") UI_STRING * uis ) = "\tjsr\t-9750(a6)";
#define UI_get_input_flags(uis) __UI_get_input_flags(AmiSSLBase, (uis))

const char * __UI_get0_output_string(__reg("a6") struct Library * , __reg("a0") UI_STRING * uis ) = "\tjsr\t-9756(a6)";
#define UI_get0_output_string(uis) __UI_get0_output_string(AmiSSLBase, (uis))

const char * __UI_get0_action_string(__reg("a6") struct Library * , __reg("a0") UI_STRING * uis ) = "\tjsr\t-9762(a6)";
#define UI_get0_action_string(uis) __UI_get0_action_string(AmiSSLBase, (uis))

const char * __UI_get0_result_string(__reg("a6") struct Library * , __reg("a0") UI_STRING * uis ) = "\tjsr\t-9768(a6)";
#define UI_get0_result_string(uis) __UI_get0_result_string(AmiSSLBase, (uis))

const char * __UI_get0_test_string(__reg("a6") struct Library * , __reg("a0") UI_STRING * uis ) = "\tjsr\t-9774(a6)";
#define UI_get0_test_string(uis) __UI_get0_test_string(AmiSSLBase, (uis))

int __UI_get_result_minsize(__reg("a6") struct Library * , __reg("a0") UI_STRING * uis ) = "\tjsr\t-9780(a6)";
#define UI_get_result_minsize(uis) __UI_get_result_minsize(AmiSSLBase, (uis))

int __UI_get_result_maxsize(__reg("a6") struct Library * , __reg("a0") UI_STRING * uis ) = "\tjsr\t-9786(a6)";
#define UI_get_result_maxsize(uis) __UI_get_result_maxsize(AmiSSLBase, (uis))

int __UI_set_result(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") UI_STRING * uis , __reg("a2") const char * result ) = "\tjsr\t-9792(a6)";
#define UI_set_result(ui, uis, result) __UI_set_result(AmiSSLBase, (ui), (uis), (result))

int __UI_UTIL_read_pw_string(__reg("a6") struct Library * , __reg("a0") char * buf , __reg("d0") int length , __reg("a1") const char * prompt , __reg("d1") int verify ) = "\tjsr\t-9798(a6)";
#define UI_UTIL_read_pw_string(buf, length, prompt, verify) __UI_UTIL_read_pw_string(AmiSSLBase, (buf), (length), (prompt), (verify))

int __UI_UTIL_read_pw(__reg("a6") struct Library * , __reg("a0") char * buf , __reg("a1") char * buff , __reg("d0") int size , __reg("a2") const char * prompt , __reg("d1") int verify ) = "\tjsr\t-9804(a6)";
#define UI_UTIL_read_pw(buf, buff, size, prompt, verify) __UI_UTIL_read_pw(AmiSSLBase, (buf), (buff), (size), (prompt), (verify))

int __ERR_load_UI_strings(__reg("a6") struct Library * ) = "\tjsr\t-9810(a6)";
#define ERR_load_UI_strings() __ERR_load_UI_strings(AmiSSLBase)

const char * __X509_verify_cert_error_string(__reg("a6") struct Library * , __reg("d0") long n ) = "\tjsr\t-9828(a6)";
#define X509_verify_cert_error_string(n) __X509_verify_cert_error_string(AmiSSLBase, (n))

int __X509_verify(__reg("a6") struct Library * , __reg("a0") X509 * a , __reg("a1") EVP_PKEY * r ) = "\tjsr\t-9834(a6)";
#define X509_verify(a, r) __X509_verify(AmiSSLBase, (a), (r))

int __X509_REQ_verify(__reg("a6") struct Library * , __reg("a0") X509_REQ * a , __reg("a1") EVP_PKEY * r ) = "\tjsr\t-9840(a6)";
#define X509_REQ_verify(a, r) __X509_REQ_verify(AmiSSLBase, (a), (r))

int __X509_CRL_verify(__reg("a6") struct Library * , __reg("a0") X509_CRL * a , __reg("a1") EVP_PKEY * r ) = "\tjsr\t-9846(a6)";
#define X509_CRL_verify(a, r) __X509_CRL_verify(AmiSSLBase, (a), (r))

int __NETSCAPE_SPKI_verify(__reg("a6") struct Library * , __reg("a0") NETSCAPE_SPKI * a , __reg("a1") EVP_PKEY * r ) = "\tjsr\t-9852(a6)";
#define NETSCAPE_SPKI_verify(a, r) __NETSCAPE_SPKI_verify(AmiSSLBase, (a), (r))

NETSCAPE_SPKI * __NETSCAPE_SPKI_b64_decode(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("d0") int len ) = "\tjsr\t-9858(a6)";
#define NETSCAPE_SPKI_b64_decode(str, len) __NETSCAPE_SPKI_b64_decode(AmiSSLBase, (str), (len))

char * __NETSCAPE_SPKI_b64_encode(__reg("a6") struct Library * , __reg("a0") NETSCAPE_SPKI * x ) = "\tjsr\t-9864(a6)";
#define NETSCAPE_SPKI_b64_encode(x) __NETSCAPE_SPKI_b64_encode(AmiSSLBase, (x))

EVP_PKEY * __NETSCAPE_SPKI_get_pubkey(__reg("a6") struct Library * , __reg("a0") NETSCAPE_SPKI * x ) = "\tjsr\t-9870(a6)";
#define NETSCAPE_SPKI_get_pubkey(x) __NETSCAPE_SPKI_get_pubkey(AmiSSLBase, (x))

int __NETSCAPE_SPKI_set_pubkey(__reg("a6") struct Library * , __reg("a0") NETSCAPE_SPKI * x , __reg("a1") EVP_PKEY * pkey ) = "\tjsr\t-9876(a6)";
#define NETSCAPE_SPKI_set_pubkey(x, pkey) __NETSCAPE_SPKI_set_pubkey(AmiSSLBase, (x), (pkey))

int __NETSCAPE_SPKI_print(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") NETSCAPE_SPKI * spki ) = "\tjsr\t-9882(a6)";
#define NETSCAPE_SPKI_print(out, spki) __NETSCAPE_SPKI_print(AmiSSLBase, (out), (spki))

int __X509_signature_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509_ALGOR * alg , __reg("a2") const ASN1_STRING * sig ) = "\tjsr\t-9888(a6)";
#define X509_signature_print(bp, alg, sig) __X509_signature_print(AmiSSLBase, (bp), (alg), (sig))

int __X509_sign(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") EVP_PKEY * pkey , __reg("a2") const EVP_MD * md ) = "\tjsr\t-9894(a6)";
#define X509_sign(x, pkey, md) __X509_sign(AmiSSLBase, (x), (pkey), (md))

int __X509_REQ_sign(__reg("a6") struct Library * , __reg("a0") X509_REQ * x , __reg("a1") EVP_PKEY * pkey , __reg("a2") const EVP_MD * md ) = "\tjsr\t-9900(a6)";
#define X509_REQ_sign(x, pkey, md) __X509_REQ_sign(AmiSSLBase, (x), (pkey), (md))

int __X509_CRL_sign(__reg("a6") struct Library * , __reg("a0") X509_CRL * x , __reg("a1") EVP_PKEY * pkey , __reg("a2") const EVP_MD * md ) = "\tjsr\t-9906(a6)";
#define X509_CRL_sign(x, pkey, md) __X509_CRL_sign(AmiSSLBase, (x), (pkey), (md))

int __NETSCAPE_SPKI_sign(__reg("a6") struct Library * , __reg("a0") NETSCAPE_SPKI * x , __reg("a1") EVP_PKEY * pkey , __reg("a2") const EVP_MD * md ) = "\tjsr\t-9912(a6)";
#define NETSCAPE_SPKI_sign(x, pkey, md) __NETSCAPE_SPKI_sign(AmiSSLBase, (x), (pkey), (md))

int __X509_pubkey_digest(__reg("a6") struct Library * , __reg("a0") const X509 * data , __reg("a1") const EVP_MD * type , __reg("a2") unsigned char * md , __reg("a3") unsigned int * len ) = "\tjsr\t-9918(a6)";
#define X509_pubkey_digest(data, type, md, len) __X509_pubkey_digest(AmiSSLBase, (data), (type), (md), (len))

int __X509_digest(__reg("a6") struct Library * , __reg("a0") const X509 * data , __reg("a1") const EVP_MD * type , __reg("a2") unsigned char * md , __reg("a3") unsigned int * len ) = "\tjsr\t-9924(a6)";
#define X509_digest(data, type, md, len) __X509_digest(AmiSSLBase, (data), (type), (md), (len))

int __X509_CRL_digest(__reg("a6") struct Library * , __reg("a0") const X509_CRL * data , __reg("a1") const EVP_MD * type , __reg("a2") unsigned char * md , __reg("a3") unsigned int * len ) = "\tjsr\t-9930(a6)";
#define X509_CRL_digest(data, type, md, len) __X509_CRL_digest(AmiSSLBase, (data), (type), (md), (len))

int __X509_REQ_digest(__reg("a6") struct Library * , __reg("a0") const X509_REQ * data , __reg("a1") const EVP_MD * type , __reg("a2") unsigned char * md , __reg("a3") unsigned int * len ) = "\tjsr\t-9936(a6)";
#define X509_REQ_digest(data, type, md, len) __X509_REQ_digest(AmiSSLBase, (data), (type), (md), (len))

int __X509_NAME_digest(__reg("a6") struct Library * , __reg("a0") const X509_NAME * data , __reg("a1") const EVP_MD * type , __reg("a2") unsigned char * md , __reg("a3") unsigned int * len ) = "\tjsr\t-9942(a6)";
#define X509_NAME_digest(data, type, md, len) __X509_NAME_digest(AmiSSLBase, (data), (type), (md), (len))

X509 * __d2i_X509_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509 ** x509 ) = "\tjsr\t-9948(a6)";
#define d2i_X509_bio(bp, x509) __d2i_X509_bio(AmiSSLBase, (bp), (x509))

int __i2d_X509_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509 * x509 ) = "\tjsr\t-9954(a6)";
#define i2d_X509_bio(bp, x509) __i2d_X509_bio(AmiSSLBase, (bp), (x509))

X509_CRL * __d2i_X509_CRL_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509_CRL ** crl ) = "\tjsr\t-9960(a6)";
#define d2i_X509_CRL_bio(bp, crl) __d2i_X509_CRL_bio(AmiSSLBase, (bp), (crl))

int __i2d_X509_CRL_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509_CRL * crl ) = "\tjsr\t-9966(a6)";
#define i2d_X509_CRL_bio(bp, crl) __i2d_X509_CRL_bio(AmiSSLBase, (bp), (crl))

X509_REQ * __d2i_X509_REQ_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509_REQ ** req ) = "\tjsr\t-9972(a6)";
#define d2i_X509_REQ_bio(bp, req) __d2i_X509_REQ_bio(AmiSSLBase, (bp), (req))

int __i2d_X509_REQ_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509_REQ * req ) = "\tjsr\t-9978(a6)";
#define i2d_X509_REQ_bio(bp, req) __i2d_X509_REQ_bio(AmiSSLBase, (bp), (req))

RSA * __d2i_RSAPrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") RSA ** rsa ) = "\tjsr\t-9984(a6)";
#define d2i_RSAPrivateKey_bio(bp, rsa) __d2i_RSAPrivateKey_bio(AmiSSLBase, (bp), (rsa))

int __i2d_RSAPrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const RSA * rsa ) = "\tjsr\t-9990(a6)";
#define i2d_RSAPrivateKey_bio(bp, rsa) __i2d_RSAPrivateKey_bio(AmiSSLBase, (bp), (rsa))

RSA * __d2i_RSAPublicKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") RSA ** rsa ) = "\tjsr\t-9996(a6)";
#define d2i_RSAPublicKey_bio(bp, rsa) __d2i_RSAPublicKey_bio(AmiSSLBase, (bp), (rsa))

int __i2d_RSAPublicKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const RSA * rsa ) = "\tjsr\t-10002(a6)";
#define i2d_RSAPublicKey_bio(bp, rsa) __i2d_RSAPublicKey_bio(AmiSSLBase, (bp), (rsa))

RSA * __d2i_RSA_PUBKEY_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") RSA ** rsa ) = "\tjsr\t-10008(a6)";
#define d2i_RSA_PUBKEY_bio(bp, rsa) __d2i_RSA_PUBKEY_bio(AmiSSLBase, (bp), (rsa))

int __i2d_RSA_PUBKEY_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const RSA * rsa ) = "\tjsr\t-10014(a6)";
#define i2d_RSA_PUBKEY_bio(bp, rsa) __i2d_RSA_PUBKEY_bio(AmiSSLBase, (bp), (rsa))

DSA * __d2i_DSA_PUBKEY_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") DSA ** dsa ) = "\tjsr\t-10020(a6)";
#define d2i_DSA_PUBKEY_bio(bp, dsa) __d2i_DSA_PUBKEY_bio(AmiSSLBase, (bp), (dsa))

int __i2d_DSA_PUBKEY_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const DSA * dsa ) = "\tjsr\t-10026(a6)";
#define i2d_DSA_PUBKEY_bio(bp, dsa) __i2d_DSA_PUBKEY_bio(AmiSSLBase, (bp), (dsa))

DSA * __d2i_DSAPrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") DSA ** dsa ) = "\tjsr\t-10032(a6)";
#define d2i_DSAPrivateKey_bio(bp, dsa) __d2i_DSAPrivateKey_bio(AmiSSLBase, (bp), (dsa))

int __i2d_DSAPrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const DSA * dsa ) = "\tjsr\t-10038(a6)";
#define i2d_DSAPrivateKey_bio(bp, dsa) __i2d_DSAPrivateKey_bio(AmiSSLBase, (bp), (dsa))

X509_SIG * __d2i_PKCS8_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509_SIG ** p8 ) = "\tjsr\t-10044(a6)";
#define d2i_PKCS8_bio(bp, p8) __d2i_PKCS8_bio(AmiSSLBase, (bp), (p8))

int __i2d_PKCS8_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509_SIG * p8 ) = "\tjsr\t-10050(a6)";
#define i2d_PKCS8_bio(bp, p8) __i2d_PKCS8_bio(AmiSSLBase, (bp), (p8))

PKCS8_PRIV_KEY_INFO * __d2i_PKCS8_PRIV_KEY_INFO_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") PKCS8_PRIV_KEY_INFO ** p8inf ) = "\tjsr\t-10056(a6)";
#define d2i_PKCS8_PRIV_KEY_INFO_bio(bp, p8inf) __d2i_PKCS8_PRIV_KEY_INFO_bio(AmiSSLBase, (bp), (p8inf))

int __i2d_PKCS8_PRIV_KEY_INFO_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const PKCS8_PRIV_KEY_INFO * p8inf ) = "\tjsr\t-10062(a6)";
#define i2d_PKCS8_PRIV_KEY_INFO_bio(bp, p8inf) __i2d_PKCS8_PRIV_KEY_INFO_bio(AmiSSLBase, (bp), (p8inf))

int __i2d_PKCS8PrivateKeyInfo_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EVP_PKEY * key ) = "\tjsr\t-10068(a6)";
#define i2d_PKCS8PrivateKeyInfo_bio(bp, key) __i2d_PKCS8PrivateKeyInfo_bio(AmiSSLBase, (bp), (key))

int __i2d_PrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EVP_PKEY * pkey ) = "\tjsr\t-10074(a6)";
#define i2d_PrivateKey_bio(bp, pkey) __i2d_PrivateKey_bio(AmiSSLBase, (bp), (pkey))

EVP_PKEY * __d2i_PrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") EVP_PKEY ** a ) = "\tjsr\t-10080(a6)";
#define d2i_PrivateKey_bio(bp, a) __d2i_PrivateKey_bio(AmiSSLBase, (bp), (a))

int __i2d_PUBKEY_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EVP_PKEY * pkey ) = "\tjsr\t-10086(a6)";
#define i2d_PUBKEY_bio(bp, pkey) __i2d_PUBKEY_bio(AmiSSLBase, (bp), (pkey))

EVP_PKEY * __d2i_PUBKEY_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") EVP_PKEY ** a ) = "\tjsr\t-10092(a6)";
#define d2i_PUBKEY_bio(bp, a) __d2i_PUBKEY_bio(AmiSSLBase, (bp), (a))

X509 * __X509_dup(__reg("a6") struct Library * , __reg("a0") const X509 * x509 ) = "\tjsr\t-10098(a6)";
#define X509_dup(x509) __X509_dup(AmiSSLBase, (x509))

X509_ATTRIBUTE * __X509_ATTRIBUTE_dup(__reg("a6") struct Library * , __reg("a0") const X509_ATTRIBUTE * xa ) = "\tjsr\t-10104(a6)";
#define X509_ATTRIBUTE_dup(xa) __X509_ATTRIBUTE_dup(AmiSSLBase, (xa))

X509_EXTENSION * __X509_EXTENSION_dup(__reg("a6") struct Library * , __reg("a0") const X509_EXTENSION * ex ) = "\tjsr\t-10110(a6)";
#define X509_EXTENSION_dup(ex) __X509_EXTENSION_dup(AmiSSLBase, (ex))

X509_CRL * __X509_CRL_dup(__reg("a6") struct Library * , __reg("a0") const X509_CRL * crl ) = "\tjsr\t-10116(a6)";
#define X509_CRL_dup(crl) __X509_CRL_dup(AmiSSLBase, (crl))

X509_REQ * __X509_REQ_dup(__reg("a6") struct Library * , __reg("a0") const X509_REQ * req ) = "\tjsr\t-10122(a6)";
#define X509_REQ_dup(req) __X509_REQ_dup(AmiSSLBase, (req))

X509_ALGOR * __X509_ALGOR_dup(__reg("a6") struct Library * , __reg("a0") const X509_ALGOR * xn ) = "\tjsr\t-10128(a6)";
#define X509_ALGOR_dup(xn) __X509_ALGOR_dup(AmiSSLBase, (xn))

X509_NAME * __X509_NAME_dup(__reg("a6") struct Library * , __reg("a0") const X509_NAME * xn ) = "\tjsr\t-10134(a6)";
#define X509_NAME_dup(xn) __X509_NAME_dup(AmiSSLBase, (xn))

X509_NAME_ENTRY * __X509_NAME_ENTRY_dup(__reg("a6") struct Library * , __reg("a0") const X509_NAME_ENTRY * ne ) = "\tjsr\t-10140(a6)";
#define X509_NAME_ENTRY_dup(ne) __X509_NAME_ENTRY_dup(AmiSSLBase, (ne))

int __X509_cmp_time(__reg("a6") struct Library * , __reg("a0") const ASN1_TIME * s , __reg("a1") time_t * t ) = "\tjsr\t-10146(a6)";
#define X509_cmp_time(s, t) __X509_cmp_time(AmiSSLBase, (s), (t))

int __X509_cmp_current_time(__reg("a6") struct Library * , __reg("a0") const ASN1_TIME * s ) = "\tjsr\t-10152(a6)";
#define X509_cmp_current_time(s) __X509_cmp_current_time(AmiSSLBase, (s))

ASN1_TIME * __X509_time_adj(__reg("a6") struct Library * , __reg("a0") ASN1_TIME * s , __reg("d0") long adj , __reg("a1") time_t * t ) = "\tjsr\t-10158(a6)";
#define X509_time_adj(s, adj, t) __X509_time_adj(AmiSSLBase, (s), (adj), (t))

ASN1_TIME * __X509_gmtime_adj(__reg("a6") struct Library * , __reg("a0") ASN1_TIME * s , __reg("d0") long adj ) = "\tjsr\t-10164(a6)";
#define X509_gmtime_adj(s, adj) __X509_gmtime_adj(AmiSSLBase, (s), (adj))

const char * __X509_get_default_cert_area(__reg("a6") struct Library * ) = "\tjsr\t-10170(a6)";
#define X509_get_default_cert_area() __X509_get_default_cert_area(AmiSSLBase)

const char * __X509_get_default_cert_dir(__reg("a6") struct Library * ) = "\tjsr\t-10176(a6)";
#define X509_get_default_cert_dir() __X509_get_default_cert_dir(AmiSSLBase)

const char * __X509_get_default_cert_file(__reg("a6") struct Library * ) = "\tjsr\t-10182(a6)";
#define X509_get_default_cert_file() __X509_get_default_cert_file(AmiSSLBase)

const char * __X509_get_default_cert_dir_env(__reg("a6") struct Library * ) = "\tjsr\t-10188(a6)";
#define X509_get_default_cert_dir_env() __X509_get_default_cert_dir_env(AmiSSLBase)

const char * __X509_get_default_cert_file_env(__reg("a6") struct Library * ) = "\tjsr\t-10194(a6)";
#define X509_get_default_cert_file_env() __X509_get_default_cert_file_env(AmiSSLBase)

const char * __X509_get_default_private_dir(__reg("a6") struct Library * ) = "\tjsr\t-10200(a6)";
#define X509_get_default_private_dir() __X509_get_default_private_dir(AmiSSLBase)

X509_REQ * __X509_to_X509_REQ(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") EVP_PKEY * pkey , __reg("a2") const EVP_MD * md ) = "\tjsr\t-10206(a6)";
#define X509_to_X509_REQ(x, pkey, md) __X509_to_X509_REQ(AmiSSLBase, (x), (pkey), (md))

X509 * __X509_REQ_to_X509(__reg("a6") struct Library * , __reg("a0") X509_REQ * r , __reg("d0") int days , __reg("a1") EVP_PKEY * pkey ) = "\tjsr\t-10212(a6)";
#define X509_REQ_to_X509(r, days, pkey) __X509_REQ_to_X509(AmiSSLBase, (r), (days), (pkey))

X509_ALGOR * __X509_ALGOR_new(__reg("a6") struct Library * ) = "\tjsr\t-10218(a6)";
#define X509_ALGOR_new() __X509_ALGOR_new(AmiSSLBase)

void __X509_ALGOR_free(__reg("a6") struct Library * , __reg("a0") X509_ALGOR * a ) = "\tjsr\t-10224(a6)";
#define X509_ALGOR_free(a) __X509_ALGOR_free(AmiSSLBase, (a))

X509_ALGOR * __d2i_X509_ALGOR(__reg("a6") struct Library * , __reg("a0") X509_ALGOR ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10230(a6)";
#define d2i_X509_ALGOR(a, in, len) __d2i_X509_ALGOR(AmiSSLBase, (a), (in), (len))

int __i2d_X509_ALGOR(__reg("a6") struct Library * , __reg("a0") const X509_ALGOR * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10236(a6)";
#define i2d_X509_ALGOR(a, out) __i2d_X509_ALGOR(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_ALGOR_it(__reg("a6") struct Library * ) = "\tjsr\t-10242(a6)";
#define X509_ALGOR_it() __X509_ALGOR_it(AmiSSLBase)

X509_VAL * __X509_VAL_new(__reg("a6") struct Library * ) = "\tjsr\t-10248(a6)";
#define X509_VAL_new() __X509_VAL_new(AmiSSLBase)

void __X509_VAL_free(__reg("a6") struct Library * , __reg("a0") X509_VAL * a ) = "\tjsr\t-10254(a6)";
#define X509_VAL_free(a) __X509_VAL_free(AmiSSLBase, (a))

X509_VAL * __d2i_X509_VAL(__reg("a6") struct Library * , __reg("a0") X509_VAL ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10260(a6)";
#define d2i_X509_VAL(a, in, len) __d2i_X509_VAL(AmiSSLBase, (a), (in), (len))

int __i2d_X509_VAL(__reg("a6") struct Library * , __reg("a0") const X509_VAL * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10266(a6)";
#define i2d_X509_VAL(a, out) __i2d_X509_VAL(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_VAL_it(__reg("a6") struct Library * ) = "\tjsr\t-10272(a6)";
#define X509_VAL_it() __X509_VAL_it(AmiSSLBase)

X509_PUBKEY * __X509_PUBKEY_new(__reg("a6") struct Library * ) = "\tjsr\t-10278(a6)";
#define X509_PUBKEY_new() __X509_PUBKEY_new(AmiSSLBase)

void __X509_PUBKEY_free(__reg("a6") struct Library * , __reg("a0") X509_PUBKEY * a ) = "\tjsr\t-10284(a6)";
#define X509_PUBKEY_free(a) __X509_PUBKEY_free(AmiSSLBase, (a))

X509_PUBKEY * __d2i_X509_PUBKEY(__reg("a6") struct Library * , __reg("a0") X509_PUBKEY ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10290(a6)";
#define d2i_X509_PUBKEY(a, in, len) __d2i_X509_PUBKEY(AmiSSLBase, (a), (in), (len))

int __i2d_X509_PUBKEY(__reg("a6") struct Library * , __reg("a0") const X509_PUBKEY * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10296(a6)";
#define i2d_X509_PUBKEY(a, out) __i2d_X509_PUBKEY(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_PUBKEY_it(__reg("a6") struct Library * ) = "\tjsr\t-10302(a6)";
#define X509_PUBKEY_it() __X509_PUBKEY_it(AmiSSLBase)

int __X509_PUBKEY_set(__reg("a6") struct Library * , __reg("a0") X509_PUBKEY ** x , __reg("a1") EVP_PKEY * pkey ) = "\tjsr\t-10308(a6)";
#define X509_PUBKEY_set(x, pkey) __X509_PUBKEY_set(AmiSSLBase, (x), (pkey))

EVP_PKEY * __X509_PUBKEY_get(__reg("a6") struct Library * , __reg("a0") const X509_PUBKEY * key ) = "\tjsr\t-10314(a6)";
#define X509_PUBKEY_get(key) __X509_PUBKEY_get(AmiSSLBase, (key))

int __X509_get_pubkey_parameters(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") STACK_OF(X509) * chain ) = "\tjsr\t-10320(a6)";
#define X509_get_pubkey_parameters(pkey, chain) __X509_get_pubkey_parameters(AmiSSLBase, (pkey), (chain))

int __i2d_PUBKEY(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-10326(a6)";
#define i2d_PUBKEY(a, pp) __i2d_PUBKEY(AmiSSLBase, (a), (pp))

EVP_PKEY * __d2i_PUBKEY(__reg("a6") struct Library * , __reg("a0") EVP_PKEY ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-10332(a6)";
#define d2i_PUBKEY(a, pp, length) __d2i_PUBKEY(AmiSSLBase, (a), (pp), (length))

int __i2d_RSA_PUBKEY(__reg("a6") struct Library * , __reg("a0") const RSA * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-10338(a6)";
#define i2d_RSA_PUBKEY(a, pp) __i2d_RSA_PUBKEY(AmiSSLBase, (a), (pp))

RSA * __d2i_RSA_PUBKEY(__reg("a6") struct Library * , __reg("a0") RSA ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-10344(a6)";
#define d2i_RSA_PUBKEY(a, pp, length) __d2i_RSA_PUBKEY(AmiSSLBase, (a), (pp), (length))

int __i2d_DSA_PUBKEY(__reg("a6") struct Library * , __reg("a0") const DSA * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-10350(a6)";
#define i2d_DSA_PUBKEY(a, pp) __i2d_DSA_PUBKEY(AmiSSLBase, (a), (pp))

DSA * __d2i_DSA_PUBKEY(__reg("a6") struct Library * , __reg("a0") DSA ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-10356(a6)";
#define d2i_DSA_PUBKEY(a, pp, length) __d2i_DSA_PUBKEY(AmiSSLBase, (a), (pp), (length))

X509_SIG * __X509_SIG_new(__reg("a6") struct Library * ) = "\tjsr\t-10362(a6)";
#define X509_SIG_new() __X509_SIG_new(AmiSSLBase)

void __X509_SIG_free(__reg("a6") struct Library * , __reg("a0") X509_SIG * a ) = "\tjsr\t-10368(a6)";
#define X509_SIG_free(a) __X509_SIG_free(AmiSSLBase, (a))

X509_SIG * __d2i_X509_SIG(__reg("a6") struct Library * , __reg("a0") X509_SIG ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10374(a6)";
#define d2i_X509_SIG(a, in, len) __d2i_X509_SIG(AmiSSLBase, (a), (in), (len))

int __i2d_X509_SIG(__reg("a6") struct Library * , __reg("a0") const X509_SIG * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10380(a6)";
#define i2d_X509_SIG(a, out) __i2d_X509_SIG(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_SIG_it(__reg("a6") struct Library * ) = "\tjsr\t-10386(a6)";
#define X509_SIG_it() __X509_SIG_it(AmiSSLBase)

X509_REQ_INFO * __X509_REQ_INFO_new(__reg("a6") struct Library * ) = "\tjsr\t-10392(a6)";
#define X509_REQ_INFO_new() __X509_REQ_INFO_new(AmiSSLBase)

void __X509_REQ_INFO_free(__reg("a6") struct Library * , __reg("a0") X509_REQ_INFO * a ) = "\tjsr\t-10398(a6)";
#define X509_REQ_INFO_free(a) __X509_REQ_INFO_free(AmiSSLBase, (a))

X509_REQ_INFO * __d2i_X509_REQ_INFO(__reg("a6") struct Library * , __reg("a0") X509_REQ_INFO ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10404(a6)";
#define d2i_X509_REQ_INFO(a, in, len) __d2i_X509_REQ_INFO(AmiSSLBase, (a), (in), (len))

int __i2d_X509_REQ_INFO(__reg("a6") struct Library * , __reg("a0") const X509_REQ_INFO * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10410(a6)";
#define i2d_X509_REQ_INFO(a, out) __i2d_X509_REQ_INFO(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_REQ_INFO_it(__reg("a6") struct Library * ) = "\tjsr\t-10416(a6)";
#define X509_REQ_INFO_it() __X509_REQ_INFO_it(AmiSSLBase)

X509_REQ * __X509_REQ_new(__reg("a6") struct Library * ) = "\tjsr\t-10422(a6)";
#define X509_REQ_new() __X509_REQ_new(AmiSSLBase)

void __X509_REQ_free(__reg("a6") struct Library * , __reg("a0") X509_REQ * a ) = "\tjsr\t-10428(a6)";
#define X509_REQ_free(a) __X509_REQ_free(AmiSSLBase, (a))

X509_REQ * __d2i_X509_REQ(__reg("a6") struct Library * , __reg("a0") X509_REQ ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10434(a6)";
#define d2i_X509_REQ(a, in, len) __d2i_X509_REQ(AmiSSLBase, (a), (in), (len))

int __i2d_X509_REQ(__reg("a6") struct Library * , __reg("a0") const X509_REQ * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10440(a6)";
#define i2d_X509_REQ(a, out) __i2d_X509_REQ(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_REQ_it(__reg("a6") struct Library * ) = "\tjsr\t-10446(a6)";
#define X509_REQ_it() __X509_REQ_it(AmiSSLBase)

X509_ATTRIBUTE * __X509_ATTRIBUTE_new(__reg("a6") struct Library * ) = "\tjsr\t-10452(a6)";
#define X509_ATTRIBUTE_new() __X509_ATTRIBUTE_new(AmiSSLBase)

void __X509_ATTRIBUTE_free(__reg("a6") struct Library * , __reg("a0") X509_ATTRIBUTE * a ) = "\tjsr\t-10458(a6)";
#define X509_ATTRIBUTE_free(a) __X509_ATTRIBUTE_free(AmiSSLBase, (a))

X509_ATTRIBUTE * __d2i_X509_ATTRIBUTE(__reg("a6") struct Library * , __reg("a0") X509_ATTRIBUTE ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10464(a6)";
#define d2i_X509_ATTRIBUTE(a, in, len) __d2i_X509_ATTRIBUTE(AmiSSLBase, (a), (in), (len))

int __i2d_X509_ATTRIBUTE(__reg("a6") struct Library * , __reg("a0") const X509_ATTRIBUTE * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10470(a6)";
#define i2d_X509_ATTRIBUTE(a, out) __i2d_X509_ATTRIBUTE(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_ATTRIBUTE_it(__reg("a6") struct Library * ) = "\tjsr\t-10476(a6)";
#define X509_ATTRIBUTE_it() __X509_ATTRIBUTE_it(AmiSSLBase)

X509_ATTRIBUTE * __X509_ATTRIBUTE_create(__reg("a6") struct Library * , __reg("d0") int nid , __reg("d1") int atrtype , __reg("a0") void * value ) = "\tjsr\t-10482(a6)";
#define X509_ATTRIBUTE_create(nid, atrtype, value) __X509_ATTRIBUTE_create(AmiSSLBase, (nid), (atrtype), (value))

X509_EXTENSION * __X509_EXTENSION_new(__reg("a6") struct Library * ) = "\tjsr\t-10488(a6)";
#define X509_EXTENSION_new() __X509_EXTENSION_new(AmiSSLBase)

void __X509_EXTENSION_free(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION * a ) = "\tjsr\t-10494(a6)";
#define X509_EXTENSION_free(a) __X509_EXTENSION_free(AmiSSLBase, (a))

X509_EXTENSION * __d2i_X509_EXTENSION(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10500(a6)";
#define d2i_X509_EXTENSION(a, in, len) __d2i_X509_EXTENSION(AmiSSLBase, (a), (in), (len))

int __i2d_X509_EXTENSION(__reg("a6") struct Library * , __reg("a0") const X509_EXTENSION * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10506(a6)";
#define i2d_X509_EXTENSION(a, out) __i2d_X509_EXTENSION(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_EXTENSION_it(__reg("a6") struct Library * ) = "\tjsr\t-10512(a6)";
#define X509_EXTENSION_it() __X509_EXTENSION_it(AmiSSLBase)

X509_NAME_ENTRY * __X509_NAME_ENTRY_new(__reg("a6") struct Library * ) = "\tjsr\t-10518(a6)";
#define X509_NAME_ENTRY_new() __X509_NAME_ENTRY_new(AmiSSLBase)

void __X509_NAME_ENTRY_free(__reg("a6") struct Library * , __reg("a0") X509_NAME_ENTRY * a ) = "\tjsr\t-10524(a6)";
#define X509_NAME_ENTRY_free(a) __X509_NAME_ENTRY_free(AmiSSLBase, (a))

X509_NAME_ENTRY * __d2i_X509_NAME_ENTRY(__reg("a6") struct Library * , __reg("a0") X509_NAME_ENTRY ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10530(a6)";
#define d2i_X509_NAME_ENTRY(a, in, len) __d2i_X509_NAME_ENTRY(AmiSSLBase, (a), (in), (len))

int __i2d_X509_NAME_ENTRY(__reg("a6") struct Library * , __reg("a0") const X509_NAME_ENTRY * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10536(a6)";
#define i2d_X509_NAME_ENTRY(a, out) __i2d_X509_NAME_ENTRY(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_NAME_ENTRY_it(__reg("a6") struct Library * ) = "\tjsr\t-10542(a6)";
#define X509_NAME_ENTRY_it() __X509_NAME_ENTRY_it(AmiSSLBase)

X509_NAME * __X509_NAME_new(__reg("a6") struct Library * ) = "\tjsr\t-10548(a6)";
#define X509_NAME_new() __X509_NAME_new(AmiSSLBase)

void __X509_NAME_free(__reg("a6") struct Library * , __reg("a0") X509_NAME * a ) = "\tjsr\t-10554(a6)";
#define X509_NAME_free(a) __X509_NAME_free(AmiSSLBase, (a))

X509_NAME * __d2i_X509_NAME(__reg("a6") struct Library * , __reg("a0") X509_NAME ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10560(a6)";
#define d2i_X509_NAME(a, in, len) __d2i_X509_NAME(AmiSSLBase, (a), (in), (len))

int __i2d_X509_NAME(__reg("a6") struct Library * , __reg("a0") const X509_NAME * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10566(a6)";
#define i2d_X509_NAME(a, out) __i2d_X509_NAME(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_NAME_it(__reg("a6") struct Library * ) = "\tjsr\t-10572(a6)";
#define X509_NAME_it() __X509_NAME_it(AmiSSLBase)

int __X509_NAME_set(__reg("a6") struct Library * , __reg("a0") X509_NAME ** xn , __reg("a1") const X509_NAME * name ) = "\tjsr\t-10578(a6)";
#define X509_NAME_set(xn, name) __X509_NAME_set(AmiSSLBase, (xn), (name))

X509_CINF * __X509_CINF_new(__reg("a6") struct Library * ) = "\tjsr\t-10584(a6)";
#define X509_CINF_new() __X509_CINF_new(AmiSSLBase)

void __X509_CINF_free(__reg("a6") struct Library * , __reg("a0") X509_CINF * a ) = "\tjsr\t-10590(a6)";
#define X509_CINF_free(a) __X509_CINF_free(AmiSSLBase, (a))

X509_CINF * __d2i_X509_CINF(__reg("a6") struct Library * , __reg("a0") X509_CINF ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10596(a6)";
#define d2i_X509_CINF(a, in, len) __d2i_X509_CINF(AmiSSLBase, (a), (in), (len))

int __i2d_X509_CINF(__reg("a6") struct Library * , __reg("a0") const X509_CINF * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10602(a6)";
#define i2d_X509_CINF(a, out) __i2d_X509_CINF(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_CINF_it(__reg("a6") struct Library * ) = "\tjsr\t-10608(a6)";
#define X509_CINF_it() __X509_CINF_it(AmiSSLBase)

X509 * __X509_new(__reg("a6") struct Library * ) = "\tjsr\t-10614(a6)";
#define X509_new() __X509_new(AmiSSLBase)

void __X509_free(__reg("a6") struct Library * , __reg("a0") X509 * a ) = "\tjsr\t-10620(a6)";
#define X509_free(a) __X509_free(AmiSSLBase, (a))

X509 * __d2i_X509(__reg("a6") struct Library * , __reg("a0") X509 ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10626(a6)";
#define d2i_X509(a, in, len) __d2i_X509(AmiSSLBase, (a), (in), (len))

int __i2d_X509(__reg("a6") struct Library * , __reg("a0") const X509 * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10632(a6)";
#define i2d_X509(a, out) __i2d_X509(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_it(__reg("a6") struct Library * ) = "\tjsr\t-10638(a6)";
#define X509_it() __X509_it(AmiSSLBase)

X509_CERT_AUX * __X509_CERT_AUX_new(__reg("a6") struct Library * ) = "\tjsr\t-10644(a6)";
#define X509_CERT_AUX_new() __X509_CERT_AUX_new(AmiSSLBase)

void __X509_CERT_AUX_free(__reg("a6") struct Library * , __reg("a0") X509_CERT_AUX * a ) = "\tjsr\t-10650(a6)";
#define X509_CERT_AUX_free(a) __X509_CERT_AUX_free(AmiSSLBase, (a))

X509_CERT_AUX * __d2i_X509_CERT_AUX(__reg("a6") struct Library * , __reg("a0") X509_CERT_AUX ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10656(a6)";
#define d2i_X509_CERT_AUX(a, in, len) __d2i_X509_CERT_AUX(AmiSSLBase, (a), (in), (len))

int __i2d_X509_CERT_AUX(__reg("a6") struct Library * , __reg("a0") const X509_CERT_AUX * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10662(a6)";
#define i2d_X509_CERT_AUX(a, out) __i2d_X509_CERT_AUX(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_CERT_AUX_it(__reg("a6") struct Library * ) = "\tjsr\t-10668(a6)";
#define X509_CERT_AUX_it() __X509_CERT_AUX_it(AmiSSLBase)

int __OBSOLETE_X509_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dup_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-10674(a6)";
#define OBSOLETE_X509_get_ex_new_index(argl, argp, new_func, dup_func, free_func) __OBSOLETE_X509_get_ex_new_index(AmiSSLBase, (argl), (argp), (new_func), (dup_func), (free_func))

int __X509_set_ex_data(__reg("a6") struct Library * , __reg("a0") X509 * r , __reg("d0") int idx , __reg("a1") void * arg ) = "\tjsr\t-10680(a6)";
#define X509_set_ex_data(r, idx, arg) __X509_set_ex_data(AmiSSLBase, (r), (idx), (arg))

void * __X509_get_ex_data(__reg("a6") struct Library * , __reg("a0") const X509 * r , __reg("d0") int idx ) = "\tjsr\t-10686(a6)";
#define X509_get_ex_data(r, idx) __X509_get_ex_data(AmiSSLBase, (r), (idx))

int __i2d_X509_AUX(__reg("a6") struct Library * , __reg("a0") const X509 * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-10692(a6)";
#define i2d_X509_AUX(a, pp) __i2d_X509_AUX(AmiSSLBase, (a), (pp))

X509 * __d2i_X509_AUX(__reg("a6") struct Library * , __reg("a0") X509 ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-10698(a6)";
#define d2i_X509_AUX(a, pp, length) __d2i_X509_AUX(AmiSSLBase, (a), (pp), (length))

int __X509_alias_set1(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const unsigned char * name , __reg("d0") int len ) = "\tjsr\t-10704(a6)";
#define X509_alias_set1(x, name, len) __X509_alias_set1(AmiSSLBase, (x), (name), (len))

int __X509_keyid_set1(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const unsigned char * id , __reg("d0") int len ) = "\tjsr\t-10710(a6)";
#define X509_keyid_set1(x, id, len) __X509_keyid_set1(AmiSSLBase, (x), (id), (len))

unsigned char * __X509_alias_get0(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") int * len ) = "\tjsr\t-10716(a6)";
#define X509_alias_get0(x, len) __X509_alias_get0(AmiSSLBase, (x), (len))

int  (* __X509_TRUST_set_default(__reg("a6") struct Library * , __reg("a0") int (*trust)(int,X509 *,int) ) )(int, X509 *, int) =  "\tjsr\t-10722(a6)";
#define X509_TRUST_set_default(trust) __X509_TRUST_set_default(AmiSSLBase, (trust))

int __X509_TRUST_set(__reg("a6") struct Library * , __reg("a0") int * t , __reg("d0") int trust ) = "\tjsr\t-10728(a6)";
#define X509_TRUST_set(t, trust) __X509_TRUST_set(AmiSSLBase, (t), (trust))

int __X509_add1_trust_object(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const ASN1_OBJECT * obj ) = "\tjsr\t-10734(a6)";
#define X509_add1_trust_object(x, obj) __X509_add1_trust_object(AmiSSLBase, (x), (obj))

int __X509_add1_reject_object(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const ASN1_OBJECT * obj ) = "\tjsr\t-10740(a6)";
#define X509_add1_reject_object(x, obj) __X509_add1_reject_object(AmiSSLBase, (x), (obj))

void __X509_trust_clear(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-10746(a6)";
#define X509_trust_clear(x) __X509_trust_clear(AmiSSLBase, (x))

void __X509_reject_clear(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-10752(a6)";
#define X509_reject_clear(x) __X509_reject_clear(AmiSSLBase, (x))

X509_REVOKED * __X509_REVOKED_new(__reg("a6") struct Library * ) = "\tjsr\t-10758(a6)";
#define X509_REVOKED_new() __X509_REVOKED_new(AmiSSLBase)

void __X509_REVOKED_free(__reg("a6") struct Library * , __reg("a0") X509_REVOKED * a ) = "\tjsr\t-10764(a6)";
#define X509_REVOKED_free(a) __X509_REVOKED_free(AmiSSLBase, (a))

X509_REVOKED * __d2i_X509_REVOKED(__reg("a6") struct Library * , __reg("a0") X509_REVOKED ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10770(a6)";
#define d2i_X509_REVOKED(a, in, len) __d2i_X509_REVOKED(AmiSSLBase, (a), (in), (len))

int __i2d_X509_REVOKED(__reg("a6") struct Library * , __reg("a0") const X509_REVOKED * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10776(a6)";
#define i2d_X509_REVOKED(a, out) __i2d_X509_REVOKED(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_REVOKED_it(__reg("a6") struct Library * ) = "\tjsr\t-10782(a6)";
#define X509_REVOKED_it() __X509_REVOKED_it(AmiSSLBase)

X509_CRL_INFO * __X509_CRL_INFO_new(__reg("a6") struct Library * ) = "\tjsr\t-10788(a6)";
#define X509_CRL_INFO_new() __X509_CRL_INFO_new(AmiSSLBase)

void __X509_CRL_INFO_free(__reg("a6") struct Library * , __reg("a0") X509_CRL_INFO * a ) = "\tjsr\t-10794(a6)";
#define X509_CRL_INFO_free(a) __X509_CRL_INFO_free(AmiSSLBase, (a))

X509_CRL_INFO * __d2i_X509_CRL_INFO(__reg("a6") struct Library * , __reg("a0") X509_CRL_INFO ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10800(a6)";
#define d2i_X509_CRL_INFO(a, in, len) __d2i_X509_CRL_INFO(AmiSSLBase, (a), (in), (len))

int __i2d_X509_CRL_INFO(__reg("a6") struct Library * , __reg("a0") const X509_CRL_INFO * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10806(a6)";
#define i2d_X509_CRL_INFO(a, out) __i2d_X509_CRL_INFO(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_CRL_INFO_it(__reg("a6") struct Library * ) = "\tjsr\t-10812(a6)";
#define X509_CRL_INFO_it() __X509_CRL_INFO_it(AmiSSLBase)

X509_CRL * __X509_CRL_new(__reg("a6") struct Library * ) = "\tjsr\t-10818(a6)";
#define X509_CRL_new() __X509_CRL_new(AmiSSLBase)

void __X509_CRL_free(__reg("a6") struct Library * , __reg("a0") X509_CRL * a ) = "\tjsr\t-10824(a6)";
#define X509_CRL_free(a) __X509_CRL_free(AmiSSLBase, (a))

X509_CRL * __d2i_X509_CRL(__reg("a6") struct Library * , __reg("a0") X509_CRL ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10830(a6)";
#define d2i_X509_CRL(a, in, len) __d2i_X509_CRL(AmiSSLBase, (a), (in), (len))

int __i2d_X509_CRL(__reg("a6") struct Library * , __reg("a0") const X509_CRL * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10836(a6)";
#define i2d_X509_CRL(a, out) __i2d_X509_CRL(AmiSSLBase, (a), (out))

const ASN1_ITEM * __X509_CRL_it(__reg("a6") struct Library * ) = "\tjsr\t-10842(a6)";
#define X509_CRL_it() __X509_CRL_it(AmiSSLBase)

int __X509_CRL_add0_revoked(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl , __reg("a1") X509_REVOKED * rev ) = "\tjsr\t-10848(a6)";
#define X509_CRL_add0_revoked(crl, rev) __X509_CRL_add0_revoked(AmiSSLBase, (crl), (rev))

X509_PKEY * __X509_PKEY_new(__reg("a6") struct Library * ) = "\tjsr\t-10854(a6)";
#define X509_PKEY_new() __X509_PKEY_new(AmiSSLBase)

void __X509_PKEY_free(__reg("a6") struct Library * , __reg("a0") X509_PKEY * a ) = "\tjsr\t-10860(a6)";
#define X509_PKEY_free(a) __X509_PKEY_free(AmiSSLBase, (a))

NETSCAPE_SPKI * __NETSCAPE_SPKI_new(__reg("a6") struct Library * ) = "\tjsr\t-10878(a6)";
#define NETSCAPE_SPKI_new() __NETSCAPE_SPKI_new(AmiSSLBase)

void __NETSCAPE_SPKI_free(__reg("a6") struct Library * , __reg("a0") NETSCAPE_SPKI * a ) = "\tjsr\t-10884(a6)";
#define NETSCAPE_SPKI_free(a) __NETSCAPE_SPKI_free(AmiSSLBase, (a))

NETSCAPE_SPKI * __d2i_NETSCAPE_SPKI(__reg("a6") struct Library * , __reg("a0") NETSCAPE_SPKI ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10890(a6)";
#define d2i_NETSCAPE_SPKI(a, in, len) __d2i_NETSCAPE_SPKI(AmiSSLBase, (a), (in), (len))

int __i2d_NETSCAPE_SPKI(__reg("a6") struct Library * , __reg("a0") const NETSCAPE_SPKI * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10896(a6)";
#define i2d_NETSCAPE_SPKI(a, out) __i2d_NETSCAPE_SPKI(AmiSSLBase, (a), (out))

const ASN1_ITEM * __NETSCAPE_SPKI_it(__reg("a6") struct Library * ) = "\tjsr\t-10902(a6)";
#define NETSCAPE_SPKI_it() __NETSCAPE_SPKI_it(AmiSSLBase)

NETSCAPE_SPKAC * __NETSCAPE_SPKAC_new(__reg("a6") struct Library * ) = "\tjsr\t-10908(a6)";
#define NETSCAPE_SPKAC_new() __NETSCAPE_SPKAC_new(AmiSSLBase)

void __NETSCAPE_SPKAC_free(__reg("a6") struct Library * , __reg("a0") NETSCAPE_SPKAC * a ) = "\tjsr\t-10914(a6)";
#define NETSCAPE_SPKAC_free(a) __NETSCAPE_SPKAC_free(AmiSSLBase, (a))

NETSCAPE_SPKAC * __d2i_NETSCAPE_SPKAC(__reg("a6") struct Library * , __reg("a0") NETSCAPE_SPKAC ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10920(a6)";
#define d2i_NETSCAPE_SPKAC(a, in, len) __d2i_NETSCAPE_SPKAC(AmiSSLBase, (a), (in), (len))

int __i2d_NETSCAPE_SPKAC(__reg("a6") struct Library * , __reg("a0") const NETSCAPE_SPKAC * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10926(a6)";
#define i2d_NETSCAPE_SPKAC(a, out) __i2d_NETSCAPE_SPKAC(AmiSSLBase, (a), (out))

const ASN1_ITEM * __NETSCAPE_SPKAC_it(__reg("a6") struct Library * ) = "\tjsr\t-10932(a6)";
#define NETSCAPE_SPKAC_it() __NETSCAPE_SPKAC_it(AmiSSLBase)

NETSCAPE_CERT_SEQUENCE * __NETSCAPE_CERT_SEQUENCE_new(__reg("a6") struct Library * ) = "\tjsr\t-10938(a6)";
#define NETSCAPE_CERT_SEQUENCE_new() __NETSCAPE_CERT_SEQUENCE_new(AmiSSLBase)

void __NETSCAPE_CERT_SEQUENCE_free(__reg("a6") struct Library * , __reg("a0") NETSCAPE_CERT_SEQUENCE * a ) = "\tjsr\t-10944(a6)";
#define NETSCAPE_CERT_SEQUENCE_free(a) __NETSCAPE_CERT_SEQUENCE_free(AmiSSLBase, (a))

NETSCAPE_CERT_SEQUENCE * __d2i_NETSCAPE_CERT_SEQUENCE(__reg("a6") struct Library * , __reg("a0") NETSCAPE_CERT_SEQUENCE ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-10950(a6)";
#define d2i_NETSCAPE_CERT_SEQUENCE(a, in, len) __d2i_NETSCAPE_CERT_SEQUENCE(AmiSSLBase, (a), (in), (len))

int __i2d_NETSCAPE_CERT_SEQUENCE(__reg("a6") struct Library * , __reg("a0") const NETSCAPE_CERT_SEQUENCE * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-10956(a6)";
#define i2d_NETSCAPE_CERT_SEQUENCE(a, out) __i2d_NETSCAPE_CERT_SEQUENCE(AmiSSLBase, (a), (out))

const ASN1_ITEM * __NETSCAPE_CERT_SEQUENCE_it(__reg("a6") struct Library * ) = "\tjsr\t-10962(a6)";
#define NETSCAPE_CERT_SEQUENCE_it() __NETSCAPE_CERT_SEQUENCE_it(AmiSSLBase)

X509_INFO * __X509_INFO_new(__reg("a6") struct Library * ) = "\tjsr\t-10968(a6)";
#define X509_INFO_new() __X509_INFO_new(AmiSSLBase)

void __X509_INFO_free(__reg("a6") struct Library * , __reg("a0") X509_INFO * a ) = "\tjsr\t-10974(a6)";
#define X509_INFO_free(a) __X509_INFO_free(AmiSSLBase, (a))

char * __X509_NAME_oneline(__reg("a6") struct Library * , __reg("a0") const X509_NAME * a , __reg("a1") char * buf , __reg("d0") int size ) = "\tjsr\t-10980(a6)";
#define X509_NAME_oneline(a, buf, size) __X509_NAME_oneline(AmiSSLBase, (a), (buf), (size))

int __ASN1_verify(__reg("a6") struct Library * , __reg("a0") int (*i2d)() , __reg("a1") X509_ALGOR * algor1 , __reg("a2") ASN1_BIT_STRING * signature , __reg("a3") char * data , __reg("d0") EVP_PKEY * pkey ) = "\tjsr\t-10986(a6)";
#define ASN1_verify(i2d, algor1, signature, data, pkey) __ASN1_verify(AmiSSLBase, (i2d), (algor1), (signature), (data), (pkey))

int __ASN1_digest(__reg("a6") struct Library * , __reg("a0") int (*i2d)() , __reg("a1") const EVP_MD * type , __reg("a2") char * data , __reg("a3") unsigned char * md , __reg("d0") unsigned int * len ) = "\tjsr\t-10992(a6)";
#define ASN1_digest(i2d, type, data, md, len) __ASN1_digest(AmiSSLBase, (i2d), (type), (data), (md), (len))

int __ASN1_sign(__reg("a6") struct Library * , __reg("a0") int (*i2d)() , __reg("a1") X509_ALGOR * algor1 , __reg("a2") X509_ALGOR * algor2 , __reg("a3") ASN1_BIT_STRING * signature , __reg("d0") char * data , __reg("d1") EVP_PKEY * pkey , __reg("d2") const EVP_MD * type ) = "\tjsr\t-10998(a6)";
#define ASN1_sign(i2d, algor1, algor2, signature, data, pkey, type) __ASN1_sign(AmiSSLBase, (i2d), (algor1), (algor2), (signature), (data), (pkey), (type))

int __ASN1_item_digest(__reg("a6") struct Library * , __reg("a0") const ASN1_ITEM * it , __reg("a1") const EVP_MD * type , __reg("a2") void * data , __reg("a3") unsigned char * md , __reg("d0") unsigned int * len ) = "\tjsr\t-11004(a6)";
#define ASN1_item_digest(it, type, data, md, len) __ASN1_item_digest(AmiSSLBase, (it), (type), (data), (md), (len))

int __ASN1_item_verify(__reg("a6") struct Library * , __reg("a0") const ASN1_ITEM * it , __reg("a1") const X509_ALGOR * alg , __reg("a2") const ASN1_BIT_STRING * signature , __reg("a3") const void * data , __reg("d0") EVP_PKEY * pkey ) = "\tjsr\t-11010(a6)";
#define ASN1_item_verify(it, alg, signature, data, pkey) __ASN1_item_verify(AmiSSLBase, (it), (alg), (signature), (data), (pkey))

int __ASN1_item_sign(__reg("a6") struct Library * , __reg("a0") const ASN1_ITEM * it , __reg("a1") X509_ALGOR * algor1 , __reg("a2") X509_ALGOR * algor2 , __reg("a3") ASN1_BIT_STRING * signature , __reg("d0") const void * data , __reg("d1") EVP_PKEY * pkey , __reg("d2") const EVP_MD * type ) = "\tjsr\t-11016(a6)";
#define ASN1_item_sign(it, algor1, algor2, signature, data, pkey, type) __ASN1_item_sign(AmiSSLBase, (it), (algor1), (algor2), (signature), (data), (pkey), (type))

int __X509_set_version(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("d0") long version ) = "\tjsr\t-11022(a6)";
#define X509_set_version(x, version) __X509_set_version(AmiSSLBase, (x), (version))

int __X509_set_serialNumber(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") ASN1_INTEGER * serial ) = "\tjsr\t-11028(a6)";
#define X509_set_serialNumber(x, serial) __X509_set_serialNumber(AmiSSLBase, (x), (serial))

ASN1_INTEGER * __X509_get_serialNumber(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-11034(a6)";
#define X509_get_serialNumber(x) __X509_get_serialNumber(AmiSSLBase, (x))

int __X509_set_issuer_name(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const X509_NAME * name ) = "\tjsr\t-11040(a6)";
#define X509_set_issuer_name(x, name) __X509_set_issuer_name(AmiSSLBase, (x), (name))

X509_NAME * __X509_get_issuer_name(__reg("a6") struct Library * , __reg("a0") const X509 * a ) = "\tjsr\t-11046(a6)";
#define X509_get_issuer_name(a) __X509_get_issuer_name(AmiSSLBase, (a))

int __X509_set_subject_name(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const X509_NAME * name ) = "\tjsr\t-11052(a6)";
#define X509_set_subject_name(x, name) __X509_set_subject_name(AmiSSLBase, (x), (name))

X509_NAME * __X509_get_subject_name(__reg("a6") struct Library * , __reg("a0") const X509 * a ) = "\tjsr\t-11058(a6)";
#define X509_get_subject_name(a) __X509_get_subject_name(AmiSSLBase, (a))

int __X509_set1_notBefore(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const ASN1_TIME * tm ) = "\tjsr\t-11064(a6)";
#define X509_set1_notBefore(x, tm) __X509_set1_notBefore(AmiSSLBase, (x), (tm))

int __X509_set1_notAfter(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const ASN1_TIME * tm ) = "\tjsr\t-11070(a6)";
#define X509_set1_notAfter(x, tm) __X509_set1_notAfter(AmiSSLBase, (x), (tm))

int __X509_set_pubkey(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") EVP_PKEY * pkey ) = "\tjsr\t-11076(a6)";
#define X509_set_pubkey(x, pkey) __X509_set_pubkey(AmiSSLBase, (x), (pkey))

EVP_PKEY * __X509_get_pubkey(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-11082(a6)";
#define X509_get_pubkey(x) __X509_get_pubkey(AmiSSLBase, (x))

ASN1_BIT_STRING * __X509_get0_pubkey_bitstr(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-11088(a6)";
#define X509_get0_pubkey_bitstr(x) __X509_get0_pubkey_bitstr(AmiSSLBase, (x))

int __X509_certificate_type(__reg("a6") struct Library * , __reg("a0") const X509 * x , __reg("a1") const EVP_PKEY * pubkey ) = "\tjsr\t-11094(a6)";
#define X509_certificate_type(x, pubkey) __X509_certificate_type(AmiSSLBase, (x), (pubkey))

int __X509_REQ_set_version(__reg("a6") struct Library * , __reg("a0") X509_REQ * x , __reg("d0") long version ) = "\tjsr\t-11100(a6)";
#define X509_REQ_set_version(x, version) __X509_REQ_set_version(AmiSSLBase, (x), (version))

int __X509_REQ_set_subject_name(__reg("a6") struct Library * , __reg("a0") X509_REQ * req , __reg("a1") const X509_NAME * name ) = "\tjsr\t-11106(a6)";
#define X509_REQ_set_subject_name(req, name) __X509_REQ_set_subject_name(AmiSSLBase, (req), (name))

int __X509_REQ_set_pubkey(__reg("a6") struct Library * , __reg("a0") X509_REQ * x , __reg("a1") EVP_PKEY * pkey ) = "\tjsr\t-11112(a6)";
#define X509_REQ_set_pubkey(x, pkey) __X509_REQ_set_pubkey(AmiSSLBase, (x), (pkey))

EVP_PKEY * __X509_REQ_get_pubkey(__reg("a6") struct Library * , __reg("a0") X509_REQ * req ) = "\tjsr\t-11118(a6)";
#define X509_REQ_get_pubkey(req) __X509_REQ_get_pubkey(AmiSSLBase, (req))

int __X509_REQ_extension_nid(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-11124(a6)";
#define X509_REQ_extension_nid(nid) __X509_REQ_extension_nid(AmiSSLBase, (nid))

int * __X509_REQ_get_extension_nids(__reg("a6") struct Library * ) = "\tjsr\t-11130(a6)";
#define X509_REQ_get_extension_nids() __X509_REQ_get_extension_nids(AmiSSLBase)

void __X509_REQ_set_extension_nids(__reg("a6") struct Library * , __reg("a0") int * nids ) = "\tjsr\t-11136(a6)";
#define X509_REQ_set_extension_nids(nids) __X509_REQ_set_extension_nids(AmiSSLBase, (nids))

STACK_OF(X509_EXTENSION) * __X509_REQ_get_extensions(__reg("a6") struct Library * , __reg("a0") X509_REQ * req ) = "\tjsr\t-11142(a6)";
#define X509_REQ_get_extensions(req) __X509_REQ_get_extensions(AmiSSLBase, (req))

int __X509_REQ_add_extensions_nid(__reg("a6") struct Library * , __reg("a0") X509_REQ * req , __reg("a1") const STACK_OF(X509_EXTENSION) * exts , __reg("d0") int nid ) = "\tjsr\t-11148(a6)";
#define X509_REQ_add_extensions_nid(req, exts, nid) __X509_REQ_add_extensions_nid(AmiSSLBase, (req), (exts), (nid))

int __X509_REQ_add_extensions(__reg("a6") struct Library * , __reg("a0") X509_REQ * req , __reg("a1") const STACK_OF(X509_EXTENSION) * exts ) = "\tjsr\t-11154(a6)";
#define X509_REQ_add_extensions(req, exts) __X509_REQ_add_extensions(AmiSSLBase, (req), (exts))

int __X509_REQ_get_attr_count(__reg("a6") struct Library * , __reg("a0") const X509_REQ * req ) = "\tjsr\t-11160(a6)";
#define X509_REQ_get_attr_count(req) __X509_REQ_get_attr_count(AmiSSLBase, (req))

int __X509_REQ_get_attr_by_NID(__reg("a6") struct Library * , __reg("a0") const X509_REQ * req , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-11166(a6)";
#define X509_REQ_get_attr_by_NID(req, nid, lastpos) __X509_REQ_get_attr_by_NID(AmiSSLBase, (req), (nid), (lastpos))

int __X509_REQ_get_attr_by_OBJ(__reg("a6") struct Library * , __reg("a0") const X509_REQ * req , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-11172(a6)";
#define X509_REQ_get_attr_by_OBJ(req, obj, lastpos) __X509_REQ_get_attr_by_OBJ(AmiSSLBase, (req), (obj), (lastpos))

X509_ATTRIBUTE * __X509_REQ_get_attr(__reg("a6") struct Library * , __reg("a0") const X509_REQ * req , __reg("d0") int loc ) = "\tjsr\t-11178(a6)";
#define X509_REQ_get_attr(req, loc) __X509_REQ_get_attr(AmiSSLBase, (req), (loc))

X509_ATTRIBUTE * __X509_REQ_delete_attr(__reg("a6") struct Library * , __reg("a0") X509_REQ * req , __reg("d0") int loc ) = "\tjsr\t-11184(a6)";
#define X509_REQ_delete_attr(req, loc) __X509_REQ_delete_attr(AmiSSLBase, (req), (loc))

int __X509_REQ_add1_attr(__reg("a6") struct Library * , __reg("a0") X509_REQ * req , __reg("a1") X509_ATTRIBUTE * attr ) = "\tjsr\t-11190(a6)";
#define X509_REQ_add1_attr(req, attr) __X509_REQ_add1_attr(AmiSSLBase, (req), (attr))

int __X509_REQ_add1_attr_by_OBJ(__reg("a6") struct Library * , __reg("a0") X509_REQ * req , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int type , __reg("a2") const unsigned char * bytes , __reg("d1") int len ) = "\tjsr\t-11196(a6)";
#define X509_REQ_add1_attr_by_OBJ(req, obj, type, bytes, len) __X509_REQ_add1_attr_by_OBJ(AmiSSLBase, (req), (obj), (type), (bytes), (len))

int __X509_REQ_add1_attr_by_NID(__reg("a6") struct Library * , __reg("a0") X509_REQ * req , __reg("d0") int nid , __reg("d1") int type , __reg("a1") const unsigned char * bytes , __reg("d2") int len ) = "\tjsr\t-11202(a6)";
#define X509_REQ_add1_attr_by_NID(req, nid, type, bytes, len) __X509_REQ_add1_attr_by_NID(AmiSSLBase, (req), (nid), (type), (bytes), (len))

int __X509_REQ_add1_attr_by_txt(__reg("a6") struct Library * , __reg("a0") X509_REQ * req , __reg("a1") const char * attrname , __reg("d0") int type , __reg("a2") const unsigned char * bytes , __reg("d1") int len ) = "\tjsr\t-11208(a6)";
#define X509_REQ_add1_attr_by_txt(req, attrname, type, bytes, len) __X509_REQ_add1_attr_by_txt(AmiSSLBase, (req), (attrname), (type), (bytes), (len))

int __X509_CRL_set_version(__reg("a6") struct Library * , __reg("a0") X509_CRL * x , __reg("d0") long version ) = "\tjsr\t-11214(a6)";
#define X509_CRL_set_version(x, version) __X509_CRL_set_version(AmiSSLBase, (x), (version))

int __X509_CRL_set_issuer_name(__reg("a6") struct Library * , __reg("a0") X509_CRL * x , __reg("a1") const X509_NAME * name ) = "\tjsr\t-11220(a6)";
#define X509_CRL_set_issuer_name(x, name) __X509_CRL_set_issuer_name(AmiSSLBase, (x), (name))

int __X509_CRL_set1_lastUpdate(__reg("a6") struct Library * , __reg("a0") X509_CRL * x , __reg("a1") const ASN1_TIME * tm ) = "\tjsr\t-11226(a6)";
#define X509_CRL_set1_lastUpdate(x, tm) __X509_CRL_set1_lastUpdate(AmiSSLBase, (x), (tm))

int __X509_CRL_set1_nextUpdate(__reg("a6") struct Library * , __reg("a0") X509_CRL * x , __reg("a1") const ASN1_TIME * tm ) = "\tjsr\t-11232(a6)";
#define X509_CRL_set1_nextUpdate(x, tm) __X509_CRL_set1_nextUpdate(AmiSSLBase, (x), (tm))

int __X509_CRL_sort(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl ) = "\tjsr\t-11238(a6)";
#define X509_CRL_sort(crl) __X509_CRL_sort(AmiSSLBase, (crl))

int __X509_REVOKED_set_serialNumber(__reg("a6") struct Library * , __reg("a0") X509_REVOKED * x , __reg("a1") ASN1_INTEGER * serial ) = "\tjsr\t-11244(a6)";
#define X509_REVOKED_set_serialNumber(x, serial) __X509_REVOKED_set_serialNumber(AmiSSLBase, (x), (serial))

int __X509_REVOKED_set_revocationDate(__reg("a6") struct Library * , __reg("a0") X509_REVOKED * r , __reg("a1") ASN1_TIME * tm ) = "\tjsr\t-11250(a6)";
#define X509_REVOKED_set_revocationDate(r, tm) __X509_REVOKED_set_revocationDate(AmiSSLBase, (r), (tm))

int __X509_check_private_key(__reg("a6") struct Library * , __reg("a0") const X509 * cert , __reg("a1") const EVP_PKEY * pkey ) = "\tjsr\t-11256(a6)";
#define X509_check_private_key(cert, pkey) __X509_check_private_key(AmiSSLBase, (cert), (pkey))

int __X509_issuer_and_serial_cmp(__reg("a6") struct Library * , __reg("a0") const X509 * a , __reg("a1") const X509 * b ) = "\tjsr\t-11262(a6)";
#define X509_issuer_and_serial_cmp(a, b) __X509_issuer_and_serial_cmp(AmiSSLBase, (a), (b))

unsigned long __X509_issuer_and_serial_hash(__reg("a6") struct Library * , __reg("a0") X509 * a ) = "\tjsr\t-11268(a6)";
#define X509_issuer_and_serial_hash(a) __X509_issuer_and_serial_hash(AmiSSLBase, (a))

int __X509_issuer_name_cmp(__reg("a6") struct Library * , __reg("a0") const X509 * a , __reg("a1") const X509 * b ) = "\tjsr\t-11274(a6)";
#define X509_issuer_name_cmp(a, b) __X509_issuer_name_cmp(AmiSSLBase, (a), (b))

unsigned long __X509_issuer_name_hash(__reg("a6") struct Library * , __reg("a0") X509 * a ) = "\tjsr\t-11280(a6)";
#define X509_issuer_name_hash(a) __X509_issuer_name_hash(AmiSSLBase, (a))

int __X509_subject_name_cmp(__reg("a6") struct Library * , __reg("a0") const X509 * a , __reg("a1") const X509 * b ) = "\tjsr\t-11286(a6)";
#define X509_subject_name_cmp(a, b) __X509_subject_name_cmp(AmiSSLBase, (a), (b))

unsigned long __X509_subject_name_hash(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-11292(a6)";
#define X509_subject_name_hash(x) __X509_subject_name_hash(AmiSSLBase, (x))

int __X509_cmp(__reg("a6") struct Library * , __reg("a0") const X509 * a , __reg("a1") const X509 * b ) = "\tjsr\t-11298(a6)";
#define X509_cmp(a, b) __X509_cmp(AmiSSLBase, (a), (b))

int __X509_NAME_cmp(__reg("a6") struct Library * , __reg("a0") const X509_NAME * a , __reg("a1") const X509_NAME * b ) = "\tjsr\t-11304(a6)";
#define X509_NAME_cmp(a, b) __X509_NAME_cmp(AmiSSLBase, (a), (b))

unsigned long __OBSOLETE_X509_NAME_hash(__reg("a6") struct Library * , __reg("a0") X509_NAME * x ) = "\tjsr\t-11310(a6)";
#define OBSOLETE_X509_NAME_hash(x) __OBSOLETE_X509_NAME_hash(AmiSSLBase, (x))

int __X509_CRL_cmp(__reg("a6") struct Library * , __reg("a0") const X509_CRL * a , __reg("a1") const X509_CRL * b ) = "\tjsr\t-11316(a6)";
#define X509_CRL_cmp(a, b) __X509_CRL_cmp(AmiSSLBase, (a), (b))

int __X509_NAME_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const X509_NAME * name , __reg("d0") int obase ) = "\tjsr\t-11322(a6)";
#define X509_NAME_print(bp, name, obase) __X509_NAME_print(AmiSSLBase, (bp), (name), (obase))

int __X509_NAME_print_ex(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const X509_NAME * nm , __reg("d0") int indent , __reg("d1") unsigned long flags ) = "\tjsr\t-11328(a6)";
#define X509_NAME_print_ex(out, nm, indent, flags) __X509_NAME_print_ex(AmiSSLBase, (out), (nm), (indent), (flags))

int __X509_print_ex(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509 * x , __reg("d0") unsigned long nmflag , __reg("d1") unsigned long cflag ) = "\tjsr\t-11334(a6)";
#define X509_print_ex(bp, x, nmflag, cflag) __X509_print_ex(AmiSSLBase, (bp), (x), (nmflag), (cflag))

int __X509_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509 * x ) = "\tjsr\t-11340(a6)";
#define X509_print(bp, x) __X509_print(AmiSSLBase, (bp), (x))

int __X509_ocspid_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509 * x ) = "\tjsr\t-11346(a6)";
#define X509_ocspid_print(bp, x) __X509_ocspid_print(AmiSSLBase, (bp), (x))

int __X509_CRL_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509_CRL * x ) = "\tjsr\t-11358(a6)";
#define X509_CRL_print(bp, x) __X509_CRL_print(AmiSSLBase, (bp), (x))

int __X509_REQ_print_ex(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509_REQ * x , __reg("d0") unsigned long nmflag , __reg("d1") unsigned long cflag ) = "\tjsr\t-11364(a6)";
#define X509_REQ_print_ex(bp, x, nmflag, cflag) __X509_REQ_print_ex(AmiSSLBase, (bp), (x), (nmflag), (cflag))

int __X509_REQ_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") X509_REQ * req ) = "\tjsr\t-11370(a6)";
#define X509_REQ_print(bp, req) __X509_REQ_print(AmiSSLBase, (bp), (req))

int __X509_NAME_entry_count(__reg("a6") struct Library * , __reg("a0") const X509_NAME * name ) = "\tjsr\t-11376(a6)";
#define X509_NAME_entry_count(name) __X509_NAME_entry_count(AmiSSLBase, (name))

int __X509_NAME_get_text_by_NID(__reg("a6") struct Library * , __reg("a0") const X509_NAME * name , __reg("d0") int nid , __reg("a1") char * buf , __reg("d1") int len ) = "\tjsr\t-11382(a6)";
#define X509_NAME_get_text_by_NID(name, nid, buf, len) __X509_NAME_get_text_by_NID(AmiSSLBase, (name), (nid), (buf), (len))

int __X509_NAME_get_text_by_OBJ(__reg("a6") struct Library * , __reg("a0") const X509_NAME * name , __reg("a1") const ASN1_OBJECT * obj , __reg("a2") char * buf , __reg("d0") int len ) = "\tjsr\t-11388(a6)";
#define X509_NAME_get_text_by_OBJ(name, obj, buf, len) __X509_NAME_get_text_by_OBJ(AmiSSLBase, (name), (obj), (buf), (len))

int __X509_NAME_get_index_by_NID(__reg("a6") struct Library * , __reg("a0") const X509_NAME * name , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-11394(a6)";
#define X509_NAME_get_index_by_NID(name, nid, lastpos) __X509_NAME_get_index_by_NID(AmiSSLBase, (name), (nid), (lastpos))

int __X509_NAME_get_index_by_OBJ(__reg("a6") struct Library * , __reg("a0") const X509_NAME * name , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-11400(a6)";
#define X509_NAME_get_index_by_OBJ(name, obj, lastpos) __X509_NAME_get_index_by_OBJ(AmiSSLBase, (name), (obj), (lastpos))

X509_NAME_ENTRY * __X509_NAME_get_entry(__reg("a6") struct Library * , __reg("a0") const X509_NAME * name , __reg("d0") int loc ) = "\tjsr\t-11406(a6)";
#define X509_NAME_get_entry(name, loc) __X509_NAME_get_entry(AmiSSLBase, (name), (loc))

X509_NAME_ENTRY * __X509_NAME_delete_entry(__reg("a6") struct Library * , __reg("a0") X509_NAME * name , __reg("d0") int loc ) = "\tjsr\t-11412(a6)";
#define X509_NAME_delete_entry(name, loc) __X509_NAME_delete_entry(AmiSSLBase, (name), (loc))

int __X509_NAME_add_entry(__reg("a6") struct Library * , __reg("a0") X509_NAME * name , __reg("a1") const X509_NAME_ENTRY * ne , __reg("d0") int loc , __reg("d1") int set ) = "\tjsr\t-11418(a6)";
#define X509_NAME_add_entry(name, ne, loc, set) __X509_NAME_add_entry(AmiSSLBase, (name), (ne), (loc), (set))

int __X509_NAME_add_entry_by_OBJ(__reg("a6") struct Library * , __reg("a0") X509_NAME * name , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int type , __reg("a2") const unsigned char * bytes , __reg("d1") int len , __reg("d2") int loc , __reg("d3") int set ) = "\tjsr\t-11424(a6)";
#define X509_NAME_add_entry_by_OBJ(name, obj, type, bytes, len, loc, set) __X509_NAME_add_entry_by_OBJ(AmiSSLBase, (name), (obj), (type), (bytes), (len), (loc), (set))

int __X509_NAME_add_entry_by_NID(__reg("a6") struct Library * , __reg("a0") X509_NAME * name , __reg("d0") int nid , __reg("d1") int type , __reg("a1") const unsigned char * bytes , __reg("d2") int len , __reg("d3") int loc , __reg("d4") int set ) = "\tjsr\t-11430(a6)";
#define X509_NAME_add_entry_by_NID(name, nid, type, bytes, len, loc, set) __X509_NAME_add_entry_by_NID(AmiSSLBase, (name), (nid), (type), (bytes), (len), (loc), (set))

X509_NAME_ENTRY * __X509_NAME_ENTRY_create_by_txt(__reg("a6") struct Library * , __reg("a0") X509_NAME_ENTRY ** ne , __reg("a1") const char * field , __reg("d0") int type , __reg("a2") const unsigned char * bytes , __reg("d1") int len ) = "\tjsr\t-11436(a6)";
#define X509_NAME_ENTRY_create_by_txt(ne, field, type, bytes, len) __X509_NAME_ENTRY_create_by_txt(AmiSSLBase, (ne), (field), (type), (bytes), (len))

X509_NAME_ENTRY * __X509_NAME_ENTRY_create_by_NID(__reg("a6") struct Library * , __reg("a0") X509_NAME_ENTRY ** ne , __reg("d0") int nid , __reg("d1") int type , __reg("a1") const unsigned char * bytes , __reg("d2") int len ) = "\tjsr\t-11442(a6)";
#define X509_NAME_ENTRY_create_by_NID(ne, nid, type, bytes, len) __X509_NAME_ENTRY_create_by_NID(AmiSSLBase, (ne), (nid), (type), (bytes), (len))

int __X509_NAME_add_entry_by_txt(__reg("a6") struct Library * , __reg("a0") X509_NAME * name , __reg("a1") const char * field , __reg("d0") int type , __reg("a2") const unsigned char * bytes , __reg("d1") int len , __reg("d2") int loc , __reg("d3") int set ) = "\tjsr\t-11448(a6)";
#define X509_NAME_add_entry_by_txt(name, field, type, bytes, len, loc, set) __X509_NAME_add_entry_by_txt(AmiSSLBase, (name), (field), (type), (bytes), (len), (loc), (set))

X509_NAME_ENTRY * __X509_NAME_ENTRY_create_by_OBJ(__reg("a6") struct Library * , __reg("a0") X509_NAME_ENTRY ** ne , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int type , __reg("a2") const unsigned char * bytes , __reg("d1") int len ) = "\tjsr\t-11454(a6)";
#define X509_NAME_ENTRY_create_by_OBJ(ne, obj, type, bytes, len) __X509_NAME_ENTRY_create_by_OBJ(AmiSSLBase, (ne), (obj), (type), (bytes), (len))

int __X509_NAME_ENTRY_set_object(__reg("a6") struct Library * , __reg("a0") X509_NAME_ENTRY * ne , __reg("a1") const ASN1_OBJECT * obj ) = "\tjsr\t-11460(a6)";
#define X509_NAME_ENTRY_set_object(ne, obj) __X509_NAME_ENTRY_set_object(AmiSSLBase, (ne), (obj))

int __X509_NAME_ENTRY_set_data(__reg("a6") struct Library * , __reg("a0") X509_NAME_ENTRY * ne , __reg("d0") int type , __reg("a1") const unsigned char * bytes , __reg("d1") int len ) = "\tjsr\t-11466(a6)";
#define X509_NAME_ENTRY_set_data(ne, type, bytes, len) __X509_NAME_ENTRY_set_data(AmiSSLBase, (ne), (type), (bytes), (len))

ASN1_OBJECT * __X509_NAME_ENTRY_get_object(__reg("a6") struct Library * , __reg("a0") const X509_NAME_ENTRY * ne ) = "\tjsr\t-11472(a6)";
#define X509_NAME_ENTRY_get_object(ne) __X509_NAME_ENTRY_get_object(AmiSSLBase, (ne))

ASN1_STRING * __X509_NAME_ENTRY_get_data(__reg("a6") struct Library * , __reg("a0") const X509_NAME_ENTRY * ne ) = "\tjsr\t-11478(a6)";
#define X509_NAME_ENTRY_get_data(ne) __X509_NAME_ENTRY_get_data(AmiSSLBase, (ne))

int __X509v3_get_ext_count(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_EXTENSION) * x ) = "\tjsr\t-11484(a6)";
#define X509v3_get_ext_count(x) __X509v3_get_ext_count(AmiSSLBase, (x))

int __X509v3_get_ext_by_NID(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_EXTENSION) * x , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-11490(a6)";
#define X509v3_get_ext_by_NID(x, nid, lastpos) __X509v3_get_ext_by_NID(AmiSSLBase, (x), (nid), (lastpos))

int __X509v3_get_ext_by_OBJ(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_EXTENSION) * x , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-11496(a6)";
#define X509v3_get_ext_by_OBJ(x, obj, lastpos) __X509v3_get_ext_by_OBJ(AmiSSLBase, (x), (obj), (lastpos))

int __X509v3_get_ext_by_critical(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_EXTENSION) * x , __reg("d0") int crit , __reg("d1") int lastpos ) = "\tjsr\t-11502(a6)";
#define X509v3_get_ext_by_critical(x, crit, lastpos) __X509v3_get_ext_by_critical(AmiSSLBase, (x), (crit), (lastpos))

X509_EXTENSION * __X509v3_get_ext(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_EXTENSION) * x , __reg("d0") int loc ) = "\tjsr\t-11508(a6)";
#define X509v3_get_ext(x, loc) __X509v3_get_ext(AmiSSLBase, (x), (loc))

X509_EXTENSION * __X509v3_delete_ext(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_EXTENSION) * x , __reg("d0") int loc ) = "\tjsr\t-11514(a6)";
#define X509v3_delete_ext(x, loc) __X509v3_delete_ext(AmiSSLBase, (x), (loc))

STACK_OF(X509_EXTENSION) * __X509v3_add_ext(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_EXTENSION) ** x , __reg("a1") X509_EXTENSION * ex , __reg("d0") int loc ) = "\tjsr\t-11520(a6)";
#define X509v3_add_ext(x, ex, loc) __X509v3_add_ext(AmiSSLBase, (x), (ex), (loc))

int __X509_get_ext_count(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-11526(a6)";
#define X509_get_ext_count(x) __X509_get_ext_count(AmiSSLBase, (x))

int __X509_get_ext_by_NID(__reg("a6") struct Library * , __reg("a0") const X509 * x , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-11532(a6)";
#define X509_get_ext_by_NID(x, nid, lastpos) __X509_get_ext_by_NID(AmiSSLBase, (x), (nid), (lastpos))

int __X509_get_ext_by_OBJ(__reg("a6") struct Library * , __reg("a0") const X509 * x , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-11538(a6)";
#define X509_get_ext_by_OBJ(x, obj, lastpos) __X509_get_ext_by_OBJ(AmiSSLBase, (x), (obj), (lastpos))

int __X509_get_ext_by_critical(__reg("a6") struct Library * , __reg("a0") const X509 * x , __reg("d0") int crit , __reg("d1") int lastpos ) = "\tjsr\t-11544(a6)";
#define X509_get_ext_by_critical(x, crit, lastpos) __X509_get_ext_by_critical(AmiSSLBase, (x), (crit), (lastpos))

X509_EXTENSION * __X509_get_ext(__reg("a6") struct Library * , __reg("a0") const X509 * x , __reg("d0") int loc ) = "\tjsr\t-11550(a6)";
#define X509_get_ext(x, loc) __X509_get_ext(AmiSSLBase, (x), (loc))

X509_EXTENSION * __X509_delete_ext(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("d0") int loc ) = "\tjsr\t-11556(a6)";
#define X509_delete_ext(x, loc) __X509_delete_ext(AmiSSLBase, (x), (loc))

int __X509_add_ext(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") X509_EXTENSION * ex , __reg("d0") int loc ) = "\tjsr\t-11562(a6)";
#define X509_add_ext(x, ex, loc) __X509_add_ext(AmiSSLBase, (x), (ex), (loc))

void * __X509_get_ext_d2i(__reg("a6") struct Library * , __reg("a0") const X509 * x , __reg("d0") int nid , __reg("a1") int * crit , __reg("a2") int * idx ) = "\tjsr\t-11568(a6)";
#define X509_get_ext_d2i(x, nid, crit, idx) __X509_get_ext_d2i(AmiSSLBase, (x), (nid), (crit), (idx))

int __X509_add1_ext_i2d(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("d0") int nid , __reg("a1") void * value , __reg("d1") int crit , __reg("d2") unsigned long flags ) = "\tjsr\t-11574(a6)";
#define X509_add1_ext_i2d(x, nid, value, crit, flags) __X509_add1_ext_i2d(AmiSSLBase, (x), (nid), (value), (crit), (flags))

int __X509_CRL_get_ext_count(__reg("a6") struct Library * , __reg("a0") const X509_CRL * x ) = "\tjsr\t-11580(a6)";
#define X509_CRL_get_ext_count(x) __X509_CRL_get_ext_count(AmiSSLBase, (x))

int __X509_CRL_get_ext_by_NID(__reg("a6") struct Library * , __reg("a0") const X509_CRL * x , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-11586(a6)";
#define X509_CRL_get_ext_by_NID(x, nid, lastpos) __X509_CRL_get_ext_by_NID(AmiSSLBase, (x), (nid), (lastpos))

int __X509_CRL_get_ext_by_OBJ(__reg("a6") struct Library * , __reg("a0") const X509_CRL * x , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-11592(a6)";
#define X509_CRL_get_ext_by_OBJ(x, obj, lastpos) __X509_CRL_get_ext_by_OBJ(AmiSSLBase, (x), (obj), (lastpos))

int __X509_CRL_get_ext_by_critical(__reg("a6") struct Library * , __reg("a0") const X509_CRL * x , __reg("d0") int crit , __reg("d1") int lastpos ) = "\tjsr\t-11598(a6)";
#define X509_CRL_get_ext_by_critical(x, crit, lastpos) __X509_CRL_get_ext_by_critical(AmiSSLBase, (x), (crit), (lastpos))

X509_EXTENSION * __X509_CRL_get_ext(__reg("a6") struct Library * , __reg("a0") const X509_CRL * x , __reg("d0") int loc ) = "\tjsr\t-11604(a6)";
#define X509_CRL_get_ext(x, loc) __X509_CRL_get_ext(AmiSSLBase, (x), (loc))

X509_EXTENSION * __X509_CRL_delete_ext(__reg("a6") struct Library * , __reg("a0") X509_CRL * x , __reg("d0") int loc ) = "\tjsr\t-11610(a6)";
#define X509_CRL_delete_ext(x, loc) __X509_CRL_delete_ext(AmiSSLBase, (x), (loc))

int __X509_CRL_add_ext(__reg("a6") struct Library * , __reg("a0") X509_CRL * x , __reg("a1") X509_EXTENSION * ex , __reg("d0") int loc ) = "\tjsr\t-11616(a6)";
#define X509_CRL_add_ext(x, ex, loc) __X509_CRL_add_ext(AmiSSLBase, (x), (ex), (loc))

void * __X509_CRL_get_ext_d2i(__reg("a6") struct Library * , __reg("a0") const X509_CRL * x , __reg("d0") int nid , __reg("a1") int * crit , __reg("a2") int * idx ) = "\tjsr\t-11622(a6)";
#define X509_CRL_get_ext_d2i(x, nid, crit, idx) __X509_CRL_get_ext_d2i(AmiSSLBase, (x), (nid), (crit), (idx))

int __X509_CRL_add1_ext_i2d(__reg("a6") struct Library * , __reg("a0") X509_CRL * x , __reg("d0") int nid , __reg("a1") void * value , __reg("d1") int crit , __reg("d2") unsigned long flags ) = "\tjsr\t-11628(a6)";
#define X509_CRL_add1_ext_i2d(x, nid, value, crit, flags) __X509_CRL_add1_ext_i2d(AmiSSLBase, (x), (nid), (value), (crit), (flags))

int __X509_REVOKED_get_ext_count(__reg("a6") struct Library * , __reg("a0") const X509_REVOKED * x ) = "\tjsr\t-11634(a6)";
#define X509_REVOKED_get_ext_count(x) __X509_REVOKED_get_ext_count(AmiSSLBase, (x))

int __X509_REVOKED_get_ext_by_NID(__reg("a6") struct Library * , __reg("a0") const X509_REVOKED * x , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-11640(a6)";
#define X509_REVOKED_get_ext_by_NID(x, nid, lastpos) __X509_REVOKED_get_ext_by_NID(AmiSSLBase, (x), (nid), (lastpos))

int __X509_REVOKED_get_ext_by_OBJ(__reg("a6") struct Library * , __reg("a0") const X509_REVOKED * x , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-11646(a6)";
#define X509_REVOKED_get_ext_by_OBJ(x, obj, lastpos) __X509_REVOKED_get_ext_by_OBJ(AmiSSLBase, (x), (obj), (lastpos))

int __X509_REVOKED_get_ext_by_critical(__reg("a6") struct Library * , __reg("a0") const X509_REVOKED * x , __reg("d0") int crit , __reg("d1") int lastpos ) = "\tjsr\t-11652(a6)";
#define X509_REVOKED_get_ext_by_critical(x, crit, lastpos) __X509_REVOKED_get_ext_by_critical(AmiSSLBase, (x), (crit), (lastpos))

X509_EXTENSION * __X509_REVOKED_get_ext(__reg("a6") struct Library * , __reg("a0") const X509_REVOKED * x , __reg("d0") int loc ) = "\tjsr\t-11658(a6)";
#define X509_REVOKED_get_ext(x, loc) __X509_REVOKED_get_ext(AmiSSLBase, (x), (loc))

X509_EXTENSION * __X509_REVOKED_delete_ext(__reg("a6") struct Library * , __reg("a0") X509_REVOKED * x , __reg("d0") int loc ) = "\tjsr\t-11664(a6)";
#define X509_REVOKED_delete_ext(x, loc) __X509_REVOKED_delete_ext(AmiSSLBase, (x), (loc))

int __X509_REVOKED_add_ext(__reg("a6") struct Library * , __reg("a0") X509_REVOKED * x , __reg("a1") X509_EXTENSION * ex , __reg("d0") int loc ) = "\tjsr\t-11670(a6)";
#define X509_REVOKED_add_ext(x, ex, loc) __X509_REVOKED_add_ext(AmiSSLBase, (x), (ex), (loc))

void * __X509_REVOKED_get_ext_d2i(__reg("a6") struct Library * , __reg("a0") const X509_REVOKED * x , __reg("d0") int nid , __reg("a1") int * crit , __reg("a2") int * idx ) = "\tjsr\t-11676(a6)";
#define X509_REVOKED_get_ext_d2i(x, nid, crit, idx) __X509_REVOKED_get_ext_d2i(AmiSSLBase, (x), (nid), (crit), (idx))

int __X509_REVOKED_add1_ext_i2d(__reg("a6") struct Library * , __reg("a0") X509_REVOKED * x , __reg("d0") int nid , __reg("a1") void * value , __reg("d1") int crit , __reg("d2") unsigned long flags ) = "\tjsr\t-11682(a6)";
#define X509_REVOKED_add1_ext_i2d(x, nid, value, crit, flags) __X509_REVOKED_add1_ext_i2d(AmiSSLBase, (x), (nid), (value), (crit), (flags))

X509_EXTENSION * __X509_EXTENSION_create_by_NID(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION ** ex , __reg("d0") int nid , __reg("d1") int crit , __reg("a1") ASN1_OCTET_STRING * data ) = "\tjsr\t-11688(a6)";
#define X509_EXTENSION_create_by_NID(ex, nid, crit, data) __X509_EXTENSION_create_by_NID(AmiSSLBase, (ex), (nid), (crit), (data))

X509_EXTENSION * __X509_EXTENSION_create_by_OBJ(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION ** ex , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int crit , __reg("a2") ASN1_OCTET_STRING * data ) = "\tjsr\t-11694(a6)";
#define X509_EXTENSION_create_by_OBJ(ex, obj, crit, data) __X509_EXTENSION_create_by_OBJ(AmiSSLBase, (ex), (obj), (crit), (data))

int __X509_EXTENSION_set_object(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION * ex , __reg("a1") const ASN1_OBJECT * obj ) = "\tjsr\t-11700(a6)";
#define X509_EXTENSION_set_object(ex, obj) __X509_EXTENSION_set_object(AmiSSLBase, (ex), (obj))

int __X509_EXTENSION_set_critical(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION * ex , __reg("d0") int crit ) = "\tjsr\t-11706(a6)";
#define X509_EXTENSION_set_critical(ex, crit) __X509_EXTENSION_set_critical(AmiSSLBase, (ex), (crit))

int __X509_EXTENSION_set_data(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION * ex , __reg("a1") ASN1_OCTET_STRING * data ) = "\tjsr\t-11712(a6)";
#define X509_EXTENSION_set_data(ex, data) __X509_EXTENSION_set_data(AmiSSLBase, (ex), (data))

ASN1_OBJECT * __X509_EXTENSION_get_object(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION * ex ) = "\tjsr\t-11718(a6)";
#define X509_EXTENSION_get_object(ex) __X509_EXTENSION_get_object(AmiSSLBase, (ex))

ASN1_OCTET_STRING * __X509_EXTENSION_get_data(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION * ne ) = "\tjsr\t-11724(a6)";
#define X509_EXTENSION_get_data(ne) __X509_EXTENSION_get_data(AmiSSLBase, (ne))

int __X509_EXTENSION_get_critical(__reg("a6") struct Library * , __reg("a0") const X509_EXTENSION * ex ) = "\tjsr\t-11730(a6)";
#define X509_EXTENSION_get_critical(ex) __X509_EXTENSION_get_critical(AmiSSLBase, (ex))

int __X509at_get_attr_count(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_ATTRIBUTE) * x ) = "\tjsr\t-11736(a6)";
#define X509at_get_attr_count(x) __X509at_get_attr_count(AmiSSLBase, (x))

int __X509at_get_attr_by_NID(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_ATTRIBUTE) * x , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-11742(a6)";
#define X509at_get_attr_by_NID(x, nid, lastpos) __X509at_get_attr_by_NID(AmiSSLBase, (x), (nid), (lastpos))

int __X509at_get_attr_by_OBJ(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_ATTRIBUTE) * sk , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-11748(a6)";
#define X509at_get_attr_by_OBJ(sk, obj, lastpos) __X509at_get_attr_by_OBJ(AmiSSLBase, (sk), (obj), (lastpos))

X509_ATTRIBUTE * __X509at_get_attr(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_ATTRIBUTE) * x , __reg("d0") int loc ) = "\tjsr\t-11754(a6)";
#define X509at_get_attr(x, loc) __X509at_get_attr(AmiSSLBase, (x), (loc))

X509_ATTRIBUTE * __X509at_delete_attr(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_ATTRIBUTE) * x , __reg("d0") int loc ) = "\tjsr\t-11760(a6)";
#define X509at_delete_attr(x, loc) __X509at_delete_attr(AmiSSLBase, (x), (loc))

STACK_OF(X509_ATTRIBUTE) * __X509at_add1_attr(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_ATTRIBUTE) ** x , __reg("a1") X509_ATTRIBUTE * attr ) = "\tjsr\t-11766(a6)";
#define X509at_add1_attr(x, attr) __X509at_add1_attr(AmiSSLBase, (x), (attr))

STACK_OF(X509_ATTRIBUTE) * __X509at_add1_attr_by_OBJ(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_ATTRIBUTE) ** x , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int type , __reg("a2") const unsigned char * bytes , __reg("d1") int len ) = "\tjsr\t-11772(a6)";
#define X509at_add1_attr_by_OBJ(x, obj, type, bytes, len) __X509at_add1_attr_by_OBJ(AmiSSLBase, (x), (obj), (type), (bytes), (len))

STACK_OF(X509_ATTRIBUTE) * __X509at_add1_attr_by_NID(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_ATTRIBUTE) ** x , __reg("d0") int nid , __reg("d1") int type , __reg("a1") const unsigned char * bytes , __reg("d2") int len ) = "\tjsr\t-11778(a6)";
#define X509at_add1_attr_by_NID(x, nid, type, bytes, len) __X509at_add1_attr_by_NID(AmiSSLBase, (x), (nid), (type), (bytes), (len))

STACK_OF(X509_ATTRIBUTE) * __X509at_add1_attr_by_txt(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_ATTRIBUTE) ** x , __reg("a1") const char * attrname , __reg("d0") int type , __reg("a2") const unsigned char * bytes , __reg("d1") int len ) = "\tjsr\t-11784(a6)";
#define X509at_add1_attr_by_txt(x, attrname, type, bytes, len) __X509at_add1_attr_by_txt(AmiSSLBase, (x), (attrname), (type), (bytes), (len))

X509_ATTRIBUTE * __X509_ATTRIBUTE_create_by_NID(__reg("a6") struct Library * , __reg("a0") X509_ATTRIBUTE ** attr , __reg("d0") int nid , __reg("d1") int atrtype , __reg("a1") const void * data , __reg("d2") int len ) = "\tjsr\t-11790(a6)";
#define X509_ATTRIBUTE_create_by_NID(attr, nid, atrtype, data, len) __X509_ATTRIBUTE_create_by_NID(AmiSSLBase, (attr), (nid), (atrtype), (data), (len))

X509_ATTRIBUTE * __X509_ATTRIBUTE_create_by_OBJ(__reg("a6") struct Library * , __reg("a0") X509_ATTRIBUTE ** attr , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int atrtype , __reg("a2") const void * data , __reg("d1") int len ) = "\tjsr\t-11796(a6)";
#define X509_ATTRIBUTE_create_by_OBJ(attr, obj, atrtype, data, len) __X509_ATTRIBUTE_create_by_OBJ(AmiSSLBase, (attr), (obj), (atrtype), (data), (len))

X509_ATTRIBUTE * __X509_ATTRIBUTE_create_by_txt(__reg("a6") struct Library * , __reg("a0") X509_ATTRIBUTE ** attr , __reg("a1") const char * atrname , __reg("d0") int type , __reg("a2") const unsigned char * bytes , __reg("d1") int len ) = "\tjsr\t-11802(a6)";
#define X509_ATTRIBUTE_create_by_txt(attr, atrname, type, bytes, len) __X509_ATTRIBUTE_create_by_txt(AmiSSLBase, (attr), (atrname), (type), (bytes), (len))

int __X509_ATTRIBUTE_set1_object(__reg("a6") struct Library * , __reg("a0") X509_ATTRIBUTE * attr , __reg("a1") const ASN1_OBJECT * obj ) = "\tjsr\t-11808(a6)";
#define X509_ATTRIBUTE_set1_object(attr, obj) __X509_ATTRIBUTE_set1_object(AmiSSLBase, (attr), (obj))

int __X509_ATTRIBUTE_set1_data(__reg("a6") struct Library * , __reg("a0") X509_ATTRIBUTE * attr , __reg("d0") int attrtype , __reg("a1") const void * data , __reg("d1") int len ) = "\tjsr\t-11814(a6)";
#define X509_ATTRIBUTE_set1_data(attr, attrtype, data, len) __X509_ATTRIBUTE_set1_data(AmiSSLBase, (attr), (attrtype), (data), (len))

void * __X509_ATTRIBUTE_get0_data(__reg("a6") struct Library * , __reg("a0") X509_ATTRIBUTE * attr , __reg("d0") int idx , __reg("d1") int atrtype , __reg("a1") void * data ) = "\tjsr\t-11820(a6)";
#define X509_ATTRIBUTE_get0_data(attr, idx, atrtype, data) __X509_ATTRIBUTE_get0_data(AmiSSLBase, (attr), (idx), (atrtype), (data))

int __X509_ATTRIBUTE_count(__reg("a6") struct Library * , __reg("a0") const X509_ATTRIBUTE * attr ) = "\tjsr\t-11826(a6)";
#define X509_ATTRIBUTE_count(attr) __X509_ATTRIBUTE_count(AmiSSLBase, (attr))

ASN1_OBJECT * __X509_ATTRIBUTE_get0_object(__reg("a6") struct Library * , __reg("a0") X509_ATTRIBUTE * attr ) = "\tjsr\t-11832(a6)";
#define X509_ATTRIBUTE_get0_object(attr) __X509_ATTRIBUTE_get0_object(AmiSSLBase, (attr))

ASN1_TYPE * __X509_ATTRIBUTE_get0_type(__reg("a6") struct Library * , __reg("a0") X509_ATTRIBUTE * attr , __reg("d0") int idx ) = "\tjsr\t-11838(a6)";
#define X509_ATTRIBUTE_get0_type(attr, idx) __X509_ATTRIBUTE_get0_type(AmiSSLBase, (attr), (idx))

int __X509_verify_cert(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx ) = "\tjsr\t-11844(a6)";
#define X509_verify_cert(ctx) __X509_verify_cert(AmiSSLBase, (ctx))

X509 * __X509_find_by_issuer_and_serial(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509) * sk , __reg("a1") const X509_NAME * name , __reg("a2") const ASN1_INTEGER * serial ) = "\tjsr\t-11850(a6)";
#define X509_find_by_issuer_and_serial(sk, name, serial) __X509_find_by_issuer_and_serial(AmiSSLBase, (sk), (name), (serial))

X509 * __X509_find_by_subject(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509) * sk , __reg("a1") const X509_NAME * name ) = "\tjsr\t-11856(a6)";
#define X509_find_by_subject(sk, name) __X509_find_by_subject(AmiSSLBase, (sk), (name))

PBEPARAM * __PBEPARAM_new(__reg("a6") struct Library * ) = "\tjsr\t-11862(a6)";
#define PBEPARAM_new() __PBEPARAM_new(AmiSSLBase)

void __PBEPARAM_free(__reg("a6") struct Library * , __reg("a0") PBEPARAM * a ) = "\tjsr\t-11868(a6)";
#define PBEPARAM_free(a) __PBEPARAM_free(AmiSSLBase, (a))

PBEPARAM * __d2i_PBEPARAM(__reg("a6") struct Library * , __reg("a0") PBEPARAM ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-11874(a6)";
#define d2i_PBEPARAM(a, in, len) __d2i_PBEPARAM(AmiSSLBase, (a), (in), (len))

int __i2d_PBEPARAM(__reg("a6") struct Library * , __reg("a0") const PBEPARAM * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-11880(a6)";
#define i2d_PBEPARAM(a, out) __i2d_PBEPARAM(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PBEPARAM_it(__reg("a6") struct Library * ) = "\tjsr\t-11886(a6)";
#define PBEPARAM_it() __PBEPARAM_it(AmiSSLBase)

PBE2PARAM * __PBE2PARAM_new(__reg("a6") struct Library * ) = "\tjsr\t-11892(a6)";
#define PBE2PARAM_new() __PBE2PARAM_new(AmiSSLBase)

void __PBE2PARAM_free(__reg("a6") struct Library * , __reg("a0") PBE2PARAM * a ) = "\tjsr\t-11898(a6)";
#define PBE2PARAM_free(a) __PBE2PARAM_free(AmiSSLBase, (a))

PBE2PARAM * __d2i_PBE2PARAM(__reg("a6") struct Library * , __reg("a0") PBE2PARAM ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-11904(a6)";
#define d2i_PBE2PARAM(a, in, len) __d2i_PBE2PARAM(AmiSSLBase, (a), (in), (len))

int __i2d_PBE2PARAM(__reg("a6") struct Library * , __reg("a0") const PBE2PARAM * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-11910(a6)";
#define i2d_PBE2PARAM(a, out) __i2d_PBE2PARAM(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PBE2PARAM_it(__reg("a6") struct Library * ) = "\tjsr\t-11916(a6)";
#define PBE2PARAM_it() __PBE2PARAM_it(AmiSSLBase)

PBKDF2PARAM * __PBKDF2PARAM_new(__reg("a6") struct Library * ) = "\tjsr\t-11922(a6)";
#define PBKDF2PARAM_new() __PBKDF2PARAM_new(AmiSSLBase)

void __PBKDF2PARAM_free(__reg("a6") struct Library * , __reg("a0") PBKDF2PARAM * a ) = "\tjsr\t-11928(a6)";
#define PBKDF2PARAM_free(a) __PBKDF2PARAM_free(AmiSSLBase, (a))

PBKDF2PARAM * __d2i_PBKDF2PARAM(__reg("a6") struct Library * , __reg("a0") PBKDF2PARAM ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-11934(a6)";
#define d2i_PBKDF2PARAM(a, in, len) __d2i_PBKDF2PARAM(AmiSSLBase, (a), (in), (len))

int __i2d_PBKDF2PARAM(__reg("a6") struct Library * , __reg("a0") const PBKDF2PARAM * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-11940(a6)";
#define i2d_PBKDF2PARAM(a, out) __i2d_PBKDF2PARAM(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PBKDF2PARAM_it(__reg("a6") struct Library * ) = "\tjsr\t-11946(a6)";
#define PBKDF2PARAM_it() __PBKDF2PARAM_it(AmiSSLBase)

X509_ALGOR * __PKCS5_pbe_set(__reg("a6") struct Library * , __reg("d0") int alg , __reg("d1") int iter , __reg("a0") const unsigned char * salt , __reg("d2") int saltlen ) = "\tjsr\t-11952(a6)";
#define PKCS5_pbe_set(alg, iter, salt, saltlen) __PKCS5_pbe_set(AmiSSLBase, (alg), (iter), (salt), (saltlen))

X509_ALGOR * __PKCS5_pbe2_set(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher , __reg("d0") int iter , __reg("a1") unsigned char * salt , __reg("d1") int saltlen ) = "\tjsr\t-11958(a6)";
#define PKCS5_pbe2_set(cipher, iter, salt, saltlen) __PKCS5_pbe2_set(AmiSSLBase, (cipher), (iter), (salt), (saltlen))

PKCS8_PRIV_KEY_INFO * __PKCS8_PRIV_KEY_INFO_new(__reg("a6") struct Library * ) = "\tjsr\t-11964(a6)";
#define PKCS8_PRIV_KEY_INFO_new() __PKCS8_PRIV_KEY_INFO_new(AmiSSLBase)

void __PKCS8_PRIV_KEY_INFO_free(__reg("a6") struct Library * , __reg("a0") PKCS8_PRIV_KEY_INFO * a ) = "\tjsr\t-11970(a6)";
#define PKCS8_PRIV_KEY_INFO_free(a) __PKCS8_PRIV_KEY_INFO_free(AmiSSLBase, (a))

PKCS8_PRIV_KEY_INFO * __d2i_PKCS8_PRIV_KEY_INFO(__reg("a6") struct Library * , __reg("a0") PKCS8_PRIV_KEY_INFO ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-11976(a6)";
#define d2i_PKCS8_PRIV_KEY_INFO(a, in, len) __d2i_PKCS8_PRIV_KEY_INFO(AmiSSLBase, (a), (in), (len))

int __i2d_PKCS8_PRIV_KEY_INFO(__reg("a6") struct Library * , __reg("a0") const PKCS8_PRIV_KEY_INFO * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-11982(a6)";
#define i2d_PKCS8_PRIV_KEY_INFO(a, out) __i2d_PKCS8_PRIV_KEY_INFO(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKCS8_PRIV_KEY_INFO_it(__reg("a6") struct Library * ) = "\tjsr\t-11988(a6)";
#define PKCS8_PRIV_KEY_INFO_it() __PKCS8_PRIV_KEY_INFO_it(AmiSSLBase)

EVP_PKEY * __EVP_PKCS82PKEY(__reg("a6") struct Library * , __reg("a0") const PKCS8_PRIV_KEY_INFO * p8 ) = "\tjsr\t-11994(a6)";
#define EVP_PKCS82PKEY(p8) __EVP_PKCS82PKEY(AmiSSLBase, (p8))

PKCS8_PRIV_KEY_INFO * __EVP_PKEY2PKCS8(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-12000(a6)";
#define EVP_PKEY2PKCS8(pkey) __EVP_PKEY2PKCS8(AmiSSLBase, (pkey))

int __X509_check_trust(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("d0") int id , __reg("d1") int flags ) = "\tjsr\t-12018(a6)";
#define X509_check_trust(x, id, flags) __X509_check_trust(AmiSSLBase, (x), (id), (flags))

int __X509_TRUST_get_count(__reg("a6") struct Library * ) = "\tjsr\t-12024(a6)";
#define X509_TRUST_get_count() __X509_TRUST_get_count(AmiSSLBase)

X509_TRUST * __X509_TRUST_get0(__reg("a6") struct Library * , __reg("d0") int idx ) = "\tjsr\t-12030(a6)";
#define X509_TRUST_get0(idx) __X509_TRUST_get0(AmiSSLBase, (idx))

int __X509_TRUST_get_by_id(__reg("a6") struct Library * , __reg("d0") int id ) = "\tjsr\t-12036(a6)";
#define X509_TRUST_get_by_id(id) __X509_TRUST_get_by_id(AmiSSLBase, (id))

int __X509_TRUST_add(__reg("a6") struct Library * , __reg("d0") int id , __reg("d1") int flags , __reg("a0") int (*ck)(X509_TRUST *,X509 *,int) , __reg("a1") const char * name , __reg("d2") int arg1 , __reg("a2") void * arg2 ) = "\tjsr\t-12042(a6)";
#define X509_TRUST_add(id, flags, ck, name, arg1, arg2) __X509_TRUST_add(AmiSSLBase, (id), (flags), (ck), (name), (arg1), (arg2))

void __X509_TRUST_cleanup(__reg("a6") struct Library * ) = "\tjsr\t-12048(a6)";
#define X509_TRUST_cleanup() __X509_TRUST_cleanup(AmiSSLBase)

int __X509_TRUST_get_flags(__reg("a6") struct Library * , __reg("a0") const X509_TRUST * xp ) = "\tjsr\t-12054(a6)";
#define X509_TRUST_get_flags(xp) __X509_TRUST_get_flags(AmiSSLBase, (xp))

char * __X509_TRUST_get0_name(__reg("a6") struct Library * , __reg("a0") const X509_TRUST * xp ) = "\tjsr\t-12060(a6)";
#define X509_TRUST_get0_name(xp) __X509_TRUST_get0_name(AmiSSLBase, (xp))

int __X509_TRUST_get_trust(__reg("a6") struct Library * , __reg("a0") const X509_TRUST * xp ) = "\tjsr\t-12066(a6)";
#define X509_TRUST_get_trust(xp) __X509_TRUST_get_trust(AmiSSLBase, (xp))

int __ERR_load_X509_strings(__reg("a6") struct Library * ) = "\tjsr\t-12072(a6)";
#define ERR_load_X509_strings() __ERR_load_X509_strings(AmiSSLBase)

int __X509_OBJECT_idx_by_subject(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_OBJECT) * h , __reg("d0") X509_LOOKUP_TYPE type , __reg("a1") const X509_NAME * name ) = "\tjsr\t-12078(a6)";
#define X509_OBJECT_idx_by_subject(h, type, name) __X509_OBJECT_idx_by_subject(AmiSSLBase, (h), (type), (name))

X509_OBJECT * __X509_OBJECT_retrieve_by_subject(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_OBJECT) * h , __reg("d0") X509_LOOKUP_TYPE type , __reg("a1") const X509_NAME * name ) = "\tjsr\t-12084(a6)";
#define X509_OBJECT_retrieve_by_subject(h, type, name) __X509_OBJECT_retrieve_by_subject(AmiSSLBase, (h), (type), (name))

X509_OBJECT * __X509_OBJECT_retrieve_match(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_OBJECT) * h , __reg("a1") X509_OBJECT * x ) = "\tjsr\t-12090(a6)";
#define X509_OBJECT_retrieve_match(h, x) __X509_OBJECT_retrieve_match(AmiSSLBase, (h), (x))

int __X509_OBJECT_up_ref_count(__reg("a6") struct Library * , __reg("a0") X509_OBJECT * a ) = "\tjsr\t-12096(a6)";
#define X509_OBJECT_up_ref_count(a) __X509_OBJECT_up_ref_count(AmiSSLBase, (a))

X509_STORE * __X509_STORE_new(__reg("a6") struct Library * ) = "\tjsr\t-12102(a6)";
#define X509_STORE_new() __X509_STORE_new(AmiSSLBase)

void __X509_STORE_free(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs ) = "\tjsr\t-12108(a6)";
#define X509_STORE_free(xs) __X509_STORE_free(AmiSSLBase, (xs))

int __X509_STORE_set_flags(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("d0") unsigned long flags ) = "\tjsr\t-12114(a6)";
#define X509_STORE_set_flags(xs, flags) __X509_STORE_set_flags(AmiSSLBase, (xs), (flags))

int __X509_STORE_set_purpose(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("d0") int purpose ) = "\tjsr\t-12120(a6)";
#define X509_STORE_set_purpose(xs, purpose) __X509_STORE_set_purpose(AmiSSLBase, (xs), (purpose))

int __X509_STORE_set_trust(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("d0") int trust ) = "\tjsr\t-12126(a6)";
#define X509_STORE_set_trust(xs, trust) __X509_STORE_set_trust(AmiSSLBase, (xs), (trust))

X509_STORE_CTX * __X509_STORE_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-12132(a6)";
#define X509_STORE_CTX_new() __X509_STORE_CTX_new(AmiSSLBase)

int __X509_STORE_CTX_get1_issuer(__reg("a6") struct Library * , __reg("a0") X509 ** issuer , __reg("a1") X509_STORE_CTX * ctx , __reg("a2") X509 * x ) = "\tjsr\t-12138(a6)";
#define X509_STORE_CTX_get1_issuer(issuer, ctx, x) __X509_STORE_CTX_get1_issuer(AmiSSLBase, (issuer), (ctx), (x))

void __X509_STORE_CTX_free(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx ) = "\tjsr\t-12144(a6)";
#define X509_STORE_CTX_free(ctx) __X509_STORE_CTX_free(AmiSSLBase, (ctx))

int __X509_STORE_CTX_init(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("a1") X509_STORE * trust_store , __reg("a2") X509 * target , __reg("a3") STACK_OF(X509) * untrusted ) = "\tjsr\t-12150(a6)";
#define X509_STORE_CTX_init(ctx, trust_store, target, untrusted) __X509_STORE_CTX_init(AmiSSLBase, (ctx), (trust_store), (target), (untrusted))

void __X509_STORE_CTX_set0_trusted_stack(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("a1") STACK_OF(X509) * sk ) = "\tjsr\t-12156(a6)";
#define X509_STORE_CTX_set0_trusted_stack(ctx, sk) __X509_STORE_CTX_set0_trusted_stack(AmiSSLBase, (ctx), (sk))

void __X509_STORE_CTX_cleanup(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx ) = "\tjsr\t-12162(a6)";
#define X509_STORE_CTX_cleanup(ctx) __X509_STORE_CTX_cleanup(AmiSSLBase, (ctx))

X509_LOOKUP * __X509_STORE_add_lookup(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_LOOKUP_METHOD * m ) = "\tjsr\t-12168(a6)";
#define X509_STORE_add_lookup(xs, m) __X509_STORE_add_lookup(AmiSSLBase, (xs), (m))

X509_LOOKUP_METHOD * __X509_LOOKUP_hash_dir(__reg("a6") struct Library * ) = "\tjsr\t-12174(a6)";
#define X509_LOOKUP_hash_dir() __X509_LOOKUP_hash_dir(AmiSSLBase)

X509_LOOKUP_METHOD * __X509_LOOKUP_file(__reg("a6") struct Library * ) = "\tjsr\t-12180(a6)";
#define X509_LOOKUP_file() __X509_LOOKUP_file(AmiSSLBase)

int __X509_STORE_add_cert(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509 * x ) = "\tjsr\t-12186(a6)";
#define X509_STORE_add_cert(xs, x) __X509_STORE_add_cert(AmiSSLBase, (xs), (x))

int __X509_STORE_add_crl(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_CRL * x ) = "\tjsr\t-12192(a6)";
#define X509_STORE_add_crl(xs, x) __X509_STORE_add_crl(AmiSSLBase, (xs), (x))

int __X509_STORE_CTX_get_by_subject(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * vs , __reg("d0") X509_LOOKUP_TYPE type , __reg("a1") const X509_NAME * name , __reg("a2") X509_OBJECT * ret ) = "\tjsr\t-12198(a6)";
#define X509_STORE_CTX_get_by_subject(vs, type, name, ret) __X509_STORE_CTX_get_by_subject(AmiSSLBase, (vs), (type), (name), (ret))

int __X509_LOOKUP_ctrl(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx , __reg("d0") int cmd , __reg("a1") const char * argc , __reg("d1") long argl , __reg("a2") char ** ret ) = "\tjsr\t-12204(a6)";
#define X509_LOOKUP_ctrl(ctx, cmd, argc, argl, ret) __X509_LOOKUP_ctrl(AmiSSLBase, (ctx), (cmd), (argc), (argl), (ret))

int __X509_load_cert_file(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx , __reg("a1") const char * file , __reg("d0") int type ) = "\tjsr\t-12210(a6)";
#define X509_load_cert_file(ctx, file, type) __X509_load_cert_file(AmiSSLBase, (ctx), (file), (type))

int __X509_load_crl_file(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx , __reg("a1") const char * file , __reg("d0") int type ) = "\tjsr\t-12216(a6)";
#define X509_load_crl_file(ctx, file, type) __X509_load_crl_file(AmiSSLBase, (ctx), (file), (type))

int __X509_load_cert_crl_file(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx , __reg("a1") const char * file , __reg("d0") int type ) = "\tjsr\t-12222(a6)";
#define X509_load_cert_crl_file(ctx, file, type) __X509_load_cert_crl_file(AmiSSLBase, (ctx), (file), (type))

X509_LOOKUP * __X509_LOOKUP_new(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP_METHOD * method ) = "\tjsr\t-12228(a6)";
#define X509_LOOKUP_new(method) __X509_LOOKUP_new(AmiSSLBase, (method))

void __X509_LOOKUP_free(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx ) = "\tjsr\t-12234(a6)";
#define X509_LOOKUP_free(ctx) __X509_LOOKUP_free(AmiSSLBase, (ctx))

int __X509_LOOKUP_init(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx ) = "\tjsr\t-12240(a6)";
#define X509_LOOKUP_init(ctx) __X509_LOOKUP_init(AmiSSLBase, (ctx))

int __X509_LOOKUP_by_subject(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx , __reg("d0") X509_LOOKUP_TYPE type , __reg("a1") const X509_NAME * name , __reg("a2") X509_OBJECT * ret ) = "\tjsr\t-12246(a6)";
#define X509_LOOKUP_by_subject(ctx, type, name, ret) __X509_LOOKUP_by_subject(AmiSSLBase, (ctx), (type), (name), (ret))

int __X509_LOOKUP_by_issuer_serial(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx , __reg("d0") X509_LOOKUP_TYPE type , __reg("a1") const X509_NAME * name , __reg("a2") const ASN1_INTEGER * serial , __reg("a3") X509_OBJECT * ret ) = "\tjsr\t-12252(a6)";
#define X509_LOOKUP_by_issuer_serial(ctx, type, name, serial, ret) __X509_LOOKUP_by_issuer_serial(AmiSSLBase, (ctx), (type), (name), (serial), (ret))

int __X509_LOOKUP_by_fingerprint(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx , __reg("d0") X509_LOOKUP_TYPE type , __reg("a1") const unsigned char * bytes , __reg("d1") int len , __reg("a2") X509_OBJECT * ret ) = "\tjsr\t-12258(a6)";
#define X509_LOOKUP_by_fingerprint(ctx, type, bytes, len, ret) __X509_LOOKUP_by_fingerprint(AmiSSLBase, (ctx), (type), (bytes), (len), (ret))

int __X509_LOOKUP_by_alias(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx , __reg("d0") X509_LOOKUP_TYPE type , __reg("a1") const char * str , __reg("d1") int len , __reg("a2") X509_OBJECT * ret ) = "\tjsr\t-12264(a6)";
#define X509_LOOKUP_by_alias(ctx, type, str, len, ret) __X509_LOOKUP_by_alias(AmiSSLBase, (ctx), (type), (str), (len), (ret))

int __X509_LOOKUP_shutdown(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx ) = "\tjsr\t-12270(a6)";
#define X509_LOOKUP_shutdown(ctx) __X509_LOOKUP_shutdown(AmiSSLBase, (ctx))

int __X509_STORE_load_locations(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") const char * file , __reg("a2") const char * dir ) = "\tjsr\t-12276(a6)";
#define X509_STORE_load_locations(xs, file, dir) __X509_STORE_load_locations(AmiSSLBase, (xs), (file), (dir))

int __X509_STORE_set_default_paths(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs ) = "\tjsr\t-12282(a6)";
#define X509_STORE_set_default_paths(xs) __X509_STORE_set_default_paths(AmiSSLBase, (xs))

int __OBSOLETE_X509_STORE_CTX_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dup_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-12288(a6)";
#define OBSOLETE_X509_STORE_CTX_get_ex_new_index(argl, argp, new_func, dup_func, free_func) __OBSOLETE_X509_STORE_CTX_get_ex_new_index(AmiSSLBase, (argl), (argp), (new_func), (dup_func), (free_func))

int __X509_STORE_CTX_set_ex_data(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("d0") int idx , __reg("a1") void * data ) = "\tjsr\t-12294(a6)";
#define X509_STORE_CTX_set_ex_data(ctx, idx, data) __X509_STORE_CTX_set_ex_data(AmiSSLBase, (ctx), (idx), (data))

void * __X509_STORE_CTX_get_ex_data(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx , __reg("d0") int idx ) = "\tjsr\t-12300(a6)";
#define X509_STORE_CTX_get_ex_data(ctx, idx) __X509_STORE_CTX_get_ex_data(AmiSSLBase, (ctx), (idx))

int __X509_STORE_CTX_get_error(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-12306(a6)";
#define X509_STORE_CTX_get_error(ctx) __X509_STORE_CTX_get_error(AmiSSLBase, (ctx))

void __X509_STORE_CTX_set_error(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("d0") int s ) = "\tjsr\t-12312(a6)";
#define X509_STORE_CTX_set_error(ctx, s) __X509_STORE_CTX_set_error(AmiSSLBase, (ctx), (s))

int __X509_STORE_CTX_get_error_depth(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-12318(a6)";
#define X509_STORE_CTX_get_error_depth(ctx) __X509_STORE_CTX_get_error_depth(AmiSSLBase, (ctx))

X509 * __X509_STORE_CTX_get_current_cert(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-12324(a6)";
#define X509_STORE_CTX_get_current_cert(ctx) __X509_STORE_CTX_get_current_cert(AmiSSLBase, (ctx))

STACK_OF(X509) * __X509_STORE_CTX_get0_chain(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-12330(a6)";
#define X509_STORE_CTX_get0_chain(ctx) __X509_STORE_CTX_get0_chain(AmiSSLBase, (ctx))

STACK_OF(X509) * __X509_STORE_CTX_get1_chain(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-12336(a6)";
#define X509_STORE_CTX_get1_chain(ctx) __X509_STORE_CTX_get1_chain(AmiSSLBase, (ctx))

void __X509_STORE_CTX_set_cert(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * c , __reg("a1") X509 * x ) = "\tjsr\t-12342(a6)";
#define X509_STORE_CTX_set_cert(c, x) __X509_STORE_CTX_set_cert(AmiSSLBase, (c), (x))

int __X509_STORE_CTX_set_purpose(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("d0") int purpose ) = "\tjsr\t-12348(a6)";
#define X509_STORE_CTX_set_purpose(ctx, purpose) __X509_STORE_CTX_set_purpose(AmiSSLBase, (ctx), (purpose))

int __X509_STORE_CTX_set_trust(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("d0") int trust ) = "\tjsr\t-12354(a6)";
#define X509_STORE_CTX_set_trust(ctx, trust) __X509_STORE_CTX_set_trust(AmiSSLBase, (ctx), (trust))

int __X509_STORE_CTX_purpose_inherit(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("d0") int def_purpose , __reg("d1") int purpose , __reg("d2") int trust ) = "\tjsr\t-12360(a6)";
#define X509_STORE_CTX_purpose_inherit(ctx, def_purpose, purpose, trust) __X509_STORE_CTX_purpose_inherit(AmiSSLBase, (ctx), (def_purpose), (purpose), (trust))

void __X509_STORE_CTX_set_flags(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("d0") unsigned long flags ) = "\tjsr\t-12366(a6)";
#define X509_STORE_CTX_set_flags(ctx, flags) __X509_STORE_CTX_set_flags(AmiSSLBase, (ctx), (flags))

void __X509_STORE_CTX_set_time(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("d0") unsigned long flags , __reg("d1") time_t t ) = "\tjsr\t-12372(a6)";
#define X509_STORE_CTX_set_time(ctx, flags, t) __X509_STORE_CTX_set_time(AmiSSLBase, (ctx), (flags), (t))

void __X509_STORE_CTX_set_verify_cb(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("a1") int (*verify_cb)(int,X509_STORE_CTX *) ) = "\tjsr\t-12378(a6)";
#define X509_STORE_CTX_set_verify_cb(ctx, verify_cb) __X509_STORE_CTX_set_verify_cb(AmiSSLBase, (ctx), (verify_cb))

BASIC_CONSTRAINTS * __BASIC_CONSTRAINTS_new(__reg("a6") struct Library * ) = "\tjsr\t-12384(a6)";
#define BASIC_CONSTRAINTS_new() __BASIC_CONSTRAINTS_new(AmiSSLBase)

void __BASIC_CONSTRAINTS_free(__reg("a6") struct Library * , __reg("a0") BASIC_CONSTRAINTS * a ) = "\tjsr\t-12390(a6)";
#define BASIC_CONSTRAINTS_free(a) __BASIC_CONSTRAINTS_free(AmiSSLBase, (a))

BASIC_CONSTRAINTS * __d2i_BASIC_CONSTRAINTS(__reg("a6") struct Library * , __reg("a0") BASIC_CONSTRAINTS ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12396(a6)";
#define d2i_BASIC_CONSTRAINTS(a, in, len) __d2i_BASIC_CONSTRAINTS(AmiSSLBase, (a), (in), (len))

int __i2d_BASIC_CONSTRAINTS(__reg("a6") struct Library * , __reg("a0") const BASIC_CONSTRAINTS * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12402(a6)";
#define i2d_BASIC_CONSTRAINTS(a, out) __i2d_BASIC_CONSTRAINTS(AmiSSLBase, (a), (out))

const ASN1_ITEM * __BASIC_CONSTRAINTS_it(__reg("a6") struct Library * ) = "\tjsr\t-12408(a6)";
#define BASIC_CONSTRAINTS_it() __BASIC_CONSTRAINTS_it(AmiSSLBase)

SXNET * __SXNET_new(__reg("a6") struct Library * ) = "\tjsr\t-12414(a6)";
#define SXNET_new() __SXNET_new(AmiSSLBase)

void __SXNET_free(__reg("a6") struct Library * , __reg("a0") SXNET * a ) = "\tjsr\t-12420(a6)";
#define SXNET_free(a) __SXNET_free(AmiSSLBase, (a))

SXNET * __d2i_SXNET(__reg("a6") struct Library * , __reg("a0") SXNET ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12426(a6)";
#define d2i_SXNET(a, in, len) __d2i_SXNET(AmiSSLBase, (a), (in), (len))

int __i2d_SXNET(__reg("a6") struct Library * , __reg("a0") const SXNET * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12432(a6)";
#define i2d_SXNET(a, out) __i2d_SXNET(AmiSSLBase, (a), (out))

const ASN1_ITEM * __SXNET_it(__reg("a6") struct Library * ) = "\tjsr\t-12438(a6)";
#define SXNET_it() __SXNET_it(AmiSSLBase)

SXNETID * __SXNETID_new(__reg("a6") struct Library * ) = "\tjsr\t-12444(a6)";
#define SXNETID_new() __SXNETID_new(AmiSSLBase)

void __SXNETID_free(__reg("a6") struct Library * , __reg("a0") SXNETID * a ) = "\tjsr\t-12450(a6)";
#define SXNETID_free(a) __SXNETID_free(AmiSSLBase, (a))

SXNETID * __d2i_SXNETID(__reg("a6") struct Library * , __reg("a0") SXNETID ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12456(a6)";
#define d2i_SXNETID(a, in, len) __d2i_SXNETID(AmiSSLBase, (a), (in), (len))

int __i2d_SXNETID(__reg("a6") struct Library * , __reg("a0") const SXNETID * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12462(a6)";
#define i2d_SXNETID(a, out) __i2d_SXNETID(AmiSSLBase, (a), (out))

const ASN1_ITEM * __SXNETID_it(__reg("a6") struct Library * ) = "\tjsr\t-12468(a6)";
#define SXNETID_it() __SXNETID_it(AmiSSLBase)

int __SXNET_add_id_asc(__reg("a6") struct Library * , __reg("a0") SXNET ** psx , __reg("a1") const char * zone , __reg("a2") const char * user , __reg("d0") int userlen ) = "\tjsr\t-12474(a6)";
#define SXNET_add_id_asc(psx, zone, user, userlen) __SXNET_add_id_asc(AmiSSLBase, (psx), (zone), (user), (userlen))

int __SXNET_add_id_ulong(__reg("a6") struct Library * , __reg("a0") SXNET ** psx , __reg("d0") unsigned long lzone , __reg("a1") const char * user , __reg("d1") int userlen ) = "\tjsr\t-12480(a6)";
#define SXNET_add_id_ulong(psx, lzone, user, userlen) __SXNET_add_id_ulong(AmiSSLBase, (psx), (lzone), (user), (userlen))

int __SXNET_add_id_INTEGER(__reg("a6") struct Library * , __reg("a0") SXNET ** psx , __reg("a1") ASN1_INTEGER * izone , __reg("a2") const char * user , __reg("d0") int userlen ) = "\tjsr\t-12486(a6)";
#define SXNET_add_id_INTEGER(psx, izone, user, userlen) __SXNET_add_id_INTEGER(AmiSSLBase, (psx), (izone), (user), (userlen))

ASN1_OCTET_STRING * __SXNET_get_id_asc(__reg("a6") struct Library * , __reg("a0") SXNET * sx , __reg("a1") const char * zone ) = "\tjsr\t-12492(a6)";
#define SXNET_get_id_asc(sx, zone) __SXNET_get_id_asc(AmiSSLBase, (sx), (zone))

ASN1_OCTET_STRING * __SXNET_get_id_ulong(__reg("a6") struct Library * , __reg("a0") SXNET * sx , __reg("d0") unsigned long lzone ) = "\tjsr\t-12498(a6)";
#define SXNET_get_id_ulong(sx, lzone) __SXNET_get_id_ulong(AmiSSLBase, (sx), (lzone))

ASN1_OCTET_STRING * __SXNET_get_id_INTEGER(__reg("a6") struct Library * , __reg("a0") SXNET * sx , __reg("a1") ASN1_INTEGER * zone ) = "\tjsr\t-12504(a6)";
#define SXNET_get_id_INTEGER(sx, zone) __SXNET_get_id_INTEGER(AmiSSLBase, (sx), (zone))

AUTHORITY_KEYID * __AUTHORITY_KEYID_new(__reg("a6") struct Library * ) = "\tjsr\t-12510(a6)";
#define AUTHORITY_KEYID_new() __AUTHORITY_KEYID_new(AmiSSLBase)

void __AUTHORITY_KEYID_free(__reg("a6") struct Library * , __reg("a0") AUTHORITY_KEYID * a ) = "\tjsr\t-12516(a6)";
#define AUTHORITY_KEYID_free(a) __AUTHORITY_KEYID_free(AmiSSLBase, (a))

AUTHORITY_KEYID * __d2i_AUTHORITY_KEYID(__reg("a6") struct Library * , __reg("a0") AUTHORITY_KEYID ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12522(a6)";
#define d2i_AUTHORITY_KEYID(a, in, len) __d2i_AUTHORITY_KEYID(AmiSSLBase, (a), (in), (len))

int __i2d_AUTHORITY_KEYID(__reg("a6") struct Library * , __reg("a0") const AUTHORITY_KEYID * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12528(a6)";
#define i2d_AUTHORITY_KEYID(a, out) __i2d_AUTHORITY_KEYID(AmiSSLBase, (a), (out))

const ASN1_ITEM * __AUTHORITY_KEYID_it(__reg("a6") struct Library * ) = "\tjsr\t-12534(a6)";
#define AUTHORITY_KEYID_it() __AUTHORITY_KEYID_it(AmiSSLBase)

PKEY_USAGE_PERIOD * __PKEY_USAGE_PERIOD_new(__reg("a6") struct Library * ) = "\tjsr\t-12540(a6)";
#define PKEY_USAGE_PERIOD_new() __PKEY_USAGE_PERIOD_new(AmiSSLBase)

void __PKEY_USAGE_PERIOD_free(__reg("a6") struct Library * , __reg("a0") PKEY_USAGE_PERIOD * a ) = "\tjsr\t-12546(a6)";
#define PKEY_USAGE_PERIOD_free(a) __PKEY_USAGE_PERIOD_free(AmiSSLBase, (a))

PKEY_USAGE_PERIOD * __d2i_PKEY_USAGE_PERIOD(__reg("a6") struct Library * , __reg("a0") PKEY_USAGE_PERIOD ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12552(a6)";
#define d2i_PKEY_USAGE_PERIOD(a, in, len) __d2i_PKEY_USAGE_PERIOD(AmiSSLBase, (a), (in), (len))

int __i2d_PKEY_USAGE_PERIOD(__reg("a6") struct Library * , __reg("a0") const PKEY_USAGE_PERIOD * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12558(a6)";
#define i2d_PKEY_USAGE_PERIOD(a, out) __i2d_PKEY_USAGE_PERIOD(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PKEY_USAGE_PERIOD_it(__reg("a6") struct Library * ) = "\tjsr\t-12564(a6)";
#define PKEY_USAGE_PERIOD_it() __PKEY_USAGE_PERIOD_it(AmiSSLBase)

GENERAL_NAME * __GENERAL_NAME_new(__reg("a6") struct Library * ) = "\tjsr\t-12570(a6)";
#define GENERAL_NAME_new() __GENERAL_NAME_new(AmiSSLBase)

void __GENERAL_NAME_free(__reg("a6") struct Library * , __reg("a0") GENERAL_NAME * a ) = "\tjsr\t-12576(a6)";
#define GENERAL_NAME_free(a) __GENERAL_NAME_free(AmiSSLBase, (a))

GENERAL_NAME * __d2i_GENERAL_NAME(__reg("a6") struct Library * , __reg("a0") GENERAL_NAME ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12582(a6)";
#define d2i_GENERAL_NAME(a, in, len) __d2i_GENERAL_NAME(AmiSSLBase, (a), (in), (len))

int __i2d_GENERAL_NAME(__reg("a6") struct Library * , __reg("a0") const GENERAL_NAME * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12588(a6)";
#define i2d_GENERAL_NAME(a, out) __i2d_GENERAL_NAME(AmiSSLBase, (a), (out))

const ASN1_ITEM * __GENERAL_NAME_it(__reg("a6") struct Library * ) = "\tjsr\t-12594(a6)";
#define GENERAL_NAME_it() __GENERAL_NAME_it(AmiSSLBase)

STACK_OF(CONF_VALUE) * __i2v_GENERAL_NAME(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * method , __reg("a1") GENERAL_NAME * gen , __reg("a2") STACK_OF(CONF_VALUE) * ret ) = "\tjsr\t-12600(a6)";
#define i2v_GENERAL_NAME(method, gen, ret) __i2v_GENERAL_NAME(AmiSSLBase, (method), (gen), (ret))

int __GENERAL_NAME_print(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") GENERAL_NAME * gen ) = "\tjsr\t-12606(a6)";
#define GENERAL_NAME_print(out, gen) __GENERAL_NAME_print(AmiSSLBase, (out), (gen))

GENERAL_NAMES * __GENERAL_NAMES_new(__reg("a6") struct Library * ) = "\tjsr\t-12612(a6)";
#define GENERAL_NAMES_new() __GENERAL_NAMES_new(AmiSSLBase)

void __GENERAL_NAMES_free(__reg("a6") struct Library * , __reg("a0") GENERAL_NAMES * a ) = "\tjsr\t-12618(a6)";
#define GENERAL_NAMES_free(a) __GENERAL_NAMES_free(AmiSSLBase, (a))

GENERAL_NAMES * __d2i_GENERAL_NAMES(__reg("a6") struct Library * , __reg("a0") GENERAL_NAMES ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12624(a6)";
#define d2i_GENERAL_NAMES(a, in, len) __d2i_GENERAL_NAMES(AmiSSLBase, (a), (in), (len))

int __i2d_GENERAL_NAMES(__reg("a6") struct Library * , __reg("a0") const GENERAL_NAMES * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12630(a6)";
#define i2d_GENERAL_NAMES(a, out) __i2d_GENERAL_NAMES(AmiSSLBase, (a), (out))

const ASN1_ITEM * __GENERAL_NAMES_it(__reg("a6") struct Library * ) = "\tjsr\t-12636(a6)";
#define GENERAL_NAMES_it() __GENERAL_NAMES_it(AmiSSLBase)

STACK_OF(CONF_VALUE) * __i2v_GENERAL_NAMES(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * method , __reg("a1") GENERAL_NAMES * gen , __reg("a2") STACK_OF(CONF_VALUE) * extlist ) = "\tjsr\t-12642(a6)";
#define i2v_GENERAL_NAMES(method, gen, extlist) __i2v_GENERAL_NAMES(AmiSSLBase, (method), (gen), (extlist))

GENERAL_NAMES * __v2i_GENERAL_NAMES(__reg("a6") struct Library * , __reg("a0") const X509V3_EXT_METHOD * method , __reg("a1") X509V3_CTX * ctx , __reg("a2") STACK_OF(CONF_VALUE) * nval ) = "\tjsr\t-12648(a6)";
#define v2i_GENERAL_NAMES(method, ctx, nval) __v2i_GENERAL_NAMES(AmiSSLBase, (method), (ctx), (nval))

OTHERNAME * __OTHERNAME_new(__reg("a6") struct Library * ) = "\tjsr\t-12654(a6)";
#define OTHERNAME_new() __OTHERNAME_new(AmiSSLBase)

void __OTHERNAME_free(__reg("a6") struct Library * , __reg("a0") OTHERNAME * a ) = "\tjsr\t-12660(a6)";
#define OTHERNAME_free(a) __OTHERNAME_free(AmiSSLBase, (a))

OTHERNAME * __d2i_OTHERNAME(__reg("a6") struct Library * , __reg("a0") OTHERNAME ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12666(a6)";
#define d2i_OTHERNAME(a, in, len) __d2i_OTHERNAME(AmiSSLBase, (a), (in), (len))

int __i2d_OTHERNAME(__reg("a6") struct Library * , __reg("a0") const OTHERNAME * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12672(a6)";
#define i2d_OTHERNAME(a, out) __i2d_OTHERNAME(AmiSSLBase, (a), (out))

const ASN1_ITEM * __OTHERNAME_it(__reg("a6") struct Library * ) = "\tjsr\t-12678(a6)";
#define OTHERNAME_it() __OTHERNAME_it(AmiSSLBase)

EDIPARTYNAME * __EDIPARTYNAME_new(__reg("a6") struct Library * ) = "\tjsr\t-12684(a6)";
#define EDIPARTYNAME_new() __EDIPARTYNAME_new(AmiSSLBase)

void __EDIPARTYNAME_free(__reg("a6") struct Library * , __reg("a0") EDIPARTYNAME * a ) = "\tjsr\t-12690(a6)";
#define EDIPARTYNAME_free(a) __EDIPARTYNAME_free(AmiSSLBase, (a))

EDIPARTYNAME * __d2i_EDIPARTYNAME(__reg("a6") struct Library * , __reg("a0") EDIPARTYNAME ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12696(a6)";
#define d2i_EDIPARTYNAME(a, in, len) __d2i_EDIPARTYNAME(AmiSSLBase, (a), (in), (len))

int __i2d_EDIPARTYNAME(__reg("a6") struct Library * , __reg("a0") const EDIPARTYNAME * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12702(a6)";
#define i2d_EDIPARTYNAME(a, out) __i2d_EDIPARTYNAME(AmiSSLBase, (a), (out))

const ASN1_ITEM * __EDIPARTYNAME_it(__reg("a6") struct Library * ) = "\tjsr\t-12708(a6)";
#define EDIPARTYNAME_it() __EDIPARTYNAME_it(AmiSSLBase)

char * __i2s_ASN1_OCTET_STRING(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * method , __reg("a1") const ASN1_OCTET_STRING * ia5 ) = "\tjsr\t-12714(a6)";
#define i2s_ASN1_OCTET_STRING(method, ia5) __i2s_ASN1_OCTET_STRING(AmiSSLBase, (method), (ia5))

ASN1_OCTET_STRING * __s2i_ASN1_OCTET_STRING(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * method , __reg("a1") X509V3_CTX * ctx , __reg("a2") const char * str ) = "\tjsr\t-12720(a6)";
#define s2i_ASN1_OCTET_STRING(method, ctx, str) __s2i_ASN1_OCTET_STRING(AmiSSLBase, (method), (ctx), (str))

EXTENDED_KEY_USAGE * __EXTENDED_KEY_USAGE_new(__reg("a6") struct Library * ) = "\tjsr\t-12726(a6)";
#define EXTENDED_KEY_USAGE_new() __EXTENDED_KEY_USAGE_new(AmiSSLBase)

void __EXTENDED_KEY_USAGE_free(__reg("a6") struct Library * , __reg("a0") EXTENDED_KEY_USAGE * a ) = "\tjsr\t-12732(a6)";
#define EXTENDED_KEY_USAGE_free(a) __EXTENDED_KEY_USAGE_free(AmiSSLBase, (a))

EXTENDED_KEY_USAGE * __d2i_EXTENDED_KEY_USAGE(__reg("a6") struct Library * , __reg("a0") EXTENDED_KEY_USAGE ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12738(a6)";
#define d2i_EXTENDED_KEY_USAGE(a, in, len) __d2i_EXTENDED_KEY_USAGE(AmiSSLBase, (a), (in), (len))

int __i2d_EXTENDED_KEY_USAGE(__reg("a6") struct Library * , __reg("a0") const EXTENDED_KEY_USAGE * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12744(a6)";
#define i2d_EXTENDED_KEY_USAGE(a, out) __i2d_EXTENDED_KEY_USAGE(AmiSSLBase, (a), (out))

const ASN1_ITEM * __EXTENDED_KEY_USAGE_it(__reg("a6") struct Library * ) = "\tjsr\t-12750(a6)";
#define EXTENDED_KEY_USAGE_it() __EXTENDED_KEY_USAGE_it(AmiSSLBase)

int __i2a_ACCESS_DESCRIPTION(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const ACCESS_DESCRIPTION * a ) = "\tjsr\t-12756(a6)";
#define i2a_ACCESS_DESCRIPTION(bp, a) __i2a_ACCESS_DESCRIPTION(AmiSSLBase, (bp), (a))

CERTIFICATEPOLICIES * __CERTIFICATEPOLICIES_new(__reg("a6") struct Library * ) = "\tjsr\t-12762(a6)";
#define CERTIFICATEPOLICIES_new() __CERTIFICATEPOLICIES_new(AmiSSLBase)

void __CERTIFICATEPOLICIES_free(__reg("a6") struct Library * , __reg("a0") CERTIFICATEPOLICIES * a ) = "\tjsr\t-12768(a6)";
#define CERTIFICATEPOLICIES_free(a) __CERTIFICATEPOLICIES_free(AmiSSLBase, (a))

CERTIFICATEPOLICIES * __d2i_CERTIFICATEPOLICIES(__reg("a6") struct Library * , __reg("a0") CERTIFICATEPOLICIES ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12774(a6)";
#define d2i_CERTIFICATEPOLICIES(a, in, len) __d2i_CERTIFICATEPOLICIES(AmiSSLBase, (a), (in), (len))

int __i2d_CERTIFICATEPOLICIES(__reg("a6") struct Library * , __reg("a0") const CERTIFICATEPOLICIES * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12780(a6)";
#define i2d_CERTIFICATEPOLICIES(a, out) __i2d_CERTIFICATEPOLICIES(AmiSSLBase, (a), (out))

const ASN1_ITEM * __CERTIFICATEPOLICIES_it(__reg("a6") struct Library * ) = "\tjsr\t-12786(a6)";
#define CERTIFICATEPOLICIES_it() __CERTIFICATEPOLICIES_it(AmiSSLBase)

POLICYINFO * __POLICYINFO_new(__reg("a6") struct Library * ) = "\tjsr\t-12792(a6)";
#define POLICYINFO_new() __POLICYINFO_new(AmiSSLBase)

void __POLICYINFO_free(__reg("a6") struct Library * , __reg("a0") POLICYINFO * a ) = "\tjsr\t-12798(a6)";
#define POLICYINFO_free(a) __POLICYINFO_free(AmiSSLBase, (a))

POLICYINFO * __d2i_POLICYINFO(__reg("a6") struct Library * , __reg("a0") POLICYINFO ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12804(a6)";
#define d2i_POLICYINFO(a, in, len) __d2i_POLICYINFO(AmiSSLBase, (a), (in), (len))

int __i2d_POLICYINFO(__reg("a6") struct Library * , __reg("a0") const POLICYINFO * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12810(a6)";
#define i2d_POLICYINFO(a, out) __i2d_POLICYINFO(AmiSSLBase, (a), (out))

const ASN1_ITEM * __POLICYINFO_it(__reg("a6") struct Library * ) = "\tjsr\t-12816(a6)";
#define POLICYINFO_it() __POLICYINFO_it(AmiSSLBase)

POLICYQUALINFO * __POLICYQUALINFO_new(__reg("a6") struct Library * ) = "\tjsr\t-12822(a6)";
#define POLICYQUALINFO_new() __POLICYQUALINFO_new(AmiSSLBase)

void __POLICYQUALINFO_free(__reg("a6") struct Library * , __reg("a0") POLICYQUALINFO * a ) = "\tjsr\t-12828(a6)";
#define POLICYQUALINFO_free(a) __POLICYQUALINFO_free(AmiSSLBase, (a))

POLICYQUALINFO * __d2i_POLICYQUALINFO(__reg("a6") struct Library * , __reg("a0") POLICYQUALINFO ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12834(a6)";
#define d2i_POLICYQUALINFO(a, in, len) __d2i_POLICYQUALINFO(AmiSSLBase, (a), (in), (len))

int __i2d_POLICYQUALINFO(__reg("a6") struct Library * , __reg("a0") const POLICYQUALINFO * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12840(a6)";
#define i2d_POLICYQUALINFO(a, out) __i2d_POLICYQUALINFO(AmiSSLBase, (a), (out))

const ASN1_ITEM * __POLICYQUALINFO_it(__reg("a6") struct Library * ) = "\tjsr\t-12846(a6)";
#define POLICYQUALINFO_it() __POLICYQUALINFO_it(AmiSSLBase)

USERNOTICE * __USERNOTICE_new(__reg("a6") struct Library * ) = "\tjsr\t-12852(a6)";
#define USERNOTICE_new() __USERNOTICE_new(AmiSSLBase)

void __USERNOTICE_free(__reg("a6") struct Library * , __reg("a0") USERNOTICE * a ) = "\tjsr\t-12858(a6)";
#define USERNOTICE_free(a) __USERNOTICE_free(AmiSSLBase, (a))

USERNOTICE * __d2i_USERNOTICE(__reg("a6") struct Library * , __reg("a0") USERNOTICE ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12864(a6)";
#define d2i_USERNOTICE(a, in, len) __d2i_USERNOTICE(AmiSSLBase, (a), (in), (len))

int __i2d_USERNOTICE(__reg("a6") struct Library * , __reg("a0") const USERNOTICE * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12870(a6)";
#define i2d_USERNOTICE(a, out) __i2d_USERNOTICE(AmiSSLBase, (a), (out))

const ASN1_ITEM * __USERNOTICE_it(__reg("a6") struct Library * ) = "\tjsr\t-12876(a6)";
#define USERNOTICE_it() __USERNOTICE_it(AmiSSLBase)

NOTICEREF * __NOTICEREF_new(__reg("a6") struct Library * ) = "\tjsr\t-12882(a6)";
#define NOTICEREF_new() __NOTICEREF_new(AmiSSLBase)

void __NOTICEREF_free(__reg("a6") struct Library * , __reg("a0") NOTICEREF * a ) = "\tjsr\t-12888(a6)";
#define NOTICEREF_free(a) __NOTICEREF_free(AmiSSLBase, (a))

NOTICEREF * __d2i_NOTICEREF(__reg("a6") struct Library * , __reg("a0") NOTICEREF ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12894(a6)";
#define d2i_NOTICEREF(a, in, len) __d2i_NOTICEREF(AmiSSLBase, (a), (in), (len))

int __i2d_NOTICEREF(__reg("a6") struct Library * , __reg("a0") const NOTICEREF * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12900(a6)";
#define i2d_NOTICEREF(a, out) __i2d_NOTICEREF(AmiSSLBase, (a), (out))

const ASN1_ITEM * __NOTICEREF_it(__reg("a6") struct Library * ) = "\tjsr\t-12906(a6)";
#define NOTICEREF_it() __NOTICEREF_it(AmiSSLBase)

CRL_DIST_POINTS * __CRL_DIST_POINTS_new(__reg("a6") struct Library * ) = "\tjsr\t-12912(a6)";
#define CRL_DIST_POINTS_new() __CRL_DIST_POINTS_new(AmiSSLBase)

void __CRL_DIST_POINTS_free(__reg("a6") struct Library * , __reg("a0") CRL_DIST_POINTS * a ) = "\tjsr\t-12918(a6)";
#define CRL_DIST_POINTS_free(a) __CRL_DIST_POINTS_free(AmiSSLBase, (a))

CRL_DIST_POINTS * __d2i_CRL_DIST_POINTS(__reg("a6") struct Library * , __reg("a0") CRL_DIST_POINTS ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12924(a6)";
#define d2i_CRL_DIST_POINTS(a, in, len) __d2i_CRL_DIST_POINTS(AmiSSLBase, (a), (in), (len))

int __i2d_CRL_DIST_POINTS(__reg("a6") struct Library * , __reg("a0") const CRL_DIST_POINTS * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12930(a6)";
#define i2d_CRL_DIST_POINTS(a, out) __i2d_CRL_DIST_POINTS(AmiSSLBase, (a), (out))

const ASN1_ITEM * __CRL_DIST_POINTS_it(__reg("a6") struct Library * ) = "\tjsr\t-12936(a6)";
#define CRL_DIST_POINTS_it() __CRL_DIST_POINTS_it(AmiSSLBase)

DIST_POINT * __DIST_POINT_new(__reg("a6") struct Library * ) = "\tjsr\t-12942(a6)";
#define DIST_POINT_new() __DIST_POINT_new(AmiSSLBase)

void __DIST_POINT_free(__reg("a6") struct Library * , __reg("a0") DIST_POINT * a ) = "\tjsr\t-12948(a6)";
#define DIST_POINT_free(a) __DIST_POINT_free(AmiSSLBase, (a))

DIST_POINT * __d2i_DIST_POINT(__reg("a6") struct Library * , __reg("a0") DIST_POINT ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12954(a6)";
#define d2i_DIST_POINT(a, in, len) __d2i_DIST_POINT(AmiSSLBase, (a), (in), (len))

int __i2d_DIST_POINT(__reg("a6") struct Library * , __reg("a0") const DIST_POINT * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12960(a6)";
#define i2d_DIST_POINT(a, out) __i2d_DIST_POINT(AmiSSLBase, (a), (out))

const ASN1_ITEM * __DIST_POINT_it(__reg("a6") struct Library * ) = "\tjsr\t-12966(a6)";
#define DIST_POINT_it() __DIST_POINT_it(AmiSSLBase)

DIST_POINT_NAME * __DIST_POINT_NAME_new(__reg("a6") struct Library * ) = "\tjsr\t-12972(a6)";
#define DIST_POINT_NAME_new() __DIST_POINT_NAME_new(AmiSSLBase)

void __DIST_POINT_NAME_free(__reg("a6") struct Library * , __reg("a0") DIST_POINT_NAME * a ) = "\tjsr\t-12978(a6)";
#define DIST_POINT_NAME_free(a) __DIST_POINT_NAME_free(AmiSSLBase, (a))

DIST_POINT_NAME * __d2i_DIST_POINT_NAME(__reg("a6") struct Library * , __reg("a0") DIST_POINT_NAME ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-12984(a6)";
#define d2i_DIST_POINT_NAME(a, in, len) __d2i_DIST_POINT_NAME(AmiSSLBase, (a), (in), (len))

int __i2d_DIST_POINT_NAME(__reg("a6") struct Library * , __reg("a0") const DIST_POINT_NAME * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-12990(a6)";
#define i2d_DIST_POINT_NAME(a, out) __i2d_DIST_POINT_NAME(AmiSSLBase, (a), (out))

const ASN1_ITEM * __DIST_POINT_NAME_it(__reg("a6") struct Library * ) = "\tjsr\t-12996(a6)";
#define DIST_POINT_NAME_it() __DIST_POINT_NAME_it(AmiSSLBase)

ACCESS_DESCRIPTION * __ACCESS_DESCRIPTION_new(__reg("a6") struct Library * ) = "\tjsr\t-13002(a6)";
#define ACCESS_DESCRIPTION_new() __ACCESS_DESCRIPTION_new(AmiSSLBase)

void __ACCESS_DESCRIPTION_free(__reg("a6") struct Library * , __reg("a0") ACCESS_DESCRIPTION * a ) = "\tjsr\t-13008(a6)";
#define ACCESS_DESCRIPTION_free(a) __ACCESS_DESCRIPTION_free(AmiSSLBase, (a))

ACCESS_DESCRIPTION * __d2i_ACCESS_DESCRIPTION(__reg("a6") struct Library * , __reg("a0") ACCESS_DESCRIPTION ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-13014(a6)";
#define d2i_ACCESS_DESCRIPTION(a, in, len) __d2i_ACCESS_DESCRIPTION(AmiSSLBase, (a), (in), (len))

int __i2d_ACCESS_DESCRIPTION(__reg("a6") struct Library * , __reg("a0") const ACCESS_DESCRIPTION * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-13020(a6)";
#define i2d_ACCESS_DESCRIPTION(a, out) __i2d_ACCESS_DESCRIPTION(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ACCESS_DESCRIPTION_it(__reg("a6") struct Library * ) = "\tjsr\t-13026(a6)";
#define ACCESS_DESCRIPTION_it() __ACCESS_DESCRIPTION_it(AmiSSLBase)

AUTHORITY_INFO_ACCESS * __AUTHORITY_INFO_ACCESS_new(__reg("a6") struct Library * ) = "\tjsr\t-13032(a6)";
#define AUTHORITY_INFO_ACCESS_new() __AUTHORITY_INFO_ACCESS_new(AmiSSLBase)

void __AUTHORITY_INFO_ACCESS_free(__reg("a6") struct Library * , __reg("a0") AUTHORITY_INFO_ACCESS * a ) = "\tjsr\t-13038(a6)";
#define AUTHORITY_INFO_ACCESS_free(a) __AUTHORITY_INFO_ACCESS_free(AmiSSLBase, (a))

AUTHORITY_INFO_ACCESS * __d2i_AUTHORITY_INFO_ACCESS(__reg("a6") struct Library * , __reg("a0") AUTHORITY_INFO_ACCESS ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-13044(a6)";
#define d2i_AUTHORITY_INFO_ACCESS(a, in, len) __d2i_AUTHORITY_INFO_ACCESS(AmiSSLBase, (a), (in), (len))

int __i2d_AUTHORITY_INFO_ACCESS(__reg("a6") struct Library * , __reg("a0") const AUTHORITY_INFO_ACCESS * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-13050(a6)";
#define i2d_AUTHORITY_INFO_ACCESS(a, out) __i2d_AUTHORITY_INFO_ACCESS(AmiSSLBase, (a), (out))

const ASN1_ITEM * __AUTHORITY_INFO_ACCESS_it(__reg("a6") struct Library * ) = "\tjsr\t-13056(a6)";
#define AUTHORITY_INFO_ACCESS_it() __AUTHORITY_INFO_ACCESS_it(AmiSSLBase)

GENERAL_NAME * __v2i_GENERAL_NAME(__reg("a6") struct Library * , __reg("a0") const X509V3_EXT_METHOD * method , __reg("a1") X509V3_CTX * ctx , __reg("a2") CONF_VALUE * cnf ) = "\tjsr\t-13062(a6)";
#define v2i_GENERAL_NAME(method, ctx, cnf) __v2i_GENERAL_NAME(AmiSSLBase, (method), (ctx), (cnf))

void __X509V3_conf_free(__reg("a6") struct Library * , __reg("a0") CONF_VALUE * val ) = "\tjsr\t-13068(a6)";
#define X509V3_conf_free(val) __X509V3_conf_free(AmiSSLBase, (val))

X509_EXTENSION * __X509V3_EXT_nconf_nid(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") X509V3_CTX * ctx , __reg("d0") int ext_nid , __reg("a2") const char * value ) = "\tjsr\t-13074(a6)";
#define X509V3_EXT_nconf_nid(conf, ctx, ext_nid, value) __X509V3_EXT_nconf_nid(AmiSSLBase, (conf), (ctx), (ext_nid), (value))

X509_EXTENSION * __X509V3_EXT_nconf(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") X509V3_CTX * ctx , __reg("a2") const char * name , __reg("a3") const char * value ) = "\tjsr\t-13080(a6)";
#define X509V3_EXT_nconf(conf, ctx, name, value) __X509V3_EXT_nconf(AmiSSLBase, (conf), (ctx), (name), (value))

int __X509V3_EXT_add_nconf_sk(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") X509V3_CTX * ctx , __reg("a2") const char * section , __reg("a3") STACK_OF(X509_EXTENSION) ** sk ) = "\tjsr\t-13086(a6)";
#define X509V3_EXT_add_nconf_sk(conf, ctx, section, sk) __X509V3_EXT_add_nconf_sk(AmiSSLBase, (conf), (ctx), (section), (sk))

int __X509V3_EXT_add_nconf(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") X509V3_CTX * ctx , __reg("a2") const char * section , __reg("a3") X509 * cert ) = "\tjsr\t-13092(a6)";
#define X509V3_EXT_add_nconf(conf, ctx, section, cert) __X509V3_EXT_add_nconf(AmiSSLBase, (conf), (ctx), (section), (cert))

int __X509V3_EXT_REQ_add_nconf(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") X509V3_CTX * ctx , __reg("a2") const char * section , __reg("a3") X509_REQ * req ) = "\tjsr\t-13098(a6)";
#define X509V3_EXT_REQ_add_nconf(conf, ctx, section, req) __X509V3_EXT_REQ_add_nconf(AmiSSLBase, (conf), (ctx), (section), (req))

int __X509V3_EXT_CRL_add_nconf(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") X509V3_CTX * ctx , __reg("a2") const char * section , __reg("a3") X509_CRL * crl ) = "\tjsr\t-13104(a6)";
#define X509V3_EXT_CRL_add_nconf(conf, ctx, section, crl) __X509V3_EXT_CRL_add_nconf(AmiSSLBase, (conf), (ctx), (section), (crl))

X509_EXTENSION * __X509V3_EXT_conf_nid(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf , __reg("a1") X509V3_CTX * ctx , __reg("d0") int ext_nid , __reg("a2") const char * value ) = "\tjsr\t-13110(a6)";
#define X509V3_EXT_conf_nid(conf, ctx, ext_nid, value) __X509V3_EXT_conf_nid(AmiSSLBase, (conf), (ctx), (ext_nid), (value))

X509_EXTENSION * __X509V3_EXT_conf(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf , __reg("a1") X509V3_CTX * ctx , __reg("a2") const char * name , __reg("a3") const char * value ) = "\tjsr\t-13116(a6)";
#define X509V3_EXT_conf(conf, ctx, name, value) __X509V3_EXT_conf(AmiSSLBase, (conf), (ctx), (name), (value))

int __X509V3_EXT_add_conf(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf , __reg("a1") X509V3_CTX * ctx , __reg("a2") const char * section , __reg("a3") X509 * cert ) = "\tjsr\t-13122(a6)";
#define X509V3_EXT_add_conf(conf, ctx, section, cert) __X509V3_EXT_add_conf(AmiSSLBase, (conf), (ctx), (section), (cert))

int __X509V3_EXT_REQ_add_conf(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf , __reg("a1") X509V3_CTX * ctx , __reg("a2") const char * section , __reg("a3") X509_REQ * req ) = "\tjsr\t-13128(a6)";
#define X509V3_EXT_REQ_add_conf(conf, ctx, section, req) __X509V3_EXT_REQ_add_conf(AmiSSLBase, (conf), (ctx), (section), (req))

int __X509V3_EXT_CRL_add_conf(__reg("a6") struct Library * , __reg("a0") LHASH_OF(CONF_VALUE) * conf , __reg("a1") X509V3_CTX * ctx , __reg("a2") const char * section , __reg("a3") X509_CRL * crl ) = "\tjsr\t-13134(a6)";
#define X509V3_EXT_CRL_add_conf(conf, ctx, section, crl) __X509V3_EXT_CRL_add_conf(AmiSSLBase, (conf), (ctx), (section), (crl))

int __X509V3_add_value_bool_nf(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("d0") int asn1_bool , __reg("a1") STACK_OF(CONF_VALUE) ** extlist ) = "\tjsr\t-13140(a6)";
#define X509V3_add_value_bool_nf(name, asn1_bool, extlist) __X509V3_add_value_bool_nf(AmiSSLBase, (name), (asn1_bool), (extlist))

int __X509V3_get_value_bool(__reg("a6") struct Library * , __reg("a0") const CONF_VALUE * value , __reg("a1") int * asn1_bool ) = "\tjsr\t-13146(a6)";
#define X509V3_get_value_bool(value, asn1_bool) __X509V3_get_value_bool(AmiSSLBase, (value), (asn1_bool))

int __X509V3_get_value_int(__reg("a6") struct Library * , __reg("a0") const CONF_VALUE * value , __reg("a1") ASN1_INTEGER ** aint ) = "\tjsr\t-13152(a6)";
#define X509V3_get_value_int(value, aint) __X509V3_get_value_int(AmiSSLBase, (value), (aint))

void __X509V3_set_nconf(__reg("a6") struct Library * , __reg("a0") X509V3_CTX * ctx , __reg("a1") CONF * conf ) = "\tjsr\t-13158(a6)";
#define X509V3_set_nconf(ctx, conf) __X509V3_set_nconf(AmiSSLBase, (ctx), (conf))

void __X509V3_set_conf_lhash(__reg("a6") struct Library * , __reg("a0") X509V3_CTX * ctx , __reg("a1") LHASH_OF(CONF_VALUE) * lhash ) = "\tjsr\t-13164(a6)";
#define X509V3_set_conf_lhash(ctx, lhash) __X509V3_set_conf_lhash(AmiSSLBase, (ctx), (lhash))

char * __X509V3_get_string(__reg("a6") struct Library * , __reg("a0") X509V3_CTX * ctx , __reg("a1") const char * name , __reg("a2") const char * section ) = "\tjsr\t-13170(a6)";
#define X509V3_get_string(ctx, name, section) __X509V3_get_string(AmiSSLBase, (ctx), (name), (section))

STACK_OF(CONF_VALUE) * __X509V3_get_section(__reg("a6") struct Library * , __reg("a0") X509V3_CTX * ctx , __reg("a1") const char * section ) = "\tjsr\t-13176(a6)";
#define X509V3_get_section(ctx, section) __X509V3_get_section(AmiSSLBase, (ctx), (section))

void __X509V3_string_free(__reg("a6") struct Library * , __reg("a0") X509V3_CTX * ctx , __reg("a1") char * str ) = "\tjsr\t-13182(a6)";
#define X509V3_string_free(ctx, str) __X509V3_string_free(AmiSSLBase, (ctx), (str))

void __X509V3_section_free(__reg("a6") struct Library * , __reg("a0") X509V3_CTX * ctx , __reg("a1") STACK_OF(CONF_VALUE) * section ) = "\tjsr\t-13188(a6)";
#define X509V3_section_free(ctx, section) __X509V3_section_free(AmiSSLBase, (ctx), (section))

void __X509V3_set_ctx(__reg("a6") struct Library * , __reg("a0") X509V3_CTX * ctx , __reg("a1") X509 * issuer , __reg("a2") X509 * subject , __reg("a3") X509_REQ * req , __reg("d0") X509_CRL * crl , __reg("d1") int flags ) = "\tjsr\t-13194(a6)";
#define X509V3_set_ctx(ctx, issuer, subject, req, crl, flags) __X509V3_set_ctx(AmiSSLBase, (ctx), (issuer), (subject), (req), (crl), (flags))

int __X509V3_add_value(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("a1") const char * value , __reg("a2") STACK_OF(CONF_VALUE) ** extlist ) = "\tjsr\t-13200(a6)";
#define X509V3_add_value(name, value, extlist) __X509V3_add_value(AmiSSLBase, (name), (value), (extlist))

int __X509V3_add_value_uchar(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("a1") const unsigned char * value , __reg("a2") STACK_OF(CONF_VALUE) ** extlist ) = "\tjsr\t-13206(a6)";
#define X509V3_add_value_uchar(name, value, extlist) __X509V3_add_value_uchar(AmiSSLBase, (name), (value), (extlist))

int __X509V3_add_value_bool(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("d0") int asn1_bool , __reg("a1") STACK_OF(CONF_VALUE) ** extlist ) = "\tjsr\t-13212(a6)";
#define X509V3_add_value_bool(name, asn1_bool, extlist) __X509V3_add_value_bool(AmiSSLBase, (name), (asn1_bool), (extlist))

int __X509V3_add_value_int(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("a1") const ASN1_INTEGER * aint , __reg("a2") STACK_OF(CONF_VALUE) ** extlist ) = "\tjsr\t-13218(a6)";
#define X509V3_add_value_int(name, aint, extlist) __X509V3_add_value_int(AmiSSLBase, (name), (aint), (extlist))

char * __i2s_ASN1_INTEGER(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * meth , __reg("a1") const ASN1_INTEGER * aint ) = "\tjsr\t-13224(a6)";
#define i2s_ASN1_INTEGER(meth, aint) __i2s_ASN1_INTEGER(AmiSSLBase, (meth), (aint))

ASN1_INTEGER * __s2i_ASN1_INTEGER(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * meth , __reg("a1") const char * value ) = "\tjsr\t-13230(a6)";
#define s2i_ASN1_INTEGER(meth, value) __s2i_ASN1_INTEGER(AmiSSLBase, (meth), (value))

char * __i2s_ASN1_ENUMERATED(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * meth , __reg("a1") const ASN1_ENUMERATED * aint ) = "\tjsr\t-13236(a6)";
#define i2s_ASN1_ENUMERATED(meth, aint) __i2s_ASN1_ENUMERATED(AmiSSLBase, (meth), (aint))

char * __i2s_ASN1_ENUMERATED_TABLE(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * meth , __reg("a1") const ASN1_ENUMERATED * aint ) = "\tjsr\t-13242(a6)";
#define i2s_ASN1_ENUMERATED_TABLE(meth, aint) __i2s_ASN1_ENUMERATED_TABLE(AmiSSLBase, (meth), (aint))

int __X509V3_EXT_add(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * ext ) = "\tjsr\t-13248(a6)";
#define X509V3_EXT_add(ext) __X509V3_EXT_add(AmiSSLBase, (ext))

int __X509V3_EXT_add_list(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * extlist ) = "\tjsr\t-13254(a6)";
#define X509V3_EXT_add_list(extlist) __X509V3_EXT_add_list(AmiSSLBase, (extlist))

int __X509V3_EXT_add_alias(__reg("a6") struct Library * , __reg("d0") int nid_to , __reg("d1") int nid_from ) = "\tjsr\t-13260(a6)";
#define X509V3_EXT_add_alias(nid_to, nid_from) __X509V3_EXT_add_alias(AmiSSLBase, (nid_to), (nid_from))

void __X509V3_EXT_cleanup(__reg("a6") struct Library * ) = "\tjsr\t-13266(a6)";
#define X509V3_EXT_cleanup() __X509V3_EXT_cleanup(AmiSSLBase)

const X509V3_EXT_METHOD * __X509V3_EXT_get(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION * ext ) = "\tjsr\t-13272(a6)";
#define X509V3_EXT_get(ext) __X509V3_EXT_get(AmiSSLBase, (ext))

const X509V3_EXT_METHOD * __X509V3_EXT_get_nid(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-13278(a6)";
#define X509V3_EXT_get_nid(nid) __X509V3_EXT_get_nid(AmiSSLBase, (nid))

int __X509V3_add_standard_extensions(__reg("a6") struct Library * ) = "\tjsr\t-13284(a6)";
#define X509V3_add_standard_extensions() __X509V3_add_standard_extensions(AmiSSLBase)

STACK_OF(CONF_VALUE) * __X509V3_parse_list(__reg("a6") struct Library * , __reg("a0") const char * line ) = "\tjsr\t-13290(a6)";
#define X509V3_parse_list(line) __X509V3_parse_list(AmiSSLBase, (line))

void * __X509V3_EXT_d2i(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION * ext ) = "\tjsr\t-13296(a6)";
#define X509V3_EXT_d2i(ext) __X509V3_EXT_d2i(AmiSSLBase, (ext))

void * __X509V3_get_d2i(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_EXTENSION) * x , __reg("d0") int nid , __reg("a1") int * crit , __reg("a2") int * idx ) = "\tjsr\t-13302(a6)";
#define X509V3_get_d2i(x, nid, crit, idx) __X509V3_get_d2i(AmiSSLBase, (x), (nid), (crit), (idx))

X509_EXTENSION * __X509V3_EXT_i2d(__reg("a6") struct Library * , __reg("d0") int ext_nid , __reg("d1") int crit , __reg("a0") void * ext_struc ) = "\tjsr\t-13308(a6)";
#define X509V3_EXT_i2d(ext_nid, crit, ext_struc) __X509V3_EXT_i2d(AmiSSLBase, (ext_nid), (crit), (ext_struc))

int __X509V3_add1_i2d(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_EXTENSION) ** x , __reg("d0") int nid , __reg("a1") void * value , __reg("d1") int crit , __reg("d2") unsigned long flags ) = "\tjsr\t-13314(a6)";
#define X509V3_add1_i2d(x, nid, value, crit, flags) __X509V3_add1_i2d(AmiSSLBase, (x), (nid), (value), (crit), (flags))

char * __OPENSSL_buf2hexstr(__reg("a6") struct Library * , __reg("a0") const unsigned char * buffer , __reg("d0") long len ) = "\tjsr\t-13320(a6)";
#define OPENSSL_buf2hexstr(buffer, len) __OPENSSL_buf2hexstr(AmiSSLBase, (buffer), (len))

unsigned char * __OPENSSL_hexstr2buf(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("a1") long * len ) = "\tjsr\t-13326(a6)";
#define OPENSSL_hexstr2buf(str, len) __OPENSSL_hexstr2buf(AmiSSLBase, (str), (len))

void __X509V3_EXT_val_prn(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") STACK_OF(CONF_VALUE) * val , __reg("d0") int indent , __reg("d1") int ml ) = "\tjsr\t-13332(a6)";
#define X509V3_EXT_val_prn(out, val, indent, ml) __X509V3_EXT_val_prn(AmiSSLBase, (out), (val), (indent), (ml))

int __X509V3_EXT_print(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") X509_EXTENSION * ext , __reg("d0") unsigned long flag , __reg("d1") int indent ) = "\tjsr\t-13338(a6)";
#define X509V3_EXT_print(out, ext, flag, indent) __X509V3_EXT_print(AmiSSLBase, (out), (ext), (flag), (indent))

int __X509V3_extensions_print(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const char * title , __reg("a2") const STACK_OF(X509_EXTENSION) * exts , __reg("d0") unsigned long flag , __reg("d1") int indent ) = "\tjsr\t-13344(a6)";
#define X509V3_extensions_print(out, title, exts, flag, indent) __X509V3_extensions_print(AmiSSLBase, (out), (title), (exts), (flag), (indent))

int __X509_check_purpose(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("d0") int id , __reg("d1") int ca ) = "\tjsr\t-13350(a6)";
#define X509_check_purpose(x, id, ca) __X509_check_purpose(AmiSSLBase, (x), (id), (ca))

int __X509_supported_extension(__reg("a6") struct Library * , __reg("a0") X509_EXTENSION * ex ) = "\tjsr\t-13356(a6)";
#define X509_supported_extension(ex) __X509_supported_extension(AmiSSLBase, (ex))

int __X509_PURPOSE_set(__reg("a6") struct Library * , __reg("a0") int * p , __reg("d0") int purpose ) = "\tjsr\t-13362(a6)";
#define X509_PURPOSE_set(p, purpose) __X509_PURPOSE_set(AmiSSLBase, (p), (purpose))

int __X509_check_issued(__reg("a6") struct Library * , __reg("a0") X509 * issuer , __reg("a1") X509 * subject ) = "\tjsr\t-13368(a6)";
#define X509_check_issued(issuer, subject) __X509_check_issued(AmiSSLBase, (issuer), (subject))

int __X509_PURPOSE_get_count(__reg("a6") struct Library * ) = "\tjsr\t-13374(a6)";
#define X509_PURPOSE_get_count() __X509_PURPOSE_get_count(AmiSSLBase)

X509_PURPOSE * __X509_PURPOSE_get0(__reg("a6") struct Library * , __reg("d0") int idx ) = "\tjsr\t-13380(a6)";
#define X509_PURPOSE_get0(idx) __X509_PURPOSE_get0(AmiSSLBase, (idx))

int __X509_PURPOSE_get_by_sname(__reg("a6") struct Library * , __reg("a0") const char * sname ) = "\tjsr\t-13386(a6)";
#define X509_PURPOSE_get_by_sname(sname) __X509_PURPOSE_get_by_sname(AmiSSLBase, (sname))

int __X509_PURPOSE_get_by_id(__reg("a6") struct Library * , __reg("d0") int id ) = "\tjsr\t-13392(a6)";
#define X509_PURPOSE_get_by_id(id) __X509_PURPOSE_get_by_id(AmiSSLBase, (id))

int __X509_PURPOSE_add(__reg("a6") struct Library * , __reg("d0") int id , __reg("d1") int trust , __reg("d2") int flags , __reg("a0") int (*ck)(const X509_PURPOSE *,const X509 *,int) , __reg("a1") const char * name , __reg("a2") const char * sname , __reg("a3") void * arg ) = "\tjsr\t-13398(a6)";
#define X509_PURPOSE_add(id, trust, flags, ck, name, sname, arg) __X509_PURPOSE_add(AmiSSLBase, (id), (trust), (flags), (ck), (name), (sname), (arg))

char * __X509_PURPOSE_get0_name(__reg("a6") struct Library * , __reg("a0") const X509_PURPOSE * xp ) = "\tjsr\t-13404(a6)";
#define X509_PURPOSE_get0_name(xp) __X509_PURPOSE_get0_name(AmiSSLBase, (xp))

char * __X509_PURPOSE_get0_sname(__reg("a6") struct Library * , __reg("a0") const X509_PURPOSE * xp ) = "\tjsr\t-13410(a6)";
#define X509_PURPOSE_get0_sname(xp) __X509_PURPOSE_get0_sname(AmiSSLBase, (xp))

int __X509_PURPOSE_get_trust(__reg("a6") struct Library * , __reg("a0") const X509_PURPOSE * xp ) = "\tjsr\t-13416(a6)";
#define X509_PURPOSE_get_trust(xp) __X509_PURPOSE_get_trust(AmiSSLBase, (xp))

void __X509_PURPOSE_cleanup(__reg("a6") struct Library * ) = "\tjsr\t-13422(a6)";
#define X509_PURPOSE_cleanup() __X509_PURPOSE_cleanup(AmiSSLBase)

int __X509_PURPOSE_get_id(__reg("a6") struct Library * , __reg("a0") const X509_PURPOSE * a ) = "\tjsr\t-13428(a6)";
#define X509_PURPOSE_get_id(a) __X509_PURPOSE_get_id(AmiSSLBase, (a))

STACK_OF(OPENSSL_STRING) * __X509_get1_email(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-13434(a6)";
#define X509_get1_email(x) __X509_get1_email(AmiSSLBase, (x))

STACK_OF(OPENSSL_STRING) * __X509_REQ_get1_email(__reg("a6") struct Library * , __reg("a0") X509_REQ * x ) = "\tjsr\t-13440(a6)";
#define X509_REQ_get1_email(x) __X509_REQ_get1_email(AmiSSLBase, (x))

void __X509_email_free(__reg("a6") struct Library * , __reg("a0") STACK_OF(OPENSSL_STRING) * sk ) = "\tjsr\t-13446(a6)";
#define X509_email_free(sk) __X509_email_free(AmiSSLBase, (sk))

int __ERR_load_X509V3_strings(__reg("a6") struct Library * ) = "\tjsr\t-13452(a6)";
#define ERR_load_X509V3_strings() __ERR_load_X509V3_strings(AmiSSLBase)

const char * __AES_options(__reg("a6") struct Library * ) = "\tjsr\t-13458(a6)";
#define AES_options() __AES_options(AmiSSLBase)

int __AES_set_encrypt_key(__reg("a6") struct Library * , __reg("a0") const unsigned char * userKey , __reg("d0") const int bits , __reg("a1") AES_KEY * key ) = "\tjsr\t-13464(a6)";
#define AES_set_encrypt_key(userKey, bits, key) __AES_set_encrypt_key(AmiSSLBase, (userKey), (bits), (key))

int __AES_set_decrypt_key(__reg("a6") struct Library * , __reg("a0") const unsigned char * userKey , __reg("d0") const int bits , __reg("a1") AES_KEY * key ) = "\tjsr\t-13470(a6)";
#define AES_set_decrypt_key(userKey, bits, key) __AES_set_decrypt_key(AmiSSLBase, (userKey), (bits), (key))

void __AES_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") const AES_KEY * key ) = "\tjsr\t-13476(a6)";
#define AES_encrypt(in, out, key) __AES_encrypt(AmiSSLBase, (in), (out), (key))

void __AES_decrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") const AES_KEY * key ) = "\tjsr\t-13482(a6)";
#define AES_decrypt(in, out, key) __AES_decrypt(AmiSSLBase, (in), (out), (key))

void __AES_ecb_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") const AES_KEY * key , __reg("d0") const int enc ) = "\tjsr\t-13488(a6)";
#define AES_ecb_encrypt(in, out, key, enc) __AES_ecb_encrypt(AmiSSLBase, (in), (out), (key), (enc))

void __AES_cbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const AES_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") const int enc ) = "\tjsr\t-13494(a6)";
#define AES_cbc_encrypt(in, out, length, key, ivec, enc) __AES_cbc_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (enc))

void __AES_cfb128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const AES_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") const int enc ) = "\tjsr\t-13500(a6)";
#define AES_cfb128_encrypt(in, out, length, key, ivec, num, enc) __AES_cfb128_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (num), (enc))

void __AES_cfb1_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const AES_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") const int enc ) = "\tjsr\t-13506(a6)";
#define AES_cfb1_encrypt(in, out, length, key, ivec, num, enc) __AES_cfb1_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (num), (enc))

void __AES_cfb8_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const AES_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") const int enc ) = "\tjsr\t-13512(a6)";
#define AES_cfb8_encrypt(in, out, length, key, ivec, num, enc) __AES_cfb8_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (num), (enc))

void __AES_ofb128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const AES_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num ) = "\tjsr\t-13524(a6)";
#define AES_ofb128_encrypt(in, out, length, key, ivec, num) __AES_ofb128_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (num))

void __BF_set_key(__reg("a6") struct Library * , __reg("a0") BF_KEY * key , __reg("d0") int len , __reg("a1") const unsigned char * data ) = "\tjsr\t-13536(a6)";
#define BF_set_key(key, len, data) __BF_set_key(AmiSSLBase, (key), (len), (data))

void __BF_encrypt(__reg("a6") struct Library * , __reg("a0") BF_LONG * data , __reg("a1") const BF_KEY * key ) = "\tjsr\t-13542(a6)";
#define BF_encrypt(data, key) __BF_encrypt(AmiSSLBase, (data), (key))

void __BF_decrypt(__reg("a6") struct Library * , __reg("a0") BF_LONG * data , __reg("a1") const BF_KEY * key ) = "\tjsr\t-13548(a6)";
#define BF_decrypt(data, key) __BF_decrypt(AmiSSLBase, (data), (key))

void __BF_ecb_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") const BF_KEY * key , __reg("d0") int enc ) = "\tjsr\t-13554(a6)";
#define BF_ecb_encrypt(in, out, key, enc) __BF_ecb_encrypt(AmiSSLBase, (in), (out), (key), (enc))

void __BF_cbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") const BF_KEY * schedule , __reg("a3") unsigned char * ivec , __reg("d1") int enc ) = "\tjsr\t-13560(a6)";
#define BF_cbc_encrypt(in, out, length, schedule, ivec, enc) __BF_cbc_encrypt(AmiSSLBase, (in), (out), (length), (schedule), (ivec), (enc))

void __BF_cfb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") const BF_KEY * schedule , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") int enc ) = "\tjsr\t-13566(a6)";
#define BF_cfb64_encrypt(in, out, length, schedule, ivec, num, enc) __BF_cfb64_encrypt(AmiSSLBase, (in), (out), (length), (schedule), (ivec), (num), (enc))

void __BF_ofb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") const BF_KEY * schedule , __reg("a3") unsigned char * ivec , __reg("d1") int * num ) = "\tjsr\t-13572(a6)";
#define BF_ofb64_encrypt(in, out, length, schedule, ivec, num) __BF_ofb64_encrypt(AmiSSLBase, (in), (out), (length), (schedule), (ivec), (num))

const char * __BF_options(__reg("a6") struct Library * ) = "\tjsr\t-13578(a6)";
#define BF_options() __BF_options(AmiSSLBase)

void __CAST_set_key(__reg("a6") struct Library * , __reg("a0") CAST_KEY * key , __reg("d0") int len , __reg("a1") const unsigned char * data ) = "\tjsr\t-13584(a6)";
#define CAST_set_key(key, len, data) __CAST_set_key(AmiSSLBase, (key), (len), (data))

void __CAST_ecb_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") const CAST_KEY * key , __reg("d0") int enc ) = "\tjsr\t-13590(a6)";
#define CAST_ecb_encrypt(in, out, key, enc) __CAST_ecb_encrypt(AmiSSLBase, (in), (out), (key), (enc))

void __CAST_encrypt(__reg("a6") struct Library * , __reg("a0") CAST_LONG * data , __reg("a1") const CAST_KEY * key ) = "\tjsr\t-13596(a6)";
#define CAST_encrypt(data, key) __CAST_encrypt(AmiSSLBase, (data), (key))

void __CAST_decrypt(__reg("a6") struct Library * , __reg("a0") CAST_LONG * data , __reg("a1") const CAST_KEY * key ) = "\tjsr\t-13602(a6)";
#define CAST_decrypt(data, key) __CAST_decrypt(AmiSSLBase, (data), (key))

void __CAST_cbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") const CAST_KEY * ks , __reg("a3") unsigned char * iv , __reg("d1") int enc ) = "\tjsr\t-13608(a6)";
#define CAST_cbc_encrypt(in, out, length, ks, iv, enc) __CAST_cbc_encrypt(AmiSSLBase, (in), (out), (length), (ks), (iv), (enc))

void __CAST_cfb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") const CAST_KEY * schedule , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") int enc ) = "\tjsr\t-13614(a6)";
#define CAST_cfb64_encrypt(in, out, length, schedule, ivec, num, enc) __CAST_cfb64_encrypt(AmiSSLBase, (in), (out), (length), (schedule), (ivec), (num), (enc))

void __CAST_ofb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") const CAST_KEY * schedule , __reg("a3") unsigned char * ivec , __reg("d1") int * num ) = "\tjsr\t-13620(a6)";
#define CAST_ofb64_encrypt(in, out, length, schedule, ivec, num) __CAST_ofb64_encrypt(AmiSSLBase, (in), (out), (length), (schedule), (ivec), (num))

const char * __DES_options(__reg("a6") struct Library * ) = "\tjsr\t-13632(a6)";
#define DES_options() __DES_options(AmiSSLBase)

void __DES_ecb3_encrypt(__reg("a6") struct Library * , __reg("a0") const_DES_cblock * input , __reg("a1") DES_cblock * output , __reg("a2") DES_key_schedule * ks1 , __reg("a3") DES_key_schedule * ks2 , __reg("d0") DES_key_schedule * ks3 , __reg("d1") int enc ) = "\tjsr\t-13638(a6)";
#define DES_ecb3_encrypt(input, output, ks1, ks2, ks3, enc) __DES_ecb3_encrypt(AmiSSLBase, (input), (output), (ks1), (ks2), (ks3), (enc))

DES_LONG __DES_cbc_cksum(__reg("a6") struct Library * , __reg("a0") const unsigned char * input , __reg("a1") DES_cblock * output , __reg("d0") long length , __reg("a2") DES_key_schedule * schedule , __reg("a3") const_DES_cblock * ivec ) = "\tjsr\t-13644(a6)";
#define DES_cbc_cksum(input, output, length, schedule, ivec) __DES_cbc_cksum(AmiSSLBase, (input), (output), (length), (schedule), (ivec))

void __DES_cbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * input , __reg("a1") unsigned char * output , __reg("d0") long length , __reg("a2") DES_key_schedule * schedule , __reg("a3") DES_cblock * ivec , __reg("d1") int enc ) = "\tjsr\t-13650(a6)";
#define DES_cbc_encrypt(input, output, length, schedule, ivec, enc) __DES_cbc_encrypt(AmiSSLBase, (input), (output), (length), (schedule), (ivec), (enc))

void __DES_ncbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * input , __reg("a1") unsigned char * output , __reg("d0") long length , __reg("a2") DES_key_schedule * schedule , __reg("a3") DES_cblock * ivec , __reg("d1") int enc ) = "\tjsr\t-13656(a6)";
#define DES_ncbc_encrypt(input, output, length, schedule, ivec, enc) __DES_ncbc_encrypt(AmiSSLBase, (input), (output), (length), (schedule), (ivec), (enc))

void __DES_xcbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * input , __reg("a1") unsigned char * output , __reg("d0") long length , __reg("a2") DES_key_schedule * schedule , __reg("a3") DES_cblock * ivec , __reg("d1") const_DES_cblock * inw , __reg("d2") const_DES_cblock * outw , __reg("d3") int enc ) = "\tjsr\t-13662(a6)";
#define DES_xcbc_encrypt(input, output, length, schedule, ivec, inw, outw, enc) __DES_xcbc_encrypt(AmiSSLBase, (input), (output), (length), (schedule), (ivec), (inw), (outw), (enc))

void __DES_cfb_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") int numbits , __reg("d1") long length , __reg("a2") DES_key_schedule * schedule , __reg("a3") DES_cblock * ivec , __reg("d2") int enc ) = "\tjsr\t-13668(a6)";
#define DES_cfb_encrypt(in, out, numbits, length, schedule, ivec, enc) __DES_cfb_encrypt(AmiSSLBase, (in), (out), (numbits), (length), (schedule), (ivec), (enc))

void __DES_ecb_encrypt(__reg("a6") struct Library * , __reg("a0") const_DES_cblock * input , __reg("a1") DES_cblock * output , __reg("a2") DES_key_schedule * ks , __reg("d0") int enc ) = "\tjsr\t-13674(a6)";
#define DES_ecb_encrypt(input, output, ks, enc) __DES_ecb_encrypt(AmiSSLBase, (input), (output), (ks), (enc))

void __DES_encrypt1(__reg("a6") struct Library * , __reg("a0") DES_LONG * data , __reg("a1") DES_key_schedule * ks , __reg("d0") int enc ) = "\tjsr\t-13680(a6)";
#define DES_encrypt1(data, ks, enc) __DES_encrypt1(AmiSSLBase, (data), (ks), (enc))

void __DES_encrypt2(__reg("a6") struct Library * , __reg("a0") DES_LONG * data , __reg("a1") DES_key_schedule * ks , __reg("d0") int enc ) = "\tjsr\t-13686(a6)";
#define DES_encrypt2(data, ks, enc) __DES_encrypt2(AmiSSLBase, (data), (ks), (enc))

void __DES_encrypt3(__reg("a6") struct Library * , __reg("a0") DES_LONG * data , __reg("a1") DES_key_schedule * ks1 , __reg("a2") DES_key_schedule * ks2 , __reg("a3") DES_key_schedule * ks3 ) = "\tjsr\t-13692(a6)";
#define DES_encrypt3(data, ks1, ks2, ks3) __DES_encrypt3(AmiSSLBase, (data), (ks1), (ks2), (ks3))

void __DES_decrypt3(__reg("a6") struct Library * , __reg("a0") DES_LONG * data , __reg("a1") DES_key_schedule * ks1 , __reg("a2") DES_key_schedule * ks2 , __reg("a3") DES_key_schedule * ks3 ) = "\tjsr\t-13698(a6)";
#define DES_decrypt3(data, ks1, ks2, ks3) __DES_decrypt3(AmiSSLBase, (data), (ks1), (ks2), (ks3))

void __DES_ede3_cbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * input , __reg("a1") unsigned char * output , __reg("d0") long length , __reg("a2") DES_key_schedule * ks1 , __reg("a3") DES_key_schedule * ks2 , __reg("d1") DES_key_schedule * ks3 , __reg("d2") DES_cblock * ivec , __reg("d3") int enc ) = "\tjsr\t-13704(a6)";
#define DES_ede3_cbc_encrypt(input, output, length, ks1, ks2, ks3, ivec, enc) __DES_ede3_cbc_encrypt(AmiSSLBase, (input), (output), (length), (ks1), (ks2), (ks3), (ivec), (enc))

void __DES_ede3_cfb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") DES_key_schedule * ks1 , __reg("a3") DES_key_schedule * ks2 , __reg("d1") DES_key_schedule * ks3 , __reg("d2") DES_cblock * ivec , __reg("d3") int * num , __reg("d4") int enc ) = "\tjsr\t-13716(a6)";
#define DES_ede3_cfb64_encrypt(in, out, length, ks1, ks2, ks3, ivec, num, enc) __DES_ede3_cfb64_encrypt(AmiSSLBase, (in), (out), (length), (ks1), (ks2), (ks3), (ivec), (num), (enc))

void __DES_ede3_cfb_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") int numbits , __reg("d1") long length , __reg("a2") DES_key_schedule * ks1 , __reg("a3") DES_key_schedule * ks2 , __reg("d2") DES_key_schedule * ks3 , __reg("d3") DES_cblock * ivec , __reg("d4") int enc ) = "\tjsr\t-13722(a6)";
#define DES_ede3_cfb_encrypt(in, out, numbits, length, ks1, ks2, ks3, ivec, enc) __DES_ede3_cfb_encrypt(AmiSSLBase, (in), (out), (numbits), (length), (ks1), (ks2), (ks3), (ivec), (enc))

void __DES_ede3_ofb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") DES_key_schedule * ks1 , __reg("a3") DES_key_schedule * ks2 , __reg("d1") DES_key_schedule * ks3 , __reg("d2") DES_cblock * ivec , __reg("d3") int * num ) = "\tjsr\t-13728(a6)";
#define DES_ede3_ofb64_encrypt(in, out, length, ks1, ks2, ks3, ivec, num) __DES_ede3_ofb64_encrypt(AmiSSLBase, (in), (out), (length), (ks1), (ks2), (ks3), (ivec), (num))

char * __DES_fcrypt(__reg("a6") struct Library * , __reg("a0") const char * buf , __reg("a1") const char * salt , __reg("a2") char * ret ) = "\tjsr\t-13740(a6)";
#define DES_fcrypt(buf, salt, ret) __DES_fcrypt(AmiSSLBase, (buf), (salt), (ret))

char * __DES_crypt(__reg("a6") struct Library * , __reg("a0") const char * buf , __reg("a1") const char * salt ) = "\tjsr\t-13746(a6)";
#define DES_crypt(buf, salt) __DES_crypt(AmiSSLBase, (buf), (salt))

void __DES_ofb_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") int numbits , __reg("d1") long length , __reg("a2") DES_key_schedule * schedule , __reg("a3") DES_cblock * ivec ) = "\tjsr\t-13752(a6)";
#define DES_ofb_encrypt(in, out, numbits, length, schedule, ivec) __DES_ofb_encrypt(AmiSSLBase, (in), (out), (numbits), (length), (schedule), (ivec))

void __DES_pcbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * input , __reg("a1") unsigned char * output , __reg("d0") long length , __reg("a2") DES_key_schedule * schedule , __reg("a3") DES_cblock * ivec , __reg("d1") int enc ) = "\tjsr\t-13758(a6)";
#define DES_pcbc_encrypt(input, output, length, schedule, ivec, enc) __DES_pcbc_encrypt(AmiSSLBase, (input), (output), (length), (schedule), (ivec), (enc))

DES_LONG __DES_quad_cksum(__reg("a6") struct Library * , __reg("a0") const unsigned char * input , __reg("a1") DES_cblock * output , __reg("d0") long length , __reg("d1") int out_count , __reg("a2") DES_cblock * seed ) = "\tjsr\t-13764(a6)";
#define DES_quad_cksum(input, output, length, out_count, seed) __DES_quad_cksum(AmiSSLBase, (input), (output), (length), (out_count), (seed))

int __DES_random_key(__reg("a6") struct Library * , __reg("a0") DES_cblock * ret ) = "\tjsr\t-13770(a6)";
#define DES_random_key(ret) __DES_random_key(AmiSSLBase, (ret))

void __DES_set_odd_parity(__reg("a6") struct Library * , __reg("a0") DES_cblock * key ) = "\tjsr\t-13776(a6)";
#define DES_set_odd_parity(key) __DES_set_odd_parity(AmiSSLBase, (key))

int __DES_check_key_parity(__reg("a6") struct Library * , __reg("a0") const_DES_cblock * key ) = "\tjsr\t-13782(a6)";
#define DES_check_key_parity(key) __DES_check_key_parity(AmiSSLBase, (key))

int __DES_is_weak_key(__reg("a6") struct Library * , __reg("a0") const_DES_cblock * key ) = "\tjsr\t-13788(a6)";
#define DES_is_weak_key(key) __DES_is_weak_key(AmiSSLBase, (key))

int __DES_set_key(__reg("a6") struct Library * , __reg("a0") const_DES_cblock * key , __reg("a1") DES_key_schedule * schedule ) = "\tjsr\t-13794(a6)";
#define DES_set_key(key, schedule) __DES_set_key(AmiSSLBase, (key), (schedule))

int __DES_key_sched(__reg("a6") struct Library * , __reg("a0") const_DES_cblock * key , __reg("a1") DES_key_schedule * schedule ) = "\tjsr\t-13800(a6)";
#define DES_key_sched(key, schedule) __DES_key_sched(AmiSSLBase, (key), (schedule))

int __DES_set_key_checked(__reg("a6") struct Library * , __reg("a0") const_DES_cblock * key , __reg("a1") DES_key_schedule * schedule ) = "\tjsr\t-13806(a6)";
#define DES_set_key_checked(key, schedule) __DES_set_key_checked(AmiSSLBase, (key), (schedule))

void __DES_set_key_unchecked(__reg("a6") struct Library * , __reg("a0") const_DES_cblock * key , __reg("a1") DES_key_schedule * schedule ) = "\tjsr\t-13812(a6)";
#define DES_set_key_unchecked(key, schedule) __DES_set_key_unchecked(AmiSSLBase, (key), (schedule))

void __DES_string_to_key(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("a1") DES_cblock * key ) = "\tjsr\t-13818(a6)";
#define DES_string_to_key(str, key) __DES_string_to_key(AmiSSLBase, (str), (key))

void __DES_string_to_2keys(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("a1") DES_cblock * key1 , __reg("a2") DES_cblock * key2 ) = "\tjsr\t-13824(a6)";
#define DES_string_to_2keys(str, key1, key2) __DES_string_to_2keys(AmiSSLBase, (str), (key1), (key2))

void __DES_cfb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") DES_key_schedule * schedule , __reg("a3") DES_cblock * ivec , __reg("d1") int * num , __reg("d2") int enc ) = "\tjsr\t-13830(a6)";
#define DES_cfb64_encrypt(in, out, length, schedule, ivec, num, enc) __DES_cfb64_encrypt(AmiSSLBase, (in), (out), (length), (schedule), (ivec), (num), (enc))

void __DES_ofb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") DES_key_schedule * schedule , __reg("a3") DES_cblock * ivec , __reg("d1") int * num ) = "\tjsr\t-13836(a6)";
#define DES_ofb64_encrypt(in, out, length, schedule, ivec, num) __DES_ofb64_encrypt(AmiSSLBase, (in), (out), (length), (schedule), (ivec), (num))

const DH_METHOD * __DH_OpenSSL(__reg("a6") struct Library * ) = "\tjsr\t-14064(a6)";
#define DH_OpenSSL() __DH_OpenSSL(AmiSSLBase)

void __DH_set_default_method(__reg("a6") struct Library * , __reg("a0") const DH_METHOD * meth ) = "\tjsr\t-14070(a6)";
#define DH_set_default_method(meth) __DH_set_default_method(AmiSSLBase, (meth))

const DH_METHOD * __DH_get_default_method(__reg("a6") struct Library * ) = "\tjsr\t-14076(a6)";
#define DH_get_default_method() __DH_get_default_method(AmiSSLBase)

int __DH_set_method(__reg("a6") struct Library * , __reg("a0") DH * dh , __reg("a1") const DH_METHOD * meth ) = "\tjsr\t-14082(a6)";
#define DH_set_method(dh, meth) __DH_set_method(AmiSSLBase, (dh), (meth))

DH * __DH_new_method(__reg("a6") struct Library * , __reg("a0") ENGINE * engine ) = "\tjsr\t-14088(a6)";
#define DH_new_method(engine) __DH_new_method(AmiSSLBase, (engine))

DH * __DH_new(__reg("a6") struct Library * ) = "\tjsr\t-14094(a6)";
#define DH_new() __DH_new(AmiSSLBase)

void __DH_free(__reg("a6") struct Library * , __reg("a0") DH * dh ) = "\tjsr\t-14100(a6)";
#define DH_free(dh) __DH_free(AmiSSLBase, (dh))

int __DH_up_ref(__reg("a6") struct Library * , __reg("a0") DH * dh ) = "\tjsr\t-14106(a6)";
#define DH_up_ref(dh) __DH_up_ref(AmiSSLBase, (dh))

int __DH_size(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-14112(a6)";
#define DH_size(dh) __DH_size(AmiSSLBase, (dh))

int __OBSOLETE_DH_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dup_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-14118(a6)";
#define OBSOLETE_DH_get_ex_new_index(argl, argp, new_func, dup_func, free_func) __OBSOLETE_DH_get_ex_new_index(AmiSSLBase, (argl), (argp), (new_func), (dup_func), (free_func))

int __DH_set_ex_data(__reg("a6") struct Library * , __reg("a0") DH * d , __reg("d0") int idx , __reg("a1") void * arg ) = "\tjsr\t-14124(a6)";
#define DH_set_ex_data(d, idx, arg) __DH_set_ex_data(AmiSSLBase, (d), (idx), (arg))

void * __DH_get_ex_data(__reg("a6") struct Library * , __reg("a0") const DH * d , __reg("d0") int idx ) = "\tjsr\t-14130(a6)";
#define DH_get_ex_data(d, idx) __DH_get_ex_data(AmiSSLBase, (d), (idx))

DH * __DH_generate_parameters(__reg("a6") struct Library * , __reg("d0") int prime_len , __reg("d1") int generator , __reg("a0") void (*callback)(int,int,void *) , __reg("a1") void * cb_arg ) = "\tjsr\t-14136(a6)";
#define DH_generate_parameters(prime_len, generator, callback, cb_arg) __DH_generate_parameters(AmiSSLBase, (prime_len), (generator), (callback), (cb_arg))

int __DH_check(__reg("a6") struct Library * , __reg("a0") const DH * dh , __reg("a1") int * codes ) = "\tjsr\t-14142(a6)";
#define DH_check(dh, codes) __DH_check(AmiSSLBase, (dh), (codes))

int __DH_generate_key(__reg("a6") struct Library * , __reg("a0") DH * dh ) = "\tjsr\t-14148(a6)";
#define DH_generate_key(dh) __DH_generate_key(AmiSSLBase, (dh))

int __DH_compute_key(__reg("a6") struct Library * , __reg("a0") unsigned char * key , __reg("a1") const BIGNUM * pub_key , __reg("a2") DH * dh ) = "\tjsr\t-14154(a6)";
#define DH_compute_key(key, pub_key, dh) __DH_compute_key(AmiSSLBase, (key), (pub_key), (dh))

DH * __d2i_DHparams(__reg("a6") struct Library * , __reg("a0") DH ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-14160(a6)";
#define d2i_DHparams(a, pp, length) __d2i_DHparams(AmiSSLBase, (a), (pp), (length))

int __i2d_DHparams(__reg("a6") struct Library * , __reg("a0") const DH * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-14166(a6)";
#define i2d_DHparams(a, pp) __i2d_DHparams(AmiSSLBase, (a), (pp))

int __DHparams_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const DH * x ) = "\tjsr\t-14172(a6)";
#define DHparams_print(bp, x) __DHparams_print(AmiSSLBase, (bp), (x))

int __ERR_load_DH_strings(__reg("a6") struct Library * ) = "\tjsr\t-14178(a6)";
#define ERR_load_DH_strings() __ERR_load_DH_strings(AmiSSLBase)

DSA_SIG * __DSA_SIG_new(__reg("a6") struct Library * ) = "\tjsr\t-14184(a6)";
#define DSA_SIG_new() __DSA_SIG_new(AmiSSLBase)

void __DSA_SIG_free(__reg("a6") struct Library * , __reg("a0") DSA_SIG * a ) = "\tjsr\t-14190(a6)";
#define DSA_SIG_free(a) __DSA_SIG_free(AmiSSLBase, (a))

int __i2d_DSA_SIG(__reg("a6") struct Library * , __reg("a0") const DSA_SIG * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-14196(a6)";
#define i2d_DSA_SIG(a, pp) __i2d_DSA_SIG(AmiSSLBase, (a), (pp))

DSA_SIG * __d2i_DSA_SIG(__reg("a6") struct Library * , __reg("a0") DSA_SIG ** v , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-14202(a6)";
#define d2i_DSA_SIG(v, pp, length) __d2i_DSA_SIG(AmiSSLBase, (v), (pp), (length))

DSA_SIG * __DSA_do_sign(__reg("a6") struct Library * , __reg("a0") const unsigned char * dgst , __reg("d0") int dlen , __reg("a1") DSA * dsa ) = "\tjsr\t-14208(a6)";
#define DSA_do_sign(dgst, dlen, dsa) __DSA_do_sign(AmiSSLBase, (dgst), (dlen), (dsa))

int __DSA_do_verify(__reg("a6") struct Library * , __reg("a0") const unsigned char * dgst , __reg("d0") int dgst_len , __reg("a1") DSA_SIG * sig , __reg("a2") DSA * dsa ) = "\tjsr\t-14214(a6)";
#define DSA_do_verify(dgst, dgst_len, sig, dsa) __DSA_do_verify(AmiSSLBase, (dgst), (dgst_len), (sig), (dsa))

const DSA_METHOD * __DSA_OpenSSL(__reg("a6") struct Library * ) = "\tjsr\t-14220(a6)";
#define DSA_OpenSSL() __DSA_OpenSSL(AmiSSLBase)

void __DSA_set_default_method(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * a ) = "\tjsr\t-14226(a6)";
#define DSA_set_default_method(a) __DSA_set_default_method(AmiSSLBase, (a))

const DSA_METHOD * __DSA_get_default_method(__reg("a6") struct Library * ) = "\tjsr\t-14232(a6)";
#define DSA_get_default_method() __DSA_get_default_method(AmiSSLBase)

int __DSA_set_method(__reg("a6") struct Library * , __reg("a0") DSA * dsa , __reg("a1") const DSA_METHOD * a ) = "\tjsr\t-14238(a6)";
#define DSA_set_method(dsa, a) __DSA_set_method(AmiSSLBase, (dsa), (a))

DSA * __DSA_new(__reg("a6") struct Library * ) = "\tjsr\t-14244(a6)";
#define DSA_new() __DSA_new(AmiSSLBase)

DSA * __DSA_new_method(__reg("a6") struct Library * , __reg("a0") ENGINE * engine ) = "\tjsr\t-14250(a6)";
#define DSA_new_method(engine) __DSA_new_method(AmiSSLBase, (engine))

void __DSA_free(__reg("a6") struct Library * , __reg("a0") DSA * r ) = "\tjsr\t-14256(a6)";
#define DSA_free(r) __DSA_free(AmiSSLBase, (r))

int __DSA_up_ref(__reg("a6") struct Library * , __reg("a0") DSA * r ) = "\tjsr\t-14262(a6)";
#define DSA_up_ref(r) __DSA_up_ref(AmiSSLBase, (r))

int __DSA_size(__reg("a6") struct Library * , __reg("a0") const DSA * a ) = "\tjsr\t-14268(a6)";
#define DSA_size(a) __DSA_size(AmiSSLBase, (a))

int __DSA_sign_setup(__reg("a6") struct Library * , __reg("a0") DSA * dsa , __reg("a1") BN_CTX * ctx_in , __reg("a2") BIGNUM ** kinvp , __reg("a3") BIGNUM ** rp ) = "\tjsr\t-14274(a6)";
#define DSA_sign_setup(dsa, ctx_in, kinvp, rp) __DSA_sign_setup(AmiSSLBase, (dsa), (ctx_in), (kinvp), (rp))

int __DSA_sign(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") const unsigned char * dgst , __reg("d1") int dlen , __reg("a1") unsigned char * sig , __reg("a2") unsigned int * siglen , __reg("a3") DSA * dsa ) = "\tjsr\t-14280(a6)";
#define DSA_sign(type, dgst, dlen, sig, siglen, dsa) __DSA_sign(AmiSSLBase, (type), (dgst), (dlen), (sig), (siglen), (dsa))

int __DSA_verify(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") const unsigned char * dgst , __reg("d1") int dgst_len , __reg("a1") const unsigned char * sigbuf , __reg("d2") int siglen , __reg("a2") DSA * dsa ) = "\tjsr\t-14286(a6)";
#define DSA_verify(type, dgst, dgst_len, sigbuf, siglen, dsa) __DSA_verify(AmiSSLBase, (type), (dgst), (dgst_len), (sigbuf), (siglen), (dsa))

int __OBSOLETE_DSA_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dup_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-14292(a6)";
#define OBSOLETE_DSA_get_ex_new_index(argl, argp, new_func, dup_func, free_func) __OBSOLETE_DSA_get_ex_new_index(AmiSSLBase, (argl), (argp), (new_func), (dup_func), (free_func))

int __DSA_set_ex_data(__reg("a6") struct Library * , __reg("a0") DSA * d , __reg("d0") int idx , __reg("a1") void * arg ) = "\tjsr\t-14298(a6)";
#define DSA_set_ex_data(d, idx, arg) __DSA_set_ex_data(AmiSSLBase, (d), (idx), (arg))

void * __DSA_get_ex_data(__reg("a6") struct Library * , __reg("a0") const DSA * d , __reg("d0") int idx ) = "\tjsr\t-14304(a6)";
#define DSA_get_ex_data(d, idx) __DSA_get_ex_data(AmiSSLBase, (d), (idx))

DSA * __d2i_DSAPublicKey(__reg("a6") struct Library * , __reg("a0") DSA ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-14310(a6)";
#define d2i_DSAPublicKey(a, pp, length) __d2i_DSAPublicKey(AmiSSLBase, (a), (pp), (length))

DSA * __d2i_DSAPrivateKey(__reg("a6") struct Library * , __reg("a0") DSA ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-14316(a6)";
#define d2i_DSAPrivateKey(a, pp, length) __d2i_DSAPrivateKey(AmiSSLBase, (a), (pp), (length))

DSA * __d2i_DSAparams(__reg("a6") struct Library * , __reg("a0") DSA ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-14322(a6)";
#define d2i_DSAparams(a, pp, length) __d2i_DSAparams(AmiSSLBase, (a), (pp), (length))

DSA * __DSA_generate_parameters(__reg("a6") struct Library * , __reg("d0") int bits , __reg("a0") unsigned char * seed , __reg("d1") int seed_len , __reg("a1") int * counter_ret , __reg("a2") unsigned long * h_ret , __reg("a3") void (*callback)(int,int,void *) , __reg("d2") void * cb_arg ) = "\tjsr\t-14328(a6)";
#define DSA_generate_parameters(bits, seed, seed_len, counter_ret, h_ret, callback, cb_arg) __DSA_generate_parameters(AmiSSLBase, (bits), (seed), (seed_len), (counter_ret), (h_ret), (callback), (cb_arg))

int __DSA_generate_key(__reg("a6") struct Library * , __reg("a0") DSA * a ) = "\tjsr\t-14334(a6)";
#define DSA_generate_key(a) __DSA_generate_key(AmiSSLBase, (a))

int __i2d_DSAPublicKey(__reg("a6") struct Library * , __reg("a0") const DSA * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-14340(a6)";
#define i2d_DSAPublicKey(a, pp) __i2d_DSAPublicKey(AmiSSLBase, (a), (pp))

int __i2d_DSAPrivateKey(__reg("a6") struct Library * , __reg("a0") const DSA * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-14346(a6)";
#define i2d_DSAPrivateKey(a, pp) __i2d_DSAPrivateKey(AmiSSLBase, (a), (pp))

int __i2d_DSAparams(__reg("a6") struct Library * , __reg("a0") const DSA * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-14352(a6)";
#define i2d_DSAparams(a, pp) __i2d_DSAparams(AmiSSLBase, (a), (pp))

int __DSAparams_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const DSA * x ) = "\tjsr\t-14358(a6)";
#define DSAparams_print(bp, x) __DSAparams_print(AmiSSLBase, (bp), (x))

int __DSA_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const DSA * x , __reg("d0") int off ) = "\tjsr\t-14364(a6)";
#define DSA_print(bp, x, off) __DSA_print(AmiSSLBase, (bp), (x), (off))

DH * __DSA_dup_DH(__reg("a6") struct Library * , __reg("a0") const DSA * r ) = "\tjsr\t-14370(a6)";
#define DSA_dup_DH(r) __DSA_dup_DH(AmiSSLBase, (r))

int __ERR_load_DSA_strings(__reg("a6") struct Library * ) = "\tjsr\t-14376(a6)";
#define ERR_load_DSA_strings() __ERR_load_DSA_strings(AmiSSLBase)

const char * __IDEA_options(__reg("a6") struct Library * ) = "\tjsr\t-14382(a6)";
#define IDEA_options() __IDEA_options(AmiSSLBase)

void __IDEA_ecb_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") IDEA_KEY_SCHEDULE * ks ) = "\tjsr\t-14388(a6)";
#define IDEA_ecb_encrypt(in, out, ks) __IDEA_ecb_encrypt(AmiSSLBase, (in), (out), (ks))

void __IDEA_set_encrypt_key(__reg("a6") struct Library * , __reg("a0") const unsigned char * key , __reg("a1") IDEA_KEY_SCHEDULE * ks ) = "\tjsr\t-14394(a6)";
#define IDEA_set_encrypt_key(key, ks) __IDEA_set_encrypt_key(AmiSSLBase, (key), (ks))

void __IDEA_set_decrypt_key(__reg("a6") struct Library * , __reg("a0") IDEA_KEY_SCHEDULE * ek , __reg("a1") IDEA_KEY_SCHEDULE * dk ) = "\tjsr\t-14400(a6)";
#define IDEA_set_decrypt_key(ek, dk) __IDEA_set_decrypt_key(AmiSSLBase, (ek), (dk))

void __IDEA_cbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") IDEA_KEY_SCHEDULE * ks , __reg("a3") unsigned char * iv , __reg("d1") int enc ) = "\tjsr\t-14406(a6)";
#define IDEA_cbc_encrypt(in, out, length, ks, iv, enc) __IDEA_cbc_encrypt(AmiSSLBase, (in), (out), (length), (ks), (iv), (enc))

void __IDEA_cfb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") IDEA_KEY_SCHEDULE * ks , __reg("a3") unsigned char * iv , __reg("d1") int * num , __reg("d2") int enc ) = "\tjsr\t-14412(a6)";
#define IDEA_cfb64_encrypt(in, out, length, ks, iv, num, enc) __IDEA_cfb64_encrypt(AmiSSLBase, (in), (out), (length), (ks), (iv), (num), (enc))

void __IDEA_ofb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") IDEA_KEY_SCHEDULE * ks , __reg("a3") unsigned char * iv , __reg("d1") int * num ) = "\tjsr\t-14418(a6)";
#define IDEA_ofb64_encrypt(in, out, length, ks, iv, num) __IDEA_ofb64_encrypt(AmiSSLBase, (in), (out), (length), (ks), (iv), (num))

void __IDEA_encrypt(__reg("a6") struct Library * , __reg("a0") unsigned long * in , __reg("a1") IDEA_KEY_SCHEDULE * ks ) = "\tjsr\t-14424(a6)";
#define IDEA_encrypt(in, ks) __IDEA_encrypt(AmiSSLBase, (in), (ks))

const char * __MD2_options(__reg("a6") struct Library * ) = "\tjsr\t-14430(a6)";
#define MD2_options() __MD2_options(AmiSSLBase)

int __MD2_Init(__reg("a6") struct Library * , __reg("a0") MD2_CTX * c ) = "\tjsr\t-14436(a6)";
#define MD2_Init(c) __MD2_Init(AmiSSLBase, (c))

int __MD2_Update(__reg("a6") struct Library * , __reg("a0") MD2_CTX * c , __reg("a1") const unsigned char * data , __reg("d0") size_t len ) = "\tjsr\t-14442(a6)";
#define MD2_Update(c, data, len) __MD2_Update(AmiSSLBase, (c), (data), (len))

int __MD2_Final(__reg("a6") struct Library * , __reg("a0") unsigned char * md , __reg("a1") MD2_CTX * c ) = "\tjsr\t-14448(a6)";
#define MD2_Final(md, c) __MD2_Final(AmiSSLBase, (md), (c))

unsigned char * __MD2(__reg("a6") struct Library * , __reg("a0") const unsigned char * d , __reg("d0") size_t n , __reg("a1") unsigned char * md ) = "\tjsr\t-14454(a6)";
#define MD2(d, n, md) __MD2(AmiSSLBase, (d), (n), (md))

int __MD4_Init(__reg("a6") struct Library * , __reg("a0") MD4_CTX * c ) = "\tjsr\t-14460(a6)";
#define MD4_Init(c) __MD4_Init(AmiSSLBase, (c))

int __MD4_Update(__reg("a6") struct Library * , __reg("a0") MD4_CTX * c , __reg("a1") const void * data , __reg("d0") size_t len ) = "\tjsr\t-14466(a6)";
#define MD4_Update(c, data, len) __MD4_Update(AmiSSLBase, (c), (data), (len))

int __MD4_Final(__reg("a6") struct Library * , __reg("a0") unsigned char * md , __reg("a1") MD4_CTX * c ) = "\tjsr\t-14472(a6)";
#define MD4_Final(md, c) __MD4_Final(AmiSSLBase, (md), (c))

unsigned char * __MD4(__reg("a6") struct Library * , __reg("a0") const unsigned char * d , __reg("d0") size_t n , __reg("a1") unsigned char * md ) = "\tjsr\t-14478(a6)";
#define MD4(d, n, md) __MD4(AmiSSLBase, (d), (n), (md))

void __MD4_Transform(__reg("a6") struct Library * , __reg("a0") MD4_CTX * c , __reg("a1") const unsigned char * b ) = "\tjsr\t-14484(a6)";
#define MD4_Transform(c, b) __MD4_Transform(AmiSSLBase, (c), (b))

int __MD5_Init(__reg("a6") struct Library * , __reg("a0") MD5_CTX * c ) = "\tjsr\t-14490(a6)";
#define MD5_Init(c) __MD5_Init(AmiSSLBase, (c))

int __MD5_Update(__reg("a6") struct Library * , __reg("a0") MD5_CTX * c , __reg("a1") const void * data , __reg("d0") size_t len ) = "\tjsr\t-14496(a6)";
#define MD5_Update(c, data, len) __MD5_Update(AmiSSLBase, (c), (data), (len))

int __MD5_Final(__reg("a6") struct Library * , __reg("a0") unsigned char * md , __reg("a1") MD5_CTX * c ) = "\tjsr\t-14502(a6)";
#define MD5_Final(md, c) __MD5_Final(AmiSSLBase, (md), (c))

unsigned char * __MD5(__reg("a6") struct Library * , __reg("a0") const unsigned char * d , __reg("d0") size_t n , __reg("a1") unsigned char * md ) = "\tjsr\t-14508(a6)";
#define MD5(d, n, md) __MD5(AmiSSLBase, (d), (n), (md))

void __MD5_Transform(__reg("a6") struct Library * , __reg("a0") MD5_CTX * c , __reg("a1") const unsigned char * b ) = "\tjsr\t-14514(a6)";
#define MD5_Transform(c, b) __MD5_Transform(AmiSSLBase, (c), (b))

int __MDC2_Init(__reg("a6") struct Library * , __reg("a0") MDC2_CTX * c ) = "\tjsr\t-14520(a6)";
#define MDC2_Init(c) __MDC2_Init(AmiSSLBase, (c))

int __MDC2_Update(__reg("a6") struct Library * , __reg("a0") MDC2_CTX * c , __reg("a1") const unsigned char * data , __reg("d0") size_t len ) = "\tjsr\t-14526(a6)";
#define MDC2_Update(c, data, len) __MDC2_Update(AmiSSLBase, (c), (data), (len))

int __MDC2_Final(__reg("a6") struct Library * , __reg("a0") unsigned char * md , __reg("a1") MDC2_CTX * c ) = "\tjsr\t-14532(a6)";
#define MDC2_Final(md, c) __MDC2_Final(AmiSSLBase, (md), (c))

unsigned char * __MDC2(__reg("a6") struct Library * , __reg("a0") const unsigned char * d , __reg("d0") size_t n , __reg("a1") unsigned char * md ) = "\tjsr\t-14538(a6)";
#define MDC2(d, n, md) __MDC2(AmiSSLBase, (d), (n), (md))

void __RC2_set_key(__reg("a6") struct Library * , __reg("a0") RC2_KEY * key , __reg("d0") int len , __reg("a1") const unsigned char * data , __reg("d1") int bits ) = "\tjsr\t-14544(a6)";
#define RC2_set_key(key, len, data, bits) __RC2_set_key(AmiSSLBase, (key), (len), (data), (bits))

void __RC2_ecb_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") RC2_KEY * key , __reg("d0") int enc ) = "\tjsr\t-14550(a6)";
#define RC2_ecb_encrypt(in, out, key, enc) __RC2_ecb_encrypt(AmiSSLBase, (in), (out), (key), (enc))

void __RC2_encrypt(__reg("a6") struct Library * , __reg("a0") unsigned long * data , __reg("a1") RC2_KEY * key ) = "\tjsr\t-14556(a6)";
#define RC2_encrypt(data, key) __RC2_encrypt(AmiSSLBase, (data), (key))

void __RC2_decrypt(__reg("a6") struct Library * , __reg("a0") unsigned long * data , __reg("a1") RC2_KEY * key ) = "\tjsr\t-14562(a6)";
#define RC2_decrypt(data, key) __RC2_decrypt(AmiSSLBase, (data), (key))

void __RC2_cbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") RC2_KEY * ks , __reg("a3") unsigned char * iv , __reg("d1") int enc ) = "\tjsr\t-14568(a6)";
#define RC2_cbc_encrypt(in, out, length, ks, iv, enc) __RC2_cbc_encrypt(AmiSSLBase, (in), (out), (length), (ks), (iv), (enc))

void __RC2_cfb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") RC2_KEY * schedule , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") int enc ) = "\tjsr\t-14574(a6)";
#define RC2_cfb64_encrypt(in, out, length, schedule, ivec, num, enc) __RC2_cfb64_encrypt(AmiSSLBase, (in), (out), (length), (schedule), (ivec), (num), (enc))

void __RC2_ofb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") RC2_KEY * schedule , __reg("a3") unsigned char * ivec , __reg("d1") int * num ) = "\tjsr\t-14580(a6)";
#define RC2_ofb64_encrypt(in, out, length, schedule, ivec, num) __RC2_ofb64_encrypt(AmiSSLBase, (in), (out), (length), (schedule), (ivec), (num))

const char * __RC4_options(__reg("a6") struct Library * ) = "\tjsr\t-14586(a6)";
#define RC4_options() __RC4_options(AmiSSLBase)

void __RC4_set_key(__reg("a6") struct Library * , __reg("a0") RC4_KEY * key , __reg("d0") int len , __reg("a1") const unsigned char * data ) = "\tjsr\t-14592(a6)";
#define RC4_set_key(key, len, data) __RC4_set_key(AmiSSLBase, (key), (len), (data))

void __RC4(__reg("a6") struct Library * , __reg("a0") RC4_KEY * key , __reg("d0") size_t len , __reg("a1") const unsigned char * indata , __reg("a2") unsigned char * outdata ) = "\tjsr\t-14598(a6)";
#define RC4(key, len, indata, outdata) __RC4(AmiSSLBase, (key), (len), (indata), (outdata))

int __RC5_32_set_key(__reg("a6") struct Library * , __reg("a0") RC5_32_KEY * key , __reg("d0") int len , __reg("a1") const unsigned char * data , __reg("d1") int rounds ) = "\tjsr\t-14604(a6)";
#define RC5_32_set_key(key, len, data, rounds) __RC5_32_set_key(AmiSSLBase, (key), (len), (data), (rounds))

void __RC5_32_ecb_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") RC5_32_KEY * key , __reg("d0") int enc ) = "\tjsr\t-14610(a6)";
#define RC5_32_ecb_encrypt(in, out, key, enc) __RC5_32_ecb_encrypt(AmiSSLBase, (in), (out), (key), (enc))

void __RC5_32_encrypt(__reg("a6") struct Library * , __reg("a0") unsigned long * data , __reg("a1") RC5_32_KEY * key ) = "\tjsr\t-14616(a6)";
#define RC5_32_encrypt(data, key) __RC5_32_encrypt(AmiSSLBase, (data), (key))

void __RC5_32_decrypt(__reg("a6") struct Library * , __reg("a0") unsigned long * data , __reg("a1") RC5_32_KEY * key ) = "\tjsr\t-14622(a6)";
#define RC5_32_decrypt(data, key) __RC5_32_decrypt(AmiSSLBase, (data), (key))

void __RC5_32_cbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") RC5_32_KEY * ks , __reg("a3") unsigned char * iv , __reg("d1") int enc ) = "\tjsr\t-14628(a6)";
#define RC5_32_cbc_encrypt(in, out, length, ks, iv, enc) __RC5_32_cbc_encrypt(AmiSSLBase, (in), (out), (length), (ks), (iv), (enc))

void __RC5_32_cfb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") RC5_32_KEY * schedule , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") int enc ) = "\tjsr\t-14634(a6)";
#define RC5_32_cfb64_encrypt(in, out, length, schedule, ivec, num, enc) __RC5_32_cfb64_encrypt(AmiSSLBase, (in), (out), (length), (schedule), (ivec), (num), (enc))

void __RC5_32_ofb64_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") long length , __reg("a2") RC5_32_KEY * schedule , __reg("a3") unsigned char * ivec , __reg("d1") int * num ) = "\tjsr\t-14640(a6)";
#define RC5_32_ofb64_encrypt(in, out, length, schedule, ivec, num) __RC5_32_ofb64_encrypt(AmiSSLBase, (in), (out), (length), (schedule), (ivec), (num))

int __RIPEMD160_Init(__reg("a6") struct Library * , __reg("a0") RIPEMD160_CTX * c ) = "\tjsr\t-14646(a6)";
#define RIPEMD160_Init(c) __RIPEMD160_Init(AmiSSLBase, (c))

int __RIPEMD160_Update(__reg("a6") struct Library * , __reg("a0") RIPEMD160_CTX * c , __reg("a1") const void * data , __reg("d0") size_t len ) = "\tjsr\t-14652(a6)";
#define RIPEMD160_Update(c, data, len) __RIPEMD160_Update(AmiSSLBase, (c), (data), (len))

int __RIPEMD160_Final(__reg("a6") struct Library * , __reg("a0") unsigned char * md , __reg("a1") RIPEMD160_CTX * c ) = "\tjsr\t-14658(a6)";
#define RIPEMD160_Final(md, c) __RIPEMD160_Final(AmiSSLBase, (md), (c))

unsigned char * __RIPEMD160(__reg("a6") struct Library * , __reg("a0") const unsigned char * d , __reg("d0") size_t n , __reg("a1") unsigned char * md ) = "\tjsr\t-14664(a6)";
#define RIPEMD160(d, n, md) __RIPEMD160(AmiSSLBase, (d), (n), (md))

void __RIPEMD160_Transform(__reg("a6") struct Library * , __reg("a0") RIPEMD160_CTX * c , __reg("a1") const unsigned char * b ) = "\tjsr\t-14670(a6)";
#define RIPEMD160_Transform(c, b) __RIPEMD160_Transform(AmiSSLBase, (c), (b))

RSA * __RSA_new(__reg("a6") struct Library * ) = "\tjsr\t-14676(a6)";
#define RSA_new() __RSA_new(AmiSSLBase)

RSA * __RSA_new_method(__reg("a6") struct Library * , __reg("a0") ENGINE * engine ) = "\tjsr\t-14682(a6)";
#define RSA_new_method(engine) __RSA_new_method(AmiSSLBase, (engine))

int __RSA_size(__reg("a6") struct Library * , __reg("a0") const RSA * a ) = "\tjsr\t-14688(a6)";
#define RSA_size(a) __RSA_size(AmiSSLBase, (a))

RSA * __RSA_generate_key(__reg("a6") struct Library * , __reg("d0") int bits , __reg("d1") unsigned long e , __reg("a0") void (*callback)(int,int,void *) , __reg("a1") void * cb_arg ) = "\tjsr\t-14694(a6)";
#define RSA_generate_key(bits, e, callback, cb_arg) __RSA_generate_key(AmiSSLBase, (bits), (e), (callback), (cb_arg))

int __RSA_check_key(__reg("a6") struct Library * , __reg("a0") const RSA * a ) = "\tjsr\t-14700(a6)";
#define RSA_check_key(a) __RSA_check_key(AmiSSLBase, (a))

int __RSA_public_encrypt(__reg("a6") struct Library * , __reg("d0") int flen , __reg("a0") const unsigned char * from , __reg("a1") unsigned char * to , __reg("a2") RSA * rsa , __reg("d1") int padding ) = "\tjsr\t-14706(a6)";
#define RSA_public_encrypt(flen, from, to, rsa, padding) __RSA_public_encrypt(AmiSSLBase, (flen), (from), (to), (rsa), (padding))

int __RSA_private_encrypt(__reg("a6") struct Library * , __reg("d0") int flen , __reg("a0") const unsigned char * from , __reg("a1") unsigned char * to , __reg("a2") RSA * rsa , __reg("d1") int padding ) = "\tjsr\t-14712(a6)";
#define RSA_private_encrypt(flen, from, to, rsa, padding) __RSA_private_encrypt(AmiSSLBase, (flen), (from), (to), (rsa), (padding))

int __RSA_public_decrypt(__reg("a6") struct Library * , __reg("d0") int flen , __reg("a0") const unsigned char * from , __reg("a1") unsigned char * to , __reg("a2") RSA * rsa , __reg("d1") int padding ) = "\tjsr\t-14718(a6)";
#define RSA_public_decrypt(flen, from, to, rsa, padding) __RSA_public_decrypt(AmiSSLBase, (flen), (from), (to), (rsa), (padding))

int __RSA_private_decrypt(__reg("a6") struct Library * , __reg("d0") int flen , __reg("a0") const unsigned char * from , __reg("a1") unsigned char * to , __reg("a2") RSA * rsa , __reg("d1") int padding ) = "\tjsr\t-14724(a6)";
#define RSA_private_decrypt(flen, from, to, rsa, padding) __RSA_private_decrypt(AmiSSLBase, (flen), (from), (to), (rsa), (padding))

void __RSA_free(__reg("a6") struct Library * , __reg("a0") RSA * r ) = "\tjsr\t-14730(a6)";
#define RSA_free(r) __RSA_free(AmiSSLBase, (r))

int __RSA_up_ref(__reg("a6") struct Library * , __reg("a0") RSA * r ) = "\tjsr\t-14736(a6)";
#define RSA_up_ref(r) __RSA_up_ref(AmiSSLBase, (r))

int __RSA_flags(__reg("a6") struct Library * , __reg("a0") const RSA * r ) = "\tjsr\t-14742(a6)";
#define RSA_flags(r) __RSA_flags(AmiSSLBase, (r))

void __RSA_set_default_method(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) = "\tjsr\t-14748(a6)";
#define RSA_set_default_method(meth) __RSA_set_default_method(AmiSSLBase, (meth))

const RSA_METHOD * __RSA_get_default_method(__reg("a6") struct Library * ) = "\tjsr\t-14754(a6)";
#define RSA_get_default_method() __RSA_get_default_method(AmiSSLBase)

const RSA_METHOD * __RSA_get_method(__reg("a6") struct Library * , __reg("a0") const RSA * rsa ) = "\tjsr\t-14760(a6)";
#define RSA_get_method(rsa) __RSA_get_method(AmiSSLBase, (rsa))

int __RSA_set_method(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("a1") const RSA_METHOD * meth ) = "\tjsr\t-14766(a6)";
#define RSA_set_method(rsa, meth) __RSA_set_method(AmiSSLBase, (rsa), (meth))

const RSA_METHOD * __RSA_null_method(__reg("a6") struct Library * ) = "\tjsr\t-14778(a6)";
#define RSA_null_method() __RSA_null_method(AmiSSLBase)

RSA * __d2i_RSAPublicKey(__reg("a6") struct Library * , __reg("a0") RSA ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-14784(a6)";
#define d2i_RSAPublicKey(a, in, len) __d2i_RSAPublicKey(AmiSSLBase, (a), (in), (len))

int __i2d_RSAPublicKey(__reg("a6") struct Library * , __reg("a0") const RSA * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-14790(a6)";
#define i2d_RSAPublicKey(a, out) __i2d_RSAPublicKey(AmiSSLBase, (a), (out))

const ASN1_ITEM * __RSAPublicKey_it(__reg("a6") struct Library * ) = "\tjsr\t-14796(a6)";
#define RSAPublicKey_it() __RSAPublicKey_it(AmiSSLBase)

RSA * __d2i_RSAPrivateKey(__reg("a6") struct Library * , __reg("a0") RSA ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-14802(a6)";
#define d2i_RSAPrivateKey(a, in, len) __d2i_RSAPrivateKey(AmiSSLBase, (a), (in), (len))

int __i2d_RSAPrivateKey(__reg("a6") struct Library * , __reg("a0") const RSA * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-14808(a6)";
#define i2d_RSAPrivateKey(a, out) __i2d_RSAPrivateKey(AmiSSLBase, (a), (out))

const ASN1_ITEM * __RSAPrivateKey_it(__reg("a6") struct Library * ) = "\tjsr\t-14814(a6)";
#define RSAPrivateKey_it() __RSAPrivateKey_it(AmiSSLBase)

int __RSA_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const RSA * r , __reg("d0") int offset ) = "\tjsr\t-14820(a6)";
#define RSA_print(bp, r, offset) __RSA_print(AmiSSLBase, (bp), (r), (offset))

int __RSA_sign(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") const unsigned char * m , __reg("d1") unsigned int m_length , __reg("a1") unsigned char * sigret , __reg("a2") unsigned int * siglen , __reg("a3") RSA * rsa ) = "\tjsr\t-14850(a6)";
#define RSA_sign(type, m, m_length, sigret, siglen, rsa) __RSA_sign(AmiSSLBase, (type), (m), (m_length), (sigret), (siglen), (rsa))

int __RSA_verify(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") const unsigned char * m , __reg("d1") unsigned int m_length , __reg("a1") const unsigned char * sigbuf , __reg("d2") unsigned int siglen , __reg("a2") RSA * rsa ) = "\tjsr\t-14856(a6)";
#define RSA_verify(type, m, m_length, sigbuf, siglen, rsa) __RSA_verify(AmiSSLBase, (type), (m), (m_length), (sigbuf), (siglen), (rsa))

int __RSA_sign_ASN1_OCTET_STRING(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") const unsigned char * m , __reg("d1") unsigned int m_length , __reg("a1") unsigned char * sigret , __reg("a2") unsigned int * siglen , __reg("a3") RSA * rsa ) = "\tjsr\t-14862(a6)";
#define RSA_sign_ASN1_OCTET_STRING(type, m, m_length, sigret, siglen, rsa) __RSA_sign_ASN1_OCTET_STRING(AmiSSLBase, (type), (m), (m_length), (sigret), (siglen), (rsa))

int __RSA_verify_ASN1_OCTET_STRING(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") const unsigned char * m , __reg("d1") unsigned int m_length , __reg("a1") unsigned char * sigbuf , __reg("d2") unsigned int siglen , __reg("a2") RSA * rsa ) = "\tjsr\t-14868(a6)";
#define RSA_verify_ASN1_OCTET_STRING(type, m, m_length, sigbuf, siglen, rsa) __RSA_verify_ASN1_OCTET_STRING(AmiSSLBase, (type), (m), (m_length), (sigbuf), (siglen), (rsa))

int __RSA_blinding_on(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("a1") BN_CTX * ctx ) = "\tjsr\t-14874(a6)";
#define RSA_blinding_on(rsa, ctx) __RSA_blinding_on(AmiSSLBase, (rsa), (ctx))

void __RSA_blinding_off(__reg("a6") struct Library * , __reg("a0") RSA * rsa ) = "\tjsr\t-14880(a6)";
#define RSA_blinding_off(rsa) __RSA_blinding_off(AmiSSLBase, (rsa))

int __RSA_padding_add_PKCS1_type_1(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * f , __reg("d1") int fl ) = "\tjsr\t-14886(a6)";
#define RSA_padding_add_PKCS1_type_1(to, tlen, f, fl) __RSA_padding_add_PKCS1_type_1(AmiSSLBase, (to), (tlen), (f), (fl))

int __RSA_padding_check_PKCS1_type_1(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * f , __reg("d1") int fl , __reg("d2") int rsa_len ) = "\tjsr\t-14892(a6)";
#define RSA_padding_check_PKCS1_type_1(to, tlen, f, fl, rsa_len) __RSA_padding_check_PKCS1_type_1(AmiSSLBase, (to), (tlen), (f), (fl), (rsa_len))

int __RSA_padding_add_PKCS1_type_2(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * f , __reg("d1") int fl ) = "\tjsr\t-14898(a6)";
#define RSA_padding_add_PKCS1_type_2(to, tlen, f, fl) __RSA_padding_add_PKCS1_type_2(AmiSSLBase, (to), (tlen), (f), (fl))

int __RSA_padding_check_PKCS1_type_2(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * f , __reg("d1") int fl , __reg("d2") int rsa_len ) = "\tjsr\t-14904(a6)";
#define RSA_padding_check_PKCS1_type_2(to, tlen, f, fl, rsa_len) __RSA_padding_check_PKCS1_type_2(AmiSSLBase, (to), (tlen), (f), (fl), (rsa_len))

int __RSA_padding_add_PKCS1_OAEP(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * f , __reg("d1") int fl , __reg("a2") const unsigned char * p , __reg("d2") int pl ) = "\tjsr\t-14910(a6)";
#define RSA_padding_add_PKCS1_OAEP(to, tlen, f, fl, p, pl) __RSA_padding_add_PKCS1_OAEP(AmiSSLBase, (to), (tlen), (f), (fl), (p), (pl))

int __RSA_padding_check_PKCS1_OAEP(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * f , __reg("d1") int fl , __reg("d2") int rsa_len , __reg("a2") const unsigned char * p , __reg("d3") int pl ) = "\tjsr\t-14916(a6)";
#define RSA_padding_check_PKCS1_OAEP(to, tlen, f, fl, rsa_len, p, pl) __RSA_padding_check_PKCS1_OAEP(AmiSSLBase, (to), (tlen), (f), (fl), (rsa_len), (p), (pl))

int __RSA_padding_add_none(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * f , __reg("d1") int fl ) = "\tjsr\t-14934(a6)";
#define RSA_padding_add_none(to, tlen, f, fl) __RSA_padding_add_none(AmiSSLBase, (to), (tlen), (f), (fl))

int __RSA_padding_check_none(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * f , __reg("d1") int fl , __reg("d2") int rsa_len ) = "\tjsr\t-14940(a6)";
#define RSA_padding_check_none(to, tlen, f, fl, rsa_len) __RSA_padding_check_none(AmiSSLBase, (to), (tlen), (f), (fl), (rsa_len))

int __OBSOLETE_RSA_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dup_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-14946(a6)";
#define OBSOLETE_RSA_get_ex_new_index(argl, argp, new_func, dup_func, free_func) __OBSOLETE_RSA_get_ex_new_index(AmiSSLBase, (argl), (argp), (new_func), (dup_func), (free_func))

int __RSA_set_ex_data(__reg("a6") struct Library * , __reg("a0") RSA * r , __reg("d0") int idx , __reg("a1") void * arg ) = "\tjsr\t-14952(a6)";
#define RSA_set_ex_data(r, idx, arg) __RSA_set_ex_data(AmiSSLBase, (r), (idx), (arg))

void * __RSA_get_ex_data(__reg("a6") struct Library * , __reg("a0") const RSA * r , __reg("d0") int idx ) = "\tjsr\t-14958(a6)";
#define RSA_get_ex_data(r, idx) __RSA_get_ex_data(AmiSSLBase, (r), (idx))

RSA * __RSAPublicKey_dup(__reg("a6") struct Library * , __reg("a0") const RSA * rsa ) = "\tjsr\t-14964(a6)";
#define RSAPublicKey_dup(rsa) __RSAPublicKey_dup(AmiSSLBase, (rsa))

RSA * __RSAPrivateKey_dup(__reg("a6") struct Library * , __reg("a0") const RSA * rsa ) = "\tjsr\t-14970(a6)";
#define RSAPrivateKey_dup(rsa) __RSAPrivateKey_dup(AmiSSLBase, (rsa))

int __ERR_load_RSA_strings(__reg("a6") struct Library * ) = "\tjsr\t-14976(a6)";
#define ERR_load_RSA_strings() __ERR_load_RSA_strings(AmiSSLBase)

int __SHA1_Init(__reg("a6") struct Library * , __reg("a0") SHA_CTX * c ) = "\tjsr\t-15012(a6)";
#define SHA1_Init(c) __SHA1_Init(AmiSSLBase, (c))

int __SHA1_Update(__reg("a6") struct Library * , __reg("a0") SHA_CTX * c , __reg("a1") const void * data , __reg("d0") size_t len ) = "\tjsr\t-15018(a6)";
#define SHA1_Update(c, data, len) __SHA1_Update(AmiSSLBase, (c), (data), (len))

int __SHA1_Final(__reg("a6") struct Library * , __reg("a0") unsigned char * md , __reg("a1") SHA_CTX * c ) = "\tjsr\t-15024(a6)";
#define SHA1_Final(md, c) __SHA1_Final(AmiSSLBase, (md), (c))

unsigned char * __SHA1(__reg("a6") struct Library * , __reg("a0") const unsigned char * d , __reg("d0") size_t n , __reg("a1") unsigned char * md ) = "\tjsr\t-15030(a6)";
#define SHA1(d, n, md) __SHA1(AmiSSLBase, (d), (n), (md))

void __SHA1_Transform(__reg("a6") struct Library * , __reg("a0") SHA_CTX * c , __reg("a1") const unsigned char * data ) = "\tjsr\t-15036(a6)";
#define SHA1_Transform(c, data) __SHA1_Transform(AmiSSLBase, (c), (data))

void __HMAC_CTX_set_flags(__reg("a6") struct Library * , __reg("a0") HMAC_CTX * ctx , __reg("d0") unsigned long flags ) = "\tjsr\t-15054(a6)";
#define HMAC_CTX_set_flags(ctx, flags) __HMAC_CTX_set_flags(AmiSSLBase, (ctx), (flags))

int __X509_check_ca(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-15060(a6)";
#define X509_check_ca(x) __X509_check_ca(AmiSSLBase, (x))

PROXY_POLICY * __PROXY_POLICY_new(__reg("a6") struct Library * ) = "\tjsr\t-15066(a6)";
#define PROXY_POLICY_new() __PROXY_POLICY_new(AmiSSLBase)

void __PROXY_POLICY_free(__reg("a6") struct Library * , __reg("a0") PROXY_POLICY * a ) = "\tjsr\t-15072(a6)";
#define PROXY_POLICY_free(a) __PROXY_POLICY_free(AmiSSLBase, (a))

PROXY_POLICY * __d2i_PROXY_POLICY(__reg("a6") struct Library * , __reg("a0") PROXY_POLICY ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-15078(a6)";
#define d2i_PROXY_POLICY(a, in, len) __d2i_PROXY_POLICY(AmiSSLBase, (a), (in), (len))

int __i2d_PROXY_POLICY(__reg("a6") struct Library * , __reg("a0") const PROXY_POLICY * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-15084(a6)";
#define i2d_PROXY_POLICY(a, out) __i2d_PROXY_POLICY(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PROXY_POLICY_it(__reg("a6") struct Library * ) = "\tjsr\t-15090(a6)";
#define PROXY_POLICY_it() __PROXY_POLICY_it(AmiSSLBase)

PROXY_CERT_INFO_EXTENSION * __PROXY_CERT_INFO_EXTENSION_new(__reg("a6") struct Library * ) = "\tjsr\t-15096(a6)";
#define PROXY_CERT_INFO_EXTENSION_new() __PROXY_CERT_INFO_EXTENSION_new(AmiSSLBase)

void __PROXY_CERT_INFO_EXTENSION_free(__reg("a6") struct Library * , __reg("a0") PROXY_CERT_INFO_EXTENSION * a ) = "\tjsr\t-15102(a6)";
#define PROXY_CERT_INFO_EXTENSION_free(a) __PROXY_CERT_INFO_EXTENSION_free(AmiSSLBase, (a))

PROXY_CERT_INFO_EXTENSION * __d2i_PROXY_CERT_INFO_EXTENSION(__reg("a6") struct Library * , __reg("a0") PROXY_CERT_INFO_EXTENSION ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-15108(a6)";
#define d2i_PROXY_CERT_INFO_EXTENSION(a, in, len) __d2i_PROXY_CERT_INFO_EXTENSION(AmiSSLBase, (a), (in), (len))

int __i2d_PROXY_CERT_INFO_EXTENSION(__reg("a6") struct Library * , __reg("a0") const PROXY_CERT_INFO_EXTENSION * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-15114(a6)";
#define i2d_PROXY_CERT_INFO_EXTENSION(a, out) __i2d_PROXY_CERT_INFO_EXTENSION(AmiSSLBase, (a), (out))

const ASN1_ITEM * __PROXY_CERT_INFO_EXTENSION_it(__reg("a6") struct Library * ) = "\tjsr\t-15120(a6)";
#define PROXY_CERT_INFO_EXTENSION_it() __PROXY_CERT_INFO_EXTENSION_it(AmiSSLBase)

int __BN_mod_exp_mont_consttime(__reg("a6") struct Library * , __reg("a0") BIGNUM * rr , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") const BIGNUM * m , __reg("d0") BN_CTX * ctx , __reg("d1") BN_MONT_CTX * in_mont ) = "\tjsr\t-15138(a6)";
#define BN_mod_exp_mont_consttime(rr, a, p, m, ctx, in_mont) __BN_mod_exp_mont_consttime(AmiSSLBase, (rr), (a), (p), (m), (ctx), (in_mont))

BN_MONT_CTX * __BN_MONT_CTX_set_locked(__reg("a6") struct Library * , __reg("a0") BN_MONT_CTX ** pmont , __reg("a1") CRYPTO_RWLOCK * lock , __reg("a2") const BIGNUM * mod , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-15144(a6)";
#define BN_MONT_CTX_set_locked(pmont, lock, mod, ctx) __BN_MONT_CTX_set_locked(AmiSSLBase, (pmont), (lock), (mod), (ctx))

int __PKCS1_MGF1(__reg("a6") struct Library * , __reg("a0") unsigned char * mask , __reg("d0") long len , __reg("a1") const unsigned char * seed , __reg("d1") long seedlen , __reg("a2") const EVP_MD * dgst ) = "\tjsr\t-15150(a6)";
#define PKCS1_MGF1(mask, len, seed, seedlen, dgst) __PKCS1_MGF1(AmiSSLBase, (mask), (len), (seed), (seedlen), (dgst))

int __RSA_padding_add_X931(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * from , __reg("d1") int flen ) = "\tjsr\t-15156(a6)";
#define RSA_padding_add_X931(to, tlen, from, flen) __RSA_padding_add_X931(AmiSSLBase, (to), (tlen), (from), (flen))

int __RSA_padding_check_X931(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * from , __reg("d1") int flen , __reg("d2") int num ) = "\tjsr\t-15162(a6)";
#define RSA_padding_check_X931(to, tlen, from, flen, num) __RSA_padding_check_X931(AmiSSLBase, (to), (tlen), (from), (flen), (num))

int __RSA_X931_hash_id(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-15168(a6)";
#define RSA_X931_hash_id(nid) __RSA_X931_hash_id(AmiSSLBase, (nid))

int __RSA_verify_PKCS1_PSS(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("a1") const unsigned char * mHash , __reg("a2") const EVP_MD * Hash , __reg("a3") const unsigned char * EM , __reg("d0") int sLen ) = "\tjsr\t-15174(a6)";
#define RSA_verify_PKCS1_PSS(rsa, mHash, Hash, EM, sLen) __RSA_verify_PKCS1_PSS(AmiSSLBase, (rsa), (mHash), (Hash), (EM), (sLen))

int __RSA_padding_add_PKCS1_PSS(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("a1") unsigned char * EM , __reg("a2") const unsigned char * mHash , __reg("a3") const EVP_MD * Hash , __reg("d0") int sLen ) = "\tjsr\t-15180(a6)";
#define RSA_padding_add_PKCS1_PSS(rsa, EM, mHash, Hash, sLen) __RSA_padding_add_PKCS1_PSS(AmiSSLBase, (rsa), (EM), (mHash), (Hash), (sLen))

const EVP_MD * __EVP_sha224(__reg("a6") struct Library * ) = "\tjsr\t-15186(a6)";
#define EVP_sha224() __EVP_sha224(AmiSSLBase)

const EVP_MD * __EVP_sha256(__reg("a6") struct Library * ) = "\tjsr\t-15192(a6)";
#define EVP_sha256() __EVP_sha256(AmiSSLBase)

const EVP_MD * __EVP_sha384(__reg("a6") struct Library * ) = "\tjsr\t-15198(a6)";
#define EVP_sha384() __EVP_sha384(AmiSSLBase)

const EVP_MD * __EVP_sha512(__reg("a6") struct Library * ) = "\tjsr\t-15204(a6)";
#define EVP_sha512() __EVP_sha512(AmiSSLBase)

int __BN_GF2m_add(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b ) = "\tjsr\t-15210(a6)";
#define BN_GF2m_add(r, a, b) __BN_GF2m_add(AmiSSLBase, (r), (a), (b))

int __BN_GF2m_arr2poly(__reg("a6") struct Library * , __reg("a0") const int * p , __reg("a1") BIGNUM * a ) = "\tjsr\t-15216(a6)";
#define BN_GF2m_arr2poly(p, a) __BN_GF2m_arr2poly(AmiSSLBase, (p), (a))

int __BN_GF2m_mod(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p ) = "\tjsr\t-15222(a6)";
#define BN_GF2m_mod(r, a, p) __BN_GF2m_mod(AmiSSLBase, (r), (a), (p))

int __BN_GF2m_mod_mul(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") const BIGNUM * p , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-15228(a6)";
#define BN_GF2m_mod_mul(r, a, b, p, ctx) __BN_GF2m_mod_mul(AmiSSLBase, (r), (a), (b), (p), (ctx))

int __BN_GF2m_mod_sqr(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-15234(a6)";
#define BN_GF2m_mod_sqr(r, a, p, ctx) __BN_GF2m_mod_sqr(AmiSSLBase, (r), (a), (p), (ctx))

int __BN_GF2m_mod_inv(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * b , __reg("a2") const BIGNUM * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-15240(a6)";
#define BN_GF2m_mod_inv(r, b, p, ctx) __BN_GF2m_mod_inv(AmiSSLBase, (r), (b), (p), (ctx))

int __BN_GF2m_mod_div(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") const BIGNUM * p , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-15246(a6)";
#define BN_GF2m_mod_div(r, a, b, p, ctx) __BN_GF2m_mod_div(AmiSSLBase, (r), (a), (b), (p), (ctx))

int __BN_GF2m_mod_exp(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") const BIGNUM * p , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-15252(a6)";
#define BN_GF2m_mod_exp(r, a, b, p, ctx) __BN_GF2m_mod_exp(AmiSSLBase, (r), (a), (b), (p), (ctx))

int __BN_GF2m_mod_sqrt(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-15258(a6)";
#define BN_GF2m_mod_sqrt(r, a, p, ctx) __BN_GF2m_mod_sqrt(AmiSSLBase, (r), (a), (p), (ctx))

int __BN_GF2m_mod_solve_quad(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-15264(a6)";
#define BN_GF2m_mod_solve_quad(r, a, p, ctx) __BN_GF2m_mod_solve_quad(AmiSSLBase, (r), (a), (p), (ctx))

int __BN_generate_prime_ex(__reg("a6") struct Library * , __reg("a0") BIGNUM * ret , __reg("d0") int bits , __reg("d1") int safe , __reg("a1") const BIGNUM * add , __reg("a2") const BIGNUM * rem , __reg("a3") BN_GENCB * cb ) = "\tjsr\t-15270(a6)";
#define BN_generate_prime_ex(ret, bits, safe, add, rem, cb) __BN_generate_prime_ex(AmiSSLBase, (ret), (bits), (safe), (add), (rem), (cb))

int __BN_is_prime_ex(__reg("a6") struct Library * , __reg("a0") const BIGNUM * p , __reg("d0") int nchecks , __reg("a1") BN_CTX * ctx , __reg("a2") BN_GENCB * cb ) = "\tjsr\t-15276(a6)";
#define BN_is_prime_ex(p, nchecks, ctx, cb) __BN_is_prime_ex(AmiSSLBase, (p), (nchecks), (ctx), (cb))

void __BN_set_negative(__reg("a6") struct Library * , __reg("a0") BIGNUM * b , __reg("d0") int n ) = "\tjsr\t-15282(a6)";
#define BN_set_negative(b, n) __BN_set_negative(AmiSSLBase, (b), (n))

int __EC_GROUP_get_degree(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group ) = "\tjsr\t-15288(a6)";
#define EC_GROUP_get_degree(group) __EC_GROUP_get_degree(AmiSSLBase, (group))

const EC_METHOD * __EC_GF2m_simple_method(__reg("a6") struct Library * ) = "\tjsr\t-15294(a6)";
#define EC_GF2m_simple_method() __EC_GF2m_simple_method(AmiSSLBase)

int __EC_GROUP_set_curve_GF2m(__reg("a6") struct Library * , __reg("a0") EC_GROUP * group , __reg("a1") const BIGNUM * p , __reg("a2") const BIGNUM * a , __reg("a3") const BIGNUM * b , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-15300(a6)";
#define EC_GROUP_set_curve_GF2m(group, p, a, b, ctx) __EC_GROUP_set_curve_GF2m(AmiSSLBase, (group), (p), (a), (b), (ctx))

int __EC_GROUP_get_curve_GF2m(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") BIGNUM * p , __reg("a2") BIGNUM * a , __reg("a3") BIGNUM * b , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-15306(a6)";
#define EC_GROUP_get_curve_GF2m(group, p, a, b, ctx) __EC_GROUP_get_curve_GF2m(AmiSSLBase, (group), (p), (a), (b), (ctx))

int __EC_POINT_set_affine_coordinates_GF2m(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") EC_POINT * point , __reg("a2") const BIGNUM * x , __reg("a3") const BIGNUM * y , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-15312(a6)";
#define EC_POINT_set_affine_coordinates_GF2m(group, point, x, y, ctx) __EC_POINT_set_affine_coordinates_GF2m(AmiSSLBase, (group), (point), (x), (y), (ctx))

int __EC_POINT_get_affine_coordinates_GF2m(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") const EC_POINT * point , __reg("a2") BIGNUM * x , __reg("a3") BIGNUM * y , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-15318(a6)";
#define EC_POINT_get_affine_coordinates_GF2m(group, point, x, y, ctx) __EC_POINT_get_affine_coordinates_GF2m(AmiSSLBase, (group), (point), (x), (y), (ctx))

size_t __EC_get_builtin_curves(__reg("a6") struct Library * , __reg("a0") EC_builtin_curve * r , __reg("d0") size_t nitems ) = "\tjsr\t-15324(a6)";
#define EC_get_builtin_curves(r, nitems) __EC_get_builtin_curves(AmiSSLBase, (r), (nitems))

EC_GROUP * __EC_GROUP_new_by_curve_name(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-15330(a6)";
#define EC_GROUP_new_by_curve_name(nid) __EC_GROUP_new_by_curve_name(AmiSSLBase, (nid))

int __EC_GROUP_check(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") BN_CTX * ctx ) = "\tjsr\t-15336(a6)";
#define EC_GROUP_check(group, ctx) __EC_GROUP_check(AmiSSLBase, (group), (ctx))

int __DSA_generate_parameters_ex(__reg("a6") struct Library * , __reg("a0") DSA * dsa , __reg("d0") int bits , __reg("a1") const unsigned char * seed , __reg("d1") int seed_len , __reg("a2") int * counter_ret , __reg("a3") unsigned long * h_ret , __reg("d2") BN_GENCB * cb ) = "\tjsr\t-15348(a6)";
#define DSA_generate_parameters_ex(dsa, bits, seed, seed_len, counter_ret, h_ret, cb) __DSA_generate_parameters_ex(AmiSSLBase, (dsa), (bits), (seed), (seed_len), (counter_ret), (h_ret), (cb))

EC_KEY * __EC_KEY_new_by_curve_name(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-15360(a6)";
#define EC_KEY_new_by_curve_name(nid) __EC_KEY_new_by_curve_name(AmiSSLBase, (nid))

int __EC_KEY_generate_key(__reg("a6") struct Library * , __reg("a0") EC_KEY * key ) = "\tjsr\t-15366(a6)";
#define EC_KEY_generate_key(key) __EC_KEY_generate_key(AmiSSLBase, (key))

void __EC_KEY_free(__reg("a6") struct Library * , __reg("a0") EC_KEY * key ) = "\tjsr\t-15372(a6)";
#define EC_KEY_free(key) __EC_KEY_free(AmiSSLBase, (key))

void __ECDSA_SIG_free(__reg("a6") struct Library * , __reg("a0") ECDSA_SIG * a ) = "\tjsr\t-15378(a6)";
#define ECDSA_SIG_free(a) __ECDSA_SIG_free(AmiSSLBase, (a))

ECDSA_SIG * __ECDSA_do_sign(__reg("a6") struct Library * , __reg("a0") const unsigned char * dgst , __reg("d0") int dlen , __reg("a1") EC_KEY * eckey ) = "\tjsr\t-15384(a6)";
#define ECDSA_do_sign(dgst, dlen, eckey) __ECDSA_do_sign(AmiSSLBase, (dgst), (dlen), (eckey))

int __ECDSA_do_verify(__reg("a6") struct Library * , __reg("a0") const unsigned char * dgst , __reg("d0") int dgst_len , __reg("a1") const ECDSA_SIG * sig , __reg("a2") EC_KEY * eckey ) = "\tjsr\t-15390(a6)";
#define ECDSA_do_verify(dgst, dgst_len, sig, eckey) __ECDSA_do_verify(AmiSSLBase, (dgst), (dgst_len), (sig), (eckey))

EC_KEY * __EC_KEY_new(__reg("a6") struct Library * ) = "\tjsr\t-15396(a6)";
#define EC_KEY_new() __EC_KEY_new(AmiSSLBase)

int __EC_KEY_set_group(__reg("a6") struct Library * , __reg("a0") EC_KEY * eckey , __reg("a1") const EC_GROUP * group ) = "\tjsr\t-15402(a6)";
#define EC_KEY_set_group(eckey, group) __EC_KEY_set_group(AmiSSLBase, (eckey), (group))

const EC_GROUP * __EC_KEY_get0_group(__reg("a6") struct Library * , __reg("a0") const EC_KEY * key ) = "\tjsr\t-15408(a6)";
#define EC_KEY_get0_group(key) __EC_KEY_get0_group(AmiSSLBase, (key))

int __EC_KEY_check_key(__reg("a6") struct Library * , __reg("a0") const EC_KEY * eckey ) = "\tjsr\t-15414(a6)";
#define EC_KEY_check_key(eckey) __EC_KEY_check_key(AmiSSLBase, (eckey))

int __ECDSA_size(__reg("a6") struct Library * , __reg("a0") const EC_KEY * eckey ) = "\tjsr\t-15420(a6)";
#define ECDSA_size(eckey) __ECDSA_size(AmiSSLBase, (eckey))

int __ECDSA_sign(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") const unsigned char * dgst , __reg("d1") int dgstlen , __reg("a1") unsigned char * sig , __reg("a2") unsigned int * siglen , __reg("a3") EC_KEY * eckey ) = "\tjsr\t-15426(a6)";
#define ECDSA_sign(type, dgst, dgstlen, sig, siglen, eckey) __ECDSA_sign(AmiSSLBase, (type), (dgst), (dgstlen), (sig), (siglen), (eckey))

int __ECDSA_verify(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") const unsigned char * dgst , __reg("d1") int dgstlen , __reg("a1") const unsigned char * sig , __reg("d2") int siglen , __reg("a2") EC_KEY * eckey ) = "\tjsr\t-15432(a6)";
#define ECDSA_verify(type, dgst, dgstlen, sig, siglen, eckey) __ECDSA_verify(AmiSSLBase, (type), (dgst), (dgstlen), (sig), (siglen), (eckey))

ECDSA_SIG * __d2i_ECDSA_SIG(__reg("a6") struct Library * , __reg("a0") ECDSA_SIG ** v , __reg("a1") const unsigned char ** pp , __reg("a2") long len ) = "\tjsr\t-15438(a6)";
#define d2i_ECDSA_SIG(v, pp, len) __d2i_ECDSA_SIG(AmiSSLBase, (v), (pp), (len))

int __i2d_ECDSA_SIG(__reg("a6") struct Library * , __reg("a0") const ECDSA_SIG * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-15444(a6)";
#define i2d_ECDSA_SIG(a, pp) __i2d_ECDSA_SIG(AmiSSLBase, (a), (pp))

int __DH_generate_parameters_ex(__reg("a6") struct Library * , __reg("a0") DH * ret , __reg("d0") int prime_len , __reg("d1") int generator , __reg("a1") BN_GENCB * cb ) = "\tjsr\t-15450(a6)";
#define DH_generate_parameters_ex(ret, prime_len, generator, cb) __DH_generate_parameters_ex(AmiSSLBase, (ret), (prime_len), (generator), (cb))

int __EC_METHOD_get_field_type(__reg("a6") struct Library * , __reg("a0") const EC_METHOD * meth ) = "\tjsr\t-15456(a6)";
#define EC_METHOD_get_field_type(meth) __EC_METHOD_get_field_type(AmiSSLBase, (meth))

const EC_POINT * __EC_KEY_get0_public_key(__reg("a6") struct Library * , __reg("a0") const EC_KEY * eckey ) = "\tjsr\t-15462(a6)";
#define EC_KEY_get0_public_key(eckey) __EC_KEY_get0_public_key(AmiSSLBase, (eckey))

int __ECDH_compute_key(__reg("a6") struct Library * , __reg("a0") void * out , __reg("d0") size_t outlen , __reg("a1") const EC_POINT * pub_key , __reg("a2") const EC_KEY * eckey , __reg("a3") void *(*KDF)(const void *,size_t,void *,size_t *) ) = "\tjsr\t-15468(a6)";
#define ECDH_compute_key(out, outlen, pub_key, eckey, KDF) __ECDH_compute_key(AmiSSLBase, (out), (outlen), (pub_key), (eckey), (KDF))

const BIGNUM * __EC_KEY_get0_private_key(__reg("a6") struct Library * , __reg("a0") const EC_KEY * eckey ) = "\tjsr\t-15474(a6)";
#define EC_KEY_get0_private_key(eckey) __EC_KEY_get0_private_key(AmiSSLBase, (eckey))

ENGINE * __ENGINE_get_first(__reg("a6") struct Library * ) = "\tjsr\t-15480(a6)";
#define ENGINE_get_first() __ENGINE_get_first(AmiSSLBase)

const char * __ENGINE_get_id(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-15486(a6)";
#define ENGINE_get_id(e) __ENGINE_get_id(AmiSSLBase, (e))

const char * __ENGINE_get_name(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-15492(a6)";
#define ENGINE_get_name(e) __ENGINE_get_name(AmiSSLBase, (e))

ENGINE * __ENGINE_get_next(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-15498(a6)";
#define ENGINE_get_next(e) __ENGINE_get_next(AmiSSLBase, (e))

int __ENGINE_free(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-15504(a6)";
#define ENGINE_free(e) __ENGINE_free(AmiSSLBase, (e))

ENGINE * __ENGINE_new(__reg("a6") struct Library * ) = "\tjsr\t-15510(a6)";
#define ENGINE_new() __ENGINE_new(AmiSSLBase)

int __ENGINE_set_id(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const char * id ) = "\tjsr\t-15516(a6)";
#define ENGINE_set_id(e, id) __ENGINE_set_id(AmiSSLBase, (e), (id))

int __ENGINE_set_name(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const char * name ) = "\tjsr\t-15522(a6)";
#define ENGINE_set_name(e, name) __ENGINE_set_name(AmiSSLBase, (e), (name))

int __ENGINE_add(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-15528(a6)";
#define ENGINE_add(e) __ENGINE_add(AmiSSLBase, (e))

int __ENGINE_remove(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-15534(a6)";
#define ENGINE_remove(e) __ENGINE_remove(AmiSSLBase, (e))

void __ENGINE_load_builtin_engines(__reg("a6") struct Library * ) = "\tjsr\t-15540(a6)";
#define ENGINE_load_builtin_engines() __ENGINE_load_builtin_engines(AmiSSLBase)

void __ENGINE_register_all_ciphers(__reg("a6") struct Library * ) = "\tjsr\t-15546(a6)";
#define ENGINE_register_all_ciphers() __ENGINE_register_all_ciphers(AmiSSLBase)

int __EVP_CIPHER_get_nid(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) = "\tjsr\t-15552(a6)";
#define EVP_CIPHER_get_nid(cipher) __EVP_CIPHER_get_nid(AmiSSLBase, (cipher))

int __EVP_MD_get_type(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) = "\tjsr\t-15558(a6)";
#define EVP_MD_get_type(md) __EVP_MD_get_type(AmiSSLBase, (md))

void __ENGINE_register_all_digests(__reg("a6") struct Library * ) = "\tjsr\t-15564(a6)";
#define ENGINE_register_all_digests() __ENGINE_register_all_digests(AmiSSLBase)

int __BIO_test_flags(__reg("a6") struct Library * , __reg("a0") const BIO * b , __reg("d0") int flags ) = "\tjsr\t-15570(a6)";
#define BIO_test_flags(b, flags) __BIO_test_flags(AmiSSLBase, (b), (flags))

STACK_OF(SSL_COMP) * __SSL_COMP_get_compression_methods(__reg("a6") struct Library * ) = "\tjsr\t-15576(a6)";
#define SSL_COMP_get_compression_methods() __SSL_COMP_get_compression_methods(AmiSSLBase)

int __RSA_generate_key_ex(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("d0") int bits , __reg("a1") BIGNUM * e , __reg("a2") BN_GENCB * cb ) = "\tjsr\t-15582(a6)";
#define RSA_generate_key_ex(rsa, bits, e, cb) __RSA_generate_key_ex(AmiSSLBase, (rsa), (bits), (e), (cb))

void __X509_VERIFY_PARAM_free(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param ) = "\tjsr\t-15588(a6)";
#define X509_VERIFY_PARAM_free(param) __X509_VERIFY_PARAM_free(AmiSSLBase, (param))

int __X509_STORE_set1_param(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") const X509_VERIFY_PARAM * pm ) = "\tjsr\t-15594(a6)";
#define X509_STORE_set1_param(xs, pm) __X509_STORE_set1_param(AmiSSLBase, (xs), (pm))

ASN1_TYPE * __ASN1_generate_nconf(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("a1") CONF * nconf ) = "\tjsr\t-15600(a6)";
#define ASN1_generate_nconf(str, nconf) __ASN1_generate_nconf(AmiSSLBase, (str), (nconf))

EC_GROUP * __PEM_read_bio_ECPKParameters(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") EC_GROUP ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-15606(a6)";
#define PEM_read_bio_ECPKParameters(bp, x, cb, u) __PEM_read_bio_ECPKParameters(AmiSSLBase, (bp), (x), (cb), (u))

EC_KEY * __EC_KEY_dup(__reg("a6") struct Library * , __reg("a0") const EC_KEY * ec_key ) = "\tjsr\t-15612(a6)";
#define EC_KEY_dup(ec_key) __EC_KEY_dup(AmiSSLBase, (ec_key))

void __BIO_set_callback(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") BIO_callback_fn callback ) = "\tjsr\t-15618(a6)";
#define BIO_set_callback(b, callback) __BIO_set_callback(AmiSSLBase, (b), (callback))

void __BIO_set_callback_arg(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") char * arg ) = "\tjsr\t-15624(a6)";
#define BIO_set_callback_arg(b, arg) __BIO_set_callback_arg(AmiSSLBase, (b), (arg))

void __EVP_MD_CTX_set_flags(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("d0") int flags ) = "\tjsr\t-15630(a6)";
#define EVP_MD_CTX_set_flags(ctx, flags) __EVP_MD_CTX_set_flags(AmiSSLBase, (ctx), (flags))

void __BIO_set_flags(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("d0") int flags ) = "\tjsr\t-15636(a6)";
#define BIO_set_flags(b, flags) __BIO_set_flags(AmiSSLBase, (b), (flags))

void __EVP_CIPHER_CTX_set_flags(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("d0") int flags ) = "\tjsr\t-15642(a6)";
#define EVP_CIPHER_CTX_set_flags(ctx, flags) __EVP_CIPHER_CTX_set_flags(AmiSSLBase, (ctx), (flags))

int __EVP_CIPHER_get_iv_length(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) = "\tjsr\t-15648(a6)";
#define EVP_CIPHER_get_iv_length(cipher) __EVP_CIPHER_get_iv_length(AmiSSLBase, (cipher))

int __X509_REQ_check_private_key(__reg("a6") struct Library * , __reg("a0") const X509_REQ * req , __reg("a1") EVP_PKEY * pkey ) = "\tjsr\t-15654(a6)";
#define X509_REQ_check_private_key(req, pkey) __X509_REQ_check_private_key(AmiSSLBase, (req), (pkey))

EC_KEY * __PEM_read_bio_EC_PUBKEY(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") EC_KEY ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-15660(a6)";
#define PEM_read_bio_EC_PUBKEY(bp, x, cb, u) __PEM_read_bio_EC_PUBKEY(AmiSSLBase, (bp), (x), (cb), (u))

EC_KEY * __PEM_read_bio_ECPrivateKey(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") EC_KEY ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-15666(a6)";
#define PEM_read_bio_ECPrivateKey(bp, x, cb, u) __PEM_read_bio_ECPrivateKey(AmiSSLBase, (bp), (x), (cb), (u))

int __PEM_write_bio_EC_PUBKEY(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EC_KEY * x ) = "\tjsr\t-15672(a6)";
#define PEM_write_bio_EC_PUBKEY(bp, x) __PEM_write_bio_EC_PUBKEY(AmiSSLBase, (bp), (x))

EC_KEY * __d2i_EC_PUBKEY_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") EC_KEY ** eckey ) = "\tjsr\t-15678(a6)";
#define d2i_EC_PUBKEY_bio(bp, eckey) __d2i_EC_PUBKEY_bio(AmiSSLBase, (bp), (eckey))

void __EC_KEY_set_asn1_flag(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("d0") int flag ) = "\tjsr\t-15684(a6)";
#define EC_KEY_set_asn1_flag(key, flag) __EC_KEY_set_asn1_flag(AmiSSLBase, (key), (flag))

void __EC_KEY_set_conv_form(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("d0") point_conversion_form_t cform ) = "\tjsr\t-15690(a6)";
#define EC_KEY_set_conv_form(key, cform) __EC_KEY_set_conv_form(AmiSSLBase, (key), (cform))

int __EC_KEY_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EC_KEY * x , __reg("d0") int off ) = "\tjsr\t-15696(a6)";
#define EC_KEY_print(bp, x, off) __EC_KEY_print(AmiSSLBase, (bp), (x), (off))

EC_KEY * __d2i_ECPrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") EC_KEY ** eckey ) = "\tjsr\t-15702(a6)";
#define d2i_ECPrivateKey_bio(bp, eckey) __d2i_ECPrivateKey_bio(AmiSSLBase, (bp), (eckey))

int __i2d_EC_PUBKEY_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EC_KEY * eckey ) = "\tjsr\t-15708(a6)";
#define i2d_EC_PUBKEY_bio(bp, eckey) __i2d_EC_PUBKEY_bio(AmiSSLBase, (bp), (eckey))

int __PEM_write_bio_ECPrivateKey(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EC_KEY * x , __reg("a2") const EVP_CIPHER * enc , __reg("a3") const unsigned char * kstr , __reg("d0") int klen , __reg("d1") pem_password_cb * cb , __reg("d2") void * u ) = "\tjsr\t-15714(a6)";
#define PEM_write_bio_ECPrivateKey(bp, x, enc, kstr, klen, cb, u) __PEM_write_bio_ECPrivateKey(AmiSSLBase, (bp), (x), (enc), (kstr), (klen), (cb), (u))

int __PEM_write_bio_ECPKParameters(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EC_GROUP * x ) = "\tjsr\t-15720(a6)";
#define PEM_write_bio_ECPKParameters(bp, x) __PEM_write_bio_ECPKParameters(AmiSSLBase, (bp), (x))

int __i2d_ECPrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EC_KEY * eckey ) = "\tjsr\t-15726(a6)";
#define i2d_ECPrivateKey_bio(bp, eckey) __i2d_ECPrivateKey_bio(AmiSSLBase, (bp), (eckey))

int __i2d_ECPKParameters(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-15732(a6)";
#define i2d_ECPKParameters(a, out) __i2d_ECPKParameters(AmiSSLBase, (a), (out))

void __EC_GROUP_set_asn1_flag(__reg("a6") struct Library * , __reg("a0") EC_GROUP * group , __reg("d0") int flag ) = "\tjsr\t-15738(a6)";
#define EC_GROUP_set_asn1_flag(group, flag) __EC_GROUP_set_asn1_flag(AmiSSLBase, (group), (flag))

void __EC_GROUP_set_point_conversion_form(__reg("a6") struct Library * , __reg("a0") EC_GROUP * group , __reg("d0") point_conversion_form_t form ) = "\tjsr\t-15744(a6)";
#define EC_GROUP_set_point_conversion_form(group, form) __EC_GROUP_set_point_conversion_form(AmiSSLBase, (group), (form))

point_conversion_form_t __EC_GROUP_get_point_conversion_form(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group ) = "\tjsr\t-15750(a6)";
#define EC_GROUP_get_point_conversion_form(group) __EC_GROUP_get_point_conversion_form(AmiSSLBase, (group))

int __ECPKParameters_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EC_GROUP * x , __reg("d0") int off ) = "\tjsr\t-15756(a6)";
#define ECPKParameters_print(bp, x, off) __ECPKParameters_print(AmiSSLBase, (bp), (x), (off))

size_t __EC_GROUP_set_seed(__reg("a6") struct Library * , __reg("a0") EC_GROUP * group , __reg("a1") const unsigned char * p , __reg("d0") size_t len ) = "\tjsr\t-15762(a6)";
#define EC_GROUP_set_seed(group, p, len) __EC_GROUP_set_seed(AmiSSLBase, (group), (p), (len))

EC_GROUP * __d2i_ECPKParameters(__reg("a6") struct Library * , __reg("a0") EC_GROUP ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-15768(a6)";
#define d2i_ECPKParameters(a, in, len) __d2i_ECPKParameters(AmiSSLBase, (a), (in), (len))

BIGNUM * __EC_POINT_point2bn(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") const EC_POINT * point , __reg("d0") point_conversion_form_t form , __reg("a2") BIGNUM * ret , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-15774(a6)";
#define EC_POINT_point2bn(group, point, form, ret, ctx) __EC_POINT_point2bn(AmiSSLBase, (group), (point), (form), (ret), (ctx))

STACK_OF(OPENSSL_STRING) * __X509_get1_ocsp(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-15780(a6)";
#define X509_get1_ocsp(x) __X509_get1_ocsp(AmiSSLBase, (x))

const char * __SSL_get_servername(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("d0") const int type ) = "\tjsr\t-15786(a6)";
#define SSL_get_servername(s, type) __SSL_get_servername(AmiSSLBase, (s), (type))

SSL_CTX * __SSL_set_SSL_CTX(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") SSL_CTX * ctx ) = "\tjsr\t-15792(a6)";
#define SSL_set_SSL_CTX(ssl, ctx) __SSL_set_SSL_CTX(AmiSSLBase, (ssl), (ctx))

void __SSL_CTX_set_cookie_generate_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*app_gen_cookie_cb)(SSL *ssl,unsigned char *cookie,unsigned int *cookie_len) ) = "\tjsr\t-15798(a6)";
#define SSL_CTX_set_cookie_generate_cb(ctx, app_gen_cookie_cb) __SSL_CTX_set_cookie_generate_cb(AmiSSLBase, (ctx), (app_gen_cookie_cb))

void __SSL_CTX_set_cookie_verify_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*app_verify_cookie_cb)(SSL *,const unsigned char *,unsigned int) ) = "\tjsr\t-15804(a6)";
#define SSL_CTX_set_cookie_verify_cb(ctx, app_verify_cookie_cb) __SSL_CTX_set_cookie_verify_cb(AmiSSLBase, (ctx), (app_verify_cookie_cb))

void __SSL_CTX_set_info_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") void (*cb)(const SSL *ssl,int type,int val) ) = "\tjsr\t-15810(a6)";
#define SSL_CTX_set_info_callback(ctx, cb) __SSL_CTX_set_info_callback(AmiSSLBase, (ctx), (cb))

BIO * __BIO_new_dgram(__reg("a6") struct Library * , __reg("d0") int fd , __reg("d1") int close_flag ) = "\tjsr\t-15822(a6)";
#define BIO_new_dgram(fd, close_flag) __BIO_new_dgram(AmiSSLBase, (fd), (close_flag))

int __SSL_get_servername_type(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-15828(a6)";
#define SSL_get_servername_type(s) __SSL_get_servername_type(AmiSSLBase, (s))

const COMP_METHOD * __SSL_get_current_compression(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-15834(a6)";
#define SSL_get_current_compression(s) __SSL_get_current_compression(AmiSSLBase, (s))

const COMP_METHOD * __SSL_get_current_expansion(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-15840(a6)";
#define SSL_get_current_expansion(s) __SSL_get_current_expansion(AmiSSLBase, (s))

const char * __SSL_COMP_get_name(__reg("a6") struct Library * , __reg("a0") const COMP_METHOD * comp ) = "\tjsr\t-15846(a6)";
#define SSL_COMP_get_name(comp) __SSL_COMP_get_name(AmiSSLBase, (comp))

ENGINE * __ENGINE_by_id(__reg("a6") struct Library * , __reg("a0") const char * id ) = "\tjsr\t-15852(a6)";
#define ENGINE_by_id(id) __ENGINE_by_id(AmiSSLBase, (id))

int __SSL_CTX_set_client_cert_engine(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") ENGINE * e ) = "\tjsr\t-15858(a6)";
#define SSL_CTX_set_client_cert_engine(ctx, e) __SSL_CTX_set_client_cert_engine(AmiSSLBase, (ctx), (e))

unsigned char * __SHA256(__reg("a6") struct Library * , __reg("a0") const unsigned char * d , __reg("d0") size_t n , __reg("a1") unsigned char * md ) = "\tjsr\t-15876(a6)";
#define SHA256(d, n, md) __SHA256(AmiSSLBase, (d), (n), (md))

unsigned char * __SHA512(__reg("a6") struct Library * , __reg("a0") const unsigned char * d , __reg("d0") size_t n , __reg("a1") unsigned char * md ) = "\tjsr\t-15882(a6)";
#define SHA512(d, n, md) __SHA512(AmiSSLBase, (d), (n), (md))

void __AES_ige_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const AES_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") const int enc ) = "\tjsr\t-15888(a6)";
#define AES_ige_encrypt(in, out, length, key, ivec, enc) __AES_ige_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (enc))

int __EC_KEY_precompute_mult(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("a1") BN_CTX * ctx ) = "\tjsr\t-15894(a6)";
#define EC_KEY_precompute_mult(key, ctx) __EC_KEY_precompute_mult(AmiSSLBase, (key), (ctx))

EVP_PKEY * __ENGINE_load_private_key(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const char * key_id , __reg("a2") UI_METHOD * ui_method , __reg("a3") void * callback_data ) = "\tjsr\t-15900(a6)";
#define ENGINE_load_private_key(e, key_id, ui_method, callback_data) __ENGINE_load_private_key(AmiSSLBase, (e), (key_id), (ui_method), (callback_data))

EVP_PKEY * __ENGINE_load_public_key(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const char * key_id , __reg("a2") UI_METHOD * ui_method , __reg("a3") void * callback_data ) = "\tjsr\t-15906(a6)";
#define ENGINE_load_public_key(e, key_id, ui_method, callback_data) __ENGINE_load_public_key(AmiSSLBase, (e), (key_id), (ui_method), (callback_data))

int __ENGINE_ctrl_cmd(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const char * cmd_name , __reg("a2") long i , __reg("a3") void * p , __reg("d0") void (*f)(void) , __reg("d1") int cmd_optional ) = "\tjsr\t-15912(a6)";
#define ENGINE_ctrl_cmd(e, cmd_name, i, p, f, cmd_optional) __ENGINE_ctrl_cmd(AmiSSLBase, (e), (cmd_name), (i), (p), (f), (cmd_optional))

int __ENGINE_set_default(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("d0") unsigned int flags ) = "\tjsr\t-15918(a6)";
#define ENGINE_set_default(e, flags) __ENGINE_set_default(AmiSSLBase, (e), (flags))

int __ENGINE_ctrl(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("d0") int cmd , __reg("d1") long i , __reg("a1") void * p , __reg("a2") void (*f)(void) ) = "\tjsr\t-15924(a6)";
#define ENGINE_ctrl(e, cmd, i, p, f) __ENGINE_ctrl(AmiSSLBase, (e), (cmd), (i), (p), (f))

int __ENGINE_register_all_complete(__reg("a6") struct Library * ) = "\tjsr\t-15930(a6)";
#define ENGINE_register_all_complete() __ENGINE_register_all_complete(AmiSSLBase)

int __ENGINE_ctrl_cmd_string(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const char * cmd_name , __reg("a2") const char * arg , __reg("d0") int cmd_optional ) = "\tjsr\t-15936(a6)";
#define ENGINE_ctrl_cmd_string(e, cmd_name, arg, cmd_optional) __ENGINE_ctrl_cmd_string(AmiSSLBase, (e), (cmd_name), (arg), (cmd_optional))

int __X509_VERIFY_PARAM_add0_policy(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("a1") ASN1_OBJECT * policy ) = "\tjsr\t-15942(a6)";
#define X509_VERIFY_PARAM_add0_policy(param, policy) __X509_VERIFY_PARAM_add0_policy(AmiSSLBase, (param), (policy))

int __X509_VERIFY_PARAM_set_purpose(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("d0") int purpose ) = "\tjsr\t-15948(a6)";
#define X509_VERIFY_PARAM_set_purpose(param, purpose) __X509_VERIFY_PARAM_set_purpose(AmiSSLBase, (param), (purpose))

int __X509_VERIFY_PARAM_set_flags(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("d0") unsigned long flags ) = "\tjsr\t-15954(a6)";
#define X509_VERIFY_PARAM_set_flags(param, flags) __X509_VERIFY_PARAM_set_flags(AmiSSLBase, (param), (flags))

X509_VERIFY_PARAM * __X509_VERIFY_PARAM_new(__reg("a6") struct Library * ) = "\tjsr\t-15960(a6)";
#define X509_VERIFY_PARAM_new() __X509_VERIFY_PARAM_new(AmiSSLBase)

void __X509_POLICY_NODE_print(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") X509_POLICY_NODE * node , __reg("d0") int indent ) = "\tjsr\t-15966(a6)";
#define X509_POLICY_NODE_print(out, node, indent) __X509_POLICY_NODE_print(AmiSSLBase, (out), (node), (indent))

X509_POLICY_TREE * __X509_STORE_CTX_get0_policy_tree(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-15972(a6)";
#define X509_STORE_CTX_get0_policy_tree(ctx) __X509_STORE_CTX_get0_policy_tree(AmiSSLBase, (ctx))

int __X509_STORE_CTX_get_explicit_policy(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-15978(a6)";
#define X509_STORE_CTX_get_explicit_policy(ctx) __X509_STORE_CTX_get_explicit_policy(AmiSSLBase, (ctx))

STACK_OF(X509_POLICY_NODE) * __X509_policy_tree_get0_policies(__reg("a6") struct Library * , __reg("a0") const X509_POLICY_TREE * tree ) = "\tjsr\t-15984(a6)";
#define X509_policy_tree_get0_policies(tree) __X509_policy_tree_get0_policies(AmiSSLBase, (tree))

STACK_OF(X509_POLICY_NODE) * __X509_policy_tree_get0_user_policies(__reg("a6") struct Library * , __reg("a0") const X509_POLICY_TREE * tree ) = "\tjsr\t-15990(a6)";
#define X509_policy_tree_get0_user_policies(tree) __X509_policy_tree_get0_user_policies(AmiSSLBase, (tree))

char * __BIO_get_callback_arg(__reg("a6") struct Library * , __reg("a0") const BIO * b ) = "\tjsr\t-15996(a6)";
#define BIO_get_callback_arg(b) __BIO_get_callback_arg(AmiSSLBase, (b))

int __EVP_PKEY_add1_attr_by_NID(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * key , __reg("d0") int nid , __reg("d1") int type , __reg("a1") const unsigned char * bytes , __reg("d2") int len ) = "\tjsr\t-16002(a6)";
#define EVP_PKEY_add1_attr_by_NID(key, nid, type, bytes, len) __EVP_PKEY_add1_attr_by_NID(AmiSSLBase, (key), (nid), (type), (bytes), (len))

const RSA_METHOD * __ENGINE_get_RSA(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-16008(a6)";
#define ENGINE_get_RSA(e) __ENGINE_get_RSA(AmiSSLBase, (e))

const DSA_METHOD * __ENGINE_get_DSA(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-16014(a6)";
#define ENGINE_get_DSA(e) __ENGINE_get_DSA(AmiSSLBase, (e))

const DH_METHOD * __ENGINE_get_DH(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-16020(a6)";
#define ENGINE_get_DH(e) __ENGINE_get_DH(AmiSSLBase, (e))

const RAND_METHOD * __ENGINE_get_RAND(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-16026(a6)";
#define ENGINE_get_RAND(e) __ENGINE_get_RAND(AmiSSLBase, (e))

ENGINE_CIPHERS_PTR __ENGINE_get_ciphers(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-16032(a6)";
#define ENGINE_get_ciphers(e) __ENGINE_get_ciphers(AmiSSLBase, (e))

ENGINE_DIGESTS_PTR __ENGINE_get_digests(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-16038(a6)";
#define ENGINE_get_digests(e) __ENGINE_get_digests(AmiSSLBase, (e))

int __ENGINE_init(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16044(a6)";
#define ENGINE_init(e) __ENGINE_init(AmiSSLBase, (e))

int __ENGINE_finish(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16050(a6)";
#define ENGINE_finish(e) __ENGINE_finish(AmiSSLBase, (e))

OSSL_HTTP_REQ_CTX * __OCSP_sendreq_new(__reg("a6") struct Library * , __reg("a0") BIO * io , __reg("a1") const char * path , __reg("a2") const OCSP_REQUEST * req , __reg("a3") int maxline ) = "\tjsr\t-16056(a6)";
#define OCSP_sendreq_new(io, path, req, maxline) __OCSP_sendreq_new(AmiSSLBase, (io), (path), (req), (maxline))

int __OBSOLETE_OCSP_sendreq_nbio(__reg("a6") struct Library * , __reg("a0") OCSP_RESPONSE ** presp , __reg("a1") OSSL_HTTP_REQ_CTX * rctx ) = "\tjsr\t-16062(a6)";
#define OBSOLETE_OCSP_sendreq_nbio(presp, rctx) __OBSOLETE_OCSP_sendreq_nbio(AmiSSLBase, (presp), (rctx))

void __OSSL_HTTP_REQ_CTX_free(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx ) = "\tjsr\t-16068(a6)";
#define OSSL_HTTP_REQ_CTX_free(rctx) __OSSL_HTTP_REQ_CTX_free(AmiSSLBase, (rctx))

int __SSL_CTX_use_psk_identity_hint(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * identity_hint ) = "\tjsr\t-16074(a6)";
#define SSL_CTX_use_psk_identity_hint(ctx, identity_hint) __SSL_CTX_use_psk_identity_hint(AmiSSLBase, (ctx), (identity_hint))

void __SSL_CTX_set_psk_client_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_psk_client_cb_func cb ) = "\tjsr\t-16080(a6)";
#define SSL_CTX_set_psk_client_callback(ctx, cb) __SSL_CTX_set_psk_client_callback(AmiSSLBase, (ctx), (cb))

const char * __SSL_get_psk_identity_hint(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-16086(a6)";
#define SSL_get_psk_identity_hint(s) __SSL_get_psk_identity_hint(AmiSSLBase, (s))

void __SSL_set_psk_server_callback(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") SSL_psk_server_cb_func cb ) = "\tjsr\t-16092(a6)";
#define SSL_set_psk_server_callback(ssl, cb) __SSL_set_psk_server_callback(AmiSSLBase, (ssl), (cb))

int __SSL_use_psk_identity_hint(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const char * identity_hint ) = "\tjsr\t-16098(a6)";
#define SSL_use_psk_identity_hint(s, identity_hint) __SSL_use_psk_identity_hint(AmiSSLBase, (s), (identity_hint))

void __SSL_set_psk_client_callback(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") SSL_psk_client_cb_func cb ) = "\tjsr\t-16104(a6)";
#define SSL_set_psk_client_callback(ssl, cb) __SSL_set_psk_client_callback(AmiSSLBase, (ssl), (cb))

void __SSL_CTX_set_psk_server_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_psk_server_cb_func cb ) = "\tjsr\t-16110(a6)";
#define SSL_CTX_set_psk_server_callback(ctx, cb) __SSL_CTX_set_psk_server_callback(AmiSSLBase, (ctx), (cb))

const char * __SSL_get_psk_identity(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-16116(a6)";
#define SSL_get_psk_identity(s) __SSL_get_psk_identity(AmiSSLBase, (s))

int __SSL_set_session_ticket_ext(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") void * ext_data , __reg("d0") int ext_len ) = "\tjsr\t-16122(a6)";
#define SSL_set_session_ticket_ext(s, ext_data, ext_len) __SSL_set_session_ticket_ext(AmiSSLBase, (s), (ext_data), (ext_len))

int __SSL_set_session_secret_cb(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") int (*tls_session_secret_cb)(SSL *,void *,int *,STACK_OF(SSL_CIPHER) *,const SSL_CIPHER **,void *) , __reg("a2") void * arg ) = "\tjsr\t-16128(a6)";
#define SSL_set_session_secret_cb(s, tls_session_secret_cb, arg) __SSL_set_session_secret_cb(AmiSSLBase, (s), (tls_session_secret_cb), (arg))

int __SSL_set_session_ticket_ext_cb(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") tls_session_ticket_ext_cb_fn cb , __reg("a2") void * arg ) = "\tjsr\t-16134(a6)";
#define SSL_set_session_ticket_ext_cb(s, cb, arg) __SSL_set_session_ticket_ext_cb(AmiSSLBase, (s), (cb), (arg))

int __SSL_set1_param(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") X509_VERIFY_PARAM * vpm ) = "\tjsr\t-16140(a6)";
#define SSL_set1_param(ssl, vpm) __SSL_set1_param(AmiSSLBase, (ssl), (vpm))

int __SSL_CTX_set1_param(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") X509_VERIFY_PARAM * vpm ) = "\tjsr\t-16146(a6)";
#define SSL_CTX_set1_param(ctx, vpm) __SSL_CTX_set1_param(AmiSSLBase, (ctx), (vpm))

int __SSL_renegotiate_abbreviated(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-16152(a6)";
#define SSL_renegotiate_abbreviated(s) __SSL_renegotiate_abbreviated(AmiSSLBase, (s))

int __SSL_CTX_set_srp_client_pwd_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") char * (*cb)(SSL *,void *) ) = "\tjsr\t-16176(a6)";
#define SSL_CTX_set_srp_client_pwd_callback(ctx, cb) __SSL_CTX_set_srp_client_pwd_callback(AmiSSLBase, (ctx), (cb))

BIGNUM * __SSL_get_srp_g(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-16182(a6)";
#define SSL_get_srp_g(s) __SSL_get_srp_g(AmiSSLBase, (s))

int __SSL_CTX_set_srp_username_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*cb)(SSL *,int *,void *) ) = "\tjsr\t-16188(a6)";
#define SSL_CTX_set_srp_username_callback(ctx, cb) __SSL_CTX_set_srp_username_callback(AmiSSLBase, (ctx), (cb))

char * __SSL_get_srp_userinfo(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-16194(a6)";
#define SSL_get_srp_userinfo(s) __SSL_get_srp_userinfo(AmiSSLBase, (s))

int __SSL_set_srp_server_param(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const BIGNUM * N , __reg("a2") const BIGNUM * g , __reg("a3") BIGNUM * sa , __reg("d0") BIGNUM * v , __reg("d1") char * info ) = "\tjsr\t-16200(a6)";
#define SSL_set_srp_server_param(s, N, g, sa, v, info) __SSL_set_srp_server_param(AmiSSLBase, (s), (N), (g), (sa), (v), (info))

int __SSL_set_srp_server_param_pw(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const char * user , __reg("a2") const char * pass , __reg("a3") const char * grp ) = "\tjsr\t-16206(a6)";
#define SSL_set_srp_server_param_pw(s, user, pass, grp) __SSL_set_srp_server_param_pw(AmiSSLBase, (s), (user), (pass), (grp))

BIGNUM * __SSL_get_srp_N(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-16212(a6)";
#define SSL_get_srp_N(s) __SSL_get_srp_N(AmiSSLBase, (s))

char * __SSL_get_srp_username(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-16218(a6)";
#define SSL_get_srp_username(s) __SSL_get_srp_username(AmiSSLBase, (s))

int __SSL_CTX_set_srp_password(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") char * password ) = "\tjsr\t-16224(a6)";
#define SSL_CTX_set_srp_password(ctx, password) __SSL_CTX_set_srp_password(AmiSSLBase, (ctx), (password))

int __SSL_CTX_set_srp_strength(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int strength ) = "\tjsr\t-16230(a6)";
#define SSL_CTX_set_srp_strength(ctx, strength) __SSL_CTX_set_srp_strength(AmiSSLBase, (ctx), (strength))

int __SSL_CTX_set_srp_verify_param_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*cb)(SSL *,void *) ) = "\tjsr\t-16236(a6)";
#define SSL_CTX_set_srp_verify_param_callback(ctx, cb) __SSL_CTX_set_srp_verify_param_callback(AmiSSLBase, (ctx), (cb))

int __SSL_CTX_set_srp_cb_arg(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") void * arg ) = "\tjsr\t-16242(a6)";
#define SSL_CTX_set_srp_cb_arg(ctx, arg) __SSL_CTX_set_srp_cb_arg(AmiSSLBase, (ctx), (arg))

int __SSL_CTX_set_srp_username(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") char * name ) = "\tjsr\t-16248(a6)";
#define SSL_CTX_set_srp_username(ctx, name) __SSL_CTX_set_srp_username(AmiSSLBase, (ctx), (name))

int __SSL_CTX_SRP_CTX_init(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-16254(a6)";
#define SSL_CTX_SRP_CTX_init(ctx) __SSL_CTX_SRP_CTX_init(AmiSSLBase, (ctx))

int __SRP_Calc_A_param(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-16260(a6)";
#define SRP_Calc_A_param(s) __SRP_Calc_A_param(AmiSSLBase, (s))

int __SSL_CTX_SRP_CTX_free(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-16272(a6)";
#define SSL_CTX_SRP_CTX_free(ctx) __SSL_CTX_SRP_CTX_free(AmiSSLBase, (ctx))

int __SSL_srp_server_param_with_username(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") int * ad ) = "\tjsr\t-16284(a6)";
#define SSL_srp_server_param_with_username(s, ad) __SSL_srp_server_param_with_username(AmiSSLBase, (s), (ad))

int __SSL_SRP_CTX_free(__reg("a6") struct Library * , __reg("a0") SSL * ctx ) = "\tjsr\t-16290(a6)";
#define SSL_SRP_CTX_free(ctx) __SSL_SRP_CTX_free(AmiSSLBase, (ctx))

void __SSL_set_debug(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int debug ) = "\tjsr\t-16296(a6)";
#define SSL_set_debug(s, debug) __SSL_set_debug(AmiSSLBase, (s), (debug))

X509 * __SSL_SESSION_get0_peer(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * s ) = "\tjsr\t-16302(a6)";
#define SSL_SESSION_get0_peer(s) __SSL_SESSION_get0_peer(AmiSSLBase, (s))

int __SSL_SESSION_set1_id_context(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * s , __reg("a1") const unsigned char * sid_ctx , __reg("d0") unsigned int sid_ctx_len ) = "\tjsr\t-16314(a6)";
#define SSL_SESSION_set1_id_context(s, sid_ctx, sid_ctx_len) __SSL_SESSION_set1_id_context(AmiSSLBase, (s), (sid_ctx), (sid_ctx_len))

int __OBSOLETE_SSL_cache_hit(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-16326(a6)";
#define OBSOLETE_SSL_cache_hit(s) __OBSOLETE_SSL_cache_hit(AmiSSLBase, (s))

uint32_t __SSL_CIPHER_get_id(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c ) = "\tjsr\t-16338(a6)";
#define SSL_CIPHER_get_id(c) __SSL_CIPHER_get_id(AmiSSLBase, (c))

int __SSL_export_keying_material(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") unsigned char * out , __reg("d0") size_t olen , __reg("a2") const char * label , __reg("d1") size_t llen , __reg("a3") const unsigned char * context , __reg("d2") size_t contextlen , __reg("d3") int use_context ) = "\tjsr\t-16350(a6)";
#define SSL_export_keying_material(s, out, olen, label, llen, context, contextlen, use_context) __SSL_export_keying_material(AmiSSLBase, (s), (out), (olen), (label), (llen), (context), (contextlen), (use_context))

int __SSL_set_tlsext_use_srtp(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const char * profiles ) = "\tjsr\t-16356(a6)";
#define SSL_set_tlsext_use_srtp(ssl, profiles) __SSL_set_tlsext_use_srtp(AmiSSLBase, (ssl), (profiles))

void __SSL_CTX_set_next_protos_advertised_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * s , __reg("a1") SSL_CTX_npn_advertised_cb_func cb , __reg("a2") void * arg ) = "\tjsr\t-16362(a6)";
#define SSL_CTX_set_next_protos_advertised_cb(s, cb, arg) __SSL_CTX_set_next_protos_advertised_cb(AmiSSLBase, (s), (cb), (arg))

void __SSL_get0_next_proto_negotiated(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("a1") const unsigned char ** data , __reg("a2") unsigned * len ) = "\tjsr\t-16368(a6)";
#define SSL_get0_next_proto_negotiated(s, data, len) __SSL_get0_next_proto_negotiated(AmiSSLBase, (s), (data), (len))

SRTP_PROTECTION_PROFILE * __SSL_get_selected_srtp_profile(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-16374(a6)";
#define SSL_get_selected_srtp_profile(s) __SSL_get_selected_srtp_profile(AmiSSLBase, (s))

int __SSL_CTX_set_tlsext_use_srtp(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * profiles ) = "\tjsr\t-16380(a6)";
#define SSL_CTX_set_tlsext_use_srtp(ctx, profiles) __SSL_CTX_set_tlsext_use_srtp(AmiSSLBase, (ctx), (profiles))

int __SSL_select_next_proto(__reg("a6") struct Library * , __reg("a0") unsigned char ** out , __reg("a1") unsigned char * outlen , __reg("a2") const unsigned char * in , __reg("d0") unsigned int inlen , __reg("a3") const unsigned char * client , __reg("d1") unsigned int client_len ) = "\tjsr\t-16386(a6)";
#define SSL_select_next_proto(out, outlen, in, inlen, client, client_len) __SSL_select_next_proto(AmiSSLBase, (out), (outlen), (in), (inlen), (client), (client_len))

STACK_OF(SRTP_PROTECTION_PROFILE) * __SSL_get_srtp_profiles(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-16392(a6)";
#define SSL_get_srtp_profiles(s) __SSL_get_srtp_profiles(AmiSSLBase, (s))

void __SSL_CTX_set_next_proto_select_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * s , __reg("a1") SSL_CTX_npn_select_cb_func cb , __reg("a2") void * arg ) = "\tjsr\t-16398(a6)";
#define SSL_CTX_set_next_proto_select_cb(s, cb, arg) __SSL_CTX_set_next_proto_select_cb(AmiSSLBase, (s), (cb), (arg))

unsigned int __SSL_SESSION_get_compress_id(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s ) = "\tjsr\t-16404(a6)";
#define SSL_SESSION_get_compress_id(s) __SSL_SESSION_get_compress_id(AmiSSLBase, (s))

int __SSL_SRP_CTX_init(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-16422(a6)";
#define SSL_SRP_CTX_init(s) __SSL_SRP_CTX_init(AmiSSLBase, (s))

int __ERR_load_ENGINE_strings(__reg("a6") struct Library * ) = "\tjsr\t-16758(a6)";
#define ERR_load_ENGINE_strings() __ERR_load_ENGINE_strings(AmiSSLBase)

int __ENGINE_set_DSA(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const DSA_METHOD * dsa_meth ) = "\tjsr\t-16764(a6)";
#define ENGINE_set_DSA(e, dsa_meth) __ENGINE_set_DSA(AmiSSLBase, (e), (dsa_meth))

ENGINE_GEN_INT_FUNC_PTR __ENGINE_get_finish_function(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-16770(a6)";
#define ENGINE_get_finish_function(e) __ENGINE_get_finish_function(AmiSSLBase, (e))

ENGINE * __ENGINE_get_default_RSA(__reg("a6") struct Library * ) = "\tjsr\t-16776(a6)";
#define ENGINE_get_default_RSA() __ENGINE_get_default_RSA(AmiSSLBase)

int __ENGINE_set_DH(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const DH_METHOD * dh_meth ) = "\tjsr\t-16782(a6)";
#define ENGINE_set_DH(e, dh_meth) __ENGINE_set_DH(AmiSSLBase, (e), (dh_meth))

ENGINE_GEN_INT_FUNC_PTR __ENGINE_get_init_function(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-16788(a6)";
#define ENGINE_get_init_function(e) __ENGINE_get_init_function(AmiSSLBase, (e))

int __ENGINE_set_init_function(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") ENGINE_GEN_INT_FUNC_PTR init_f ) = "\tjsr\t-16794(a6)";
#define ENGINE_set_init_function(e, init_f) __ENGINE_set_init_function(AmiSSLBase, (e), (init_f))

int __ENGINE_set_default_DSA(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16800(a6)";
#define ENGINE_set_default_DSA(e) __ENGINE_set_default_DSA(AmiSSLBase, (e))

ENGINE * __ENGINE_get_last(__reg("a6") struct Library * ) = "\tjsr\t-16806(a6)";
#define ENGINE_get_last() __ENGINE_get_last(AmiSSLBase)

ENGINE * __ENGINE_get_prev(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16812(a6)";
#define ENGINE_get_prev(e) __ENGINE_get_prev(AmiSSLBase, (e))

ENGINE * __ENGINE_get_default_DH(__reg("a6") struct Library * ) = "\tjsr\t-16818(a6)";
#define ENGINE_get_default_DH() __ENGINE_get_default_DH(AmiSSLBase)

int __ENGINE_set_finish_function(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") ENGINE_GEN_INT_FUNC_PTR finish_f ) = "\tjsr\t-16824(a6)";
#define ENGINE_set_finish_function(e, finish_f) __ENGINE_set_finish_function(AmiSSLBase, (e), (finish_f))

int __ENGINE_set_RSA(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const RSA_METHOD * rsa_meth ) = "\tjsr\t-16830(a6)";
#define ENGINE_set_RSA(e, rsa_meth) __ENGINE_set_RSA(AmiSSLBase, (e), (rsa_meth))

int __ENGINE_set_default_RAND(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16836(a6)";
#define ENGINE_set_default_RAND(e) __ENGINE_set_default_RAND(AmiSSLBase, (e))

ENGINE * __ENGINE_get_default_DSA(__reg("a6") struct Library * ) = "\tjsr\t-16842(a6)";
#define ENGINE_get_default_DSA() __ENGINE_get_default_DSA(AmiSSLBase)

int __ENGINE_set_default_RSA(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16848(a6)";
#define ENGINE_set_default_RSA(e) __ENGINE_set_default_RSA(AmiSSLBase, (e))

ENGINE * __ENGINE_get_default_RAND(__reg("a6") struct Library * ) = "\tjsr\t-16854(a6)";
#define ENGINE_get_default_RAND() __ENGINE_get_default_RAND(AmiSSLBase)

int __ENGINE_set_RAND(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const RAND_METHOD * rand_meth ) = "\tjsr\t-16860(a6)";
#define ENGINE_set_RAND(e, rand_meth) __ENGINE_set_RAND(AmiSSLBase, (e), (rand_meth))

int __ENGINE_set_default_DH(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16866(a6)";
#define ENGINE_set_default_DH(e) __ENGINE_set_default_DH(AmiSSLBase, (e))

ENGINE_CTRL_FUNC_PTR __ENGINE_get_ctrl_function(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-16872(a6)";
#define ENGINE_get_ctrl_function(e) __ENGINE_get_ctrl_function(AmiSSLBase, (e))

int __ENGINE_set_ctrl_function(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") ENGINE_CTRL_FUNC_PTR ctrl_f ) = "\tjsr\t-16878(a6)";
#define ENGINE_set_ctrl_function(e, ctrl_f) __ENGINE_set_ctrl_function(AmiSSLBase, (e), (ctrl_f))

void __ENGINE_unregister_ciphers(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16884(a6)";
#define ENGINE_unregister_ciphers(e) __ENGINE_unregister_ciphers(AmiSSLBase, (e))

void __ENGINE_unregister_RSA(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16890(a6)";
#define ENGINE_unregister_RSA(e) __ENGINE_unregister_RSA(AmiSSLBase, (e))

void __ENGINE_register_all_RAND(__reg("a6") struct Library * ) = "\tjsr\t-16896(a6)";
#define ENGINE_register_all_RAND() __ENGINE_register_all_RAND(AmiSSLBase)

void __OBSOLETE_ENGINE_load_dynamic(__reg("a6") struct Library * ) = "\tjsr\t-16902(a6)";
#define OBSOLETE_ENGINE_load_dynamic() __OBSOLETE_ENGINE_load_dynamic(AmiSSLBase)

ENGINE * __ENGINE_get_digest_engine(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-16908(a6)";
#define ENGINE_get_digest_engine(nid) __ENGINE_get_digest_engine(AmiSSLBase, (nid))

int __ENGINE_register_DH(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16914(a6)";
#define ENGINE_register_DH(e) __ENGINE_register_DH(AmiSSLBase, (e))

int __ENGINE_register_RAND(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16920(a6)";
#define ENGINE_register_RAND(e) __ENGINE_register_RAND(AmiSSLBase, (e))

void __OBSOLETE_ENGINE_load_cryptodev(__reg("a6") struct Library * ) = "\tjsr\t-16926(a6)";
#define OBSOLETE_ENGINE_load_cryptodev() __OBSOLETE_ENGINE_load_cryptodev(AmiSSLBase)

int __ENGINE_register_ciphers(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16932(a6)";
#define ENGINE_register_ciphers(e) __ENGINE_register_ciphers(AmiSSLBase, (e))

void __OBSOLETE_ENGINE_load_openssl(__reg("a6") struct Library * ) = "\tjsr\t-16944(a6)";
#define OBSOLETE_ENGINE_load_openssl() __OBSOLETE_ENGINE_load_openssl(AmiSSLBase)

const ENGINE_CMD_DEFN * __ENGINE_get_cmd_defns(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-16950(a6)";
#define ENGINE_get_cmd_defns(e) __ENGINE_get_cmd_defns(AmiSSLBase, (e))

int __ENGINE_set_load_privkey_function(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") ENGINE_LOAD_KEY_PTR loadpriv_f ) = "\tjsr\t-16956(a6)";
#define ENGINE_set_load_privkey_function(e, loadpriv_f) __ENGINE_set_load_privkey_function(AmiSSLBase, (e), (loadpriv_f))

int __ENGINE_set_default_digests(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16962(a6)";
#define ENGINE_set_default_digests(e) __ENGINE_set_default_digests(AmiSSLBase, (e))

int __ENGINE_register_RSA(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16968(a6)";
#define ENGINE_register_RSA(e) __ENGINE_register_RSA(AmiSSLBase, (e))

void __ENGINE_unregister_DSA(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-16974(a6)";
#define ENGINE_unregister_DSA(e) __ENGINE_unregister_DSA(AmiSSLBase, (e))

int __ENGINE_set_ciphers(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") ENGINE_CIPHERS_PTR f ) = "\tjsr\t-16980(a6)";
#define ENGINE_set_ciphers(e, f) __ENGINE_set_ciphers(AmiSSLBase, (e), (f))

int __RAND_set_rand_engine(__reg("a6") struct Library * , __reg("a0") ENGINE * engine ) = "\tjsr\t-16986(a6)";
#define RAND_set_rand_engine(engine) __RAND_set_rand_engine(AmiSSLBase, (engine))

const EVP_MD * __ENGINE_get_digest(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("d0") int nid ) = "\tjsr\t-16992(a6)";
#define ENGINE_get_digest(e, nid) __ENGINE_get_digest(AmiSSLBase, (e), (nid))

const EVP_CIPHER * __ENGINE_get_cipher(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("d0") int nid ) = "\tjsr\t-16998(a6)";
#define ENGINE_get_cipher(e, nid) __ENGINE_get_cipher(AmiSSLBase, (e), (nid))

int __ENGINE_cmd_is_executable(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("d0") int cmd ) = "\tjsr\t-17004(a6)";
#define ENGINE_cmd_is_executable(e, cmd) __ENGINE_cmd_is_executable(AmiSSLBase, (e), (cmd))

int __ENGINE_register_DSA(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-17010(a6)";
#define ENGINE_register_DSA(e) __ENGINE_register_DSA(AmiSSLBase, (e))

int __ENGINE_set_load_pubkey_function(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") ENGINE_LOAD_KEY_PTR loadpub_f ) = "\tjsr\t-17016(a6)";
#define ENGINE_set_load_pubkey_function(e, loadpub_f) __ENGINE_set_load_pubkey_function(AmiSSLBase, (e), (loadpub_f))

ENGINE_LOAD_KEY_PTR __ENGINE_get_load_pubkey_function(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-17022(a6)";
#define ENGINE_get_load_pubkey_function(e) __ENGINE_get_load_pubkey_function(AmiSSLBase, (e))

void __ENGINE_register_all_RSA(__reg("a6") struct Library * ) = "\tjsr\t-17028(a6)";
#define ENGINE_register_all_RSA() __ENGINE_register_all_RSA(AmiSSLBase)

void __ENGINE_unregister_digests(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-17034(a6)";
#define ENGINE_unregister_digests(e) __ENGINE_unregister_digests(AmiSSLBase, (e))

int __OBSOLETE_ENGINE_get_ex_new_index(__reg("a6") struct Library * , __reg("d0") long argl , __reg("a0") void * argp , __reg("a1") CRYPTO_EX_new * new_func , __reg("a2") CRYPTO_EX_dup * dep_func , __reg("a3") CRYPTO_EX_free * free_func ) = "\tjsr\t-17040(a6)";
#define OBSOLETE_ENGINE_get_ex_new_index(argl, argp, new_func, dep_func, free_func) __OBSOLETE_ENGINE_get_ex_new_index(AmiSSLBase, (argl), (argp), (new_func), (dep_func), (free_func))

void * __ENGINE_get_ex_data(__reg("a6") struct Library * , __reg("a0") const ENGINE * e , __reg("d0") int idx ) = "\tjsr\t-17046(a6)";
#define ENGINE_get_ex_data(e, idx) __ENGINE_get_ex_data(AmiSSLBase, (e), (idx))

int __ENGINE_set_cmd_defns(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const ENGINE_CMD_DEFN * defns ) = "\tjsr\t-17058(a6)";
#define ENGINE_set_cmd_defns(e, defns) __ENGINE_set_cmd_defns(AmiSSLBase, (e), (defns))

int __ENGINE_register_digests(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-17064(a6)";
#define ENGINE_register_digests(e) __ENGINE_register_digests(AmiSSLBase, (e))

void __ENGINE_register_all_DH(__reg("a6") struct Library * ) = "\tjsr\t-17070(a6)";
#define ENGINE_register_all_DH() __ENGINE_register_all_DH(AmiSSLBase)

int __ENGINE_get_flags(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-17076(a6)";
#define ENGINE_get_flags(e) __ENGINE_get_flags(AmiSSLBase, (e))

void __ENGINE_unregister_DH(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-17082(a6)";
#define ENGINE_unregister_DH(e) __ENGINE_unregister_DH(AmiSSLBase, (e))

void __ENGINE_register_all_DSA(__reg("a6") struct Library * ) = "\tjsr\t-17088(a6)";
#define ENGINE_register_all_DSA() __ENGINE_register_all_DSA(AmiSSLBase)

int __ENGINE_set_digests(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") ENGINE_DIGESTS_PTR f ) = "\tjsr\t-17094(a6)";
#define ENGINE_set_digests(e, f) __ENGINE_set_digests(AmiSSLBase, (e), (f))

int __ENGINE_register_complete(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-17100(a6)";
#define ENGINE_register_complete(e) __ENGINE_register_complete(AmiSSLBase, (e))

int __ENGINE_set_ex_data(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("d0") int idx , __reg("a1") void * arg ) = "\tjsr\t-17106(a6)";
#define ENGINE_set_ex_data(e, idx, arg) __ENGINE_set_ex_data(AmiSSLBase, (e), (idx), (arg))

int __ENGINE_set_destroy_function(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") ENGINE_GEN_INT_FUNC_PTR destroy_f ) = "\tjsr\t-17112(a6)";
#define ENGINE_set_destroy_function(e, destroy_f) __ENGINE_set_destroy_function(AmiSSLBase, (e), (destroy_f))

ENGINE * __ENGINE_get_cipher_engine(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-17118(a6)";
#define ENGINE_get_cipher_engine(nid) __ENGINE_get_cipher_engine(AmiSSLBase, (nid))

int __ENGINE_set_default_ciphers(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-17136(a6)";
#define ENGINE_set_default_ciphers(e) __ENGINE_set_default_ciphers(AmiSSLBase, (e))

void __ENGINE_unregister_RAND(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-17142(a6)";
#define ENGINE_unregister_RAND(e) __ENGINE_unregister_RAND(AmiSSLBase, (e))

void __ENGINE_set_table_flags(__reg("a6") struct Library * , __reg("d0") unsigned int flags ) = "\tjsr\t-17154(a6)";
#define ENGINE_set_table_flags(flags) __ENGINE_set_table_flags(AmiSSLBase, (flags))

ENGINE_GEN_INT_FUNC_PTR __ENGINE_get_destroy_function(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-17166(a6)";
#define ENGINE_get_destroy_function(e) __ENGINE_get_destroy_function(AmiSSLBase, (e))

unsigned int __ENGINE_get_table_flags(__reg("a6") struct Library * ) = "\tjsr\t-17184(a6)";
#define ENGINE_get_table_flags() __ENGINE_get_table_flags(AmiSSLBase)

int __ENGINE_set_flags(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("d0") int flags ) = "\tjsr\t-17190(a6)";
#define ENGINE_set_flags(e, flags) __ENGINE_set_flags(AmiSSLBase, (e), (flags))

ENGINE_LOAD_KEY_PTR __ENGINE_get_load_privkey_function(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-17196(a6)";
#define ENGINE_get_load_privkey_function(e) __ENGINE_get_load_privkey_function(AmiSSLBase, (e))

int __ENGINE_set_default_string(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const char * def_list ) = "\tjsr\t-17202(a6)";
#define ENGINE_set_default_string(e, def_list) __ENGINE_set_default_string(AmiSSLBase, (e), (def_list))

void __ENGINE_add_conf_module(__reg("a6") struct Library * ) = "\tjsr\t-17208(a6)";
#define ENGINE_add_conf_module() __ENGINE_add_conf_module(AmiSSLBase)

int __ENGINE_up_ref(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-17232(a6)";
#define ENGINE_up_ref(e) __ENGINE_up_ref(AmiSSLBase, (e))

int __EC_GROUP_get_trinomial_basis(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * eg , __reg("a1") unsigned int * k ) = "\tjsr\t-17256(a6)";
#define EC_GROUP_get_trinomial_basis(eg, k) __EC_GROUP_get_trinomial_basis(AmiSSLBase, (eg), (k))

int __SHA512_Update(__reg("a6") struct Library * , __reg("a0") SHA512_CTX * c , __reg("a1") const void * data , __reg("d0") size_t len ) = "\tjsr\t-17274(a6)";
#define SHA512_Update(c, data, len) __SHA512_Update(AmiSSLBase, (c), (data), (len))

int __i2d_ECPrivateKey(__reg("a6") struct Library * , __reg("a0") const EC_KEY * key , __reg("a1") unsigned char ** out ) = "\tjsr\t-17280(a6)";
#define i2d_ECPrivateKey(key, out) __i2d_ECPrivateKey(AmiSSLBase, (key), (out))

int __BN_GF2m_mod_exp_arr(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") const int * p , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-17286(a6)";
#define BN_GF2m_mod_exp_arr(r, a, b, p, ctx) __BN_GF2m_mod_exp_arr(AmiSSLBase, (r), (a), (b), (p), (ctx))

int __BN_GF2m_mod_mul_arr(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") const int * p , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-17292(a6)";
#define BN_GF2m_mod_mul_arr(r, a, b, p, ctx) __BN_GF2m_mod_mul_arr(AmiSSLBase, (r), (a), (b), (p), (ctx))

EC_KEY * __o2i_ECPublicKey(__reg("a6") struct Library * , __reg("a0") EC_KEY ** key , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-17298(a6)";
#define o2i_ECPublicKey(key, in, len) __o2i_ECPublicKey(AmiSSLBase, (key), (in), (len))

EC_KEY * __EC_KEY_copy(__reg("a6") struct Library * , __reg("a0") EC_KEY * dst , __reg("a1") const EC_KEY * src ) = "\tjsr\t-17304(a6)";
#define EC_KEY_copy(dst, src) __EC_KEY_copy(AmiSSLBase, (dst), (src))

int __EC_GROUP_check_discriminant(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") BN_CTX * ctx ) = "\tjsr\t-17316(a6)";
#define EC_GROUP_check_discriminant(group, ctx) __EC_GROUP_check_discriminant(AmiSSLBase, (group), (ctx))

int __i2o_ECPublicKey(__reg("a6") struct Library * , __reg("a0") const EC_KEY * key , __reg("a1") unsigned char ** out ) = "\tjsr\t-17322(a6)";
#define i2o_ECPublicKey(key, out) __i2o_ECPublicKey(AmiSSLBase, (key), (out))

EC_GROUP * __EC_GROUP_new_curve_GF2m(__reg("a6") struct Library * , __reg("a0") const BIGNUM * p , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-17328(a6)";
#define EC_GROUP_new_curve_GF2m(p, a, b, ctx) __EC_GROUP_new_curve_GF2m(AmiSSLBase, (p), (a), (b), (ctx))

struct ec_key_st * __EVP_PKEY_get1_EC_KEY(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey ) = "\tjsr\t-17340(a6)";
#define EVP_PKEY_get1_EC_KEY(pkey) __EVP_PKEY_get1_EC_KEY(AmiSSLBase, (pkey))

point_conversion_form_t __EC_KEY_get_conv_form(__reg("a6") struct Library * , __reg("a0") const EC_KEY * key ) = "\tjsr\t-17352(a6)";
#define EC_KEY_get_conv_form(key) __EC_KEY_get_conv_form(AmiSSLBase, (key))

void * __ENGINE_get_static_state(__reg("a6") struct Library * ) = "\tjsr\t-17358(a6)";
#define ENGINE_get_static_state() __ENGINE_get_static_state(AmiSSLBase)

ECDSA_SIG * __ECDSA_SIG_new(__reg("a6") struct Library * ) = "\tjsr\t-17364(a6)";
#define ECDSA_SIG_new() __ECDSA_SIG_new(AmiSSLBase)

EC_POINT * __EC_POINT_bn2point(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * g , __reg("a1") const BIGNUM * b , __reg("a2") EC_POINT * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-17370(a6)";
#define EC_POINT_bn2point(g, b, p, ctx) __EC_POINT_bn2point(AmiSSLBase, (g), (b), (p), (ctx))

int __ECDSA_sign_ex(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") const unsigned char * dgst , __reg("d1") int dgstlen , __reg("a1") unsigned char * sig , __reg("a2") unsigned int * siglen , __reg("a3") const BIGNUM * kinv , __reg("d2") const BIGNUM * rp , __reg("d3") EC_KEY * eckey ) = "\tjsr\t-17382(a6)";
#define ECDSA_sign_ex(type, dgst, dgstlen, sig, siglen, kinv, rp, eckey) __ECDSA_sign_ex(AmiSSLBase, (type), (dgst), (dgstlen), (sig), (siglen), (kinv), (rp), (eckey))

int __EC_GROUP_get_pentanomial_basis(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * ecgroup , __reg("a1") unsigned int * k1 , __reg("a2") unsigned int * k2 , __reg("a3") unsigned int * k3 ) = "\tjsr\t-17388(a6)";
#define EC_GROUP_get_pentanomial_basis(ecgroup, k1, k2, k3) __EC_GROUP_get_pentanomial_basis(AmiSSLBase, (ecgroup), (k1), (k2), (k3))

int __ECDSA_sign_setup(__reg("a6") struct Library * , __reg("a0") EC_KEY * eckey , __reg("a1") BN_CTX * ctx , __reg("a2") BIGNUM ** kinv , __reg("a3") BIGNUM ** rp ) = "\tjsr\t-17394(a6)";
#define ECDSA_sign_setup(eckey, ctx, kinv, rp) __ECDSA_sign_setup(AmiSSLBase, (eckey), (ctx), (kinv), (rp))

int __BN_GF2m_mod_solve_quad_arr(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const int * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-17400(a6)";
#define BN_GF2m_mod_solve_quad_arr(r, a, p, ctx) __BN_GF2m_mod_solve_quad_arr(AmiSSLBase, (r), (a), (p), (ctx))

int __EC_KEY_up_ref(__reg("a6") struct Library * , __reg("a0") EC_KEY * key ) = "\tjsr\t-17406(a6)";
#define EC_KEY_up_ref(key) __EC_KEY_up_ref(AmiSSLBase, (key))

EC_KEY * __d2i_EC_PUBKEY(__reg("a6") struct Library * , __reg("a0") EC_KEY ** a , __reg("a1") const unsigned char ** pp , __reg("a2") long length ) = "\tjsr\t-17412(a6)";
#define d2i_EC_PUBKEY(a, pp, length) __d2i_EC_PUBKEY(AmiSSLBase, (a), (pp), (length))

int __EC_GROUP_have_precompute_mult(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group ) = "\tjsr\t-17418(a6)";
#define EC_GROUP_have_precompute_mult(group) __EC_GROUP_have_precompute_mult(AmiSSLBase, (group))

int __BN_GF2m_mod_arr(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const int * p ) = "\tjsr\t-17430(a6)";
#define BN_GF2m_mod_arr(r, a, p) __BN_GF2m_mod_arr(AmiSSLBase, (r), (a), (p))

EC_POINT * __EC_POINT_dup(__reg("a6") struct Library * , __reg("a0") const EC_POINT * src , __reg("a1") const EC_GROUP * group ) = "\tjsr\t-17454(a6)";
#define EC_POINT_dup(src, group) __EC_POINT_dup(AmiSSLBase, (src), (group))

int __EVP_PKEY_set1_EC_KEY(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") struct ec_key_st * key ) = "\tjsr\t-17460(a6)";
#define EVP_PKEY_set1_EC_KEY(pkey, key) __EVP_PKEY_set1_EC_KEY(AmiSSLBase, (pkey), (key))

int __BN_GF2m_mod_sqrt_arr(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const int * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-17466(a6)";
#define BN_GF2m_mod_sqrt_arr(r, a, p, ctx) __BN_GF2m_mod_sqrt_arr(AmiSSLBase, (r), (a), (p), (ctx))

int __EC_KEY_set_private_key(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("a1") const BIGNUM * prv ) = "\tjsr\t-17478(a6)";
#define EC_KEY_set_private_key(key, prv) __EC_KEY_set_private_key(AmiSSLBase, (key), (prv))

int __BN_GF2m_poly2arr(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("a1") int * p , __reg("d0") int max ) = "\tjsr\t-17484(a6)";
#define BN_GF2m_poly2arr(a, p, max) __BN_GF2m_poly2arr(AmiSSLBase, (a), (p), (max))

int __i2d_ECParameters(__reg("a6") struct Library * , __reg("a0") const EC_KEY * key , __reg("a1") unsigned char ** out ) = "\tjsr\t-17490(a6)";
#define i2d_ECParameters(key, out) __i2d_ECParameters(AmiSSLBase, (key), (out))

int __SHA256_Init(__reg("a6") struct Library * , __reg("a0") SHA256_CTX * c ) = "\tjsr\t-17502(a6)";
#define SHA256_Init(c) __SHA256_Init(AmiSSLBase, (c))

unsigned char * __SHA224(__reg("a6") struct Library * , __reg("a0") const unsigned char * d , __reg("d0") size_t n , __reg("a1") unsigned char * md ) = "\tjsr\t-17514(a6)";
#define SHA224(d, n, md) __SHA224(AmiSSLBase, (d), (n), (md))

size_t __EC_GROUP_get_seed_len(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * ecgroup ) = "\tjsr\t-17526(a6)";
#define EC_GROUP_get_seed_len(ecgroup) __EC_GROUP_get_seed_len(AmiSSLBase, (ecgroup))

int __i2d_EC_PUBKEY(__reg("a6") struct Library * , __reg("a0") const EC_KEY * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-17532(a6)";
#define i2d_EC_PUBKEY(a, pp) __i2d_EC_PUBKEY(AmiSSLBase, (a), (pp))

const EC_METHOD * __EC_GFp_nist_method(__reg("a6") struct Library * ) = "\tjsr\t-17544(a6)";
#define EC_GFp_nist_method() __EC_GFp_nist_method(AmiSSLBase)

void __OBSOLETE_ENGINE_load_padlock(__reg("a6") struct Library * ) = "\tjsr\t-17550(a6)";
#define OBSOLETE_ENGINE_load_padlock() __OBSOLETE_ENGINE_load_padlock(AmiSSLBase)

void __EC_GROUP_set_curve_name(__reg("a6") struct Library * , __reg("a0") EC_GROUP * group , __reg("d0") int nid ) = "\tjsr\t-17556(a6)";
#define EC_GROUP_set_curve_name(group, nid) __EC_GROUP_set_curve_name(AmiSSLBase, (group), (nid))

int __BN_GF2m_mod_sqr_arr(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const int * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-17562(a6)";
#define BN_GF2m_mod_sqr_arr(r, a, p, ctx) __BN_GF2m_mod_sqr_arr(AmiSSLBase, (r), (a), (p), (ctx))

const BIO_METHOD * __BIO_s_datagram(__reg("a6") struct Library * ) = "\tjsr\t-17568(a6)";
#define BIO_s_datagram() __BIO_s_datagram(AmiSSLBase)

int __SHA384_Update(__reg("a6") struct Library * , __reg("a0") SHA512_CTX * c , __reg("a1") const void * data , __reg("d0") size_t len ) = "\tjsr\t-17586(a6)";
#define SHA384_Update(c, data, len) __SHA384_Update(AmiSSLBase, (c), (data), (len))

int __SHA224_Final(__reg("a6") struct Library * , __reg("a0") unsigned char * md , __reg("a1") SHA256_CTX * c ) = "\tjsr\t-17598(a6)";
#define SHA224_Final(md, c) __SHA224_Final(AmiSSLBase, (md), (c))

int __SHA224_Update(__reg("a6") struct Library * , __reg("a0") SHA256_CTX * c , __reg("a1") const void * data , __reg("d0") size_t len ) = "\tjsr\t-17604(a6)";
#define SHA224_Update(c, data, len) __SHA224_Update(AmiSSLBase, (c), (data), (len))

EC_KEY * __d2i_ECPrivateKey(__reg("a6") struct Library * , __reg("a0") EC_KEY ** key , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-17610(a6)";
#define d2i_ECPrivateKey(key, in, len) __d2i_ECPrivateKey(AmiSSLBase, (key), (in), (len))

int __SHA512_Final(__reg("a6") struct Library * , __reg("a0") unsigned char * md , __reg("a1") SHA512_CTX * c ) = "\tjsr\t-17622(a6)";
#define SHA512_Final(md, c) __SHA512_Final(AmiSSLBase, (md), (c))

int __EC_GROUP_get_asn1_flag(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group ) = "\tjsr\t-17628(a6)";
#define EC_GROUP_get_asn1_flag(group) __EC_GROUP_get_asn1_flag(AmiSSLBase, (group))

unsigned char * __EC_GROUP_get0_seed(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * x ) = "\tjsr\t-17640(a6)";
#define EC_GROUP_get0_seed(x) __EC_GROUP_get0_seed(AmiSSLBase, (x))

int __BN_GF2m_mod_div_arr(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * b , __reg("a3") const int * p , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-17646(a6)";
#define BN_GF2m_mod_div_arr(r, a, b, p, ctx) __BN_GF2m_mod_div_arr(AmiSSLBase, (r), (a), (b), (p), (ctx))

unsigned __EC_KEY_get_enc_flags(__reg("a6") struct Library * , __reg("a0") const EC_KEY * key ) = "\tjsr\t-17688(a6)";
#define EC_KEY_get_enc_flags(key) __EC_KEY_get_enc_flags(AmiSSLBase, (key))

int __EC_POINT_set_compressed_coordinates_GF2m(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") EC_POINT * p , __reg("a2") const BIGNUM * x , __reg("d0") int y_bit , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-17700(a6)";
#define EC_POINT_set_compressed_coordinates_GF2m(group, p, x, y_bit, ctx) __EC_POINT_set_compressed_coordinates_GF2m(AmiSSLBase, (group), (p), (x), (y_bit), (ctx))

int __EC_GROUP_cmp(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * a , __reg("a1") const EC_GROUP * b , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-17706(a6)";
#define EC_GROUP_cmp(a, b, ctx) __EC_GROUP_cmp(AmiSSLBase, (a), (b), (ctx))

int __SHA224_Init(__reg("a6") struct Library * , __reg("a0") SHA256_CTX * c ) = "\tjsr\t-17712(a6)";
#define SHA224_Init(c) __SHA224_Init(AmiSSLBase, (c))

int __SHA512_Init(__reg("a6") struct Library * , __reg("a0") SHA512_CTX * c ) = "\tjsr\t-17724(a6)";
#define SHA512_Init(c) __SHA512_Init(AmiSSLBase, (c))

int __EC_GROUP_get_basis_type(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group ) = "\tjsr\t-17736(a6)";
#define EC_GROUP_get_basis_type(group) __EC_GROUP_get_basis_type(AmiSSLBase, (group))

EC_GROUP * __EC_GROUP_dup(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * src ) = "\tjsr\t-17766(a6)";
#define EC_GROUP_dup(src) __EC_GROUP_dup(AmiSSLBase, (src))

void __SHA256_Transform(__reg("a6") struct Library * , __reg("a0") SHA256_CTX * c , __reg("a1") const unsigned char * data ) = "\tjsr\t-17778(a6)";
#define SHA256_Transform(c, data) __SHA256_Transform(AmiSSLBase, (c), (data))

void __EC_KEY_set_enc_flags(__reg("a6") struct Library * , __reg("a0") EC_KEY * eckey , __reg("d0") unsigned int flags ) = "\tjsr\t-17784(a6)";
#define EC_KEY_set_enc_flags(eckey, flags) __EC_KEY_set_enc_flags(AmiSSLBase, (eckey), (flags))

char * __EC_POINT_point2hex(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") const EC_POINT * point , __reg("d0") point_conversion_form_t form , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-17790(a6)";
#define EC_POINT_point2hex(group, point, form, ctx) __EC_POINT_point2hex(AmiSSLBase, (group), (point), (form), (ctx))

ECDSA_SIG * __ECDSA_do_sign_ex(__reg("a6") struct Library * , __reg("a0") const unsigned char * dgst , __reg("d0") int dgstlen , __reg("a1") const BIGNUM * kinv , __reg("a2") const BIGNUM * rp , __reg("a3") EC_KEY * eckey ) = "\tjsr\t-17802(a6)";
#define ECDSA_do_sign_ex(dgst, dgstlen, kinv, rp, eckey) __ECDSA_do_sign_ex(AmiSSLBase, (dgst), (dgstlen), (kinv), (rp), (eckey))

void __SHA512_Transform(__reg("a6") struct Library * , __reg("a0") SHA512_CTX * c , __reg("a1") const unsigned char * data ) = "\tjsr\t-17814(a6)";
#define SHA512_Transform(c, data) __SHA512_Transform(AmiSSLBase, (c), (data))

int __EC_KEY_set_public_key(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("a1") const EC_POINT * pub ) = "\tjsr\t-17826(a6)";
#define EC_KEY_set_public_key(key, pub) __EC_KEY_set_public_key(AmiSSLBase, (key), (pub))

int __EC_GROUP_get_curve_name(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group ) = "\tjsr\t-17850(a6)";
#define EC_GROUP_get_curve_name(group) __EC_GROUP_get_curve_name(AmiSSLBase, (group))

int __SHA256_Final(__reg("a6") struct Library * , __reg("a0") unsigned char * md , __reg("a1") SHA256_CTX * c ) = "\tjsr\t-17862(a6)";
#define SHA256_Final(md, c) __SHA256_Final(AmiSSLBase, (md), (c))

EC_KEY * __d2i_ECParameters(__reg("a6") struct Library * , __reg("a0") EC_KEY ** key , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-17892(a6)";
#define d2i_ECParameters(key, in, len) __d2i_ECParameters(AmiSSLBase, (key), (in), (len))

int __SHA384_Init(__reg("a6") struct Library * , __reg("a0") SHA512_CTX * c ) = "\tjsr\t-17898(a6)";
#define SHA384_Init(c) __SHA384_Init(AmiSSLBase, (c))

int __SHA384_Final(__reg("a6") struct Library * , __reg("a0") unsigned char * md , __reg("a1") SHA512_CTX * c ) = "\tjsr\t-17910(a6)";
#define SHA384_Final(md, c) __SHA384_Final(AmiSSLBase, (md), (c))

unsigned char * __SHA384(__reg("a6") struct Library * , __reg("a0") const unsigned char * d , __reg("d0") size_t n , __reg("a1") unsigned char * md ) = "\tjsr\t-17922(a6)";
#define SHA384(d, n, md) __SHA384(AmiSSLBase, (d), (n), (md))

EC_POINT * __EC_POINT_hex2point(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") const char * c , __reg("a2") EC_POINT * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-17940(a6)";
#define EC_POINT_hex2point(group, c, p, ctx) __EC_POINT_hex2point(AmiSSLBase, (group), (c), (p), (ctx))

int __SHA256_Update(__reg("a6") struct Library * , __reg("a0") SHA256_CTX * c , __reg("a1") const void * data , __reg("d0") size_t len ) = "\tjsr\t-17946(a6)";
#define SHA256_Update(c, data, len) __SHA256_Update(AmiSSLBase, (c), (data), (len))

int __BN_GF2m_mod_inv_arr(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * b , __reg("a2") const int * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-17952(a6)";
#define BN_GF2m_mod_inv_arr(r, b, p, ctx) __BN_GF2m_mod_inv_arr(AmiSSLBase, (r), (b), (p), (ctx))

int __DH_check_pub_key(__reg("a6") struct Library * , __reg("a0") const DH * dh , __reg("a1") const BIGNUM * pub_key , __reg("a2") int * codes ) = "\tjsr\t-17970(a6)";
#define DH_check_pub_key(dh, pub_key, codes) __DH_check_pub_key(AmiSSLBase, (dh), (pub_key), (codes))

void __Camellia_cbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const CAMELLIA_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") const int enc ) = "\tjsr\t-17976(a6)";
#define Camellia_cbc_encrypt(in, out, length, key, ivec, enc) __Camellia_cbc_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (enc))

void __Camellia_cfb128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const CAMELLIA_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") const int enc ) = "\tjsr\t-17982(a6)";
#define Camellia_cfb128_encrypt(in, out, length, key, ivec, num, enc) __Camellia_cfb128_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (num), (enc))

void __Camellia_cfb1_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const CAMELLIA_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") const int enc ) = "\tjsr\t-17988(a6)";
#define Camellia_cfb1_encrypt(in, out, length, key, ivec, num, enc) __Camellia_cfb1_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (num), (enc))

void __Camellia_cfb8_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const CAMELLIA_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") const int enc ) = "\tjsr\t-17994(a6)";
#define Camellia_cfb8_encrypt(in, out, length, key, ivec, num, enc) __Camellia_cfb8_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (num), (enc))

void __Camellia_ctr128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const CAMELLIA_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") unsigned char * ecount_buf , __reg("d2") unsigned int * num ) = "\tjsr\t-18000(a6)";
#define Camellia_ctr128_encrypt(in, out, length, key, ivec, ecount_buf, num) __Camellia_ctr128_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (ecount_buf), (num))

void __Camellia_decrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") const CAMELLIA_KEY * key ) = "\tjsr\t-18006(a6)";
#define Camellia_decrypt(in, out, key) __Camellia_decrypt(AmiSSLBase, (in), (out), (key))

void __Camellia_ecb_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") const CAMELLIA_KEY * key , __reg("d0") const int enc ) = "\tjsr\t-18012(a6)";
#define Camellia_ecb_encrypt(in, out, key, enc) __Camellia_ecb_encrypt(AmiSSLBase, (in), (out), (key), (enc))

void __Camellia_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") const CAMELLIA_KEY * key ) = "\tjsr\t-18018(a6)";
#define Camellia_encrypt(in, out, key) __Camellia_encrypt(AmiSSLBase, (in), (out), (key))

void __Camellia_ofb128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const CAMELLIA_KEY * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num ) = "\tjsr\t-18024(a6)";
#define Camellia_ofb128_encrypt(in, out, length, key, ivec, num) __Camellia_ofb128_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (num))

int __Camellia_set_key(__reg("a6") struct Library * , __reg("a0") const unsigned char * userKey , __reg("d0") const int bits , __reg("a1") CAMELLIA_KEY * key ) = "\tjsr\t-18030(a6)";
#define Camellia_set_key(userKey, bits, key) __Camellia_set_key(AmiSSLBase, (userKey), (bits), (key))

const EVP_CIPHER * __EVP_camellia_128_cbc(__reg("a6") struct Library * ) = "\tjsr\t-18036(a6)";
#define EVP_camellia_128_cbc() __EVP_camellia_128_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_128_cfb128(__reg("a6") struct Library * ) = "\tjsr\t-18042(a6)";
#define EVP_camellia_128_cfb128() __EVP_camellia_128_cfb128(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_128_cfb1(__reg("a6") struct Library * ) = "\tjsr\t-18048(a6)";
#define EVP_camellia_128_cfb1() __EVP_camellia_128_cfb1(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_128_cfb8(__reg("a6") struct Library * ) = "\tjsr\t-18054(a6)";
#define EVP_camellia_128_cfb8() __EVP_camellia_128_cfb8(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_128_ecb(__reg("a6") struct Library * ) = "\tjsr\t-18060(a6)";
#define EVP_camellia_128_ecb() __EVP_camellia_128_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_128_ofb(__reg("a6") struct Library * ) = "\tjsr\t-18066(a6)";
#define EVP_camellia_128_ofb() __EVP_camellia_128_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_192_cbc(__reg("a6") struct Library * ) = "\tjsr\t-18072(a6)";
#define EVP_camellia_192_cbc() __EVP_camellia_192_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_192_cfb128(__reg("a6") struct Library * ) = "\tjsr\t-18078(a6)";
#define EVP_camellia_192_cfb128() __EVP_camellia_192_cfb128(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_192_cfb1(__reg("a6") struct Library * ) = "\tjsr\t-18084(a6)";
#define EVP_camellia_192_cfb1() __EVP_camellia_192_cfb1(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_192_cfb8(__reg("a6") struct Library * ) = "\tjsr\t-18090(a6)";
#define EVP_camellia_192_cfb8() __EVP_camellia_192_cfb8(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_192_ecb(__reg("a6") struct Library * ) = "\tjsr\t-18096(a6)";
#define EVP_camellia_192_ecb() __EVP_camellia_192_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_192_ofb(__reg("a6") struct Library * ) = "\tjsr\t-18102(a6)";
#define EVP_camellia_192_ofb() __EVP_camellia_192_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_256_cbc(__reg("a6") struct Library * ) = "\tjsr\t-18108(a6)";
#define EVP_camellia_256_cbc() __EVP_camellia_256_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_256_cfb128(__reg("a6") struct Library * ) = "\tjsr\t-18114(a6)";
#define EVP_camellia_256_cfb128() __EVP_camellia_256_cfb128(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_256_cfb1(__reg("a6") struct Library * ) = "\tjsr\t-18120(a6)";
#define EVP_camellia_256_cfb1() __EVP_camellia_256_cfb1(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_256_cfb8(__reg("a6") struct Library * ) = "\tjsr\t-18126(a6)";
#define EVP_camellia_256_cfb8() __EVP_camellia_256_cfb8(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_256_ecb(__reg("a6") struct Library * ) = "\tjsr\t-18132(a6)";
#define EVP_camellia_256_ecb() __EVP_camellia_256_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_256_ofb(__reg("a6") struct Library * ) = "\tjsr\t-18138(a6)";
#define EVP_camellia_256_ofb() __EVP_camellia_256_ofb(AmiSSLBase)

void __AES_bi_ige_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const AES_KEY * key , __reg("a3") const AES_KEY * key2 , __reg("d1") const unsigned char * ivec , __reg("d2") const int enc ) = "\tjsr\t-18144(a6)";
#define AES_bi_ige_encrypt(in, out, length, key, key2, ivec, enc) __AES_bi_ige_encrypt(AmiSSLBase, (in), (out), (length), (key), (key2), (ivec), (enc))

void __SEED_decrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * s , __reg("a1") unsigned char * d , __reg("a2") const SEED_KEY_SCHEDULE * ks ) = "\tjsr\t-18150(a6)";
#define SEED_decrypt(s, d, ks) __SEED_decrypt(AmiSSLBase, (s), (d), (ks))

void __SEED_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * s , __reg("a1") unsigned char * d , __reg("a2") const SEED_KEY_SCHEDULE * ks ) = "\tjsr\t-18156(a6)";
#define SEED_encrypt(s, d, ks) __SEED_encrypt(AmiSSLBase, (s), (d), (ks))

void __SEED_cbc_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const SEED_KEY_SCHEDULE * ks , __reg("a3") unsigned char * ivec , __reg("d1") int enc ) = "\tjsr\t-18162(a6)";
#define SEED_cbc_encrypt(in, out, len, ks, ivec, enc) __SEED_cbc_encrypt(AmiSSLBase, (in), (out), (len), (ks), (ivec), (enc))

const EVP_CIPHER * __EVP_seed_ofb(__reg("a6") struct Library * ) = "\tjsr\t-18168(a6)";
#define EVP_seed_ofb() __EVP_seed_ofb(AmiSSLBase)

void __SEED_cfb128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const SEED_KEY_SCHEDULE * ks , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") int enc ) = "\tjsr\t-18174(a6)";
#define SEED_cfb128_encrypt(in, out, len, ks, ivec, num, enc) __SEED_cfb128_encrypt(AmiSSLBase, (in), (out), (len), (ks), (ivec), (num), (enc))

void __SEED_ofb128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const SEED_KEY_SCHEDULE * ks , __reg("a3") unsigned char * ivec , __reg("d1") int * num ) = "\tjsr\t-18180(a6)";
#define SEED_ofb128_encrypt(in, out, len, ks, ivec, num) __SEED_ofb128_encrypt(AmiSSLBase, (in), (out), (len), (ks), (ivec), (num))

const EVP_CIPHER * __EVP_seed_cbc(__reg("a6") struct Library * ) = "\tjsr\t-18186(a6)";
#define EVP_seed_cbc() __EVP_seed_cbc(AmiSSLBase)

void __SEED_ecb_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("a2") const SEED_KEY_SCHEDULE * ks , __reg("d0") int enc ) = "\tjsr\t-18192(a6)";
#define SEED_ecb_encrypt(in, out, ks, enc) __SEED_ecb_encrypt(AmiSSLBase, (in), (out), (ks), (enc))

const EVP_CIPHER * __EVP_seed_ecb(__reg("a6") struct Library * ) = "\tjsr\t-18198(a6)";
#define EVP_seed_ecb() __EVP_seed_ecb(AmiSSLBase)

void __SEED_set_key(__reg("a6") struct Library * , __reg("a0") const unsigned char * rawkey , __reg("a1") SEED_KEY_SCHEDULE * ks ) = "\tjsr\t-18204(a6)";
#define SEED_set_key(rawkey, ks) __SEED_set_key(AmiSSLBase, (rawkey), (ks))

const EVP_CIPHER * __EVP_seed_cfb128(__reg("a6") struct Library * ) = "\tjsr\t-18210(a6)";
#define EVP_seed_cfb128() __EVP_seed_cfb128(AmiSSLBase)

int __AES_unwrap_key(__reg("a6") struct Library * , __reg("a0") AES_KEY * key , __reg("a1") const unsigned char * iv , __reg("a2") unsigned char * out , __reg("a3") const unsigned char * in , __reg("d0") unsigned int inlen ) = "\tjsr\t-18216(a6)";
#define AES_unwrap_key(key, iv, out, in, inlen) __AES_unwrap_key(AmiSSLBase, (key), (iv), (out), (in), (inlen))

int __AES_wrap_key(__reg("a6") struct Library * , __reg("a0") AES_KEY * key , __reg("a1") const unsigned char * iv , __reg("a2") unsigned char * out , __reg("a3") const unsigned char * in , __reg("d0") unsigned int inlen ) = "\tjsr\t-18222(a6)";
#define AES_wrap_key(key, iv, out, in, inlen) __AES_wrap_key(AmiSSLBase, (key), (iv), (out), (in), (inlen))

void __CMS_ReceiptRequest_free(__reg("a6") struct Library * , __reg("a0") CMS_ReceiptRequest * rr ) = "\tjsr\t-18228(a6)";
#define CMS_ReceiptRequest_free(rr) __CMS_ReceiptRequest_free(AmiSSLBase, (rr))

CMS_CertificateChoices * __CMS_add0_CertificateChoices(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18240(a6)";
#define CMS_add0_CertificateChoices(cms) __CMS_add0_CertificateChoices(AmiSSLBase, (cms))

int __CMS_unsigned_add1_attr_by_OBJ(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int type , __reg("a2") const void * bytes , __reg("d1") int len ) = "\tjsr\t-18246(a6)";
#define CMS_unsigned_add1_attr_by_OBJ(si, obj, type, bytes, len) __CMS_unsigned_add1_attr_by_OBJ(AmiSSLBase, (si), (obj), (type), (bytes), (len))

int __ERR_load_CMS_strings(__reg("a6") struct Library * ) = "\tjsr\t-18252(a6)";
#define ERR_load_CMS_strings() __ERR_load_CMS_strings(AmiSSLBase)

CMS_ContentInfo * __CMS_sign_receipt(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") X509 * signcert , __reg("a2") EVP_PKEY * pkey , __reg("a3") STACK_OF(X509) * certs , __reg("d0") unsigned int flags ) = "\tjsr\t-18258(a6)";
#define CMS_sign_receipt(si, signcert, pkey, certs, flags) __CMS_sign_receipt(AmiSSLBase, (si), (signcert), (pkey), (certs), (flags))

int __i2d_CMS_ContentInfo(__reg("a6") struct Library * , __reg("a0") const CMS_ContentInfo * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-18264(a6)";
#define i2d_CMS_ContentInfo(a, out) __i2d_CMS_ContentInfo(AmiSSLBase, (a), (out))

X509_ATTRIBUTE * __CMS_signed_delete_attr(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("d0") int loc ) = "\tjsr\t-18270(a6)";
#define CMS_signed_delete_attr(si, loc) __CMS_signed_delete_attr(AmiSSLBase, (si), (loc))

CMS_ContentInfo * __d2i_CMS_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") CMS_ContentInfo ** cms ) = "\tjsr\t-18276(a6)";
#define d2i_CMS_bio(bp, cms) __d2i_CMS_bio(AmiSSLBase, (bp), (cms))

int __CMS_unsigned_get_attr_by_NID(__reg("a6") struct Library * , __reg("a0") const CMS_SignerInfo * si , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-18282(a6)";
#define CMS_unsigned_get_attr_by_NID(si, nid, lastpos) __CMS_unsigned_get_attr_by_NID(AmiSSLBase, (si), (nid), (lastpos))

int __CMS_verify(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") STACK_OF(X509) * certs , __reg("a2") X509_STORE * store , __reg("a3") BIO * dcont , __reg("d0") BIO * out , __reg("d1") unsigned int flags ) = "\tjsr\t-18288(a6)";
#define CMS_verify(cms, certs, store, dcont, out, flags) __CMS_verify(AmiSSLBase, (cms), (certs), (store), (dcont), (out), (flags))

CMS_ContentInfo * __SMIME_read_CMS(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") BIO ** biocont ) = "\tjsr\t-18294(a6)";
#define SMIME_read_CMS(bio, biocont) __SMIME_read_CMS(AmiSSLBase, (bio), (biocont))

int __CMS_decrypt_set1_key(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") unsigned char * key , __reg("d0") size_t keylen , __reg("a2") const unsigned char * id , __reg("d1") size_t idlen ) = "\tjsr\t-18300(a6)";
#define CMS_decrypt_set1_key(cms, key, keylen, id, idlen) __CMS_decrypt_set1_key(AmiSSLBase, (cms), (key), (keylen), (id), (idlen))

void __CMS_SignerInfo_get0_algs(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") EVP_PKEY ** pk , __reg("a2") X509 ** signer , __reg("a3") X509_ALGOR ** pdig , __reg("d0") X509_ALGOR ** psig ) = "\tjsr\t-18306(a6)";
#define CMS_SignerInfo_get0_algs(si, pk, signer, pdig, psig) __CMS_SignerInfo_get0_algs(AmiSSLBase, (si), (pk), (signer), (pdig), (psig))

int __CMS_add1_cert(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") X509 * cert ) = "\tjsr\t-18312(a6)";
#define CMS_add1_cert(cms, cert) __CMS_add1_cert(AmiSSLBase, (cms), (cert))

int __CMS_set_detached(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("d0") int detached ) = "\tjsr\t-18318(a6)";
#define CMS_set_detached(cms, detached) __CMS_set_detached(AmiSSLBase, (cms), (detached))

CMS_ContentInfo * __CMS_encrypt(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509) * certs , __reg("a1") BIO * in , __reg("a2") const EVP_CIPHER * cipher , __reg("d0") unsigned int flags ) = "\tjsr\t-18324(a6)";
#define CMS_encrypt(certs, in, cipher, flags) __CMS_encrypt(AmiSSLBase, (certs), (in), (cipher), (flags))

CMS_ContentInfo * __CMS_EnvelopedData_create(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) = "\tjsr\t-18330(a6)";
#define CMS_EnvelopedData_create(cipher) __CMS_EnvelopedData_create(AmiSSLBase, (cipher))

int __CMS_uncompress(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") BIO * dcont , __reg("a2") BIO * out , __reg("d0") unsigned int flags ) = "\tjsr\t-18336(a6)";
#define CMS_uncompress(cms, dcont, out, flags) __CMS_uncompress(AmiSSLBase, (cms), (dcont), (out), (flags))

int __CMS_add0_crl(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") X509_CRL * crl ) = "\tjsr\t-18342(a6)";
#define CMS_add0_crl(cms, crl) __CMS_add0_crl(AmiSSLBase, (cms), (crl))

int __CMS_SignerInfo_verify_content(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") BIO * chain ) = "\tjsr\t-18348(a6)";
#define CMS_SignerInfo_verify_content(si, chain) __CMS_SignerInfo_verify_content(AmiSSLBase, (si), (chain))

void * __CMS_unsigned_get0_data_by_OBJ(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") ASN1_OBJECT * oid , __reg("d0") int lastpos , __reg("d1") int type ) = "\tjsr\t-18354(a6)";
#define CMS_unsigned_get0_data_by_OBJ(si, oid, lastpos, type) __CMS_unsigned_get0_data_by_OBJ(AmiSSLBase, (si), (oid), (lastpos), (type))

int __PEM_write_bio_CMS(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const CMS_ContentInfo * cms ) = "\tjsr\t-18360(a6)";
#define PEM_write_bio_CMS(out, cms) __PEM_write_bio_CMS(AmiSSLBase, (out), (cms))

X509_ATTRIBUTE * __CMS_unsigned_get_attr(__reg("a6") struct Library * , __reg("a0") const CMS_SignerInfo * si , __reg("d0") int loc ) = "\tjsr\t-18366(a6)";
#define CMS_unsigned_get_attr(si, loc) __CMS_unsigned_get_attr(AmiSSLBase, (si), (loc))

int __CMS_RecipientInfo_ktri_cert_cmp(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") X509 * cert ) = "\tjsr\t-18372(a6)";
#define CMS_RecipientInfo_ktri_cert_cmp(ri, cert) __CMS_RecipientInfo_ktri_cert_cmp(AmiSSLBase, (ri), (cert))

int __CMS_RecipientInfo_ktri_get0_algs(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") EVP_PKEY ** pk , __reg("a2") X509 ** recip , __reg("a3") X509_ALGOR ** palg ) = "\tjsr\t-18378(a6)";
#define CMS_RecipientInfo_ktri_get0_algs(ri, pk, recip, palg) __CMS_RecipientInfo_ktri_get0_algs(AmiSSLBase, (ri), (pk), (recip), (palg))

void __CMS_ContentInfo_free(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18384(a6)";
#define CMS_ContentInfo_free(cms) __CMS_ContentInfo_free(AmiSSLBase, (cms))

int __CMS_final(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") BIO * data , __reg("a2") BIO * dcont , __reg("d0") unsigned int flags ) = "\tjsr\t-18390(a6)";
#define CMS_final(cms, data, dcont, flags) __CMS_final(AmiSSLBase, (cms), (data), (dcont), (flags))

int __CMS_add_simple_smimecap(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_ALGOR) ** algs , __reg("d0") int algnid , __reg("d1") int keysize ) = "\tjsr\t-18396(a6)";
#define CMS_add_simple_smimecap(algs, algnid, keysize) __CMS_add_simple_smimecap(AmiSSLBase, (algs), (algnid), (keysize))

int __CMS_SignerInfo_verify(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si ) = "\tjsr\t-18402(a6)";
#define CMS_SignerInfo_verify(si) __CMS_SignerInfo_verify(AmiSSLBase, (si))

int __CMS_data(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") BIO * out , __reg("d0") unsigned int flags ) = "\tjsr\t-18408(a6)";
#define CMS_data(cms, out, flags) __CMS_data(AmiSSLBase, (cms), (out), (flags))

CMS_ReceiptRequest * __d2i_CMS_ReceiptRequest(__reg("a6") struct Library * , __reg("a0") CMS_ReceiptRequest ** a , __reg("a1") unsigned char const ** in , __reg("a2") long len ) = "\tjsr\t-18414(a6)";
#define d2i_CMS_ReceiptRequest(a, in, len) __d2i_CMS_ReceiptRequest(AmiSSLBase, (a), (in), (len))

CMS_ContentInfo * __CMS_compress(__reg("a6") struct Library * , __reg("a0") BIO * in , __reg("d0") int comp_nid , __reg("d1") unsigned int flags ) = "\tjsr\t-18420(a6)";
#define CMS_compress(in, comp_nid, flags) __CMS_compress(AmiSSLBase, (in), (comp_nid), (flags))

CMS_ContentInfo * __CMS_digest_create(__reg("a6") struct Library * , __reg("a0") BIO * in , __reg("a1") const EVP_MD * md , __reg("d0") unsigned int flags ) = "\tjsr\t-18426(a6)";
#define CMS_digest_create(in, md, flags) __CMS_digest_create(AmiSSLBase, (in), (md), (flags))

int __CMS_SignerInfo_cert_cmp(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") X509 * cert ) = "\tjsr\t-18432(a6)";
#define CMS_SignerInfo_cert_cmp(si, cert) __CMS_SignerInfo_cert_cmp(AmiSSLBase, (si), (cert))

int __CMS_SignerInfo_sign(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si ) = "\tjsr\t-18438(a6)";
#define CMS_SignerInfo_sign(si) __CMS_SignerInfo_sign(AmiSSLBase, (si))

CMS_ContentInfo * __CMS_data_create(__reg("a6") struct Library * , __reg("a0") BIO * in , __reg("d0") unsigned int flags ) = "\tjsr\t-18444(a6)";
#define CMS_data_create(in, flags) __CMS_data_create(AmiSSLBase, (in), (flags))

int __i2d_CMS_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") CMS_ContentInfo * cms ) = "\tjsr\t-18450(a6)";
#define i2d_CMS_bio(bp, cms) __i2d_CMS_bio(AmiSSLBase, (bp), (cms))

int __CMS_EncryptedData_set1_key(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") const EVP_CIPHER * ciph , __reg("a2") const unsigned char * key , __reg("d0") size_t keylen ) = "\tjsr\t-18456(a6)";
#define CMS_EncryptedData_set1_key(cms, ciph, key, keylen) __CMS_EncryptedData_set1_key(AmiSSLBase, (cms), (ciph), (key), (keylen))

int __CMS_decrypt(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") EVP_PKEY * pkey , __reg("a2") X509 * cert , __reg("a3") BIO * dcont , __reg("d0") BIO * out , __reg("d1") unsigned int flags ) = "\tjsr\t-18462(a6)";
#define CMS_decrypt(cms, pkey, cert, dcont, out, flags) __CMS_decrypt(AmiSSLBase, (cms), (pkey), (cert), (dcont), (out), (flags))

X509_ATTRIBUTE * __CMS_unsigned_delete_attr(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("d0") int loc ) = "\tjsr\t-18468(a6)";
#define CMS_unsigned_delete_attr(si, loc) __CMS_unsigned_delete_attr(AmiSSLBase, (si), (loc))

int __CMS_unsigned_get_attr_count(__reg("a6") struct Library * , __reg("a0") const CMS_SignerInfo * si ) = "\tjsr\t-18474(a6)";
#define CMS_unsigned_get_attr_count(si) __CMS_unsigned_get_attr_count(AmiSSLBase, (si))

int __CMS_add_smimecap(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") STACK_OF(X509_ALGOR) * algs ) = "\tjsr\t-18480(a6)";
#define CMS_add_smimecap(si, algs) __CMS_add_smimecap(AmiSSLBase, (si), (algs))

int __CMS_signed_get_attr_by_OBJ(__reg("a6") struct Library * , __reg("a0") const CMS_SignerInfo * si , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-18492(a6)";
#define CMS_signed_get_attr_by_OBJ(si, obj, lastpos) __CMS_signed_get_attr_by_OBJ(AmiSSLBase, (si), (obj), (lastpos))

CMS_ContentInfo * __d2i_CMS_ContentInfo(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo ** a , __reg("a1") unsigned char const ** in , __reg("a2") long len ) = "\tjsr\t-18498(a6)";
#define d2i_CMS_ContentInfo(a, in, len) __d2i_CMS_ContentInfo(AmiSSLBase, (a), (in), (len))

int __CMS_add_standard_smimecap(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_ALGOR) ** smcap ) = "\tjsr\t-18504(a6)";
#define CMS_add_standard_smimecap(smcap) __CMS_add_standard_smimecap(AmiSSLBase, (smcap))

CMS_ContentInfo * __CMS_ContentInfo_new(__reg("a6") struct Library * ) = "\tjsr\t-18510(a6)";
#define CMS_ContentInfo_new() __CMS_ContentInfo_new(AmiSSLBase)

int __CMS_RecipientInfo_type(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri ) = "\tjsr\t-18516(a6)";
#define CMS_RecipientInfo_type(ri) __CMS_RecipientInfo_type(AmiSSLBase, (ri))

const ASN1_OBJECT * __CMS_get0_type(__reg("a6") struct Library * , __reg("a0") const CMS_ContentInfo * cms ) = "\tjsr\t-18522(a6)";
#define CMS_get0_type(cms) __CMS_get0_type(AmiSSLBase, (cms))

int __CMS_is_detached(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18528(a6)";
#define CMS_is_detached(cms) __CMS_is_detached(AmiSSLBase, (cms))

CMS_ContentInfo * __CMS_sign(__reg("a6") struct Library * , __reg("a0") X509 * signcert , __reg("a1") EVP_PKEY * pkey , __reg("a2") STACK_OF(X509) * certs , __reg("a3") BIO * data , __reg("d0") unsigned int flags ) = "\tjsr\t-18534(a6)";
#define CMS_sign(signcert, pkey, certs, data, flags) __CMS_sign(AmiSSLBase, (signcert), (pkey), (certs), (data), (flags))

int __CMS_signed_add1_attr(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") X509_ATTRIBUTE * attr ) = "\tjsr\t-18540(a6)";
#define CMS_signed_add1_attr(si, attr) __CMS_signed_add1_attr(AmiSSLBase, (si), (attr))

int __CMS_unsigned_get_attr_by_OBJ(__reg("a6") struct Library * , __reg("a0") const CMS_SignerInfo * si , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-18546(a6)";
#define CMS_unsigned_get_attr_by_OBJ(si, obj, lastpos) __CMS_unsigned_get_attr_by_OBJ(AmiSSLBase, (si), (obj), (lastpos))

int __SMIME_write_CMS(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") CMS_ContentInfo * cms , __reg("a2") BIO * data , __reg("d0") int flags ) = "\tjsr\t-18552(a6)";
#define SMIME_write_CMS(bio, cms, data, flags) __SMIME_write_CMS(AmiSSLBase, (bio), (cms), (data), (flags))

int __CMS_EncryptedData_decrypt(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") const unsigned char * key , __reg("d0") size_t keylen , __reg("a2") BIO * dcont , __reg("a3") BIO * out , __reg("d1") unsigned int flags ) = "\tjsr\t-18558(a6)";
#define CMS_EncryptedData_decrypt(cms, key, keylen, dcont, out, flags) __CMS_EncryptedData_decrypt(AmiSSLBase, (cms), (key), (keylen), (dcont), (out), (flags))

STACK_OF(CMS_RecipientInfo) * __CMS_get0_RecipientInfos(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18564(a6)";
#define CMS_get0_RecipientInfos(cms) __CMS_get0_RecipientInfos(AmiSSLBase, (cms))

CMS_RevocationInfoChoice * __CMS_add0_RevocationInfoChoice(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18570(a6)";
#define CMS_add0_RevocationInfoChoice(cms) __CMS_add0_RevocationInfoChoice(AmiSSLBase, (cms))

int __CMS_decrypt_set1_pkey(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") EVP_PKEY * pk , __reg("a2") X509 * cert ) = "\tjsr\t-18576(a6)";
#define CMS_decrypt_set1_pkey(cms, pk, cert) __CMS_decrypt_set1_pkey(AmiSSLBase, (cms), (pk), (cert))

void __CMS_SignerInfo_set1_signer_cert(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") X509 * signer ) = "\tjsr\t-18582(a6)";
#define CMS_SignerInfo_set1_signer_cert(si, signer) __CMS_SignerInfo_set1_signer_cert(AmiSSLBase, (si), (signer))

STACK_OF(X509) * __CMS_get0_signers(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18588(a6)";
#define CMS_get0_signers(cms) __CMS_get0_signers(AmiSSLBase, (cms))

void __CMS_ReceiptRequest_get0_values(__reg("a6") struct Library * , __reg("a0") CMS_ReceiptRequest * rr , __reg("a1") ASN1_STRING ** pcid , __reg("a2") int * pallorfirst , __reg("a3") STACK_OF(GENERAL_NAMES) ** plist , __reg("d0") STACK_OF(GENERAL_NAMES) ** prto ) = "\tjsr\t-18594(a6)";
#define CMS_ReceiptRequest_get0_values(rr, pcid, pallorfirst, plist, prto) __CMS_ReceiptRequest_get0_values(AmiSSLBase, (rr), (pcid), (pallorfirst), (plist), (prto))

void * __CMS_signed_get0_data_by_OBJ(__reg("a6") struct Library * , __reg("a0") const CMS_SignerInfo * si , __reg("a1") const ASN1_OBJECT * oid , __reg("d0") int lastpos , __reg("d1") int type ) = "\tjsr\t-18600(a6)";
#define CMS_signed_get0_data_by_OBJ(si, oid, lastpos, type) __CMS_signed_get0_data_by_OBJ(AmiSSLBase, (si), (oid), (lastpos), (type))

STACK_OF(CMS_SignerInfo) * __CMS_get0_SignerInfos(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18606(a6)";
#define CMS_get0_SignerInfos(cms) __CMS_get0_SignerInfos(AmiSSLBase, (cms))

int __CMS_add0_cert(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") X509 * cert ) = "\tjsr\t-18612(a6)";
#define CMS_add0_cert(cms, cert) __CMS_add0_cert(AmiSSLBase, (cms), (cert))

CMS_ContentInfo * __CMS_EncryptedData_encrypt(__reg("a6") struct Library * , __reg("a0") BIO * in , __reg("a1") const EVP_CIPHER * cipher , __reg("a2") const unsigned char * key , __reg("d0") size_t keylen , __reg("d1") unsigned int flags ) = "\tjsr\t-18618(a6)";
#define CMS_EncryptedData_encrypt(in, cipher, key, keylen, flags) __CMS_EncryptedData_encrypt(AmiSSLBase, (in), (cipher), (key), (keylen), (flags))

int __CMS_digest_verify(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") BIO * dcont , __reg("a2") BIO * out , __reg("d0") unsigned int flags ) = "\tjsr\t-18624(a6)";
#define CMS_digest_verify(cms, dcont, out, flags) __CMS_digest_verify(AmiSSLBase, (cms), (dcont), (out), (flags))

int __CMS_set1_signers_certs(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") STACK_OF(X509) * certs , __reg("d0") unsigned int flags ) = "\tjsr\t-18630(a6)";
#define CMS_set1_signers_certs(cms, certs, flags) __CMS_set1_signers_certs(AmiSSLBase, (cms), (certs), (flags))

X509_ATTRIBUTE * __CMS_signed_get_attr(__reg("a6") struct Library * , __reg("a0") const CMS_SignerInfo * si , __reg("d0") int loc ) = "\tjsr\t-18636(a6)";
#define CMS_signed_get_attr(si, loc) __CMS_signed_get_attr(AmiSSLBase, (si), (loc))

int __CMS_RecipientInfo_set0_key(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") unsigned char * key , __reg("d0") size_t keylen ) = "\tjsr\t-18642(a6)";
#define CMS_RecipientInfo_set0_key(ri, key, keylen) __CMS_RecipientInfo_set0_key(AmiSSLBase, (ri), (key), (keylen))

int __CMS_SignedData_init(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18648(a6)";
#define CMS_SignedData_init(cms) __CMS_SignedData_init(AmiSSLBase, (cms))

int __CMS_RecipientInfo_kekri_get0_id(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") X509_ALGOR ** palg , __reg("a2") ASN1_OCTET_STRING ** pid , __reg("a3") ASN1_GENERALIZEDTIME ** pdate , __reg("d0") ASN1_OBJECT ** potherid , __reg("d1") ASN1_TYPE ** pothertype ) = "\tjsr\t-18654(a6)";
#define CMS_RecipientInfo_kekri_get0_id(ri, palg, pid, pdate, potherid, pothertype) __CMS_RecipientInfo_kekri_get0_id(AmiSSLBase, (ri), (palg), (pid), (pdate), (potherid), (pothertype))

int __CMS_verify_receipt(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * rcms , __reg("a1") CMS_ContentInfo * ocms , __reg("a2") STACK_OF(X509) * certs , __reg("a3") X509_STORE * store , __reg("d0") unsigned int flags ) = "\tjsr\t-18660(a6)";
#define CMS_verify_receipt(rcms, ocms, certs, store, flags) __CMS_verify_receipt(AmiSSLBase, (rcms), (ocms), (certs), (store), (flags))

CMS_ContentInfo * __PEM_read_bio_CMS(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") CMS_ContentInfo ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-18666(a6)";
#define PEM_read_bio_CMS(bp, x, cb, u) __PEM_read_bio_CMS(AmiSSLBase, (bp), (x), (cb), (u))

STACK_OF(X509_CRL) * __CMS_get1_crls(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18672(a6)";
#define CMS_get1_crls(cms) __CMS_get1_crls(AmiSSLBase, (cms))

CMS_RecipientInfo * __CMS_add0_recipient_key(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("d0") int nid , __reg("a1") unsigned char * key , __reg("d1") size_t keylen , __reg("a2") unsigned char * id , __reg("d2") size_t idlen , __reg("a3") ASN1_GENERALIZEDTIME * date , __reg("d3") ASN1_OBJECT * otherTypeId , __reg("d4") ASN1_TYPE * otherType ) = "\tjsr\t-18678(a6)";
#define CMS_add0_recipient_key(cms, nid, key, keylen, id, idlen, date, otherTypeId, otherType) __CMS_add0_recipient_key(AmiSSLBase, (cms), (nid), (key), (keylen), (id), (idlen), (date), (otherTypeId), (otherType))

CMS_ReceiptRequest * __CMS_ReceiptRequest_new(__reg("a6") struct Library * ) = "\tjsr\t-18684(a6)";
#define CMS_ReceiptRequest_new() __CMS_ReceiptRequest_new(AmiSSLBase)

ASN1_OCTET_STRING ** __CMS_get0_content(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18690(a6)";
#define CMS_get0_content(cms) __CMS_get0_content(AmiSSLBase, (cms))

int __CMS_get1_ReceiptRequest(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") CMS_ReceiptRequest ** prr ) = "\tjsr\t-18696(a6)";
#define CMS_get1_ReceiptRequest(si, prr) __CMS_get1_ReceiptRequest(AmiSSLBase, (si), (prr))

int __CMS_signed_add1_attr_by_OBJ(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int type , __reg("a2") const void * bytes , __reg("d1") int len ) = "\tjsr\t-18702(a6)";
#define CMS_signed_add1_attr_by_OBJ(si, obj, type, bytes, len) __CMS_signed_add1_attr_by_OBJ(AmiSSLBase, (si), (obj), (type), (bytes), (len))

int __CMS_RecipientInfo_kekri_id_cmp(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") const unsigned char * id , __reg("d0") size_t idlen ) = "\tjsr\t-18708(a6)";
#define CMS_RecipientInfo_kekri_id_cmp(ri, id, idlen) __CMS_RecipientInfo_kekri_id_cmp(AmiSSLBase, (ri), (id), (idlen))

int __CMS_add1_ReceiptRequest(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") CMS_ReceiptRequest * rr ) = "\tjsr\t-18714(a6)";
#define CMS_add1_ReceiptRequest(si, rr) __CMS_add1_ReceiptRequest(AmiSSLBase, (si), (rr))

int __CMS_SignerInfo_get0_signer_id(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") ASN1_OCTET_STRING ** keyid , __reg("a2") X509_NAME ** issuer , __reg("a3") ASN1_INTEGER ** sno ) = "\tjsr\t-18720(a6)";
#define CMS_SignerInfo_get0_signer_id(si, keyid, issuer, sno) __CMS_SignerInfo_get0_signer_id(AmiSSLBase, (si), (keyid), (issuer), (sno))

int __CMS_unsigned_add1_attr_by_NID(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("d0") int nid , __reg("d1") int type , __reg("a1") const void * bytes , __reg("d2") int len ) = "\tjsr\t-18726(a6)";
#define CMS_unsigned_add1_attr_by_NID(si, nid, type, bytes, len) __CMS_unsigned_add1_attr_by_NID(AmiSSLBase, (si), (nid), (type), (bytes), (len))

int __CMS_unsigned_add1_attr(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") X509_ATTRIBUTE * attr ) = "\tjsr\t-18732(a6)";
#define CMS_unsigned_add1_attr(si, attr) __CMS_unsigned_add1_attr(AmiSSLBase, (si), (attr))

int __CMS_signed_get_attr_by_NID(__reg("a6") struct Library * , __reg("a0") const CMS_SignerInfo * si , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-18738(a6)";
#define CMS_signed_get_attr_by_NID(si, nid, lastpos) __CMS_signed_get_attr_by_NID(AmiSSLBase, (si), (nid), (lastpos))

STACK_OF(X509) * __CMS_get1_certs(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18744(a6)";
#define CMS_get1_certs(cms) __CMS_get1_certs(AmiSSLBase, (cms))

int __CMS_signed_add1_attr_by_NID(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("d0") int nid , __reg("d1") int type , __reg("a1") const void * bytes , __reg("d2") int len ) = "\tjsr\t-18750(a6)";
#define CMS_signed_add1_attr_by_NID(si, nid, type, bytes, len) __CMS_signed_add1_attr_by_NID(AmiSSLBase, (si), (nid), (type), (bytes), (len))

int __CMS_unsigned_add1_attr_by_txt(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") const char * attrname , __reg("d0") int type , __reg("a2") const void * bytes , __reg("d1") int len ) = "\tjsr\t-18756(a6)";
#define CMS_unsigned_add1_attr_by_txt(si, attrname, type, bytes, len) __CMS_unsigned_add1_attr_by_txt(AmiSSLBase, (si), (attrname), (type), (bytes), (len))

int __CMS_dataFinal(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") BIO * bio ) = "\tjsr\t-18762(a6)";
#define CMS_dataFinal(cms, bio) __CMS_dataFinal(AmiSSLBase, (cms), (bio))

int __CMS_RecipientInfo_ktri_get0_signer_id(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") ASN1_OCTET_STRING ** keyid , __reg("a2") X509_NAME ** issuer , __reg("a3") ASN1_INTEGER ** sno ) = "\tjsr\t-18768(a6)";
#define CMS_RecipientInfo_ktri_get0_signer_id(ri, keyid, issuer, sno) __CMS_RecipientInfo_ktri_get0_signer_id(AmiSSLBase, (ri), (keyid), (issuer), (sno))

int __i2d_CMS_ReceiptRequest(__reg("a6") struct Library * , __reg("a0") const CMS_ReceiptRequest * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-18774(a6)";
#define i2d_CMS_ReceiptRequest(a, out) __i2d_CMS_ReceiptRequest(AmiSSLBase, (a), (out))

CMS_RecipientInfo * __CMS_add1_recipient_cert(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") X509 * recip , __reg("d0") unsigned int flags ) = "\tjsr\t-18780(a6)";
#define CMS_add1_recipient_cert(cms, recip, flags) __CMS_add1_recipient_cert(AmiSSLBase, (cms), (recip), (flags))

BIO * __CMS_dataInit(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") BIO * icont ) = "\tjsr\t-18786(a6)";
#define CMS_dataInit(cms, icont) __CMS_dataInit(AmiSSLBase, (cms), (icont))

int __CMS_signed_add1_attr_by_txt(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si , __reg("a1") const char * attrname , __reg("d0") int type , __reg("a2") const void * bytes , __reg("d1") int len ) = "\tjsr\t-18792(a6)";
#define CMS_signed_add1_attr_by_txt(si, attrname, type, bytes, len) __CMS_signed_add1_attr_by_txt(AmiSSLBase, (si), (attrname), (type), (bytes), (len))

int __CMS_RecipientInfo_decrypt(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") CMS_RecipientInfo * ri ) = "\tjsr\t-18798(a6)";
#define CMS_RecipientInfo_decrypt(cms, ri) __CMS_RecipientInfo_decrypt(AmiSSLBase, (cms), (ri))

int __CMS_signed_get_attr_count(__reg("a6") struct Library * , __reg("a0") const CMS_SignerInfo * si ) = "\tjsr\t-18804(a6)";
#define CMS_signed_get_attr_count(si) __CMS_signed_get_attr_count(AmiSSLBase, (si))

const ASN1_OBJECT * __CMS_get0_eContentType(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms ) = "\tjsr\t-18810(a6)";
#define CMS_get0_eContentType(cms) __CMS_get0_eContentType(AmiSSLBase, (cms))

int __CMS_set1_eContentType(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") const ASN1_OBJECT * oid ) = "\tjsr\t-18816(a6)";
#define CMS_set1_eContentType(cms, oid) __CMS_set1_eContentType(AmiSSLBase, (cms), (oid))

CMS_ReceiptRequest * __CMS_ReceiptRequest_create0(__reg("a6") struct Library * , __reg("a0") unsigned char * id , __reg("d0") int idlen , __reg("d1") int allorfirst , __reg("a1") STACK_OF(GENERAL_NAMES) * receiptList , __reg("a2") STACK_OF(GENERAL_NAMES) * receiptsTo ) = "\tjsr\t-18822(a6)";
#define CMS_ReceiptRequest_create0(id, idlen, allorfirst, receiptList, receiptsTo) __CMS_ReceiptRequest_create0(AmiSSLBase, (id), (idlen), (allorfirst), (receiptList), (receiptsTo))

CMS_SignerInfo * __CMS_add1_signer(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") X509 * signer , __reg("a2") EVP_PKEY * pk , __reg("a3") const EVP_MD * md , __reg("d0") unsigned int flags ) = "\tjsr\t-18828(a6)";
#define CMS_add1_signer(cms, signer, pk, md, flags) __CMS_add1_signer(AmiSSLBase, (cms), (signer), (pk), (md), (flags))

int __CMS_RecipientInfo_set0_pkey(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") EVP_PKEY * pkey ) = "\tjsr\t-18834(a6)";
#define CMS_RecipientInfo_set0_pkey(ri, pkey) __CMS_RecipientInfo_set0_pkey(AmiSSLBase, (ri), (pkey))

int __ENGINE_set_load_ssl_client_cert_function(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") ENGINE_SSL_CLIENT_CERT_PTR loadssl_f ) = "\tjsr\t-18840(a6)";
#define ENGINE_set_load_ssl_client_cert_function(e, loadssl_f) __ENGINE_set_load_ssl_client_cert_function(AmiSSLBase, (e), (loadssl_f))

ENGINE_SSL_CLIENT_CERT_PTR __ENGINE_get_ssl_client_cert_function(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-18846(a6)";
#define ENGINE_get_ssl_client_cert_function(e) __ENGINE_get_ssl_client_cert_function(AmiSSLBase, (e))

int __ENGINE_load_ssl_client_cert(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") SSL * s , __reg("a2") STACK_OF(X509_NAME) * ca_dn , __reg("a3") X509 ** pcert , __reg("d0") EVP_PKEY ** ppkey , __reg("d1") STACK_OF(X509) ** pother , __reg("d2") UI_METHOD * ui_method , __reg("d3") void * callback_data ) = "\tjsr\t-18852(a6)";
#define ENGINE_load_ssl_client_cert(e, s, ca_dn, pcert, ppkey, pother, ui_method, callback_data) __ENGINE_load_ssl_client_cert(AmiSSLBase, (e), (s), (ca_dn), (pcert), (ppkey), (pother), (ui_method), (callback_data))

void __OBSOLETE_ENGINE_load_capi(__reg("a6") struct Library * ) = "\tjsr\t-18858(a6)";
#define OBSOLETE_ENGINE_load_capi() __OBSOLETE_ENGINE_load_capi(AmiSSLBase)

int __ENGINE_register_pkey_meths(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-18864(a6)";
#define ENGINE_register_pkey_meths(e) __ENGINE_register_pkey_meths(AmiSSLBase, (e))

ENGINE * __ENGINE_get_pkey_asn1_meth_engine(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-18870(a6)";
#define ENGINE_get_pkey_asn1_meth_engine(nid) __ENGINE_get_pkey_asn1_meth_engine(AmiSSLBase, (nid))

int __WHIRLPOOL_Init(__reg("a6") struct Library * , __reg("a0") WHIRLPOOL_CTX * c ) = "\tjsr\t-18876(a6)";
#define WHIRLPOOL_Init(c) __WHIRLPOOL_Init(AmiSSLBase, (c))

unsigned char * __WHIRLPOOL(__reg("a6") struct Library * , __reg("a0") const void * inp , __reg("d0") size_t bytes , __reg("a1") unsigned char * md ) = "\tjsr\t-18882(a6)";
#define WHIRLPOOL(inp, bytes, md) __WHIRLPOOL(AmiSSLBase, (inp), (bytes), (md))

const EVP_PKEY_ASN1_METHOD * __ENGINE_get_pkey_asn1_meth(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("d0") int nid ) = "\tjsr\t-18888(a6)";
#define ENGINE_get_pkey_asn1_meth(e, nid) __ENGINE_get_pkey_asn1_meth(AmiSSLBase, (e), (nid))

const EVP_PKEY_METHOD * __ENGINE_get_pkey_meth(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("d0") int nid ) = "\tjsr\t-18894(a6)";
#define ENGINE_get_pkey_meth(e, nid) __ENGINE_get_pkey_meth(AmiSSLBase, (e), (nid))

BIO * __BIO_new_CMS(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") CMS_ContentInfo * cms ) = "\tjsr\t-18900(a6)";
#define BIO_new_CMS(out, cms) __BIO_new_CMS(AmiSSLBase, (out), (cms))

int __ENGINE_set_default_pkey_asn1_meths(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-18906(a6)";
#define ENGINE_set_default_pkey_asn1_meths(e) __ENGINE_set_default_pkey_asn1_meths(AmiSSLBase, (e))

void __WHIRLPOOL_BitUpdate(__reg("a6") struct Library * , __reg("a0") WHIRLPOOL_CTX * ctx , __reg("a1") const void * inp , __reg("d0") size_t bits ) = "\tjsr\t-18912(a6)";
#define WHIRLPOOL_BitUpdate(ctx, inp, bits) __WHIRLPOOL_BitUpdate(AmiSSLBase, (ctx), (inp), (bits))

int __i2d_CMS_bio_stream(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") CMS_ContentInfo * cms , __reg("a2") BIO * in , __reg("d0") int flags ) = "\tjsr\t-18918(a6)";
#define i2d_CMS_bio_stream(out, cms, in, flags) __i2d_CMS_bio_stream(AmiSSLBase, (out), (cms), (in), (flags))

int __CMS_stream(__reg("a6") struct Library * , __reg("a0") unsigned char *** boundary , __reg("a1") CMS_ContentInfo * cms ) = "\tjsr\t-18924(a6)";
#define CMS_stream(boundary, cms) __CMS_stream(AmiSSLBase, (boundary), (cms))

const EVP_PKEY_ASN1_METHOD * __ENGINE_pkey_asn1_find_str(__reg("a6") struct Library * , __reg("a0") ENGINE ** pe , __reg("a1") const char * str , __reg("d0") int len ) = "\tjsr\t-18930(a6)";
#define ENGINE_pkey_asn1_find_str(pe, str, len) __ENGINE_pkey_asn1_find_str(AmiSSLBase, (pe), (str), (len))

ENGINE_PKEY_METHS_PTR __ENGINE_get_pkey_meths(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-18936(a6)";
#define ENGINE_get_pkey_meths(e) __ENGINE_get_pkey_meths(AmiSSLBase, (e))

int __ENGINE_register_pkey_asn1_meths(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-18942(a6)";
#define ENGINE_register_pkey_asn1_meths(e) __ENGINE_register_pkey_asn1_meths(AmiSSLBase, (e))

int __ENGINE_set_default_pkey_meths(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-18948(a6)";
#define ENGINE_set_default_pkey_meths(e) __ENGINE_set_default_pkey_meths(AmiSSLBase, (e))

int __HMAC_CTX_copy(__reg("a6") struct Library * , __reg("a0") HMAC_CTX * dctx , __reg("a1") HMAC_CTX * sctx ) = "\tjsr\t-18954(a6)";
#define HMAC_CTX_copy(dctx, sctx) __HMAC_CTX_copy(AmiSSLBase, (dctx), (sctx))

ENGINE_PKEY_ASN1_METHS_PTR __ENGINE_get_pkey_asn1_meths(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-18960(a6)";
#define ENGINE_get_pkey_asn1_meths(e) __ENGINE_get_pkey_asn1_meths(AmiSSLBase, (e))

const EVP_MD * __EVP_whirlpool(__reg("a6") struct Library * ) = "\tjsr\t-18966(a6)";
#define EVP_whirlpool() __EVP_whirlpool(AmiSSLBase)

void __ENGINE_register_all_pkey_meths(__reg("a6") struct Library * ) = "\tjsr\t-18972(a6)";
#define ENGINE_register_all_pkey_meths() __ENGINE_register_all_pkey_meths(AmiSSLBase)

int __WHIRLPOOL_Final(__reg("a6") struct Library * , __reg("a0") unsigned char * md , __reg("a1") WHIRLPOOL_CTX * c ) = "\tjsr\t-18978(a6)";
#define WHIRLPOOL_Final(md, c) __WHIRLPOOL_Final(AmiSSLBase, (md), (c))

const EVP_PKEY_ASN1_METHOD * __ENGINE_get_pkey_asn1_meth_str(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const char * str , __reg("d0") int len ) = "\tjsr\t-18984(a6)";
#define ENGINE_get_pkey_asn1_meth_str(e, str, len) __ENGINE_get_pkey_asn1_meth_str(AmiSSLBase, (e), (str), (len))

void __ENGINE_register_all_pkey_asn1_meths(__reg("a6") struct Library * ) = "\tjsr\t-18990(a6)";
#define ENGINE_register_all_pkey_asn1_meths() __ENGINE_register_all_pkey_asn1_meths(AmiSSLBase)

int __CMS_ContentInfo_print_ctx(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const CMS_ContentInfo * x , __reg("d0") int indent , __reg("a2") const ASN1_PCTX * pctx ) = "\tjsr\t-18996(a6)";
#define CMS_ContentInfo_print_ctx(out, x, indent, pctx) __CMS_ContentInfo_print_ctx(AmiSSLBase, (out), (x), (indent), (pctx))

int __CMS_add1_crl(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") X509_CRL * crl ) = "\tjsr\t-19002(a6)";
#define CMS_add1_crl(cms, crl) __CMS_add1_crl(AmiSSLBase, (cms), (crl))

int __ENGINE_set_pkey_asn1_meths(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") ENGINE_PKEY_ASN1_METHS_PTR f ) = "\tjsr\t-19008(a6)";
#define ENGINE_set_pkey_asn1_meths(e, f) __ENGINE_set_pkey_asn1_meths(AmiSSLBase, (e), (f))

ENGINE * __ENGINE_get_pkey_meth_engine(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-19014(a6)";
#define ENGINE_get_pkey_meth_engine(nid) __ENGINE_get_pkey_meth_engine(AmiSSLBase, (nid))

int __WHIRLPOOL_Update(__reg("a6") struct Library * , __reg("a0") WHIRLPOOL_CTX * c , __reg("a1") const void * inp , __reg("d0") size_t bytes ) = "\tjsr\t-19020(a6)";
#define WHIRLPOOL_Update(c, inp, bytes) __WHIRLPOOL_Update(AmiSSLBase, (c), (inp), (bytes))

int __PEM_write_bio_CMS_stream(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") CMS_ContentInfo * cms , __reg("a2") BIO * in , __reg("d0") int flags ) = "\tjsr\t-19026(a6)";
#define PEM_write_bio_CMS_stream(out, cms, in, flags) __PEM_write_bio_CMS_stream(AmiSSLBase, (out), (cms), (in), (flags))

void __ENGINE_unregister_pkey_meths(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-19032(a6)";
#define ENGINE_unregister_pkey_meths(e) __ENGINE_unregister_pkey_meths(AmiSSLBase, (e))

void __ENGINE_unregister_pkey_asn1_meths(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-19038(a6)";
#define ENGINE_unregister_pkey_asn1_meths(e) __ENGINE_unregister_pkey_asn1_meths(AmiSSLBase, (e))

int __ENGINE_set_pkey_meths(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") ENGINE_PKEY_METHS_PTR f ) = "\tjsr\t-19044(a6)";
#define ENGINE_set_pkey_meths(e, f) __ENGINE_set_pkey_meths(AmiSSLBase, (e), (f))

DSA * __DSAparams_dup(__reg("a6") struct Library * , __reg("a0") const DSA * x ) = "\tjsr\t-19050(a6)";
#define DSAparams_dup(x) __DSAparams_dup(AmiSSLBase, (x))

DH * __DHparams_dup(__reg("a6") struct Library * , __reg("a0") const DH * d ) = "\tjsr\t-19056(a6)";
#define DHparams_dup(d) __DHparams_dup(AmiSSLBase, (d))

unsigned long __X509_issuer_name_hash_old(__reg("a6") struct Library * , __reg("a0") X509 * a ) = "\tjsr\t-19062(a6)";
#define X509_issuer_name_hash_old(a) __X509_issuer_name_hash_old(AmiSSLBase, (a))

unsigned long __X509_subject_name_hash_old(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-19068(a6)";
#define X509_subject_name_hash_old(x) __X509_subject_name_hash_old(AmiSSLBase, (x))

SRP_user_pwd * __SRP_VBASE_get_by_user(__reg("a6") struct Library * , __reg("a0") SRP_VBASE * vb , __reg("a1") char * username ) = "\tjsr\t-19074(a6)";
#define SRP_VBASE_get_by_user(vb, username) __SRP_VBASE_get_by_user(AmiSSLBase, (vb), (username))

BIGNUM * __SRP_Calc_server_key(__reg("a6") struct Library * , __reg("a0") const BIGNUM * A , __reg("a1") const BIGNUM * v , __reg("a2") const BIGNUM * u , __reg("a3") const BIGNUM * b , __reg("d0") const BIGNUM * N ) = "\tjsr\t-19080(a6)";
#define SRP_Calc_server_key(A, v, u, b, N) __SRP_Calc_server_key(AmiSSLBase, (A), (v), (u), (b), (N))

char * __SRP_create_verifier(__reg("a6") struct Library * , __reg("a0") const char * user , __reg("a1") const char * pass , __reg("a2") char ** salt , __reg("a3") char ** verifier , __reg("d0") const char * N , __reg("d1") const char * g ) = "\tjsr\t-19086(a6)";
#define SRP_create_verifier(user, pass, salt, verifier, N, g) __SRP_create_verifier(AmiSSLBase, (user), (pass), (salt), (verifier), (N), (g))

int __SRP_create_verifier_BN(__reg("a6") struct Library * , __reg("a0") const char * user , __reg("a1") const char * pass , __reg("a2") BIGNUM ** salt , __reg("a3") BIGNUM ** verifier , __reg("d0") const BIGNUM * N , __reg("d1") const BIGNUM * g ) = "\tjsr\t-19092(a6)";
#define SRP_create_verifier_BN(user, pass, salt, verifier, N, g) __SRP_create_verifier_BN(AmiSSLBase, (user), (pass), (salt), (verifier), (N), (g))

BIGNUM * __SRP_Calc_u(__reg("a6") struct Library * , __reg("a0") const BIGNUM * A , __reg("a1") const BIGNUM * B , __reg("a2") const BIGNUM * N ) = "\tjsr\t-19098(a6)";
#define SRP_Calc_u(A, B, N) __SRP_Calc_u(AmiSSLBase, (A), (B), (N))

void __SRP_VBASE_free(__reg("a6") struct Library * , __reg("a0") SRP_VBASE * vb ) = "\tjsr\t-19104(a6)";
#define SRP_VBASE_free(vb) __SRP_VBASE_free(AmiSSLBase, (vb))

BIGNUM * __SRP_Calc_client_key(__reg("a6") struct Library * , __reg("a0") const BIGNUM * N , __reg("a1") const BIGNUM * B , __reg("a2") const BIGNUM * g , __reg("a3") const BIGNUM * x , __reg("d0") const BIGNUM * a , __reg("d1") const BIGNUM * u ) = "\tjsr\t-19110(a6)";
#define SRP_Calc_client_key(N, B, g, x, a, u) __SRP_Calc_client_key(AmiSSLBase, (N), (B), (g), (x), (a), (u))

SRP_gN * __SRP_get_default_gN(__reg("a6") struct Library * , __reg("a0") const char * id ) = "\tjsr\t-19116(a6)";
#define SRP_get_default_gN(id) __SRP_get_default_gN(AmiSSLBase, (id))

BIGNUM * __SRP_Calc_x(__reg("a6") struct Library * , __reg("a0") const BIGNUM * s , __reg("a1") const char * user , __reg("a2") const char * pass ) = "\tjsr\t-19122(a6)";
#define SRP_Calc_x(s, user, pass) __SRP_Calc_x(AmiSSLBase, (s), (user), (pass))

BIGNUM * __SRP_Calc_B(__reg("a6") struct Library * , __reg("a0") const BIGNUM * b , __reg("a1") const BIGNUM * N , __reg("a2") const BIGNUM * g , __reg("a3") const BIGNUM * v ) = "\tjsr\t-19128(a6)";
#define SRP_Calc_B(b, N, g, v) __SRP_Calc_B(AmiSSLBase, (b), (N), (g), (v))

SRP_VBASE * __SRP_VBASE_new(__reg("a6") struct Library * , __reg("a0") char * seed_key ) = "\tjsr\t-19134(a6)";
#define SRP_VBASE_new(seed_key) __SRP_VBASE_new(AmiSSLBase, (seed_key))

char * __SRP_check_known_gN_param(__reg("a6") struct Library * , __reg("a0") const BIGNUM * g , __reg("a1") const BIGNUM * N ) = "\tjsr\t-19140(a6)";
#define SRP_check_known_gN_param(g, N) __SRP_check_known_gN_param(AmiSSLBase, (g), (N))

BIGNUM * __SRP_Calc_A(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("a1") const BIGNUM * N , __reg("a2") const BIGNUM * g ) = "\tjsr\t-19146(a6)";
#define SRP_Calc_A(a, N, g) __SRP_Calc_A(AmiSSLBase, (a), (N), (g))

int __SRP_Verify_A_mod_N(__reg("a6") struct Library * , __reg("a0") const BIGNUM * A , __reg("a1") const BIGNUM * N ) = "\tjsr\t-19152(a6)";
#define SRP_Verify_A_mod_N(A, N) __SRP_Verify_A_mod_N(AmiSSLBase, (A), (N))

int __SRP_VBASE_init(__reg("a6") struct Library * , __reg("a0") SRP_VBASE * vb , __reg("a1") char * verifier_file ) = "\tjsr\t-19158(a6)";
#define SRP_VBASE_init(vb, verifier_file) __SRP_VBASE_init(AmiSSLBase, (vb), (verifier_file))

int __SRP_Verify_B_mod_N(__reg("a6") struct Library * , __reg("a0") const BIGNUM * B , __reg("a1") const BIGNUM * N ) = "\tjsr\t-19164(a6)";
#define SRP_Verify_B_mod_N(B, N) __SRP_Verify_B_mod_N(AmiSSLBase, (B), (N))

int __EC_KEY_set_public_key_affine_coordinates(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("a1") BIGNUM * x , __reg("a2") BIGNUM * y ) = "\tjsr\t-19170(a6)";
#define EC_KEY_set_public_key_affine_coordinates(key, x, y) __EC_KEY_set_public_key_affine_coordinates(AmiSSLBase, (key), (x), (y))

const EVP_CIPHER * __EVP_aes_192_ctr(__reg("a6") struct Library * ) = "\tjsr\t-19176(a6)";
#define EVP_aes_192_ctr() __EVP_aes_192_ctr(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_ctr(__reg("a6") struct Library * ) = "\tjsr\t-19182(a6)";
#define EVP_aes_128_ctr() __EVP_aes_128_ctr(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_ctr(__reg("a6") struct Library * ) = "\tjsr\t-19188(a6)";
#define EVP_aes_256_ctr() __EVP_aes_256_ctr(AmiSSLBase)

int __EC_KEY_get_flags(__reg("a6") struct Library * , __reg("a0") const EC_KEY * key ) = "\tjsr\t-19194(a6)";
#define EC_KEY_get_flags(key) __EC_KEY_get_flags(AmiSSLBase, (key))

const EVP_CIPHER * __EVP_aes_128_xts(__reg("a6") struct Library * ) = "\tjsr\t-19200(a6)";
#define EVP_aes_128_xts() __EVP_aes_128_xts(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_xts(__reg("a6") struct Library * ) = "\tjsr\t-19212(a6)";
#define EVP_aes_256_xts() __EVP_aes_256_xts(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_gcm(__reg("a6") struct Library * ) = "\tjsr\t-19218(a6)";
#define EVP_aes_128_gcm() __EVP_aes_128_gcm(AmiSSLBase)

void __EC_KEY_clear_flags(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("d0") int flags ) = "\tjsr\t-19224(a6)";
#define EC_KEY_clear_flags(key, flags) __EC_KEY_clear_flags(AmiSSLBase, (key), (flags))

void __EC_KEY_set_flags(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("d0") int flags ) = "\tjsr\t-19230(a6)";
#define EC_KEY_set_flags(key, flags) __EC_KEY_set_flags(AmiSSLBase, (key), (flags))

const EVP_CIPHER * __EVP_aes_256_ccm(__reg("a6") struct Library * ) = "\tjsr\t-19236(a6)";
#define EVP_aes_256_ccm() __EVP_aes_256_ccm(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_ccm(__reg("a6") struct Library * ) = "\tjsr\t-19248(a6)";
#define EVP_aes_128_ccm() __EVP_aes_128_ccm(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_192_gcm(__reg("a6") struct Library * ) = "\tjsr\t-19254(a6)";
#define EVP_aes_192_gcm() __EVP_aes_192_gcm(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_gcm(__reg("a6") struct Library * ) = "\tjsr\t-19260(a6)";
#define EVP_aes_256_gcm() __EVP_aes_256_gcm(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_192_ccm(__reg("a6") struct Library * ) = "\tjsr\t-19266(a6)";
#define EVP_aes_192_ccm() __EVP_aes_192_ccm(AmiSSLBase)

const EVP_CIPHER * __EVP_rc4_hmac_md5(__reg("a6") struct Library * ) = "\tjsr\t-19272(a6)";
#define EVP_rc4_hmac_md5() __EVP_rc4_hmac_md5(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_cbc_hmac_sha1(__reg("a6") struct Library * ) = "\tjsr\t-19278(a6)";
#define EVP_aes_128_cbc_hmac_sha1() __EVP_aes_128_cbc_hmac_sha1(AmiSSLBase)

void __OBSOLETE_ENGINE_load_rdrand(__reg("a6") struct Library * ) = "\tjsr\t-19284(a6)";
#define OBSOLETE_ENGINE_load_rdrand() __OBSOLETE_ENGINE_load_rdrand(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_cbc_hmac_sha1(__reg("a6") struct Library * ) = "\tjsr\t-19296(a6)";
#define EVP_aes_256_cbc_hmac_sha1() __EVP_aes_256_cbc_hmac_sha1(AmiSSLBase)

CMS_RecipientInfo * __CMS_add0_recipient_password(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("d0") int iter , __reg("d1") int wrap_nid , __reg("d2") int pbe_nid , __reg("a1") unsigned char * pass , __reg("d3") ossl_ssize_t passlen , __reg("a2") const EVP_CIPHER * kekciph ) = "\tjsr\t-19302(a6)";
#define CMS_add0_recipient_password(cms, iter, wrap_nid, pbe_nid, pass, passlen, kekciph) __CMS_add0_recipient_password(AmiSSLBase, (cms), (iter), (wrap_nid), (pbe_nid), (pass), (passlen), (kekciph))

int __CMS_decrypt_set1_password(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") unsigned char * pass , __reg("d0") ossl_ssize_t passlen ) = "\tjsr\t-19308(a6)";
#define CMS_decrypt_set1_password(cms, pass, passlen) __CMS_decrypt_set1_password(AmiSSLBase, (cms), (pass), (passlen))

int __CMS_RecipientInfo_set0_password(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") unsigned char * pass , __reg("d0") ossl_ssize_t passlen ) = "\tjsr\t-19314(a6)";
#define CMS_RecipientInfo_set0_password(ri, pass, passlen) __CMS_RecipientInfo_set0_password(AmiSSLBase, (ri), (pass), (passlen))

int __X509_REQ_sign_ctx(__reg("a6") struct Library * , __reg("a0") X509_REQ * x , __reg("a1") EVP_MD_CTX * ctx ) = "\tjsr\t-19320(a6)";
#define X509_REQ_sign_ctx(x, ctx) __X509_REQ_sign_ctx(AmiSSLBase, (x), (ctx))

int __X509_CRL_sign_ctx(__reg("a6") struct Library * , __reg("a0") X509_CRL * x , __reg("a1") EVP_MD_CTX * ctx ) = "\tjsr\t-19326(a6)";
#define X509_CRL_sign_ctx(x, ctx) __X509_CRL_sign_ctx(AmiSSLBase, (x), (ctx))

int __X509_signature_dump(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const ASN1_STRING * sig , __reg("d0") int indent ) = "\tjsr\t-19332(a6)";
#define X509_signature_dump(bp, sig, indent) __X509_signature_dump(AmiSSLBase, (bp), (sig), (indent))

int __X509_sign_ctx(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") EVP_MD_CTX * ctx ) = "\tjsr\t-19338(a6)";
#define X509_sign_ctx(x, ctx) __X509_sign_ctx(AmiSSLBase, (x), (ctx))

int __ASN1_item_sign_ctx(__reg("a6") struct Library * , __reg("a0") const ASN1_ITEM * it , __reg("a1") X509_ALGOR * algor1 , __reg("a2") X509_ALGOR * algor2 , __reg("a3") ASN1_BIT_STRING * signature , __reg("d0") const void * data , __reg("d1") EVP_MD_CTX * ctx ) = "\tjsr\t-19344(a6)";
#define ASN1_item_sign_ctx(it, algor1, algor2, signature, data, ctx) __ASN1_item_sign_ctx(AmiSSLBase, (it), (algor1), (algor2), (signature), (data), (ctx))

void __X509_STORE_CTX_set0_crls(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("a1") STACK_OF(X509_CRL) * sk ) = "\tjsr\t-19362(a6)";
#define X509_STORE_CTX_set0_crls(ctx, sk) __X509_STORE_CTX_set0_crls(AmiSSLBase, (ctx), (sk))

const unsigned char * __SSL_SESSION_get_id(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s , __reg("a1") unsigned int * len ) = "\tjsr\t-19368(a6)";
#define SSL_SESSION_get_id(s, len) __SSL_SESSION_get_id(AmiSSLBase, (s), (len))

void __SSL_CTX_sess_set_new_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*new_session_cb)(struct ssl_st *ssl,SSL_SESSION *sess) ) = "\tjsr\t-19374(a6)";
#define SSL_CTX_sess_set_new_cb(ctx, new_session_cb) __SSL_CTX_sess_set_new_cb(AmiSSLBase, (ctx), (new_session_cb))

SSL_SESSION * (* __SSL_CTX_sess_get_get_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) )(SSL *, const unsigned char *, int, int *) =  "\tjsr\t-19380(a6)";
#define SSL_CTX_sess_get_get_cb(ctx) __SSL_CTX_sess_get_get_cb(AmiSSLBase, (ctx))

void __SSL_CTX_sess_set_get_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_SESSION *(*get_session_cb)(SSL *,const unsigned char *,int,int *) ) = "\tjsr\t-19386(a6)";
#define SSL_CTX_sess_set_get_cb(ctx, get_session_cb) __SSL_CTX_sess_set_get_cb(AmiSSLBase, (ctx), (get_session_cb))

void  (* __SSL_CTX_get_info_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) )(const SSL *ssl,int type,int val) =  "\tjsr\t-19392(a6)";
#define SSL_CTX_get_info_callback(ctx) __SSL_CTX_get_info_callback(AmiSSLBase, (ctx))

void __SSL_CTX_set_client_cert_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*client_cert_cb)(SSL *ssl,X509 **x509,EVP_PKEY **pkey) ) = "\tjsr\t-19398(a6)";
#define SSL_CTX_set_client_cert_cb(ctx, client_cert_cb) __SSL_CTX_set_client_cert_cb(AmiSSLBase, (ctx), (client_cert_cb))

void __SSL_CTX_sess_set_remove_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") void (*remove_session_cb)(struct ssl_ctx_st *ctx,SSL_SESSION *sess) ) = "\tjsr\t-19404(a6)";
#define SSL_CTX_sess_set_remove_cb(ctx, remove_session_cb) __SSL_CTX_sess_set_remove_cb(AmiSSLBase, (ctx), (remove_session_cb))

int  (* __SSL_CTX_sess_get_new_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) )(struct ssl_st *ssl, SSL_SESSION *sess) =  "\tjsr\t-19410(a6)";
#define SSL_CTX_sess_get_new_cb(ctx) __SSL_CTX_sess_get_new_cb(AmiSSLBase, (ctx))

int  (* __SSL_CTX_get_client_cert_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) )(SSL *ssl, X509 **x509, EVP_PKEY **pkey) =  "\tjsr\t-19416(a6)";
#define SSL_CTX_get_client_cert_cb(ctx) __SSL_CTX_get_client_cert_cb(AmiSSLBase, (ctx))

void  (* __SSL_CTX_sess_get_remove_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) )(struct ssl_ctx_st *ctx, SSL_SESSION *sess) =  "\tjsr\t-19422(a6)";
#define SSL_CTX_sess_get_remove_cb(ctx) __SSL_CTX_sess_get_remove_cb(AmiSSLBase, (ctx))

int __PEM_write_bio_SSL_SESSION(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const SSL_SESSION * x ) = "\tjsr\t-19428(a6)";
#define PEM_write_bio_SSL_SESSION(bp, x) __PEM_write_bio_SSL_SESSION(AmiSSLBase, (bp), (x))

SSL_SESSION * __PEM_read_bio_SSL_SESSION(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") SSL_SESSION ** x , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-19440(a6)";
#define PEM_read_bio_SSL_SESSION(bp, x, cb, u) __PEM_read_bio_SSL_SESSION(AmiSSLBase, (bp), (x), (cb), (u))

int __BN_X931_generate_Xpq(__reg("a6") struct Library * , __reg("a0") BIGNUM * Xp , __reg("a1") BIGNUM * Xq , __reg("d0") int nbits , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-19680(a6)";
#define BN_X931_generate_Xpq(Xp, Xq, nbits, ctx) __BN_X931_generate_Xpq(AmiSSLBase, (Xp), (Xq), (nbits), (ctx))

const BIGNUM * __BN_get0_nist_prime_384(__reg("a6") struct Library * ) = "\tjsr\t-19686(a6)";
#define BN_get0_nist_prime_384() __BN_get0_nist_prime_384(AmiSSLBase)

int __ERR_set_mark(__reg("a6") struct Library * ) = "\tjsr\t-19692(a6)";
#define ERR_set_mark() __ERR_set_mark(AmiSSLBase)

int __BN_BLINDING_invert_ex(__reg("a6") struct Library * , __reg("a0") BIGNUM * n , __reg("a1") const BIGNUM * r , __reg("a2") BN_BLINDING * b , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-19698(a6)";
#define BN_BLINDING_invert_ex(n, r, b, ctx) __BN_BLINDING_invert_ex(AmiSSLBase, (n), (r), (b), (ctx))

void __NAME_CONSTRAINTS_free(__reg("a6") struct Library * , __reg("a0") NAME_CONSTRAINTS * ncons ) = "\tjsr\t-19704(a6)";
#define NAME_CONSTRAINTS_free(ncons) __NAME_CONSTRAINTS_free(AmiSSLBase, (ncons))

void __X509_STORE_CTX_set0_param(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("a1") X509_VERIFY_PARAM * param ) = "\tjsr\t-19710(a6)";
#define X509_STORE_CTX_set0_param(ctx, param) __X509_STORE_CTX_set0_param(AmiSSLBase, (ctx), (param))

void __POLICY_CONSTRAINTS_free(__reg("a6") struct Library * , __reg("a0") POLICY_CONSTRAINTS * pcons ) = "\tjsr\t-19716(a6)";
#define POLICY_CONSTRAINTS_free(pcons) __POLICY_CONSTRAINTS_free(AmiSSLBase, (pcons))

int __BN_nist_mod_192(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-19722(a6)";
#define BN_nist_mod_192(r, a, p, ctx) __BN_nist_mod_192(AmiSSLBase, (r), (a), (p), (ctx))

void __GENERAL_SUBTREE_free(__reg("a6") struct Library * , __reg("a0") GENERAL_SUBTREE * sub ) = "\tjsr\t-19728(a6)";
#define GENERAL_SUBTREE_free(sub) __GENERAL_SUBTREE_free(AmiSSLBase, (sub))

int __PKCS12_add_safe(__reg("a6") struct Library * , __reg("a0") STACK_OF(PKCS7) ** psafes , __reg("a1") STACK_OF(PKCS12_SAFEBAG) * bags , __reg("d0") int safe_nid , __reg("d1") int iter , __reg("a2") const char * pass ) = "\tjsr\t-19734(a6)";
#define PKCS12_add_safe(psafes, bags, safe_nid, iter, pass) __PKCS12_add_safe(AmiSSLBase, (psafes), (bags), (safe_nid), (iter), (pass))

const BIGNUM * __BN_get0_nist_prime_192(__reg("a6") struct Library * ) = "\tjsr\t-19740(a6)";
#define BN_get0_nist_prime_192() __BN_get0_nist_prime_192(AmiSSLBase)

unsigned char * __X509_keyid_get0(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") int * len ) = "\tjsr\t-19746(a6)";
#define X509_keyid_get0(x, len) __X509_keyid_get0(AmiSSLBase, (x), (len))

const X509_POLICY_NODE * __X509_policy_node_get0_parent(__reg("a6") struct Library * , __reg("a0") const X509_POLICY_NODE * node ) = "\tjsr\t-19758(a6)";
#define X509_policy_node_get0_parent(node) __X509_policy_node_get0_parent(AmiSSLBase, (node))

ASN1_OCTET_STRING * __a2i_IPADDRESS(__reg("a6") struct Library * , __reg("a0") const char * ipasc ) = "\tjsr\t-19764(a6)";
#define a2i_IPADDRESS(ipasc) __a2i_IPADDRESS(AmiSSLBase, (ipasc))

void __X509_STORE_CTX_set_depth(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("d0") int depth ) = "\tjsr\t-19770(a6)";
#define X509_STORE_CTX_set_depth(ctx, depth) __X509_STORE_CTX_set_depth(AmiSSLBase, (ctx), (depth))

int __X509_VERIFY_PARAM_inherit(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * to , __reg("a1") const X509_VERIFY_PARAM * from ) = "\tjsr\t-19776(a6)";
#define X509_VERIFY_PARAM_inherit(to, from) __X509_VERIFY_PARAM_inherit(AmiSSLBase, (to), (from))

void __X509_VERIFY_PARAM_set_depth(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("d0") int depth ) = "\tjsr\t-19788(a6)";
#define X509_VERIFY_PARAM_set_depth(param, depth) __X509_VERIFY_PARAM_set_depth(AmiSSLBase, (param), (depth))

int __EVP_PKEY_add1_attr_by_txt(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * key , __reg("a1") const char * attrname , __reg("d0") int type , __reg("a2") const unsigned char * bytes , __reg("d1") int len ) = "\tjsr\t-19794(a6)";
#define EVP_PKEY_add1_attr_by_txt(key, attrname, type, bytes, len) __EVP_PKEY_add1_attr_by_txt(AmiSSLBase, (key), (attrname), (type), (bytes), (len))

void __BN_BLINDING_set_flags(__reg("a6") struct Library * , __reg("a0") BN_BLINDING * b , __reg("d0") unsigned long l ) = "\tjsr\t-19800(a6)";
#define BN_BLINDING_set_flags(b, l) __BN_BLINDING_set_flags(AmiSSLBase, (b), (l))

int __X509_VERIFY_PARAM_set1_policies(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("a1") STACK_OF(ASN1_OBJECT) * policies ) = "\tjsr\t-19806(a6)";
#define X509_VERIFY_PARAM_set1_policies(param, policies) __X509_VERIFY_PARAM_set1_policies(AmiSSLBase, (param), (policies))

int __X509_VERIFY_PARAM_set1_name(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("a1") const char * name ) = "\tjsr\t-19812(a6)";
#define X509_VERIFY_PARAM_set1_name(param, name) __X509_VERIFY_PARAM_set1_name(AmiSSLBase, (param), (name))

void __POLICY_MAPPING_free(__reg("a6") struct Library * , __reg("a0") POLICY_MAPPING * pmap ) = "\tjsr\t-19818(a6)";
#define POLICY_MAPPING_free(pmap) __POLICY_MAPPING_free(AmiSSLBase, (pmap))

int __EVP_PKEY_cmp(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * a , __reg("a1") const EVP_PKEY * b ) = "\tjsr\t-19836(a6)";
#define EVP_PKEY_cmp(a, b) __EVP_PKEY_cmp(AmiSSLBase, (a), (b))

int __X509_policy_level_node_count(__reg("a6") struct Library * , __reg("a0") X509_POLICY_LEVEL * level ) = "\tjsr\t-19842(a6)";
#define X509_policy_level_node_count(level) __X509_policy_level_node_count(AmiSSLBase, (level))

X509_ATTRIBUTE * __EVP_PKEY_get_attr(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * key , __reg("d0") int loc ) = "\tjsr\t-19848(a6)";
#define EVP_PKEY_get_attr(key, loc) __EVP_PKEY_get_attr(AmiSSLBase, (key), (loc))

GENERAL_SUBTREE * __GENERAL_SUBTREE_new(__reg("a6") struct Library * ) = "\tjsr\t-19854(a6)";
#define GENERAL_SUBTREE_new() __GENERAL_SUBTREE_new(AmiSSLBase)

STACK_OF(POLICYQUALINFO) * __X509_policy_node_get0_qualifiers(__reg("a6") struct Library * , __reg("a0") const X509_POLICY_NODE * node ) = "\tjsr\t-19860(a6)";
#define X509_policy_node_get0_qualifiers(node) __X509_policy_node_get0_qualifiers(AmiSSLBase, (node))

const ASN1_OBJECT * __X509_policy_node_get0_policy(__reg("a6") struct Library * , __reg("a0") const X509_POLICY_NODE * node ) = "\tjsr\t-19878(a6)";
#define X509_policy_node_get0_policy(node) __X509_policy_node_get0_policy(AmiSSLBase, (node))

PKCS12 * __PKCS12_add_safes(__reg("a6") struct Library * , __reg("a0") STACK_OF(PKCS7) * safes , __reg("d0") int p7_nid ) = "\tjsr\t-19884(a6)";
#define PKCS12_add_safes(safes, p7_nid) __PKCS12_add_safes(AmiSSLBase, (safes), (p7_nid))

int __BN_BLINDING_convert_ex(__reg("a6") struct Library * , __reg("a0") BIGNUM * n , __reg("a1") BIGNUM * r , __reg("a2") BN_BLINDING * b , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-19890(a6)";
#define BN_BLINDING_convert_ex(n, r, b, ctx) __BN_BLINDING_convert_ex(AmiSSLBase, (n), (r), (b), (ctx))

void __X509_policy_tree_free(__reg("a6") struct Library * , __reg("a0") X509_POLICY_TREE * tree ) = "\tjsr\t-19896(a6)";
#define X509_policy_tree_free(tree) __X509_policy_tree_free(AmiSSLBase, (tree))

const BIGNUM * __BN_get0_nist_prime_224(__reg("a6") struct Library * ) = "\tjsr\t-19908(a6)";
#define BN_get0_nist_prime_224() __BN_get0_nist_prime_224(AmiSSLBase)

int __BN_GENCB_call(__reg("a6") struct Library * , __reg("a0") BN_GENCB * cb , __reg("d0") int a , __reg("d1") int b ) = "\tjsr\t-19914(a6)";
#define BN_GENCB_call(cb, a, b) __BN_GENCB_call(AmiSSLBase, (cb), (a), (b))

NAME_CONSTRAINTS * __NAME_CONSTRAINTS_new(__reg("a6") struct Library * ) = "\tjsr\t-19920(a6)";
#define NAME_CONSTRAINTS_new() __NAME_CONSTRAINTS_new(AmiSSLBase)

int __ECParameters_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EC_KEY * key ) = "\tjsr\t-19926(a6)";
#define ECParameters_print(bp, key) __ECParameters_print(AmiSSLBase, (bp), (key))

void * __OBSOLETE_BUF_memdup(__reg("a6") struct Library * , __reg("a0") const void * data , __reg("d0") size_t siz ) = "\tjsr\t-19932(a6)";
#define OBSOLETE_BUF_memdup(data, siz) __OBSOLETE_BUF_memdup(AmiSSLBase, (data), (siz))

int __X509_VERIFY_PARAM_set_trust(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("d0") int trust ) = "\tjsr\t-19938(a6)";
#define X509_VERIFY_PARAM_set_trust(param, trust) __X509_VERIFY_PARAM_set_trust(AmiSSLBase, (param), (trust))

int __EVP_PKEY_get_attr_count(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * key ) = "\tjsr\t-19944(a6)";
#define EVP_PKEY_get_attr_count(key) __EVP_PKEY_get_attr_count(AmiSSLBase, (key))

X509_VERIFY_PARAM * __X509_STORE_CTX_get0_param(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-19950(a6)";
#define X509_STORE_CTX_get0_param(ctx) __X509_STORE_CTX_get0_param(AmiSSLBase, (ctx))

int __X509_STORE_set_depth(__reg("a6") struct Library * , __reg("a0") X509_STORE * store , __reg("d0") int depth ) = "\tjsr\t-19962(a6)";
#define X509_STORE_set_depth(store, depth) __X509_STORE_set_depth(AmiSSLBase, (store), (depth))

char * __OBSOLETE_BUF_strndup(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("d0") size_t siz ) = "\tjsr\t-19968(a6)";
#define OBSOLETE_BUF_strndup(str, siz) __OBSOLETE_BUF_strndup(AmiSSLBase, (str), (siz))

int __ASN1_put_eoc(__reg("a6") struct Library * , __reg("a0") unsigned char ** pp ) = "\tjsr\t-19974(a6)";
#define ASN1_put_eoc(pp) __ASN1_put_eoc(AmiSSLBase, (pp))

void __X509_VERIFY_PARAM_table_cleanup(__reg("a6") struct Library * ) = "\tjsr\t-19980(a6)";
#define X509_VERIFY_PARAM_table_cleanup() __X509_VERIFY_PARAM_table_cleanup(AmiSSLBase)

BN_BLINDING * __RSA_setup_blinding(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("a1") BN_CTX * ctx ) = "\tjsr\t-19986(a6)";
#define RSA_setup_blinding(rsa, ctx) __RSA_setup_blinding(AmiSSLBase, (rsa), (ctx))

int __OPENSSL_sk_find_ex(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st , __reg("a1") const void * data ) = "\tjsr\t-19992(a6)";
#define OPENSSL_sk_find_ex(st, data) __OPENSSL_sk_find_ex(AmiSSLBase, (st), (data))

POLICY_CONSTRAINTS * __POLICY_CONSTRAINTS_new(__reg("a6") struct Library * ) = "\tjsr\t-19998(a6)";
#define POLICY_CONSTRAINTS_new() __POLICY_CONSTRAINTS_new(AmiSSLBase)

int __X509_VERIFY_PARAM_get_depth(__reg("a6") struct Library * , __reg("a0") const X509_VERIFY_PARAM * param ) = "\tjsr\t-20004(a6)";
#define X509_VERIFY_PARAM_get_depth(param) __X509_VERIFY_PARAM_get_depth(AmiSSLBase, (param))

int __ASN1_item_ndef_i2d(__reg("a6") struct Library * , __reg("a0") const ASN1_VALUE * val , __reg("a1") unsigned char ** out , __reg("a2") const ASN1_ITEM * it ) = "\tjsr\t-20010(a6)";
#define ASN1_item_ndef_i2d(val, out, it) __ASN1_item_ndef_i2d(AmiSSLBase, (val), (out), (it))

int __ERR_pop_to_mark(__reg("a6") struct Library * ) = "\tjsr\t-20016(a6)";
#define ERR_pop_to_mark() __ERR_pop_to_mark(AmiSSLBase)

X509_POLICY_NODE * __X509_policy_level_get0_node(__reg("a6") struct Library * , __reg("a0") const X509_POLICY_LEVEL * level , __reg("d0") int i ) = "\tjsr\t-20022(a6)";
#define X509_policy_level_get0_node(level, i) __X509_policy_level_get0_node(AmiSSLBase, (level), (i))

int __i2d_PKCS7_NDEF(__reg("a6") struct Library * , __reg("a0") const PKCS7 * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-20028(a6)";
#define i2d_PKCS7_NDEF(a, out) __i2d_PKCS7_NDEF(AmiSSLBase, (a), (out))

ASN1_TYPE * __ASN1_generate_v3(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("a1") X509V3_CTX * cnf ) = "\tjsr\t-20034(a6)";
#define ASN1_generate_v3(str, cnf) __ASN1_generate_v3(AmiSSLBase, (str), (cnf))

int __X509_policy_tree_level_count(__reg("a6") struct Library * , __reg("a0") const X509_POLICY_TREE * tree ) = "\tjsr\t-20040(a6)";
#define X509_policy_tree_level_count(tree) __X509_policy_tree_level_count(AmiSSLBase, (tree))

int __BN_nist_mod_224(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-20052(a6)";
#define BN_nist_mod_224(r, a, p, ctx) __BN_nist_mod_224(AmiSSLBase, (r), (a), (p), (ctx))

int __BIO_dgram_non_fatal_error(__reg("a6") struct Library * , __reg("d0") int error ) = "\tjsr\t-20058(a6)";
#define BIO_dgram_non_fatal_error(error) __BIO_dgram_non_fatal_error(AmiSSLBase, (error))

ASN1_BIT_STRING * __v2i_ASN1_BIT_STRING(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * method , __reg("a1") X509V3_CTX * ctx , __reg("a2") STACK_OF(CONF_VALUE) * nval ) = "\tjsr\t-20064(a6)";
#define v2i_ASN1_BIT_STRING(method, ctx, nval) __v2i_ASN1_BIT_STRING(AmiSSLBase, (method), (ctx), (nval))

int __X509_STORE_CTX_set_default(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("a1") const char * name ) = "\tjsr\t-20070(a6)";
#define X509_STORE_CTX_set_default(ctx, name) __X509_STORE_CTX_set_default(AmiSSLBase, (ctx), (name))

int __X509_VERIFY_PARAM_set1(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * to , __reg("a1") const X509_VERIFY_PARAM * from ) = "\tjsr\t-20076(a6)";
#define X509_VERIFY_PARAM_set1(to, from) __X509_VERIFY_PARAM_set1(AmiSSLBase, (to), (from))

GENERAL_NAME * __v2i_GENERAL_NAME_ex(__reg("a6") struct Library * , __reg("a0") GENERAL_NAME * out , __reg("a1") const X509V3_EXT_METHOD * method , __reg("a2") X509V3_CTX * ctx , __reg("a3") CONF_VALUE * cnf , __reg("d0") int is_nc ) = "\tjsr\t-20082(a6)";
#define v2i_GENERAL_NAME_ex(out, method, ctx, cnf, is_nc) __v2i_GENERAL_NAME_ex(AmiSSLBase, (out), (method), (ctx), (cnf), (is_nc))

int __BN_nist_mod_521(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-20088(a6)";
#define BN_nist_mod_521(r, a, p, ctx) __BN_nist_mod_521(AmiSSLBase, (r), (a), (p), (ctx))

X509_POLICY_LEVEL * __X509_policy_tree_get0_level(__reg("a6") struct Library * , __reg("a0") const X509_POLICY_TREE * tree , __reg("d0") int i ) = "\tjsr\t-20094(a6)";
#define X509_policy_tree_get0_level(tree, i) __X509_policy_tree_get0_level(AmiSSLBase, (tree), (i))

int __ASN1_const_check_infinite_end(__reg("a6") struct Library * , __reg("a0") const unsigned char ** p , __reg("d0") long len ) = "\tjsr\t-20100(a6)";
#define ASN1_const_check_infinite_end(p, len) __ASN1_const_check_infinite_end(AmiSSLBase, (p), (len))

X509_ATTRIBUTE * __EVP_PKEY_delete_attr(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * key , __reg("d0") int loc ) = "\tjsr\t-20106(a6)";
#define EVP_PKEY_delete_attr(key, loc) __EVP_PKEY_delete_attr(AmiSSLBase, (key), (loc))

const BIGNUM * __BN_get0_nist_prime_256(__reg("a6") struct Library * ) = "\tjsr\t-20112(a6)";
#define BN_get0_nist_prime_256() __BN_get0_nist_prime_256(AmiSSLBase)

STACK_OF(CONF_VALUE) * __i2v_ASN1_BIT_STRING(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * method , __reg("a1") ASN1_BIT_STRING * bits , __reg("a2") STACK_OF(CONF_VALUE) * extlist ) = "\tjsr\t-20118(a6)";
#define i2v_ASN1_BIT_STRING(method, bits, extlist) __i2v_ASN1_BIT_STRING(AmiSSLBase, (method), (bits), (extlist))

int __BN_nist_mod_384(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-20124(a6)";
#define BN_nist_mod_384(r, a, p, ctx) __BN_nist_mod_384(AmiSSLBase, (r), (a), (p), (ctx))

int __EVP_PKEY_get_attr_by_OBJ(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * key , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-20142(a6)";
#define EVP_PKEY_get_attr_by_OBJ(key, obj, lastpos) __EVP_PKEY_get_attr_by_OBJ(AmiSSLBase, (key), (obj), (lastpos))

const X509_VERIFY_PARAM * __X509_VERIFY_PARAM_lookup(__reg("a6") struct Library * , __reg("a0") const char * name ) = "\tjsr\t-20148(a6)";
#define X509_VERIFY_PARAM_lookup(name) __X509_VERIFY_PARAM_lookup(AmiSSLBase, (name))

int __X509V3_NAME_from_section(__reg("a6") struct Library * , __reg("a0") X509_NAME * nm , __reg("a1") STACK_OF(CONF_VALUE) * dn_sk , __reg("a2") unsigned long chtype ) = "\tjsr\t-20160(a6)";
#define X509V3_NAME_from_section(nm, dn_sk, chtype) __X509V3_NAME_from_section(AmiSSLBase, (nm), (dn_sk), (chtype))

int __EVP_PKEY_add1_attr(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * key , __reg("a1") X509_ATTRIBUTE * attr ) = "\tjsr\t-20166(a6)";
#define EVP_PKEY_add1_attr(key, attr) __EVP_PKEY_add1_attr(AmiSSLBase, (key), (attr))

int __BIO_dump_indent_cb(__reg("a6") struct Library * , __reg("a0") int (*cb)(const void *data,size_t len,void *u) , __reg("a1") void * u , __reg("a2") const void * s , __reg("d0") int len , __reg("d1") int indent ) = "\tjsr\t-20178(a6)";
#define BIO_dump_indent_cb(cb, u, s, len, indent) __BIO_dump_indent_cb(AmiSSLBase, (cb), (u), (s), (len), (indent))

int __BN_nist_mod_256(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") const BIGNUM * p , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-20196(a6)";
#define BN_nist_mod_256(r, a, p, ctx) __BN_nist_mod_256(AmiSSLBase, (r), (a), (p), (ctx))

int __X509_VERIFY_PARAM_add0_table(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param ) = "\tjsr\t-20202(a6)";
#define X509_VERIFY_PARAM_add0_table(param) __X509_VERIFY_PARAM_add0_table(AmiSSLBase, (param))

BN_BLINDING * __BN_BLINDING_create_param(__reg("a6") struct Library * , __reg("a0") BN_BLINDING * b , __reg("a1") const BIGNUM * e , __reg("a2") BIGNUM * m , __reg("a3") BN_CTX * ctx , __reg("d0") int (*bn_mod_exp)(BIGNUM *r,const BIGNUM *a,const BIGNUM *p,const BIGNUM *m,BN_CTX *ctx,BN_MONT_CTX *m_ctx) , __reg("d1") BN_MONT_CTX * m_ctx ) = "\tjsr\t-20214(a6)";
#define BN_BLINDING_create_param(b, e, m, ctx, bn_mod_exp, m_ctx) __BN_BLINDING_create_param(AmiSSLBase, (b), (e), (m), (ctx), (bn_mod_exp), (m_ctx))

const BIGNUM * __BN_get0_nist_prime_521(__reg("a6") struct Library * ) = "\tjsr\t-20220(a6)";
#define BN_get0_nist_prime_521() __BN_get0_nist_prime_521(AmiSSLBase)

int __BN_is_prime_fasttest_ex(__reg("a6") struct Library * , __reg("a0") const BIGNUM * p , __reg("d0") int nchecks , __reg("a1") BN_CTX * ctx , __reg("d1") int do_trial_devision , __reg("a2") BN_GENCB * cb ) = "\tjsr\t-20226(a6)";
#define BN_is_prime_fasttest_ex(p, nchecks, ctx, do_trial_devision, cb) __BN_is_prime_fasttest_ex(AmiSSLBase, (p), (nchecks), (ctx), (do_trial_devision), (cb))

int __X509_policy_check(__reg("a6") struct Library * , __reg("a0") X509_POLICY_TREE ** ptree , __reg("a1") int * pexplicit_policy , __reg("a2") STACK_OF(X509) * certs , __reg("a3") STACK_OF(ASN1_OBJECT) * policy_oids , __reg("d0") unsigned int flags ) = "\tjsr\t-20232(a6)";
#define X509_policy_check(ptree, pexplicit_policy, certs, policy_oids, flags) __X509_policy_check(AmiSSLBase, (ptree), (pexplicit_policy), (certs), (policy_oids), (flags))

int __EVP_PKEY_get_attr_by_NID(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * key , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-20238(a6)";
#define EVP_PKEY_get_attr_by_NID(key, nid, lastpos) __EVP_PKEY_get_attr_by_NID(AmiSSLBase, (key), (nid), (lastpos))

unsigned long __BN_BLINDING_get_flags(__reg("a6") struct Library * , __reg("a0") const BN_BLINDING * b ) = "\tjsr\t-20244(a6)";
#define BN_BLINDING_get_flags(b) __BN_BLINDING_get_flags(AmiSSLBase, (b))

PKCS12_SAFEBAG * __PKCS12_add_cert(__reg("a6") struct Library * , __reg("a0") STACK_OF(PKCS12_SAFEBAG) ** pbags , __reg("a1") X509 * cert ) = "\tjsr\t-20250(a6)";
#define PKCS12_add_cert(pbags, cert) __PKCS12_add_cert(AmiSSLBase, (pbags), (cert))

int __EVP_CIPHER_CTX_rand_key(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") unsigned char * key ) = "\tjsr\t-20256(a6)";
#define EVP_CIPHER_CTX_rand_key(ctx, key) __EVP_CIPHER_CTX_rand_key(AmiSSLBase, (ctx), (key))

ASN1_OCTET_STRING * __a2i_IPADDRESS_NC(__reg("a6") struct Library * , __reg("a0") const char * ipasc ) = "\tjsr\t-20262(a6)";
#define a2i_IPADDRESS_NC(ipasc) __a2i_IPADDRESS_NC(AmiSSLBase, (ipasc))

int __PKCS7_set_digest(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") const EVP_MD * md ) = "\tjsr\t-20268(a6)";
#define PKCS7_set_digest(p7, md) __PKCS7_set_digest(AmiSSLBase, (p7), (md))

POLICY_MAPPING * __POLICY_MAPPING_new(__reg("a6") struct Library * ) = "\tjsr\t-20274(a6)";
#define POLICY_MAPPING_new() __POLICY_MAPPING_new(AmiSSLBase)

int __PKCS7_set0_type_other(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("d0") int type , __reg("a1") ASN1_TYPE * other ) = "\tjsr\t-20280(a6)";
#define PKCS7_set0_type_other(p7, type, other) __PKCS7_set0_type_other(AmiSSLBase, (p7), (type), (other))

int __EVP_PKEY_add1_attr_by_OBJ(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * key , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int type , __reg("a2") const unsigned char * bytes , __reg("d1") int len ) = "\tjsr\t-20298(a6)";
#define EVP_PKEY_add1_attr_by_OBJ(key, obj, type, bytes, len) __EVP_PKEY_add1_attr_by_OBJ(AmiSSLBase, (key), (obj), (type), (bytes), (len))

void __X509_VERIFY_PARAM_set_time(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("d0") time_t t ) = "\tjsr\t-20304(a6)";
#define X509_VERIFY_PARAM_set_time(param, t) __X509_VERIFY_PARAM_set_time(AmiSSLBase, (param), (t))

PKCS12_SAFEBAG * __PKCS12_add_key(__reg("a6") struct Library * , __reg("a0") STACK_OF(PKCS12_SAFEBAG) ** pbags , __reg("a1") EVP_PKEY * key , __reg("d0") int key_usage , __reg("d1") int iter , __reg("d2") int key_nid , __reg("a2") const char * pass ) = "\tjsr\t-20316(a6)";
#define PKCS12_add_key(pbags, key, key_usage, iter, key_nid, pass) __PKCS12_add_key(AmiSSLBase, (pbags), (key), (key_usage), (iter), (key_nid), (pass))

int __BIO_dump_cb(__reg("a6") struct Library * , __reg("a0") int (*cb)(const void *data,size_t len,void *u) , __reg("a1") void * u , __reg("a2") const void * s , __reg("a3") int len ) = "\tjsr\t-20328(a6)";
#define BIO_dump_cb(cb, u, s, len) __BIO_dump_cb(AmiSSLBase, (cb), (u), (s), (len))

BIGNUM * __BN_get_rfc3526_prime_8192(__reg("a6") struct Library * , __reg("a0") BIGNUM * bn ) = "\tjsr\t-20346(a6)";
#define BN_get_rfc3526_prime_8192(bn) __BN_get_rfc3526_prime_8192(AmiSSLBase, (bn))

int __X509_VERIFY_PARAM_clear_flags(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("d0") unsigned long flags ) = "\tjsr\t-20352(a6)";
#define X509_VERIFY_PARAM_clear_flags(param, flags) __X509_VERIFY_PARAM_clear_flags(AmiSSLBase, (param), (flags))

BIGNUM * __BN_get_rfc2409_prime_1024(__reg("a6") struct Library * , __reg("a0") BIGNUM * bn ) = "\tjsr\t-20358(a6)";
#define BN_get_rfc2409_prime_1024(bn) __BN_get_rfc2409_prime_1024(AmiSSLBase, (bn))

BIGNUM * __BN_get_rfc3526_prime_2048(__reg("a6") struct Library * , __reg("a0") BIGNUM * bn ) = "\tjsr\t-20364(a6)";
#define BN_get_rfc3526_prime_2048(bn) __BN_get_rfc3526_prime_2048(AmiSSLBase, (bn))

BIGNUM * __BN_get_rfc3526_prime_6144(__reg("a6") struct Library * , __reg("a0") BIGNUM * bn ) = "\tjsr\t-20370(a6)";
#define BN_get_rfc3526_prime_6144(bn) __BN_get_rfc3526_prime_6144(AmiSSLBase, (bn))

BIGNUM * __BN_get_rfc3526_prime_1536(__reg("a6") struct Library * , __reg("a0") BIGNUM * bn ) = "\tjsr\t-20376(a6)";
#define BN_get_rfc3526_prime_1536(bn) __BN_get_rfc3526_prime_1536(AmiSSLBase, (bn))

BIGNUM * __BN_get_rfc3526_prime_3072(__reg("a6") struct Library * , __reg("a0") BIGNUM * bn ) = "\tjsr\t-20382(a6)";
#define BN_get_rfc3526_prime_3072(bn) __BN_get_rfc3526_prime_3072(AmiSSLBase, (bn))

BIGNUM * __BN_get_rfc3526_prime_4096(__reg("a6") struct Library * , __reg("a0") BIGNUM * bn ) = "\tjsr\t-20388(a6)";
#define BN_get_rfc3526_prime_4096(bn) __BN_get_rfc3526_prime_4096(AmiSSLBase, (bn))

BIGNUM * __BN_get_rfc2409_prime_768(__reg("a6") struct Library * , __reg("a0") BIGNUM * bn ) = "\tjsr\t-20394(a6)";
#define BN_get_rfc2409_prime_768(bn) __BN_get_rfc2409_prime_768(AmiSSLBase, (bn))

unsigned long __X509_VERIFY_PARAM_get_flags(__reg("a6") struct Library * , __reg("a0") const X509_VERIFY_PARAM * param ) = "\tjsr\t-20400(a6)";
#define X509_VERIFY_PARAM_get_flags(param) __X509_VERIFY_PARAM_get_flags(AmiSSLBase, (param))

EVP_CIPHER_CTX * __EVP_CIPHER_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-20406(a6)";
#define EVP_CIPHER_CTX_new() __EVP_CIPHER_CTX_new(AmiSSLBase)

void __EVP_CIPHER_CTX_free(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * a ) = "\tjsr\t-20412(a6)";
#define EVP_CIPHER_CTX_free(a) __EVP_CIPHER_CTX_free(AmiSSLBase, (a))

int __EVP_CIPHER_get_block_size(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) = "\tjsr\t-20418(a6)";
#define EVP_CIPHER_get_block_size(cipher) __EVP_CIPHER_get_block_size(AmiSSLBase, (cipher))

void __EVP_CIPHER_CTX_set_app_data(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") void * data ) = "\tjsr\t-20424(a6)";
#define EVP_CIPHER_CTX_set_app_data(ctx, data) __EVP_CIPHER_CTX_set_app_data(AmiSSLBase, (ctx), (data))

int __BIO_method_type(__reg("a6") struct Library * , __reg("a0") const BIO * b ) = "\tjsr\t-20430(a6)";
#define BIO_method_type(b) __BIO_method_type(AmiSSLBase, (b))

int __EVP_CIPHER_CTX_get_nid(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-20436(a6)";
#define EVP_CIPHER_CTX_get_nid(ctx) __EVP_CIPHER_CTX_get_nid(AmiSSLBase, (ctx))

int __EVP_CIPHER_CTX_get_key_length(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-20442(a6)";
#define EVP_CIPHER_CTX_get_key_length(ctx) __EVP_CIPHER_CTX_get_key_length(AmiSSLBase, (ctx))

int __EVP_MD_get_size(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) = "\tjsr\t-20448(a6)";
#define EVP_MD_get_size(md) __EVP_MD_get_size(AmiSSLBase, (md))

int __EVP_MD_CTX_test_flags(__reg("a6") struct Library * , __reg("a0") const EVP_MD_CTX * ctx , __reg("d0") int flags ) = "\tjsr\t-20454(a6)";
#define EVP_MD_CTX_test_flags(ctx, flags) __EVP_MD_CTX_test_flags(AmiSSLBase, (ctx), (flags))

void __BIO_clear_flags(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("d0") int flags ) = "\tjsr\t-20460(a6)";
#define BIO_clear_flags(b, flags) __BIO_clear_flags(AmiSSLBase, (b), (flags))

int __EVP_MD_get_pkey_type(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) = "\tjsr\t-20466(a6)";
#define EVP_MD_get_pkey_type(md) __EVP_MD_get_pkey_type(AmiSSLBase, (md))

void __EVP_MD_CTX_clear_flags(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("d0") int flags ) = "\tjsr\t-20472(a6)";
#define EVP_MD_CTX_clear_flags(ctx, flags) __EVP_MD_CTX_clear_flags(AmiSSLBase, (ctx), (flags))

unsigned long __EVP_CIPHER_get_flags(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) = "\tjsr\t-20478(a6)";
#define EVP_CIPHER_get_flags(cipher) __EVP_CIPHER_get_flags(AmiSSLBase, (cipher))

BIO_callback_fn __BIO_get_callback(__reg("a6") struct Library * , __reg("a0") const BIO * b ) = "\tjsr\t-20484(a6)";
#define BIO_get_callback(b) __BIO_get_callback(AmiSSLBase, (b))

int __EVP_CIPHER_get_key_length(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) = "\tjsr\t-20490(a6)";
#define EVP_CIPHER_get_key_length(cipher) __EVP_CIPHER_get_key_length(AmiSSLBase, (cipher))

int __EVP_Cipher(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * c , __reg("a1") unsigned char * out , __reg("a2") const unsigned char * in , __reg("d0") unsigned int inl ) = "\tjsr\t-20496(a6)";
#define EVP_Cipher(c, out, in, inl) __EVP_Cipher(AmiSSLBase, (c), (out), (in), (inl))

int __EVP_CIPHER_CTX_get_block_size(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-20502(a6)";
#define EVP_CIPHER_CTX_get_block_size(ctx) __EVP_CIPHER_CTX_get_block_size(AmiSSLBase, (ctx))

const EVP_CIPHER * __EVP_CIPHER_CTX_cipher(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-20508(a6)";
#define EVP_CIPHER_CTX_cipher(ctx) __EVP_CIPHER_CTX_cipher(AmiSSLBase, (ctx))

void * __EVP_CIPHER_CTX_get_app_data(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-20514(a6)";
#define EVP_CIPHER_CTX_get_app_data(ctx) __EVP_CIPHER_CTX_get_app_data(AmiSSLBase, (ctx))

int __EVP_MD_get_block_size(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) = "\tjsr\t-20520(a6)";
#define EVP_MD_get_block_size(md) __EVP_MD_get_block_size(AmiSSLBase, (md))

unsigned long __OBSOLETE_EVP_CIPHER_CTX_flags(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-20526(a6)";
#define OBSOLETE_EVP_CIPHER_CTX_flags(ctx) __OBSOLETE_EVP_CIPHER_CTX_flags(AmiSSLBase, (ctx))

const EVP_MD * __EVP_MD_CTX_md(__reg("a6") struct Library * , __reg("a0") const EVP_MD_CTX * ctx ) = "\tjsr\t-20532(a6)";
#define EVP_MD_CTX_md(ctx) __EVP_MD_CTX_md(AmiSSLBase, (ctx))

const char * __BIO_method_name(__reg("a6") struct Library * , __reg("a0") const BIO * b ) = "\tjsr\t-20538(a6)";
#define BIO_method_name(b) __BIO_method_name(AmiSSLBase, (b))

int __EVP_CIPHER_CTX_get_iv_length(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-20544(a6)";
#define EVP_CIPHER_CTX_get_iv_length(ctx) __EVP_CIPHER_CTX_get_iv_length(AmiSSLBase, (ctx))

int __CRYPTO_memcmp(__reg("a6") struct Library * , __reg("a0") const void * in_a , __reg("a1") const void * in_b , __reg("d0") size_t len ) = "\tjsr\t-20550(a6)";
#define CRYPTO_memcmp(in_a, in_b, len) __CRYPTO_memcmp(AmiSSLBase, (in_a), (in_b), (len))

void __BN_consttime_swap(__reg("a6") struct Library * , __reg("d0") BN_ULONG swap , __reg("a0") BIGNUM * a , __reg("a1") BIGNUM * b , __reg("d1") int nwords ) = "\tjsr\t-20556(a6)";
#define BN_consttime_swap(swap, a, b, nwords) __BN_consttime_swap(AmiSSLBase, (swap), (a), (b), (nwords))

int __i2d_X509_EXTENSIONS(__reg("a6") struct Library * , __reg("a0") const X509_EXTENSIONS * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-20562(a6)";
#define i2d_X509_EXTENSIONS(a, out) __i2d_X509_EXTENSIONS(AmiSSLBase, (a), (out))

X509_EXTENSIONS * __d2i_X509_EXTENSIONS(__reg("a6") struct Library * , __reg("a0") X509_EXTENSIONS ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-20568(a6)";
#define d2i_X509_EXTENSIONS(a, in, len) __d2i_X509_EXTENSIONS(AmiSSLBase, (a), (in), (len))

void __X509_ALGOR_get0(__reg("a6") struct Library * , __reg("a0") const ASN1_OBJECT ** pobj , __reg("a1") int * pptype , __reg("a2") const void ** ppval , __reg("a3") const X509_ALGOR * algor ) = "\tjsr\t-20574(a6)";
#define X509_ALGOR_get0(pobj, pptype, ppval, algor) __X509_ALGOR_get0(AmiSSLBase, (pobj), (pptype), (ppval), (algor))

int __X509_ALGOR_set0(__reg("a6") struct Library * , __reg("a0") X509_ALGOR * alg , __reg("a1") ASN1_OBJECT * aobj , __reg("d0") int ptype , __reg("a2") void * pval ) = "\tjsr\t-20580(a6)";
#define X509_ALGOR_set0(alg, aobj, ptype, pval) __X509_ALGOR_set0(AmiSSLBase, (alg), (aobj), (ptype), (pval))

void * __X509at_get0_data_by_OBJ(__reg("a6") struct Library * , __reg("a0") const STACK_OF(X509_ATTRIBUTE) * x , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos , __reg("d1") int type ) = "\tjsr\t-20586(a6)";
#define X509at_get0_data_by_OBJ(x, obj, lastpos, type) __X509at_get0_data_by_OBJ(AmiSSLBase, (x), (obj), (lastpos), (type))

int __ASN1_TYPE_set1(__reg("a6") struct Library * , __reg("a0") ASN1_TYPE * a , __reg("d0") int type , __reg("a1") const void * value ) = "\tjsr\t-20592(a6)";
#define ASN1_TYPE_set1(a, type, value) __ASN1_TYPE_set1(AmiSSLBase, (a), (type), (value))

void __ASN1_STRING_set0(__reg("a6") struct Library * , __reg("a0") ASN1_STRING * str , __reg("a1") void * data , __reg("d0") int len ) = "\tjsr\t-20598(a6)";
#define ASN1_STRING_set0(str, data, len) __ASN1_STRING_set0(AmiSSLBase, (str), (data), (len))

int __i2d_X509_ALGORS(__reg("a6") struct Library * , __reg("a0") const X509_ALGORS * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-20604(a6)";
#define i2d_X509_ALGORS(a, out) __i2d_X509_ALGORS(AmiSSLBase, (a), (out))

X509_ALGORS * __d2i_X509_ALGORS(__reg("a6") struct Library * , __reg("a0") X509_ALGORS ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-20616(a6)";
#define d2i_X509_ALGORS(a, in, len) __d2i_X509_ALGORS(AmiSSLBase, (a), (in), (len))

ASN1_VALUE * __SMIME_read_ASN1(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") BIO ** bcont , __reg("a2") const ASN1_ITEM * it ) = "\tjsr\t-20622(a6)";
#define SMIME_read_ASN1(bio, bcont, it) __SMIME_read_ASN1(AmiSSLBase, (bio), (bcont), (it))

int __OPENSSL_isservice(__reg("a6") struct Library * ) = "\tjsr\t-20628(a6)";
#define OPENSSL_isservice() __OPENSSL_isservice(AmiSSLBase)

void __EVP_CIPHER_CTX_clear_flags(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("d0") int flags ) = "\tjsr\t-20634(a6)";
#define EVP_CIPHER_CTX_clear_flags(ctx, flags) __EVP_CIPHER_CTX_clear_flags(AmiSSLBase, (ctx), (flags))

int __BN_X931_generate_prime_ex(__reg("a6") struct Library * , __reg("a0") BIGNUM * p , __reg("a1") BIGNUM * p1 , __reg("a2") BIGNUM * p2 , __reg("a3") BIGNUM * Xp1 , __reg("d0") BIGNUM * Xp2 , __reg("d1") const BIGNUM * Xp , __reg("d2") const BIGNUM * e , __reg("d3") BN_CTX * ctx , __reg("d4") BN_GENCB * cb ) = "\tjsr\t-20640(a6)";
#define BN_X931_generate_prime_ex(p, p1, p2, Xp1, Xp2, Xp, e, ctx, cb) __BN_X931_generate_prime_ex(AmiSSLBase, (p), (p1), (p2), (Xp1), (Xp2), (Xp), (e), (ctx), (cb))

int __EVP_CIPHER_CTX_test_flags(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx , __reg("d0") int flags ) = "\tjsr\t-20646(a6)";
#define EVP_CIPHER_CTX_test_flags(ctx, flags) __EVP_CIPHER_CTX_test_flags(AmiSSLBase, (ctx), (flags))

void __EVP_add_alg_module(__reg("a6") struct Library * ) = "\tjsr\t-20652(a6)";
#define EVP_add_alg_module() __EVP_add_alg_module(AmiSSLBase)

int __BN_X931_derive_prime_ex(__reg("a6") struct Library * , __reg("a0") BIGNUM * p , __reg("a1") BIGNUM * p1 , __reg("a2") BIGNUM * p2 , __reg("d0") const BIGNUM * Xp , __reg("a3") const BIGNUM * Xp1 , __reg("d1") const BIGNUM * Xp2 , __reg("d2") const BIGNUM * e , __reg("d3") BN_CTX * ctx , __reg("d4") BN_GENCB * cb ) = "\tjsr\t-20658(a6)";
#define BN_X931_derive_prime_ex(p, p1, p2, Xp, Xp1, Xp2, e, ctx, cb) __BN_X931_derive_prime_ex(AmiSSLBase, (p), (p1), (p2), (Xp), (Xp1), (Xp2), (e), (ctx), (cb))

void __OPENSSL_init(__reg("a6") struct Library * ) = "\tjsr\t-20664(a6)";
#define OPENSSL_init() __OPENSSL_init(AmiSSLBase)

char * __CRYPTO_strdup(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("a1") const char * file , __reg("d0") int line ) = "\tjsr\t-20670(a6)";
#define CRYPTO_strdup(str, file, line) __CRYPTO_strdup(AmiSSLBase, (str), (file), (line))

int __i2d_TS_ACCURACY(__reg("a6") struct Library * , __reg("a0") const TS_ACCURACY * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-20682(a6)";
#define i2d_TS_ACCURACY(a, pp) __i2d_TS_ACCURACY(AmiSSLBase, (a), (pp))

int __i2d_TS_MSG_IMPRINT(__reg("a6") struct Library * , __reg("a0") const TS_MSG_IMPRINT * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-20694(a6)";
#define i2d_TS_MSG_IMPRINT(a, pp) __i2d_TS_MSG_IMPRINT(AmiSSLBase, (a), (pp))

int __EVP_PKEY_print_public(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const EVP_PKEY * pkey , __reg("d0") int indent , __reg("a2") ASN1_PCTX * pctx ) = "\tjsr\t-20700(a6)";
#define EVP_PKEY_print_public(out, pkey, indent, pctx) __EVP_PKEY_print_public(AmiSSLBase, (out), (pkey), (indent), (pctx))

EVP_PKEY_CTX * __EVP_PKEY_CTX_new(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") ENGINE * e ) = "\tjsr\t-20706(a6)";
#define EVP_PKEY_CTX_new(pkey, e) __EVP_PKEY_CTX_new(AmiSSLBase, (pkey), (e))

int __i2d_TS_TST_INFO(__reg("a6") struct Library * , __reg("a0") const TS_TST_INFO * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-20712(a6)";
#define i2d_TS_TST_INFO(a, pp) __i2d_TS_TST_INFO(AmiSSLBase, (a), (pp))

const EVP_PKEY_ASN1_METHOD * __EVP_PKEY_asn1_find(__reg("a6") struct Library * , __reg("a0") ENGINE ** pe , __reg("a1") int type ) = "\tjsr\t-20718(a6)";
#define EVP_PKEY_asn1_find(pe, type) __EVP_PKEY_asn1_find(AmiSSLBase, (pe), (type))

X509 * __TS_CONF_load_cert(__reg("a6") struct Library * , __reg("a0") const char * file ) = "\tjsr\t-20730(a6)";
#define TS_CONF_load_cert(file) __TS_CONF_load_cert(AmiSSLBase, (file))

X509_EXTENSION * __TS_REQ_get_ext(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("d0") int loc ) = "\tjsr\t-20736(a6)";
#define TS_REQ_get_ext(a, loc) __TS_REQ_get_ext(AmiSSLBase, (a), (loc))

int __EVP_PKEY_sign_init(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-20742(a6)";
#define EVP_PKEY_sign_init(ctx) __EVP_PKEY_sign_init(AmiSSLBase, (ctx))

int __ASN1_item_print(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const ASN1_VALUE * ifld , __reg("d0") int indent , __reg("a2") const ASN1_ITEM * it , __reg("a3") const ASN1_PCTX * ctx ) = "\tjsr\t-20748(a6)";
#define ASN1_item_print(out, ifld, indent, it, ctx) __ASN1_item_print(AmiSSLBase, (out), (ifld), (indent), (it), (ctx))

int __TS_TST_INFO_set_nonce(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("a1") const ASN1_INTEGER * nonce ) = "\tjsr\t-20754(a6)";
#define TS_TST_INFO_set_nonce(a, nonce) __TS_TST_INFO_set_nonce(AmiSSLBase, (a), (nonce))

TS_RESP * __TS_RESP_dup(__reg("a6") struct Library * , __reg("a0") const TS_RESP * a ) = "\tjsr\t-20760(a6)";
#define TS_RESP_dup(a) __TS_RESP_dup(AmiSSLBase, (a))

int __EVP_PKEY_asn1_add0(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_ASN1_METHOD * ameth ) = "\tjsr\t-20766(a6)";
#define EVP_PKEY_asn1_add0(ameth) __EVP_PKEY_asn1_add0(AmiSSLBase, (ameth))

int __PKCS7_add0_attrib_signing_time(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * si , __reg("a1") ASN1_TIME * t ) = "\tjsr\t-20772(a6)";
#define PKCS7_add0_attrib_signing_time(si, t) __PKCS7_add0_attrib_signing_time(AmiSSLBase, (si), (t))

int __BIO_asn1_get_prefix(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") asn1_ps_func ** pprefix , __reg("a2") asn1_ps_func ** pprefix_free ) = "\tjsr\t-20784(a6)";
#define BIO_asn1_get_prefix(b, pprefix, pprefix_free) __BIO_asn1_get_prefix(AmiSSLBase, (b), (pprefix), (pprefix_free))

int __TS_TST_INFO_set_time(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("a1") const ASN1_GENERALIZEDTIME * gtime ) = "\tjsr\t-20790(a6)";
#define TS_TST_INFO_set_time(a, gtime) __TS_TST_INFO_set_time(AmiSSLBase, (a), (gtime))

void __EVP_PKEY_meth_set_decrypt(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*decrypt_init)(EVP_PKEY_CTX *ctx) , __reg("a2") int (*decrypt)(EVP_PKEY_CTX *ctx,unsigned char *out,size_t *outlen,const unsigned char *in,size_t inlen) ) = "\tjsr\t-20796(a6)";
#define EVP_PKEY_meth_set_decrypt(pmeth, decrypt_init, decrypt) __EVP_PKEY_meth_set_decrypt(AmiSSLBase, (pmeth), (decrypt_init), (decrypt))

int __EVP_PKEY_set_type_str(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") const char * str , __reg("d0") int len ) = "\tjsr\t-20802(a6)";
#define EVP_PKEY_set_type_str(pkey, str, len) __EVP_PKEY_set_type_str(AmiSSLBase, (pkey), (str), (len))

int __EVP_PKEY_CTX_get_keygen_info(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("d0") int idx ) = "\tjsr\t-20808(a6)";
#define EVP_PKEY_CTX_get_keygen_info(ctx, idx) __EVP_PKEY_CTX_get_keygen_info(AmiSSLBase, (ctx), (idx))

int __TS_REQ_set_policy_id(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("a1") const ASN1_OBJECT * policy ) = "\tjsr\t-20814(a6)";
#define TS_REQ_set_policy_id(a, policy) __TS_REQ_set_policy_id(AmiSSLBase, (a), (policy))

int __TS_RESP_set_status_info(__reg("a6") struct Library * , __reg("a0") TS_RESP * a , __reg("a1") TS_STATUS_INFO * info ) = "\tjsr\t-20826(a6)";
#define TS_RESP_set_status_info(a, info) __TS_RESP_set_status_info(AmiSSLBase, (a), (info))

int __EVP_PKEY_keygen(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") EVP_PKEY ** ppkey ) = "\tjsr\t-20832(a6)";
#define EVP_PKEY_keygen(ctx, ppkey) __EVP_PKEY_keygen(AmiSSLBase, (ctx), (ppkey))

int __EVP_DigestSignInit(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") EVP_PKEY_CTX ** pctx , __reg("a2") const EVP_MD * type , __reg("a3") ENGINE * e , __reg("d0") EVP_PKEY * pkey ) = "\tjsr\t-20838(a6)";
#define EVP_DigestSignInit(ctx, pctx, type, e, pkey) __EVP_DigestSignInit(AmiSSLBase, (ctx), (pctx), (type), (e), (pkey))

int __TS_ACCURACY_set_millis(__reg("a6") struct Library * , __reg("a0") TS_ACCURACY * a , __reg("a1") const ASN1_INTEGER * millis ) = "\tjsr\t-20844(a6)";
#define TS_ACCURACY_set_millis(a, millis) __TS_ACCURACY_set_millis(AmiSSLBase, (a), (millis))

TS_REQ * __TS_REQ_dup(__reg("a6") struct Library * , __reg("a0") const TS_REQ * a ) = "\tjsr\t-20850(a6)";
#define TS_REQ_dup(a) __TS_REQ_dup(AmiSSLBase, (a))

GENERAL_NAME * __GENERAL_NAME_dup(__reg("a6") struct Library * , __reg("a0") const GENERAL_NAME * a ) = "\tjsr\t-20856(a6)";
#define GENERAL_NAME_dup(a) __GENERAL_NAME_dup(AmiSSLBase, (a))

STACK_OF(X509_CRL) * __X509_STORE_CTX_get1_crls(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * st , __reg("a1") const X509_NAME * nm ) = "\tjsr\t-20862(a6)";
#define X509_STORE_CTX_get1_crls(st, nm) __X509_STORE_CTX_get1_crls(AmiSSLBase, (st), (nm))

EVP_PKEY_ASN1_METHOD * __EVP_PKEY_asn1_new(__reg("a6") struct Library * , __reg("d0") int id , __reg("d1") int flags , __reg("a0") const char * pem_str , __reg("a1") const char * info ) = "\tjsr\t-20868(a6)";
#define EVP_PKEY_asn1_new(id, flags, pem_str, info) __EVP_PKEY_asn1_new(AmiSSLBase, (id), (flags), (pem_str), (info))

BIO * __BIO_new_NDEF(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") ASN1_VALUE * val , __reg("a2") const ASN1_ITEM * it ) = "\tjsr\t-20874(a6)";
#define BIO_new_NDEF(out, val, it) __BIO_new_NDEF(AmiSSLBase, (out), (val), (it))

int __TS_MSG_IMPRINT_set_algo(__reg("a6") struct Library * , __reg("a0") TS_MSG_IMPRINT * a , __reg("a1") X509_ALGOR * alg ) = "\tjsr\t-20880(a6)";
#define TS_MSG_IMPRINT_set_algo(a, alg) __TS_MSG_IMPRINT_set_algo(AmiSSLBase, (a), (alg))

int __i2d_TS_TST_INFO_bio(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") const TS_TST_INFO * a ) = "\tjsr\t-20886(a6)";
#define i2d_TS_TST_INFO_bio(fp, a) __i2d_TS_TST_INFO_bio(AmiSSLBase, (fp), (a))

int __TS_TST_INFO_set_ordering(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("d0") int ordering ) = "\tjsr\t-20892(a6)";
#define TS_TST_INFO_set_ordering(a, ordering) __TS_TST_INFO_set_ordering(AmiSSLBase, (a), (ordering))

int __TS_TST_INFO_get_ext_by_OBJ(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-20898(a6)";
#define TS_TST_INFO_get_ext_by_OBJ(a, obj, lastpos) __TS_TST_INFO_get_ext_by_OBJ(AmiSSLBase, (a), (obj), (lastpos))

const char * __TS_CONF_get_tsa_section(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section ) = "\tjsr\t-20910(a6)";
#define TS_CONF_get_tsa_section(conf, section) __TS_CONF_get_tsa_section(AmiSSLBase, (conf), (section))

int __SMIME_write_ASN1(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") ASN1_VALUE * val , __reg("a2") BIO * data , __reg("a3") int flags , __reg("d0") int ctype_nid , __reg("d1") int econt_nid , __reg("d2") STACK_OF(X509_ALGOR) * mdalgs , __reg("d3") const ASN1_ITEM * it ) = "\tjsr\t-20916(a6)";
#define SMIME_write_ASN1(bio, val, data, flags, ctype_nid, econt_nid, mdalgs, it) __SMIME_write_ASN1(AmiSSLBase, (bio), (val), (data), (flags), (ctype_nid), (econt_nid), (mdalgs), (it))

int __TS_RESP_CTX_set_signer_key(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("a1") EVP_PKEY * key ) = "\tjsr\t-20922(a6)";
#define TS_RESP_CTX_set_signer_key(ctx, key) __TS_RESP_CTX_set_signer_key(AmiSSLBase, (ctx), (key))

int __EVP_PKEY_encrypt_old(__reg("a6") struct Library * , __reg("a0") unsigned char * enc_key , __reg("a1") const unsigned char * key , __reg("d0") int key_len , __reg("a2") EVP_PKEY * pub_key ) = "\tjsr\t-20928(a6)";
#define EVP_PKEY_encrypt_old(enc_key, key, key_len, pub_key) __EVP_PKEY_encrypt_old(AmiSSLBase, (enc_key), (key), (key_len), (pub_key))

int __EVP_PKEY_encrypt_init(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-20934(a6)";
#define EVP_PKEY_encrypt_init(ctx) __EVP_PKEY_encrypt_init(AmiSSLBase, (ctx))

unsigned long __ASN1_PCTX_get_cert_flags(__reg("a6") struct Library * , __reg("a0") const ASN1_PCTX * p ) = "\tjsr\t-20946(a6)";
#define ASN1_PCTX_get_cert_flags(p) __ASN1_PCTX_get_cert_flags(AmiSSLBase, (p))

int __i2d_ESS_SIGNING_CERT(__reg("a6") struct Library * , __reg("a0") const ESS_SIGNING_CERT * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-20952(a6)";
#define i2d_ESS_SIGNING_CERT(a, pp) __i2d_ESS_SIGNING_CERT(AmiSSLBase, (a), (pp))

EVP_PKEY * __TS_CONF_load_key(__reg("a6") struct Library * , __reg("a0") const char * file , __reg("a1") const char * pass ) = "\tjsr\t-20958(a6)";
#define TS_CONF_load_key(file, pass) __TS_CONF_load_key(AmiSSLBase, (file), (pass))

int __i2d_ASN1_SEQUENCE_ANY(__reg("a6") struct Library * , __reg("a0") const ASN1_SEQUENCE_ANY * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-20964(a6)";
#define i2d_ASN1_SEQUENCE_ANY(a, pp) __i2d_ASN1_SEQUENCE_ANY(AmiSSLBase, (a), (pp))

TS_MSG_IMPRINT * __d2i_TS_MSG_IMPRINT_bio(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") TS_MSG_IMPRINT ** a ) = "\tjsr\t-20970(a6)";
#define d2i_TS_MSG_IMPRINT_bio(fp, a) __d2i_TS_MSG_IMPRINT_bio(AmiSSLBase, (fp), (a))

void __EVP_PKEY_asn1_set_public(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*pub_decode)(EVP_PKEY *pk,const X509_PUBKEY *pub) , __reg("a2") int (*pub_encode)(X509_PUBKEY *pub,const EVP_PKEY *pk) , __reg("a3") int (*pub_cmp)(const EVP_PKEY *a,const EVP_PKEY *b) , __reg("d0") int (*pub_print)(BIO *out,const EVP_PKEY *pkey,int indent,ASN1_PCTX *pctx) , __reg("d1") int (*pkey_size)(const EVP_PKEY *pk) , __reg("d2") int (*pkey_bits)(const EVP_PKEY *pk) ) = "\tjsr\t-20976(a6)";
#define EVP_PKEY_asn1_set_public(ameth, pub_decode, pub_encode, pub_cmp, pub_print, pkey_size, pkey_bits) __EVP_PKEY_asn1_set_public(AmiSSLBase, (ameth), (pub_decode), (pub_encode), (pub_cmp), (pub_print), (pkey_size), (pkey_bits))

EVP_PKEY * __b2i_PublicKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * in ) = "\tjsr\t-20982(a6)";
#define b2i_PublicKey_bio(in) __b2i_PublicKey_bio(AmiSSLBase, (in))

int __BIO_asn1_set_prefix(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") asn1_ps_func * prefix , __reg("a2") asn1_ps_func * prefix_free ) = "\tjsr\t-20988(a6)";
#define BIO_asn1_set_prefix(b, prefix, prefix_free) __BIO_asn1_set_prefix(AmiSSLBase, (b), (prefix), (prefix_free))

EVP_PKEY * __EVP_PKEY_new_mac_key(__reg("a6") struct Library * , __reg("a0") int type , __reg("a1") ENGINE * e , __reg("a2") const unsigned char * key , __reg("d0") int keylen ) = "\tjsr\t-20994(a6)";
#define EVP_PKEY_new_mac_key(type, e, key, keylen) __EVP_PKEY_new_mac_key(AmiSSLBase, (type), (e), (key), (keylen))

void __TS_REQ_ext_free(__reg("a6") struct Library * , __reg("a0") TS_REQ * a ) = "\tjsr\t-21006(a6)";
#define TS_REQ_ext_free(a) __TS_REQ_ext_free(AmiSSLBase, (a))

void __EVP_PKEY_asn1_set_free(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") void (*pkey_free)(EVP_PKEY *pkey) ) = "\tjsr\t-21012(a6)";
#define EVP_PKEY_asn1_set_free(ameth, pkey_free) __EVP_PKEY_asn1_set_free(AmiSSLBase, (ameth), (pkey_free))

const EVP_PKEY_ASN1_METHOD * __EVP_PKEY_get0_asn1(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-21018(a6)";
#define EVP_PKEY_get0_asn1(pkey) __EVP_PKEY_get0_asn1(AmiSSLBase, (pkey))

int __EVP_PKEY_verify_recover_init(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-21030(a6)";
#define EVP_PKEY_verify_recover_init(ctx) __EVP_PKEY_verify_recover_init(AmiSSLBase, (ctx))

void __EVP_PKEY_CTX_set_data(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") void * data ) = "\tjsr\t-21036(a6)";
#define EVP_PKEY_CTX_set_data(ctx, data) __EVP_PKEY_CTX_set_data(AmiSSLBase, (ctx), (data))

int __EVP_PKEY_keygen_init(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-21042(a6)";
#define EVP_PKEY_keygen_init(ctx) __EVP_PKEY_keygen_init(AmiSSLBase, (ctx))

int __TS_RESP_CTX_set_status_info(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("d0") int status , __reg("a1") const char * text ) = "\tjsr\t-21048(a6)";
#define TS_RESP_CTX_set_status_info(ctx, status, text) __TS_RESP_CTX_set_status_info(AmiSSLBase, (ctx), (status), (text))

X509_ALGOR * __TS_MSG_IMPRINT_get_algo(__reg("a6") struct Library * , __reg("a0") TS_MSG_IMPRINT * a ) = "\tjsr\t-21054(a6)";
#define TS_MSG_IMPRINT_get_algo(a) __TS_MSG_IMPRINT_get_algo(AmiSSLBase, (a))

int __TS_REQ_print_bio(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") TS_REQ * a ) = "\tjsr\t-21060(a6)";
#define TS_REQ_print_bio(bio, a) __TS_REQ_print_bio(AmiSSLBase, (bio), (a))

int __EVP_PKEY_CTX_ctrl_str(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") const char * type , __reg("a2") const char * value ) = "\tjsr\t-21066(a6)";
#define EVP_PKEY_CTX_ctrl_str(ctx, type, value) __EVP_PKEY_CTX_ctrl_str(AmiSSLBase, (ctx), (type), (value))

int __EVP_PKEY_get_default_digest_nid(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") int * pnid ) = "\tjsr\t-21072(a6)";
#define EVP_PKEY_get_default_digest_nid(pkey, pnid) __EVP_PKEY_get_default_digest_nid(AmiSSLBase, (pkey), (pnid))

int __PEM_write_bio_PKCS7_stream(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") PKCS7 * p7 , __reg("a2") BIO * in , __reg("d0") int flags ) = "\tjsr\t-21078(a6)";
#define PEM_write_bio_PKCS7_stream(out, p7, in, flags) __PEM_write_bio_PKCS7_stream(AmiSSLBase, (out), (p7), (in), (flags))

int __TS_MSG_IMPRINT_print_bio(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") TS_MSG_IMPRINT * msg ) = "\tjsr\t-21084(a6)";
#define TS_MSG_IMPRINT_print_bio(bio, msg) __TS_MSG_IMPRINT_print_bio(AmiSSLBase, (bio), (msg))

int __BN_asc2bn(__reg("a6") struct Library * , __reg("a0") BIGNUM ** a , __reg("a1") const char * str ) = "\tjsr\t-21090(a6)";
#define BN_asc2bn(a, str) __BN_asc2bn(AmiSSLBase, (a), (str))

ASN1_OBJECT * __TS_REQ_get_policy_id(__reg("a6") struct Library * , __reg("a0") TS_REQ * a ) = "\tjsr\t-21096(a6)";
#define TS_REQ_get_policy_id(a) __TS_REQ_get_policy_id(AmiSSLBase, (a))

TS_ACCURACY * __d2i_TS_ACCURACY(__reg("a6") struct Library * , __reg("a0") TS_ACCURACY ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-21102(a6)";
#define d2i_TS_ACCURACY(a, pp, length) __d2i_TS_ACCURACY(AmiSSLBase, (a), (pp), (length))

void * __DSO_global_lookup(__reg("a6") struct Library * , __reg("a0") const char * name ) = "\tjsr\t-21108(a6)";
#define DSO_global_lookup(name) __DSO_global_lookup(AmiSSLBase, (name))

int __TS_CONF_set_tsa_name(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") TS_RESP_CTX * ctx ) = "\tjsr\t-21114(a6)";
#define TS_CONF_set_tsa_name(conf, section, ctx) __TS_CONF_set_tsa_name(AmiSSLBase, (conf), (section), (ctx))

int __i2d_ASN1_SET_ANY(__reg("a6") struct Library * , __reg("a0") const ASN1_SEQUENCE_ANY * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-21120(a6)";
#define i2d_ASN1_SET_ANY(a, pp) __i2d_ASN1_SET_ANY(AmiSSLBase, (a), (pp))

unsigned long __ASN1_PCTX_get_flags(__reg("a6") struct Library * , __reg("a0") const ASN1_PCTX * p ) = "\tjsr\t-21126(a6)";
#define ASN1_PCTX_get_flags(p) __ASN1_PCTX_get_flags(AmiSSLBase, (p))

int __TS_TST_INFO_get_ext_by_NID(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-21132(a6)";
#define TS_TST_INFO_get_ext_by_NID(a, nid, lastpos) __TS_TST_INFO_get_ext_by_NID(AmiSSLBase, (a), (nid), (lastpos))

TS_RESP * __TS_RESP_new(__reg("a6") struct Library * ) = "\tjsr\t-21138(a6)";
#define TS_RESP_new() __TS_RESP_new(AmiSSLBase)

ESS_CERT_ID * __ESS_CERT_ID_dup(__reg("a6") struct Library * , __reg("a0") const ESS_CERT_ID * a ) = "\tjsr\t-21144(a6)";
#define ESS_CERT_ID_dup(a) __ESS_CERT_ID_dup(AmiSSLBase, (a))

TS_STATUS_INFO * __TS_STATUS_INFO_dup(__reg("a6") struct Library * , __reg("a0") const TS_STATUS_INFO * a ) = "\tjsr\t-21150(a6)";
#define TS_STATUS_INFO_dup(a) __TS_STATUS_INFO_dup(AmiSSLBase, (a))

X509_EXTENSION * __TS_REQ_delete_ext(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("d0") int loc ) = "\tjsr\t-21156(a6)";
#define TS_REQ_delete_ext(a, loc) __TS_REQ_delete_ext(AmiSSLBase, (a), (loc))

int __EVP_DigestVerifyFinal(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") const unsigned char * sig , __reg("d0") size_t siglen ) = "\tjsr\t-21162(a6)";
#define EVP_DigestVerifyFinal(ctx, sig, siglen) __EVP_DigestVerifyFinal(AmiSSLBase, (ctx), (sig), (siglen))

int __EVP_PKEY_print_params(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const EVP_PKEY * pkey , __reg("d0") int inden , __reg("a2") ASN1_PCTX * pctx ) = "\tjsr\t-21168(a6)";
#define EVP_PKEY_print_params(out, pkey, inden, pctx) __EVP_PKEY_print_params(AmiSSLBase, (out), (pkey), (inden), (pctx))

TS_MSG_IMPRINT * __TS_REQ_get_msg_imprint(__reg("a6") struct Library * , __reg("a0") TS_REQ * a ) = "\tjsr\t-21174(a6)";
#define TS_REQ_get_msg_imprint(a) __TS_REQ_get_msg_imprint(AmiSSLBase, (a))

int __OBJ_find_sigid_by_algs(__reg("a6") struct Library * , __reg("a0") int * psignid , __reg("d0") int dig_nid , __reg("d1") int pkey_nid ) = "\tjsr\t-21180(a6)";
#define OBJ_find_sigid_by_algs(psignid, dig_nid, pkey_nid) __OBJ_find_sigid_by_algs(AmiSSLBase, (psignid), (dig_nid), (pkey_nid))

const ASN1_INTEGER * __TS_TST_INFO_get_serial(__reg("a6") struct Library * , __reg("a0") const TS_TST_INFO * a ) = "\tjsr\t-21186(a6)";
#define TS_TST_INFO_get_serial(a) __TS_TST_INFO_get_serial(AmiSSLBase, (a))

const ASN1_INTEGER * __TS_REQ_get_nonce(__reg("a6") struct Library * , __reg("a0") const TS_REQ * a ) = "\tjsr\t-21192(a6)";
#define TS_REQ_get_nonce(a) __TS_REQ_get_nonce(AmiSSLBase, (a))

int __X509_PUBKEY_set0_param(__reg("a6") struct Library * , __reg("a0") X509_PUBKEY * pub , __reg("a1") ASN1_OBJECT * aobj , __reg("d0") int ptype , __reg("a2") void * pval , __reg("a3") unsigned char * penc , __reg("d1") int penclen ) = "\tjsr\t-21198(a6)";
#define X509_PUBKEY_set0_param(pub, aobj, ptype, pval, penc, penclen) __X509_PUBKEY_set0_param(AmiSSLBase, (pub), (aobj), (ptype), (pval), (penc), (penclen))

void __EVP_PKEY_CTX_set0_keygen_info(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") int * dat , __reg("d0") int datlen ) = "\tjsr\t-21204(a6)";
#define EVP_PKEY_CTX_set0_keygen_info(ctx, dat, datlen) __EVP_PKEY_CTX_set0_keygen_info(AmiSSLBase, (ctx), (dat), (datlen))

int __DIST_POINT_set_dpname(__reg("a6") struct Library * , __reg("a0") DIST_POINT_NAME * dpn , __reg("a1") const X509_NAME * iname ) = "\tjsr\t-21210(a6)";
#define DIST_POINT_set_dpname(dpn, iname) __DIST_POINT_set_dpname(AmiSSLBase, (dpn), (iname))

int __i2d_ISSUING_DIST_POINT(__reg("a6") struct Library * , __reg("a0") const ISSUING_DIST_POINT * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-21216(a6)";
#define i2d_ISSUING_DIST_POINT(a, pp) __i2d_ISSUING_DIST_POINT(AmiSSLBase, (a), (pp))

void * __EVP_PKEY_CTX_get_data(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_CTX * ctx ) = "\tjsr\t-21222(a6)";
#define EVP_PKEY_CTX_get_data(ctx) __EVP_PKEY_CTX_get_data(AmiSSLBase, (ctx))

int __TS_STATUS_INFO_print_bio(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") TS_STATUS_INFO * a ) = "\tjsr\t-21228(a6)";
#define TS_STATUS_INFO_print_bio(bio, a) __TS_STATUS_INFO_print_bio(AmiSSLBase, (bio), (a))

int __EVP_PKEY_derive_init(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-21234(a6)";
#define EVP_PKEY_derive_init(ctx) __EVP_PKEY_derive_init(AmiSSLBase, (ctx))

TS_TST_INFO * __d2i_TS_TST_INFO(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-21240(a6)";
#define d2i_TS_TST_INFO(a, pp, length) __d2i_TS_TST_INFO(AmiSSLBase, (a), (pp), (length))

int __EVP_PKEY_asn1_add_alias(__reg("a6") struct Library * , __reg("d0") int to , __reg("d1") int from ) = "\tjsr\t-21246(a6)";
#define EVP_PKEY_asn1_add_alias(to, from) __EVP_PKEY_asn1_add_alias(AmiSSLBase, (to), (from))

TS_RESP * __d2i_TS_RESP_bio(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") TS_RESP ** a ) = "\tjsr\t-21252(a6)";
#define d2i_TS_RESP_bio(fp, a) __d2i_TS_RESP_bio(AmiSSLBase, (fp), (a))

int __OTHERNAME_cmp(__reg("a6") struct Library * , __reg("a0") OTHERNAME * a , __reg("a1") OTHERNAME * b ) = "\tjsr\t-21258(a6)";
#define OTHERNAME_cmp(a, b) __OTHERNAME_cmp(AmiSSLBase, (a), (b))

void __GENERAL_NAME_set0_value(__reg("a6") struct Library * , __reg("a0") GENERAL_NAME * a , __reg("d0") int type , __reg("a1") void * value ) = "\tjsr\t-21264(a6)";
#define GENERAL_NAME_set0_value(a, type, value) __GENERAL_NAME_set0_value(AmiSSLBase, (a), (type), (value))

void __PKCS7_RECIP_INFO_get0_alg(__reg("a6") struct Library * , __reg("a0") PKCS7_RECIP_INFO * ri , __reg("a1") X509_ALGOR ** penc ) = "\tjsr\t-21270(a6)";
#define PKCS7_RECIP_INFO_get0_alg(ri, penc) __PKCS7_RECIP_INFO_get0_alg(AmiSSLBase, (ri), (penc))

TS_RESP_CTX * __TS_RESP_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-21276(a6)";
#define TS_RESP_CTX_new() __TS_RESP_CTX_new(AmiSSLBase)

void __TS_RESP_set_tst_info(__reg("a6") struct Library * , __reg("a0") TS_RESP * a , __reg("a1") PKCS7 * p7 , __reg("a2") TS_TST_INFO * tst_info ) = "\tjsr\t-21282(a6)";
#define TS_RESP_set_tst_info(a, p7, tst_info) __TS_RESP_set_tst_info(AmiSSLBase, (a), (p7), (tst_info))

int __PKCS7_final(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") BIO * data , __reg("d0") int flags ) = "\tjsr\t-21288(a6)";
#define PKCS7_final(p7, data, flags) __PKCS7_final(AmiSSLBase, (p7), (data), (flags))

int __EVP_PKEY_get_base_id(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-21294(a6)";
#define EVP_PKEY_get_base_id(pkey) __EVP_PKEY_get_base_id(AmiSSLBase, (pkey))

int __TS_RESP_CTX_set_signer_cert(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("a1") X509 * signer ) = "\tjsr\t-21300(a6)";
#define TS_RESP_CTX_set_signer_cert(ctx, signer) __TS_RESP_CTX_set_signer_cert(AmiSSLBase, (ctx), (signer))

int __TS_REQ_set_msg_imprint(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("a1") TS_MSG_IMPRINT * msg_imprint ) = "\tjsr\t-21306(a6)";
#define TS_REQ_set_msg_imprint(a, msg_imprint) __TS_REQ_set_msg_imprint(AmiSSLBase, (a), (msg_imprint))

int __EVP_PKEY_CTX_ctrl(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("d0") int keytype , __reg("d1") int optype , __reg("d2") int cmd , __reg("d3") int p1 , __reg("a1") void * p2 ) = "\tjsr\t-21312(a6)";
#define EVP_PKEY_CTX_ctrl(ctx, keytype, optype, cmd, p1, p2) __EVP_PKEY_CTX_ctrl(AmiSSLBase, (ctx), (keytype), (optype), (cmd), (p1), (p2))

int __TS_CONF_set_digests(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") TS_RESP_CTX * ctx ) = "\tjsr\t-21318(a6)";
#define TS_CONF_set_digests(conf, section, ctx) __TS_CONF_set_digests(AmiSSLBase, (conf), (section), (ctx))

TS_MSG_IMPRINT * __d2i_TS_MSG_IMPRINT(__reg("a6") struct Library * , __reg("a0") TS_MSG_IMPRINT ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-21324(a6)";
#define d2i_TS_MSG_IMPRINT(a, pp, length) __d2i_TS_MSG_IMPRINT(AmiSSLBase, (a), (pp), (length))

void __EVP_PKEY_meth_set_ctrl(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*ctrl)(EVP_PKEY_CTX *ctx,int type,int p1,void *p2) , __reg("a2") int (*ctrl_str)(EVP_PKEY_CTX *ctx,const char *type,const char *value) ) = "\tjsr\t-21330(a6)";
#define EVP_PKEY_meth_set_ctrl(pmeth, ctrl, ctrl_str) __EVP_PKEY_meth_set_ctrl(AmiSSLBase, (pmeth), (ctrl), (ctrl_str))

int __TS_REQ_get_ext_by_NID(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("d0") int nid , __reg("d1") int lastpos ) = "\tjsr\t-21336(a6)";
#define TS_REQ_get_ext_by_NID(a, nid, lastpos) __TS_REQ_get_ext_by_NID(AmiSSLBase, (a), (nid), (lastpos))

int __PKCS5_pbe_set0_algor(__reg("a6") struct Library * , __reg("a0") X509_ALGOR * algor , __reg("d0") int alg , __reg("d1") int iter , __reg("a1") const unsigned char * salt , __reg("d2") int saltlen ) = "\tjsr\t-21342(a6)";
#define PKCS5_pbe_set0_algor(algor, alg, iter, salt, saltlen) __PKCS5_pbe_set0_algor(AmiSSLBase, (algor), (alg), (iter), (salt), (saltlen))

TS_ACCURACY * __TS_ACCURACY_new(__reg("a6") struct Library * ) = "\tjsr\t-21354(a6)";
#define TS_ACCURACY_new() __TS_ACCURACY_new(AmiSSLBase)

void __X509_CRL_METHOD_free(__reg("a6") struct Library * , __reg("a0") X509_CRL_METHOD * m ) = "\tjsr\t-21360(a6)";
#define X509_CRL_METHOD_free(m) __X509_CRL_METHOD_free(AmiSSLBase, (m))

unsigned long __ASN1_PCTX_get_nm_flags(__reg("a6") struct Library * , __reg("a0") const ASN1_PCTX * p ) = "\tjsr\t-21366(a6)";
#define ASN1_PCTX_get_nm_flags(p) __ASN1_PCTX_get_nm_flags(AmiSSLBase, (p))

void __EVP_PKEY_meth_set_sign(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*sign_init)(EVP_PKEY_CTX *ctx) , __reg("a2") int (*sign)(EVP_PKEY_CTX *ctx,unsigned char *sig,size_t *siglen,const unsigned char *tbs,size_t tbslen) ) = "\tjsr\t-21372(a6)";
#define EVP_PKEY_meth_set_sign(pmeth, sign_init, sign) __EVP_PKEY_meth_set_sign(AmiSSLBase, (pmeth), (sign_init), (sign))

int __EVP_PKEY_decrypt_init(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-21384(a6)";
#define EVP_PKEY_decrypt_init(ctx) __EVP_PKEY_decrypt_init(AmiSSLBase, (ctx))

int __i2b_PVK_bio(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const EVP_PKEY * pk , __reg("d0") int enclevel , __reg("a2") pem_password_cb * cb , __reg("a3") void * u ) = "\tjsr\t-21396(a6)";
#define i2b_PVK_bio(out, pk, enclevel, cb, u) __i2b_PVK_bio(AmiSSLBase, (out), (pk), (enclevel), (cb), (u))

int __EVP_PKEY_print_private(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const EVP_PKEY * pkey , __reg("d0") int indent , __reg("a2") ASN1_PCTX * pctx ) = "\tjsr\t-21402(a6)";
#define EVP_PKEY_print_private(out, pkey, indent, pctx) __EVP_PKEY_print_private(AmiSSLBase, (out), (pkey), (indent), (pctx))

void * __GENERAL_NAME_get0_value(__reg("a6") struct Library * , __reg("a0") const GENERAL_NAME * a , __reg("a1") int * ptype ) = "\tjsr\t-21408(a6)";
#define GENERAL_NAME_get0_value(a, ptype) __GENERAL_NAME_get0_value(AmiSSLBase, (a), (ptype))

EVP_PKEY * __b2i_PVK_bio(__reg("a6") struct Library * , __reg("a0") BIO * in , __reg("a1") pem_password_cb * cb , __reg("a2") void * u ) = "\tjsr\t-21414(a6)";
#define b2i_PVK_bio(in, cb, u) __b2i_PVK_bio(AmiSSLBase, (in), (cb), (u))

ASN1_UTCTIME * __ASN1_UTCTIME_adj(__reg("a6") struct Library * , __reg("a0") ASN1_UTCTIME * s , __reg("d0") time_t t , __reg("d1") int offset_day , __reg("d2") long offset_sec ) = "\tjsr\t-21420(a6)";
#define ASN1_UTCTIME_adj(s, t, offset_day, offset_sec) __ASN1_UTCTIME_adj(AmiSSLBase, (s), (t), (offset_day), (offset_sec))

TS_TST_INFO * __TS_TST_INFO_new(__reg("a6") struct Library * ) = "\tjsr\t-21426(a6)";
#define TS_TST_INFO_new() __TS_TST_INFO_new(AmiSSLBase)

void __EVP_MD_do_all_sorted(__reg("a6") struct Library * , __reg("a0") void (*fn)(const EVP_MD *ciph,const char *from,const char *to,void *x) , __reg("a1") void * arg ) = "\tjsr\t-21432(a6)";
#define EVP_MD_do_all_sorted(fn, arg) __EVP_MD_do_all_sorted(AmiSSLBase, (fn), (arg))

int __TS_CONF_set_default_engine(__reg("a6") struct Library * , __reg("a0") const char * name ) = "\tjsr\t-21438(a6)";
#define TS_CONF_set_default_engine(name) __TS_CONF_set_default_engine(AmiSSLBase, (name))

int __TS_ACCURACY_set_seconds(__reg("a6") struct Library * , __reg("a0") TS_ACCURACY * a , __reg("a1") const ASN1_INTEGER * seconds ) = "\tjsr\t-21444(a6)";
#define TS_ACCURACY_set_seconds(a, seconds) __TS_ACCURACY_set_seconds(AmiSSLBase, (a), (seconds))

const ASN1_GENERALIZEDTIME * __TS_TST_INFO_get_time(__reg("a6") struct Library * , __reg("a0") const TS_TST_INFO * a ) = "\tjsr\t-21450(a6)";
#define TS_TST_INFO_get_time(a) __TS_TST_INFO_get_time(AmiSSLBase, (a))

int __PKCS8_pkey_get0(__reg("a6") struct Library * , __reg("a0") const ASN1_OBJECT ** ppkalg , __reg("a1") const unsigned char ** pk , __reg("a2") int * ppklen , __reg("a3") const X509_ALGOR ** pa , __reg("d0") const PKCS8_PRIV_KEY_INFO * p8 ) = "\tjsr\t-21456(a6)";
#define PKCS8_pkey_get0(ppkalg, pk, ppklen, pa, p8) __PKCS8_pkey_get0(AmiSSLBase, (ppkalg), (pk), (ppklen), (pa), (p8))

const EVP_PKEY_ASN1_METHOD * __EVP_PKEY_asn1_get0(__reg("a6") struct Library * , __reg("d0") int idx ) = "\tjsr\t-21462(a6)";
#define EVP_PKEY_asn1_get0(idx) __EVP_PKEY_asn1_get0(AmiSSLBase, (idx))

int __OBJ_add_sigid(__reg("a6") struct Library * , __reg("d0") int signid , __reg("d1") int dig_id , __reg("d2") int pkey_id ) = "\tjsr\t-21468(a6)";
#define OBJ_add_sigid(signid, dig_id, pkey_id) __OBJ_add_sigid(AmiSSLBase, (signid), (dig_id), (pkey_id))

int __PKCS7_SIGNER_INFO_sign(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * si ) = "\tjsr\t-21474(a6)";
#define PKCS7_SIGNER_INFO_sign(si) __PKCS7_SIGNER_INFO_sign(AmiSSLBase, (si))

int __EVP_PKEY_paramgen_init(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-21480(a6)";
#define EVP_PKEY_paramgen_init(ctx) __EVP_PKEY_paramgen_init(AmiSSLBase, (ctx))

int __EVP_PKEY_sign(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") unsigned char * sig , __reg("d0") size_t * siglen , __reg("a2") const unsigned char * tbs , __reg("d1") size_t tbslen ) = "\tjsr\t-21486(a6)";
#define EVP_PKEY_sign(ctx, sig, siglen, tbs, tbslen) __EVP_PKEY_sign(AmiSSLBase, (ctx), (sig), (siglen), (tbs), (tbslen))

void __OBJ_sigid_free(__reg("a6") struct Library * ) = "\tjsr\t-21492(a6)";
#define OBJ_sigid_free() __OBJ_sigid_free(AmiSSLBase)

void __EVP_PKEY_meth_set_init(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*init)(EVP_PKEY_CTX *ctx) ) = "\tjsr\t-21498(a6)";
#define EVP_PKEY_meth_set_init(pmeth, init) __EVP_PKEY_meth_set_init(AmiSSLBase, (pmeth), (init))

ESS_ISSUER_SERIAL * __d2i_ESS_ISSUER_SERIAL(__reg("a6") struct Library * , __reg("a0") ESS_ISSUER_SERIAL ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-21504(a6)";
#define d2i_ESS_ISSUER_SERIAL(a, pp, length) __d2i_ESS_ISSUER_SERIAL(AmiSSLBase, (a), (pp), (length))

ISSUING_DIST_POINT * __ISSUING_DIST_POINT_new(__reg("a6") struct Library * ) = "\tjsr\t-21510(a6)";
#define ISSUING_DIST_POINT_new() __ISSUING_DIST_POINT_new(AmiSSLBase)

ASN1_TIME * __ASN1_TIME_adj(__reg("a6") struct Library * , __reg("a0") ASN1_TIME * s , __reg("d0") time_t t , __reg("d1") int offset_day , __reg("d2") long offset_sec ) = "\tjsr\t-21516(a6)";
#define ASN1_TIME_adj(s, t, offset_day, offset_sec) __ASN1_TIME_adj(AmiSSLBase, (s), (t), (offset_day), (offset_sec))

int __TS_OBJ_print_bio(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") const ASN1_OBJECT * obj ) = "\tjsr\t-21522(a6)";
#define TS_OBJ_print_bio(bio, obj) __TS_OBJ_print_bio(AmiSSLBase, (bio), (obj))

void __EVP_PKEY_meth_set_verify_recover(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*verify_recover_init)(EVP_PKEY_CTX *ctx) , __reg("a2") int (*verify_recover)(EVP_PKEY_CTX *ctx,unsigned char *sig,size_t *siglen,const unsigned char *tbs,size_t tbslen) ) = "\tjsr\t-21528(a6)";
#define EVP_PKEY_meth_set_verify_recover(pmeth, verify_recover_init, verify_recover) __EVP_PKEY_meth_set_verify_recover(AmiSSLBase, (pmeth), (verify_recover_init), (verify_recover))

TS_STATUS_INFO * __TS_RESP_get_status_info(__reg("a6") struct Library * , __reg("a0") TS_RESP * g ) = "\tjsr\t-21534(a6)";
#define TS_RESP_get_status_info(g) __TS_RESP_get_status_info(AmiSSLBase, (g))

void __EVP_PKEY_CTX_set_cb(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") EVP_PKEY_gen_cb * cb ) = "\tjsr\t-21540(a6)";
#define EVP_PKEY_CTX_set_cb(ctx, cb) __EVP_PKEY_CTX_set_cb(AmiSSLBase, (ctx), (cb))

TS_TST_INFO * __PKCS7_to_TS_TST_INFO(__reg("a6") struct Library * , __reg("a0") PKCS7 * token ) = "\tjsr\t-21546(a6)";
#define PKCS7_to_TS_TST_INFO(token) __PKCS7_to_TS_TST_INFO(AmiSSLBase, (token))

unsigned long __ASN1_PCTX_get_oid_flags(__reg("a6") struct Library * , __reg("a0") const ASN1_PCTX * p ) = "\tjsr\t-21552(a6)";
#define ASN1_PCTX_get_oid_flags(p) __ASN1_PCTX_get_oid_flags(AmiSSLBase, (p))

int __TS_TST_INFO_add_ext(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("a1") X509_EXTENSION * ex , __reg("d0") int loc ) = "\tjsr\t-21558(a6)";
#define TS_TST_INFO_add_ext(a, ex, loc) __TS_TST_INFO_add_ext(AmiSSLBase, (a), (ex), (loc))

void __EVP_PKEY_meth_set_derive(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*derive_init)(EVP_PKEY_CTX *ctx) , __reg("a2") int (*derive)(EVP_PKEY_CTX *ctx,unsigned char *key,size_t *keylen) ) = "\tjsr\t-21564(a6)";
#define EVP_PKEY_meth_set_derive(pmeth, derive_init, derive) __EVP_PKEY_meth_set_derive(AmiSSLBase, (pmeth), (derive_init), (derive))

int __i2d_TS_MSG_IMPRINT_bio(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") const TS_MSG_IMPRINT * a ) = "\tjsr\t-21576(a6)";
#define i2d_TS_MSG_IMPRINT_bio(fp, a) __i2d_TS_MSG_IMPRINT_bio(AmiSSLBase, (fp), (a))

int __TS_RESP_CTX_set_accuracy(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("d0") int secs , __reg("d1") int millis , __reg("d2") int micros ) = "\tjsr\t-21582(a6)";
#define TS_RESP_CTX_set_accuracy(ctx, secs, millis, micros) __TS_RESP_CTX_set_accuracy(AmiSSLBase, (ctx), (secs), (millis), (micros))

int __TS_REQ_set_nonce(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("a1") const ASN1_INTEGER * nonce ) = "\tjsr\t-21588(a6)";
#define TS_REQ_set_nonce(a, nonce) __TS_REQ_set_nonce(AmiSSLBase, (a), (nonce))

ESS_CERT_ID * __ESS_CERT_ID_new(__reg("a6") struct Library * ) = "\tjsr\t-21594(a6)";
#define ESS_CERT_ID_new() __ESS_CERT_ID_new(AmiSSLBase)

int __TS_REQ_get_ext_count(__reg("a6") struct Library * , __reg("a0") TS_REQ * a ) = "\tjsr\t-21600(a6)";
#define TS_REQ_get_ext_count(a) __TS_REQ_get_ext_count(AmiSSLBase, (a))

void __BUF_reverse(__reg("a6") struct Library * , __reg("a0") unsigned char * out , __reg("a1") const unsigned char * in , __reg("d0") size_t siz ) = "\tjsr\t-21606(a6)";
#define BUF_reverse(out, in, siz) __BUF_reverse(AmiSSLBase, (out), (in), (siz))

int __TS_TST_INFO_print_bio(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") TS_TST_INFO * a ) = "\tjsr\t-21612(a6)";
#define TS_TST_INFO_print_bio(bio, a) __TS_TST_INFO_print_bio(AmiSSLBase, (bio), (a))

ISSUING_DIST_POINT * __d2i_ISSUING_DIST_POINT(__reg("a6") struct Library * , __reg("a0") ISSUING_DIST_POINT ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-21618(a6)";
#define d2i_ISSUING_DIST_POINT(a, pp, length) __d2i_ISSUING_DIST_POINT(AmiSSLBase, (a), (pp), (length))

int __i2b_PrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const EVP_PKEY * pk ) = "\tjsr\t-21624(a6)";
#define i2b_PrivateKey_bio(out, pk) __i2b_PrivateKey_bio(AmiSSLBase, (out), (pk))

int __i2d_TS_RESP(__reg("a6") struct Library * , __reg("a0") const TS_RESP * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-21630(a6)";
#define i2d_TS_RESP(a, pp) __i2d_TS_RESP(AmiSSLBase, (a), (pp))

EVP_PKEY * __b2i_PublicKey(__reg("a6") struct Library * , __reg("a0") const unsigned char ** in , __reg("d0") long length ) = "\tjsr\t-21636(a6)";
#define b2i_PublicKey(in, length) __b2i_PublicKey(AmiSSLBase, (in), (length))

void __TS_VERIFY_CTX_cleanup(__reg("a6") struct Library * , __reg("a0") TS_VERIFY_CTX * ctx ) = "\tjsr\t-21642(a6)";
#define TS_VERIFY_CTX_cleanup(ctx) __TS_VERIFY_CTX_cleanup(AmiSSLBase, (ctx))

void __TS_STATUS_INFO_free(__reg("a6") struct Library * , __reg("a0") TS_STATUS_INFO * a ) = "\tjsr\t-21648(a6)";
#define TS_STATUS_INFO_free(a) __TS_STATUS_INFO_free(AmiSSLBase, (a))

int __TS_RESP_verify_token(__reg("a6") struct Library * , __reg("a0") TS_VERIFY_CTX * ctx , __reg("a1") PKCS7 * token ) = "\tjsr\t-21654(a6)";
#define TS_RESP_verify_token(ctx, token) __TS_RESP_verify_token(AmiSSLBase, (ctx), (token))

const void * __OBJ_bsearch_ex_(__reg("a6") struct Library * , __reg("a0") const void * key , __reg("a1") const void * base , __reg("d0") int num , __reg("d1") int size , __reg("a2") int (*cmp)(const void *,const void *) , __reg("d2") int flags ) = "\tjsr\t-21660(a6)";
#define OBJ_bsearch_ex_(key, base, num, size, cmp, flags) __OBJ_bsearch_ex_(AmiSSLBase, (key), (base), (num), (size), (cmp), (flags))

int __ASN1_bn_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const char * number , __reg("a2") const BIGNUM * num , __reg("a3") unsigned char * ign , __reg("d0") int indent ) = "\tjsr\t-21666(a6)";
#define ASN1_bn_print(bp, number, num, ign, indent) __ASN1_bn_print(AmiSSLBase, (bp), (number), (num), (ign), (indent))

int __EVP_PKEY_asn1_get_count(__reg("a6") struct Library * ) = "\tjsr\t-21672(a6)";
#define EVP_PKEY_asn1_get_count() __EVP_PKEY_asn1_get_count(AmiSSLBase)

void __ASN1_PCTX_set_nm_flags(__reg("a6") struct Library * , __reg("a0") ASN1_PCTX * p , __reg("d0") unsigned long flags ) = "\tjsr\t-21678(a6)";
#define ASN1_PCTX_set_nm_flags(p, flags) __ASN1_PCTX_set_nm_flags(AmiSSLBase, (p), (flags))

int __EVP_DigestVerifyInit(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") EVP_PKEY_CTX ** pctx , __reg("a2") const EVP_MD * type , __reg("a3") ENGINE * e , __reg("d0") EVP_PKEY * pkey ) = "\tjsr\t-21684(a6)";
#define EVP_DigestVerifyInit(ctx, pctx, type, e, pkey) __EVP_DigestVerifyInit(AmiSSLBase, (ctx), (pctx), (type), (e), (pkey))

ASN1_OBJECT * __TS_TST_INFO_get_policy_id(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a ) = "\tjsr\t-21690(a6)";
#define TS_TST_INFO_get_policy_id(a) __TS_TST_INFO_get_policy_id(AmiSSLBase, (a))

int __TS_REQ_get_cert_req(__reg("a6") struct Library * , __reg("a0") const TS_REQ * a ) = "\tjsr\t-21696(a6)";
#define TS_REQ_get_cert_req(a) __TS_REQ_get_cert_req(AmiSSLBase, (a))

void __X509_CRL_set_meth_data(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl , __reg("a1") void * dat ) = "\tjsr\t-21702(a6)";
#define X509_CRL_set_meth_data(crl, dat) __X509_CRL_set_meth_data(AmiSSLBase, (crl), (dat))

int __PKCS8_pkey_set0(__reg("a6") struct Library * , __reg("a0") PKCS8_PRIV_KEY_INFO * priv , __reg("a1") ASN1_OBJECT * aobj , __reg("d0") int version , __reg("d1") int ptype , __reg("a2") void * pval , __reg("a3") unsigned char * penc , __reg("d2") int penclen ) = "\tjsr\t-21708(a6)";
#define PKCS8_pkey_set0(priv, aobj, version, ptype, pval, penc, penclen) __PKCS8_pkey_set0(AmiSSLBase, (priv), (aobj), (version), (ptype), (pval), (penc), (penclen))

int __ASN1_STRING_copy(__reg("a6") struct Library * , __reg("a0") ASN1_STRING * dst , __reg("a1") const ASN1_STRING * str ) = "\tjsr\t-21714(a6)";
#define ASN1_STRING_copy(dst, str) __ASN1_STRING_copy(AmiSSLBase, (dst), (str))

int __X509_CRL_match(__reg("a6") struct Library * , __reg("a0") const X509_CRL * a , __reg("a1") const X509_CRL * b ) = "\tjsr\t-21726(a6)";
#define X509_CRL_match(a, b) __X509_CRL_match(AmiSSLBase, (a), (b))

void __EVP_PKEY_asn1_set_private(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*priv_decode)(EVP_PKEY *pk,const PKCS8_PRIV_KEY_INFO *p8inf) , __reg("a2") int (*priv_encode)(PKCS8_PRIV_KEY_INFO *p8,const EVP_PKEY *pk) , __reg("a3") int (*priv_print)(BIO *out,const EVP_PKEY *pkey,int indent,ASN1_PCTX *pctx) ) = "\tjsr\t-21732(a6)";
#define EVP_PKEY_asn1_set_private(ameth, priv_decode, priv_encode, priv_print) __EVP_PKEY_asn1_set_private(AmiSSLBase, (ameth), (priv_decode), (priv_encode), (priv_print))

void * __TS_TST_INFO_get_ext_d2i(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("d0") int nid , __reg("a1") int * crit , __reg("a2") int * idx ) = "\tjsr\t-21738(a6)";
#define TS_TST_INFO_get_ext_d2i(a, nid, crit, idx) __TS_TST_INFO_get_ext_d2i(AmiSSLBase, (a), (nid), (crit), (idx))

int __TS_RESP_CTX_add_policy(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("a1") const ASN1_OBJECT * policy ) = "\tjsr\t-21744(a6)";
#define TS_RESP_CTX_add_policy(ctx, policy) __TS_RESP_CTX_add_policy(AmiSSLBase, (ctx), (policy))

TS_RESP * __d2i_TS_RESP(__reg("a6") struct Library * , __reg("a0") TS_RESP ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-21750(a6)";
#define d2i_TS_RESP(a, pp, length) __d2i_TS_RESP(AmiSSLBase, (a), (pp), (length))

STACK_OF(X509) * __TS_CONF_load_certs(__reg("a6") struct Library * , __reg("a0") const char * file ) = "\tjsr\t-21756(a6)";
#define TS_CONF_load_certs(file) __TS_CONF_load_certs(AmiSSLBase, (file))

TS_MSG_IMPRINT * __TS_TST_INFO_get_msg_imprint(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a ) = "\tjsr\t-21762(a6)";
#define TS_TST_INFO_get_msg_imprint(a) __TS_TST_INFO_get_msg_imprint(AmiSSLBase, (a))

int __ERR_load_TS_strings(__reg("a6") struct Library * ) = "\tjsr\t-21768(a6)";
#define ERR_load_TS_strings() __ERR_load_TS_strings(AmiSSLBase)

long __TS_TST_INFO_get_version(__reg("a6") struct Library * , __reg("a0") const TS_TST_INFO * a ) = "\tjsr\t-21774(a6)";
#define TS_TST_INFO_get_version(a) __TS_TST_INFO_get_version(AmiSSLBase, (a))

EVP_PKEY_CTX * __EVP_PKEY_CTX_dup(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_CTX * ctx ) = "\tjsr\t-21780(a6)";
#define EVP_PKEY_CTX_dup(ctx) __EVP_PKEY_CTX_dup(AmiSSLBase, (ctx))

void __EVP_PKEY_meth_set_verify(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*verify_init)(EVP_PKEY_CTX *ctx) , __reg("a2") int (*verify)(EVP_PKEY_CTX *ctx,const unsigned char *sig,size_t siglen,const unsigned char *tbs,size_t tbslen) ) = "\tjsr\t-21786(a6)";
#define EVP_PKEY_meth_set_verify(pmeth, verify_init, verify) __EVP_PKEY_meth_set_verify(AmiSSLBase, (pmeth), (verify_init), (verify))

int __i2b_PublicKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const EVP_PKEY * pk ) = "\tjsr\t-21792(a6)";
#define i2b_PublicKey_bio(out, pk) __i2b_PublicKey_bio(AmiSSLBase, (out), (pk))

int __TS_CONF_set_certs(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") const char * certs , __reg("a3") TS_RESP_CTX * ctx ) = "\tjsr\t-21798(a6)";
#define TS_CONF_set_certs(conf, section, certs, ctx) __TS_CONF_set_certs(AmiSSLBase, (conf), (section), (certs), (ctx))

int __EVP_PKEY_asn1_get0_info(__reg("a6") struct Library * , __reg("a0") int * ppkey_id , __reg("a1") int * ppkey_base_id , __reg("a2") int * ppkey_flags , __reg("a3") const char ** pinfo , __reg("d0") const char ** ppem_str , __reg("d1") const EVP_PKEY_ASN1_METHOD * ameth ) = "\tjsr\t-21804(a6)";
#define EVP_PKEY_asn1_get0_info(ppkey_id, ppkey_base_id, ppkey_flags, pinfo, ppem_str, ameth) __EVP_PKEY_asn1_get0_info(AmiSSLBase, (ppkey_id), (ppkey_base_id), (ppkey_flags), (pinfo), (ppem_str), (ameth))

void __TS_VERIFY_CTX_free(__reg("a6") struct Library * , __reg("a0") TS_VERIFY_CTX * ctx ) = "\tjsr\t-21810(a6)";
#define TS_VERIFY_CTX_free(ctx) __TS_VERIFY_CTX_free(AmiSSLBase, (ctx))

int __TS_REQ_get_ext_by_critical(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("d0") int crit , __reg("d1") int lastpos ) = "\tjsr\t-21816(a6)";
#define TS_REQ_get_ext_by_critical(a, crit, lastpos) __TS_REQ_get_ext_by_critical(AmiSSLBase, (a), (crit), (lastpos))

void __TS_RESP_CTX_set_serial_cb(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("d0") TS_serial_cb cb , __reg("a1") void * data ) = "\tjsr\t-21822(a6)";
#define TS_RESP_CTX_set_serial_cb(ctx, cb, data) __TS_RESP_CTX_set_serial_cb(AmiSSLBase, (ctx), (cb), (data))

void * __X509_CRL_get_meth_data(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl ) = "\tjsr\t-21828(a6)";
#define X509_CRL_get_meth_data(crl) __X509_CRL_get_meth_data(AmiSSLBase, (crl))

void __TS_RESP_CTX_set_time_cb(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("d0") TS_time_cb cb , __reg("a1") void * data ) = "\tjsr\t-21834(a6)";
#define TS_RESP_CTX_set_time_cb(ctx, cb, data) __TS_RESP_CTX_set_time_cb(AmiSSLBase, (ctx), (cb), (data))

ASN1_OCTET_STRING * __TS_MSG_IMPRINT_get_msg(__reg("a6") struct Library * , __reg("a0") TS_MSG_IMPRINT * a ) = "\tjsr\t-21840(a6)";
#define TS_MSG_IMPRINT_get_msg(a) __TS_MSG_IMPRINT_get_msg(AmiSSLBase, (a))

void __TS_TST_INFO_ext_free(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a ) = "\tjsr\t-21846(a6)";
#define TS_TST_INFO_ext_free(a) __TS_TST_INFO_ext_free(AmiSSLBase, (a))

long __TS_REQ_get_version(__reg("a6") struct Library * , __reg("a0") const TS_REQ * a ) = "\tjsr\t-21852(a6)";
#define TS_REQ_get_version(a) __TS_REQ_get_version(AmiSSLBase, (a))

int __TS_REQ_add_ext(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("a1") X509_EXTENSION * ex , __reg("d0") int loc ) = "\tjsr\t-21858(a6)";
#define TS_REQ_add_ext(a, ex, loc) __TS_REQ_add_ext(AmiSSLBase, (a), (ex), (loc))

void __EVP_PKEY_CTX_set_app_data(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") void * data ) = "\tjsr\t-21864(a6)";
#define EVP_PKEY_CTX_set_app_data(ctx, data) __EVP_PKEY_CTX_set_app_data(AmiSSLBase, (ctx), (data))

const void * __OBJ_bsearch_(__reg("a6") struct Library * , __reg("a0") const void * key , __reg("a1") const void * base , __reg("d0") int num , __reg("d1") int size , __reg("a2") int (*cmp)(const void *,const void *) ) = "\tjsr\t-21870(a6)";
#define OBJ_bsearch_(key, base, num, size, cmp) __OBJ_bsearch_(AmiSSLBase, (key), (base), (num), (size), (cmp))

void __EVP_PKEY_meth_set_verifyctx(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*verifyctx_init)(EVP_PKEY_CTX *ctx,EVP_MD_CTX *mctx) , __reg("a2") int (*verifyctx)(EVP_PKEY_CTX *ctx,const unsigned char *sig,int siglen,EVP_MD_CTX *mctx) ) = "\tjsr\t-21876(a6)";
#define EVP_PKEY_meth_set_verifyctx(pmeth, verifyctx_init, verifyctx) __EVP_PKEY_meth_set_verifyctx(AmiSSLBase, (pmeth), (verifyctx_init), (verifyctx))

int __i2d_PKCS7_bio_stream(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") PKCS7 * p7 , __reg("a2") BIO * in , __reg("d0") int flags ) = "\tjsr\t-21882(a6)";
#define i2d_PKCS7_bio_stream(out, p7, in, flags) __i2d_PKCS7_bio_stream(AmiSSLBase, (out), (p7), (in), (flags))

PKCS7_SIGNER_INFO * __PKCS7_sign_add_signer(__reg("a6") struct Library * , __reg("a0") PKCS7 * p7 , __reg("a1") X509 * signcert , __reg("a2") EVP_PKEY * pkey , __reg("a3") const EVP_MD * md , __reg("d0") int flags ) = "\tjsr\t-21894(a6)";
#define PKCS7_sign_add_signer(p7, signcert, pkey, md, flags) __PKCS7_sign_add_signer(AmiSSLBase, (p7), (signcert), (pkey), (md), (flags))

TS_TST_INFO * __d2i_TS_TST_INFO_bio(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") TS_TST_INFO ** a ) = "\tjsr\t-21900(a6)";
#define d2i_TS_TST_INFO_bio(bp, a) __d2i_TS_TST_INFO_bio(AmiSSLBase, (bp), (a))

int __TS_TST_INFO_get_ordering(__reg("a6") struct Library * , __reg("a0") const TS_TST_INFO * a ) = "\tjsr\t-21906(a6)";
#define TS_TST_INFO_get_ordering(a) __TS_TST_INFO_get_ordering(AmiSSLBase, (a))

int __TS_RESP_print_bio(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") TS_RESP * a ) = "\tjsr\t-21912(a6)";
#define TS_RESP_print_bio(bio, a) __TS_RESP_print_bio(AmiSSLBase, (bio), (a))

STACK_OF(X509_EXTENSION) * __TS_TST_INFO_get_exts(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a ) = "\tjsr\t-21918(a6)";
#define TS_TST_INFO_get_exts(a) __TS_TST_INFO_get_exts(AmiSSLBase, (a))

X509_ALGOR * __PKCS5_pbe2_set_iv(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher , __reg("d0") int iter , __reg("a1") unsigned char * salt , __reg("d1") int saltlen , __reg("a2") unsigned char * aiv , __reg("d2") int prf_nid ) = "\tjsr\t-21924(a6)";
#define PKCS5_pbe2_set_iv(cipher, iter, salt, saltlen, aiv, prf_nid) __PKCS5_pbe2_set_iv(AmiSSLBase, (cipher), (iter), (salt), (saltlen), (aiv), (prf_nid))

EVP_PKEY * __b2i_PrivateKey(__reg("a6") struct Library * , __reg("a0") const unsigned char ** in , __reg("d0") long length ) = "\tjsr\t-21930(a6)";
#define b2i_PrivateKey(in, length) __b2i_PrivateKey(AmiSSLBase, (in), (length))

void * __EVP_PKEY_CTX_get_app_data(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-21936(a6)";
#define EVP_PKEY_CTX_get_app_data(ctx) __EVP_PKEY_CTX_get_app_data(AmiSSLBase, (ctx))

int __TS_REQ_set_cert_req(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("d0") int cert_req ) = "\tjsr\t-21942(a6)";
#define TS_REQ_set_cert_req(a, cert_req) __TS_REQ_set_cert_req(AmiSSLBase, (a), (cert_req))

int __TS_CONF_set_serial(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") TS_serial_cb cb , __reg("a3") TS_RESP_CTX * ctx ) = "\tjsr\t-21954(a6)";
#define TS_CONF_set_serial(conf, section, cb, ctx) __TS_CONF_set_serial(AmiSSLBase, (conf), (section), (cb), (ctx))

void __TS_TST_INFO_free(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a ) = "\tjsr\t-21960(a6)";
#define TS_TST_INFO_free(a) __TS_TST_INFO_free(AmiSSLBase, (a))

int __TS_RESP_verify_response(__reg("a6") struct Library * , __reg("a0") TS_VERIFY_CTX * ctx , __reg("a1") TS_RESP * response ) = "\tjsr\t-21972(a6)";
#define TS_RESP_verify_response(ctx, response) __TS_RESP_verify_response(AmiSSLBase, (ctx), (response))

int __i2d_ESS_ISSUER_SERIAL(__reg("a6") struct Library * , __reg("a0") const ESS_ISSUER_SERIAL * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-21978(a6)";
#define i2d_ESS_ISSUER_SERIAL(a, pp) __i2d_ESS_ISSUER_SERIAL(AmiSSLBase, (a), (pp))

const ASN1_INTEGER * __TS_ACCURACY_get_seconds(__reg("a6") struct Library * , __reg("a0") const TS_ACCURACY * a ) = "\tjsr\t-21984(a6)";
#define TS_ACCURACY_get_seconds(a) __TS_ACCURACY_get_seconds(AmiSSLBase, (a))

void __EVP_CIPHER_do_all(__reg("a6") struct Library * , __reg("a0") void (*fn)(const EVP_CIPHER *ciph,const char *from,const char *to,void *x) , __reg("a1") void * arg ) = "\tjsr\t-21990(a6)";
#define EVP_CIPHER_do_all(fn, arg) __EVP_CIPHER_do_all(AmiSSLBase, (fn), (arg))

EVP_PKEY * __b2i_PrivateKey_bio(__reg("a6") struct Library * , __reg("a0") BIO * in ) = "\tjsr\t-21996(a6)";
#define b2i_PrivateKey_bio(in) __b2i_PrivateKey_bio(AmiSSLBase, (in))

OCSP_CERTID * __OCSP_CERTID_dup(__reg("a6") struct Library * , __reg("a0") const OCSP_CERTID * a ) = "\tjsr\t-22002(a6)";
#define OCSP_CERTID_dup(a) __OCSP_CERTID_dup(AmiSSLBase, (a))

int __X509_PUBKEY_get0_param(__reg("a6") struct Library * , __reg("a0") ASN1_OBJECT ** ppkalg , __reg("a1") const unsigned char ** pk , __reg("a2") int * ppklen , __reg("a3") X509_ALGOR ** pa , __reg("d0") const X509_PUBKEY * pub ) = "\tjsr\t-22008(a6)";
#define X509_PUBKEY_get0_param(ppkalg, pk, ppklen, pa, pub) __X509_PUBKEY_get0_param(AmiSSLBase, (ppkalg), (pk), (ppklen), (pa), (pub))

TS_MSG_IMPRINT * __TS_MSG_IMPRINT_dup(__reg("a6") struct Library * , __reg("a0") const TS_MSG_IMPRINT * a ) = "\tjsr\t-22014(a6)";
#define TS_MSG_IMPRINT_dup(a) __TS_MSG_IMPRINT_dup(AmiSSLBase, (a))

int __PKCS7_print_ctx(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") const PKCS7 * x , __reg("d0") int indent , __reg("a2") const ASN1_PCTX * pctx ) = "\tjsr\t-22020(a6)";
#define PKCS7_print_ctx(out, x, indent, pctx) __PKCS7_print_ctx(AmiSSLBase, (out), (x), (indent), (pctx))

int __i2d_TS_REQ_bio(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") const TS_REQ * a ) = "\tjsr\t-22026(a6)";
#define i2d_TS_REQ_bio(fp, a) __i2d_TS_REQ_bio(AmiSSLBase, (fp), (a))

void __EVP_PKEY_asn1_set_param(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*param_decode)(EVP_PKEY *pkey,const unsigned char **pder,int derlen) , __reg("a2") int (*param_encode)(const EVP_PKEY *pkey,unsigned char **pder) , __reg("a3") int (*param_missing)(const EVP_PKEY *pk) , __reg("d0") int (*param_copy)(EVP_PKEY *to,const EVP_PKEY *from) , __reg("d1") int (*param_cmp)(const EVP_PKEY *a,const EVP_PKEY *b) , __reg("d2") int (*param_print)(BIO *out,const EVP_PKEY *pkey,int indent,ASN1_PCTX *pctx) ) = "\tjsr\t-22032(a6)";
#define EVP_PKEY_asn1_set_param(ameth, param_decode, param_encode, param_missing, param_copy, param_cmp, param_print) __EVP_PKEY_asn1_set_param(AmiSSLBase, (ameth), (param_decode), (param_encode), (param_missing), (param_copy), (param_cmp), (param_print))

void __EVP_PKEY_meth_set_encrypt(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*encrypt_init)(EVP_PKEY_CTX *ctx) , __reg("a2") int (*encryptfn)(EVP_PKEY_CTX *ctx,unsigned char *out,size_t *outlen,const unsigned char *in,size_t inlen) ) = "\tjsr\t-22038(a6)";
#define EVP_PKEY_meth_set_encrypt(pmeth, encrypt_init, encryptfn) __EVP_PKEY_meth_set_encrypt(AmiSSLBase, (pmeth), (encrypt_init), (encryptfn))

void __ASN1_PCTX_set_flags(__reg("a6") struct Library * , __reg("a0") ASN1_PCTX * p , __reg("d0") unsigned long flags ) = "\tjsr\t-22044(a6)";
#define ASN1_PCTX_set_flags(p, flags) __ASN1_PCTX_set_flags(AmiSSLBase, (p), (flags))

int __i2d_ESS_CERT_ID(__reg("a6") struct Library * , __reg("a0") const ESS_CERT_ID * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-22050(a6)";
#define i2d_ESS_CERT_ID(a, pp) __i2d_ESS_CERT_ID(AmiSSLBase, (a), (pp))

TS_VERIFY_CTX * __TS_VERIFY_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-22056(a6)";
#define TS_VERIFY_CTX_new() __TS_VERIFY_CTX_new(AmiSSLBase)

void __TS_RESP_CTX_set_extension_cb(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("a1") TS_extension_cb cb , __reg("a2") void * data ) = "\tjsr\t-22062(a6)";
#define TS_RESP_CTX_set_extension_cb(ctx, cb, data) __TS_RESP_CTX_set_extension_cb(AmiSSLBase, (ctx), (cb), (data))

int __TS_RESP_CTX_set_status_info_cond(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("d0") int status , __reg("a1") const char * text ) = "\tjsr\t-22068(a6)";
#define TS_RESP_CTX_set_status_info_cond(ctx, status, text) __TS_RESP_CTX_set_status_info_cond(AmiSSLBase, (ctx), (status), (text))

int __EVP_PKEY_verify(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") const unsigned char * sig , __reg("d0") size_t siglen , __reg("a2") const unsigned char * tbs , __reg("d1") size_t tbslen ) = "\tjsr\t-22074(a6)";
#define EVP_PKEY_verify(ctx, sig, siglen, tbs, tbslen) __EVP_PKEY_verify(AmiSSLBase, (ctx), (sig), (siglen), (tbs), (tbslen))

X509_CRL_METHOD * __X509_CRL_METHOD_new(__reg("a6") struct Library * , __reg("a0") int (*crl_init)(X509_CRL *crl) , __reg("a1") int (*crl_free)(X509_CRL *crl) , __reg("a2") int (*crl_lookup)(X509_CRL *crl,X509_REVOKED **ret,const ASN1_INTEGER *serial,const X509_NAME *issuer) , __reg("a3") int (*crl_verify)(X509_CRL *crl,EVP_PKEY *pk) ) = "\tjsr\t-22080(a6)";
#define X509_CRL_METHOD_new(crl_init, crl_free, crl_lookup, crl_verify) __X509_CRL_METHOD_new(AmiSSLBase, (crl_init), (crl_free), (crl_lookup), (crl_verify))

int __EVP_DigestSignFinal(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") unsigned char * sigret , __reg("a2") size_t * siglen ) = "\tjsr\t-22086(a6)";
#define EVP_DigestSignFinal(ctx, sigret, siglen) __EVP_DigestSignFinal(AmiSSLBase, (ctx), (sigret), (siglen))

int __TS_RESP_CTX_set_def_policy(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("a1") const ASN1_OBJECT * def_policy ) = "\tjsr\t-22092(a6)";
#define TS_RESP_CTX_set_def_policy(ctx, def_policy) __TS_RESP_CTX_set_def_policy(AmiSSLBase, (ctx), (def_policy))

TS_RESP * __TS_RESP_create_response(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("a1") BIO * req_bio ) = "\tjsr\t-22098(a6)";
#define TS_RESP_create_response(ctx, req_bio) __TS_RESP_create_response(AmiSSLBase, (ctx), (req_bio))

void __PKCS7_SIGNER_INFO_get0_algs(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * si , __reg("a1") EVP_PKEY ** pk , __reg("a2") X509_ALGOR ** pdig , __reg("a3") X509_ALGOR ** psig ) = "\tjsr\t-22104(a6)";
#define PKCS7_SIGNER_INFO_get0_algs(si, pk, pdig, psig) __PKCS7_SIGNER_INFO_get0_algs(AmiSSLBase, (si), (pk), (pdig), (psig))

const ASN1_INTEGER * __TS_TST_INFO_get_nonce(__reg("a6") struct Library * , __reg("a0") const TS_TST_INFO * a ) = "\tjsr\t-22110(a6)";
#define TS_TST_INFO_get_nonce(a) __TS_TST_INFO_get_nonce(AmiSSLBase, (a))

int __EVP_PKEY_decrypt_old(__reg("a6") struct Library * , __reg("a0") unsigned char * dec_key , __reg("a1") const unsigned char * enc_key , __reg("d0") int enc_key_len , __reg("a2") EVP_PKEY * private_key ) = "\tjsr\t-22116(a6)";
#define EVP_PKEY_decrypt_old(dec_key, enc_key, enc_key_len, private_key) __EVP_PKEY_decrypt_old(AmiSSLBase, (dec_key), (enc_key), (enc_key_len), (private_key))

int __TS_TST_INFO_set_policy_id(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("a1") ASN1_OBJECT * policy_id ) = "\tjsr\t-22122(a6)";
#define TS_TST_INFO_set_policy_id(a, policy_id) __TS_TST_INFO_set_policy_id(AmiSSLBase, (a), (policy_id))

int __TS_CONF_set_ess_cert_id_chain(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") TS_RESP_CTX * ctx ) = "\tjsr\t-22128(a6)";
#define TS_CONF_set_ess_cert_id_chain(conf, section, ctx) __TS_CONF_set_ess_cert_id_chain(AmiSSLBase, (conf), (section), (ctx))

EVP_PKEY * __EVP_PKEY_CTX_get0_pkey(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-22134(a6)";
#define EVP_PKEY_CTX_get0_pkey(ctx) __EVP_PKEY_CTX_get0_pkey(AmiSSLBase, (ctx))

TS_REQ * __d2i_TS_REQ(__reg("a6") struct Library * , __reg("a0") TS_REQ ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-22140(a6)";
#define d2i_TS_REQ(a, pp, length) __d2i_TS_REQ(AmiSSLBase, (a), (pp), (length))

const EVP_PKEY_ASN1_METHOD * __EVP_PKEY_asn1_find_str(__reg("a6") struct Library * , __reg("a0") ENGINE ** pe , __reg("a1") const char * str , __reg("d0") int len ) = "\tjsr\t-22146(a6)";
#define EVP_PKEY_asn1_find_str(pe, str, len) __EVP_PKEY_asn1_find_str(AmiSSLBase, (pe), (str), (len))

const BIO_METHOD * __BIO_f_asn1(__reg("a6") struct Library * ) = "\tjsr\t-22152(a6)";
#define BIO_f_asn1() __BIO_f_asn1(AmiSSLBase)

ESS_SIGNING_CERT * __ESS_SIGNING_CERT_new(__reg("a6") struct Library * ) = "\tjsr\t-22158(a6)";
#define ESS_SIGNING_CERT_new() __ESS_SIGNING_CERT_new(AmiSSLBase)

int __EVP_PBE_find(__reg("a6") struct Library * , __reg("d0") int type , __reg("d1") int pbe_nid , __reg("a0") int * pcnid , __reg("a1") int * pmnid , __reg("a2") EVP_PBE_KEYGEN ** pkeygen ) = "\tjsr\t-22164(a6)";
#define EVP_PBE_find(type, pbe_nid, pcnid, pmnid, pkeygen) __EVP_PBE_find(AmiSSLBase, (type), (pbe_nid), (pcnid), (pmnid), (pkeygen))

int __X509_CRL_get0_by_cert(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl , __reg("a1") X509_REVOKED ** ret , __reg("a2") X509 * x ) = "\tjsr\t-22170(a6)";
#define X509_CRL_get0_by_cert(crl, ret, x) __X509_CRL_get0_by_cert(AmiSSLBase, (crl), (ret), (x))

int __EVP_PKEY_derive(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") unsigned char * key , __reg("a2") size_t * keylen ) = "\tjsr\t-22176(a6)";
#define EVP_PKEY_derive(ctx, key, keylen) __EVP_PKEY_derive(AmiSSLBase, (ctx), (key), (keylen))

int __i2d_TS_REQ(__reg("a6") struct Library * , __reg("a0") const TS_REQ * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-22182(a6)";
#define i2d_TS_REQ(a, pp) __i2d_TS_REQ(AmiSSLBase, (a), (pp))

X509_EXTENSION * __TS_TST_INFO_delete_ext(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("d0") int loc ) = "\tjsr\t-22188(a6)";
#define TS_TST_INFO_delete_ext(a, loc) __TS_TST_INFO_delete_ext(AmiSSLBase, (a), (loc))

void __ESS_ISSUER_SERIAL_free(__reg("a6") struct Library * , __reg("a0") ESS_ISSUER_SERIAL * a ) = "\tjsr\t-22194(a6)";
#define ESS_ISSUER_SERIAL_free(a) __ESS_ISSUER_SERIAL_free(AmiSSLBase, (a))

void __ASN1_PCTX_set_str_flags(__reg("a6") struct Library * , __reg("a0") ASN1_PCTX * p , __reg("d0") unsigned long flags ) = "\tjsr\t-22200(a6)";
#define ASN1_PCTX_set_str_flags(p, flags) __ASN1_PCTX_set_str_flags(AmiSSLBase, (p), (flags))

int __TS_CONF_set_signer_key(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") const char * key , __reg("a3") const char * pass , __reg("d0") TS_RESP_CTX * ctx ) = "\tjsr\t-22206(a6)";
#define TS_CONF_set_signer_key(conf, section, key, pass, ctx) __TS_CONF_set_signer_key(AmiSSLBase, (conf), (section), (key), (pass), (ctx))

const ASN1_INTEGER * __TS_ACCURACY_get_millis(__reg("a6") struct Library * , __reg("a0") const TS_ACCURACY * a ) = "\tjsr\t-22212(a6)";
#define TS_ACCURACY_get_millis(a) __TS_ACCURACY_get_millis(AmiSSLBase, (a))

PKCS7 * __TS_RESP_get_token(__reg("a6") struct Library * , __reg("a0") TS_RESP * a ) = "\tjsr\t-22218(a6)";
#define TS_RESP_get_token(a) __TS_RESP_get_token(AmiSSLBase, (a))

TS_ACCURACY * __TS_ACCURACY_dup(__reg("a6") struct Library * , __reg("a0") const TS_ACCURACY * a ) = "\tjsr\t-22224(a6)";
#define TS_ACCURACY_dup(a) __TS_ACCURACY_dup(AmiSSLBase, (a))

void __X509_CRL_set_default_method(__reg("a6") struct Library * , __reg("a0") const X509_CRL_METHOD * meth ) = "\tjsr\t-22230(a6)";
#define X509_CRL_set_default_method(meth) __X509_CRL_set_default_method(AmiSSLBase, (meth))

void __TS_RESP_free(__reg("a6") struct Library * , __reg("a0") TS_RESP * a ) = "\tjsr\t-22242(a6)";
#define TS_RESP_free(a) __TS_RESP_free(AmiSSLBase, (a))

void __ISSUING_DIST_POINT_free(__reg("a6") struct Library * , __reg("a0") ISSUING_DIST_POINT * a ) = "\tjsr\t-22248(a6)";
#define ISSUING_DIST_POINT_free(a) __ISSUING_DIST_POINT_free(AmiSSLBase, (a))

ESS_ISSUER_SERIAL * __ESS_ISSUER_SERIAL_new(__reg("a6") struct Library * ) = "\tjsr\t-22254(a6)";
#define ESS_ISSUER_SERIAL_new() __ESS_ISSUER_SERIAL_new(AmiSSLBase)

int __PKCS7_add1_attrib_digest(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * si , __reg("a1") const unsigned char * md , __reg("d0") int mdlen ) = "\tjsr\t-22260(a6)";
#define PKCS7_add1_attrib_digest(si, md, mdlen) __PKCS7_add1_attrib_digest(AmiSSLBase, (si), (md), (mdlen))

int __TS_RESP_CTX_add_md(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("a1") const EVP_MD * md ) = "\tjsr\t-22266(a6)";
#define TS_RESP_CTX_add_md(ctx, md) __TS_RESP_CTX_add_md(AmiSSLBase, (ctx), (md))

TS_TST_INFO * __TS_TST_INFO_dup(__reg("a6") struct Library * , __reg("a0") const TS_TST_INFO * a ) = "\tjsr\t-22272(a6)";
#define TS_TST_INFO_dup(a) __TS_TST_INFO_dup(AmiSSLBase, (a))

int __PEM_write_bio_Parameters(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EVP_PKEY * x ) = "\tjsr\t-22278(a6)";
#define PEM_write_bio_Parameters(bp, x) __PEM_write_bio_Parameters(AmiSSLBase, (bp), (x))

TS_ACCURACY * __TS_TST_INFO_get_accuracy(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a ) = "\tjsr\t-22284(a6)";
#define TS_TST_INFO_get_accuracy(a) __TS_TST_INFO_get_accuracy(AmiSSLBase, (a))

int __X509_CRL_get0_by_serial(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl , __reg("a1") X509_REVOKED ** ret , __reg("a2") const ASN1_INTEGER * serial ) = "\tjsr\t-22290(a6)";
#define X509_CRL_get0_by_serial(crl, ret, serial) __X509_CRL_get0_by_serial(AmiSSLBase, (crl), (ret), (serial))

int __TS_TST_INFO_set_version(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("d0") long version ) = "\tjsr\t-22296(a6)";
#define TS_TST_INFO_set_version(a, version) __TS_TST_INFO_set_version(AmiSSLBase, (a), (version))

TS_TST_INFO * __TS_RESP_CTX_get_tst_info(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx ) = "\tjsr\t-22302(a6)";
#define TS_RESP_CTX_get_tst_info(ctx) __TS_RESP_CTX_get_tst_info(AmiSSLBase, (ctx))

int __TS_RESP_verify_signature(__reg("a6") struct Library * , __reg("a0") PKCS7 * token , __reg("a1") STACK_OF(X509) * certs , __reg("a2") X509_STORE * store , __reg("a3") X509 ** signer_out ) = "\tjsr\t-22308(a6)";
#define TS_RESP_verify_signature(token, certs, store, signer_out) __TS_RESP_verify_signature(AmiSSLBase, (token), (certs), (store), (signer_out))

GENERAL_NAME * __TS_TST_INFO_get_tsa(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a ) = "\tjsr\t-22320(a6)";
#define TS_TST_INFO_get_tsa(a) __TS_TST_INFO_get_tsa(AmiSSLBase, (a))

TS_STATUS_INFO * __TS_STATUS_INFO_new(__reg("a6") struct Library * ) = "\tjsr\t-22326(a6)";
#define TS_STATUS_INFO_new() __TS_STATUS_INFO_new(AmiSSLBase)

int  (* __EVP_PKEY_CTX_get_cb(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) )(EVP_PKEY_CTX *ctx) =  "\tjsr\t-22332(a6)";
#define EVP_PKEY_CTX_get_cb(ctx) __EVP_PKEY_CTX_get_cb(AmiSSLBase, (ctx))

void * __TS_REQ_get_ext_d2i(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("d0") int nid , __reg("a1") int * crit , __reg("d1") int * idx ) = "\tjsr\t-22338(a6)";
#define TS_REQ_get_ext_d2i(a, nid, crit, idx) __TS_REQ_get_ext_d2i(AmiSSLBase, (a), (nid), (crit), (idx))

int __GENERAL_NAME_set0_othername(__reg("a6") struct Library * , __reg("a0") GENERAL_NAME * gen , __reg("a1") ASN1_OBJECT * oid , __reg("a2") ASN1_TYPE * value ) = "\tjsr\t-22344(a6)";
#define GENERAL_NAME_set0_othername(gen, oid, value) __GENERAL_NAME_set0_othername(AmiSSLBase, (gen), (oid), (value))

int __TS_TST_INFO_get_ext_count(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a ) = "\tjsr\t-22350(a6)";
#define TS_TST_INFO_get_ext_count(a) __TS_TST_INFO_get_ext_count(AmiSSLBase, (a))

TS_REQ * __TS_RESP_CTX_get_request(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx ) = "\tjsr\t-22356(a6)";
#define TS_RESP_CTX_get_request(ctx) __TS_RESP_CTX_get_request(AmiSSLBase, (ctx))

void __EVP_PKEY_meth_set_signctx(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*signctx_init)(EVP_PKEY_CTX *ctx,EVP_MD_CTX *mctx) , __reg("a2") int (*signctx)(EVP_PKEY_CTX *ctx,unsigned char *sig,size_t *siglen,EVP_MD_CTX *mctx) ) = "\tjsr\t-22368(a6)";
#define EVP_PKEY_meth_set_signctx(pmeth, signctx_init, signctx) __EVP_PKEY_meth_set_signctx(AmiSSLBase, (pmeth), (signctx_init), (signctx))

void __EVP_PKEY_asn1_copy(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * dst , __reg("a1") const EVP_PKEY_ASN1_METHOD * src ) = "\tjsr\t-22374(a6)";
#define EVP_PKEY_asn1_copy(dst, src) __EVP_PKEY_asn1_copy(AmiSSLBase, (dst), (src))

int __ASN1_TYPE_cmp(__reg("a6") struct Library * , __reg("a0") const ASN1_TYPE * a , __reg("a1") const ASN1_TYPE * b ) = "\tjsr\t-22380(a6)";
#define ASN1_TYPE_cmp(a, b) __ASN1_TYPE_cmp(AmiSSLBase, (a), (b))

void __EVP_CIPHER_do_all_sorted(__reg("a6") struct Library * , __reg("a0") void (*fn)(const EVP_CIPHER *ciph,const char *from,const char *to,void *x) , __reg("a1") void * arg ) = "\tjsr\t-22386(a6)";
#define EVP_CIPHER_do_all_sorted(fn, arg) __EVP_CIPHER_do_all_sorted(AmiSSLBase, (fn), (arg))

void __EVP_PKEY_CTX_free(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-22392(a6)";
#define EVP_PKEY_CTX_free(ctx) __EVP_PKEY_CTX_free(AmiSSLBase, (ctx))

STACK_OF(X509) * __X509_STORE_CTX_get1_certs(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * xs , __reg("a1") const X509_NAME * nm ) = "\tjsr\t-22404(a6)";
#define X509_STORE_CTX_get1_certs(xs, nm) __X509_STORE_CTX_get1_certs(AmiSSLBase, (xs), (nm))

int __EVP_PKEY_CTX_get_operation(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-22410(a6)";
#define EVP_PKEY_CTX_get_operation(ctx) __EVP_PKEY_CTX_get_operation(AmiSSLBase, (ctx))

ESS_SIGNING_CERT * __d2i_ESS_SIGNING_CERT(__reg("a6") struct Library * , __reg("a0") ESS_SIGNING_CERT ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-22416(a6)";
#define d2i_ESS_SIGNING_CERT(a, pp, length) __d2i_ESS_SIGNING_CERT(AmiSSLBase, (a), (pp), (length))

int __TS_CONF_set_ordering(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") TS_RESP_CTX * ctx ) = "\tjsr\t-22422(a6)";
#define TS_CONF_set_ordering(conf, section, ctx) __TS_CONF_set_ordering(AmiSSLBase, (conf), (section), (ctx))

int __EVP_PBE_alg_add_type(__reg("a6") struct Library * , __reg("d0") int pbe_type , __reg("d1") int pbe_nid , __reg("d2") int cipher_nid , __reg("d3") int md_nid , __reg("a0") EVP_PBE_KEYGEN * keygen ) = "\tjsr\t-22428(a6)";
#define EVP_PBE_alg_add_type(pbe_type, pbe_nid, cipher_nid, md_nid, keygen) __EVP_PBE_alg_add_type(AmiSSLBase, (pbe_type), (pbe_nid), (cipher_nid), (md_nid), (keygen))

int __TS_REQ_set_version(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("d0") long version ) = "\tjsr\t-22434(a6)";
#define TS_REQ_set_version(a, version) __TS_REQ_set_version(AmiSSLBase, (a), (version))

void * __EVP_PKEY_get0(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-22440(a6)";
#define EVP_PKEY_get0(pkey) __EVP_PKEY_get0(AmiSSLBase, (pkey))

int __BIO_asn1_set_suffix(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") asn1_ps_func * suffix , __reg("a2") asn1_ps_func * suffix_free ) = "\tjsr\t-22446(a6)";
#define BIO_asn1_set_suffix(b, suffix, suffix_free) __BIO_asn1_set_suffix(AmiSSLBase, (b), (suffix), (suffix_free))

int __i2d_TS_STATUS_INFO(__reg("a6") struct Library * , __reg("a0") const TS_STATUS_INFO * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-22452(a6)";
#define i2d_TS_STATUS_INFO(a, pp) __i2d_TS_STATUS_INFO(AmiSSLBase, (a), (pp))

void __EVP_MD_do_all(__reg("a6") struct Library * , __reg("a0") void (*fn)(const EVP_MD *ciph,const char *from,const char *to,void *x) , __reg("a1") void * arg ) = "\tjsr\t-22458(a6)";
#define EVP_MD_do_all(fn, arg) __EVP_MD_do_all(AmiSSLBase, (fn), (arg))

int __TS_TST_INFO_set_accuracy(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("a1") TS_ACCURACY * accuracy ) = "\tjsr\t-22464(a6)";
#define TS_TST_INFO_set_accuracy(a, accuracy) __TS_TST_INFO_set_accuracy(AmiSSLBase, (a), (accuracy))

int __PKCS7_add_attrib_content_type(__reg("a6") struct Library * , __reg("a0") PKCS7_SIGNER_INFO * si , __reg("a1") ASN1_OBJECT * coid ) = "\tjsr\t-22470(a6)";
#define PKCS7_add_attrib_content_type(si, coid) __PKCS7_add_attrib_content_type(AmiSSLBase, (si), (coid))

int __EVP_PKEY_meth_add0(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth ) = "\tjsr\t-22476(a6)";
#define EVP_PKEY_meth_add0(pmeth) __EVP_PKEY_meth_add0(AmiSSLBase, (pmeth))

int __TS_TST_INFO_set_tsa(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("a1") GENERAL_NAME * tsa ) = "\tjsr\t-22482(a6)";
#define TS_TST_INFO_set_tsa(a, tsa) __TS_TST_INFO_set_tsa(AmiSSLBase, (a), (tsa))

EVP_PKEY_METHOD * __EVP_PKEY_meth_new(__reg("a6") struct Library * , __reg("d0") int id , __reg("d1") int flags ) = "\tjsr\t-22488(a6)";
#define EVP_PKEY_meth_new(id, flags) __EVP_PKEY_meth_new(AmiSSLBase, (id), (flags))

int __TS_CONF_set_accuracy(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") TS_RESP_CTX * ctx ) = "\tjsr\t-22494(a6)";
#define TS_CONF_set_accuracy(conf, section, ctx) __TS_CONF_set_accuracy(AmiSSLBase, (conf), (section), (ctx))

void __ASN1_PCTX_set_oid_flags(__reg("a6") struct Library * , __reg("a0") ASN1_PCTX * p , __reg("d0") unsigned long flags ) = "\tjsr\t-22500(a6)";
#define ASN1_PCTX_set_oid_flags(p, flags) __ASN1_PCTX_set_oid_flags(AmiSSLBase, (p), (flags))

ESS_SIGNING_CERT * __ESS_SIGNING_CERT_dup(__reg("a6") struct Library * , __reg("a0") const ESS_SIGNING_CERT * a ) = "\tjsr\t-22506(a6)";
#define ESS_SIGNING_CERT_dup(a) __ESS_SIGNING_CERT_dup(AmiSSLBase, (a))

TS_REQ * __d2i_TS_REQ_bio(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") TS_REQ ** a ) = "\tjsr\t-22512(a6)";
#define d2i_TS_REQ_bio(fp, a) __d2i_TS_REQ_bio(AmiSSLBase, (fp), (a))

ASN1_TIME * __X509_time_adj_ex(__reg("a6") struct Library * , __reg("a0") ASN1_TIME * s , __reg("d0") int offset_day , __reg("d1") long offset_sec , __reg("a1") time_t * t ) = "\tjsr\t-22518(a6)";
#define X509_time_adj_ex(s, offset_day, offset_sec, t) __X509_time_adj_ex(AmiSSLBase, (s), (offset_day), (offset_sec), (t))

void __TS_RESP_CTX_add_flags(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("d0") int flags ) = "\tjsr\t-22524(a6)";
#define TS_RESP_CTX_add_flags(ctx, flags) __TS_RESP_CTX_add_flags(AmiSSLBase, (ctx), (flags))

TS_STATUS_INFO * __d2i_TS_STATUS_INFO(__reg("a6") struct Library * , __reg("a0") TS_STATUS_INFO ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-22530(a6)";
#define d2i_TS_STATUS_INFO(a, pp, length) __d2i_TS_STATUS_INFO(AmiSSLBase, (a), (pp), (length))

int __TS_MSG_IMPRINT_set_msg(__reg("a6") struct Library * , __reg("a0") TS_MSG_IMPRINT * a , __reg("a1") unsigned char * d , __reg("d0") int len ) = "\tjsr\t-22536(a6)";
#define TS_MSG_IMPRINT_set_msg(a, d, len) __TS_MSG_IMPRINT_set_msg(AmiSSLBase, (a), (d), (len))

int __BIO_asn1_get_suffix(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") asn1_ps_func ** psuffix , __reg("a2") asn1_ps_func ** psuffix_free ) = "\tjsr\t-22542(a6)";
#define BIO_asn1_get_suffix(b, psuffix, psuffix_free) __BIO_asn1_get_suffix(AmiSSLBase, (b), (psuffix), (psuffix_free))

void __TS_REQ_free(__reg("a6") struct Library * , __reg("a0") TS_REQ * a ) = "\tjsr\t-22548(a6)";
#define TS_REQ_free(a) __TS_REQ_free(AmiSSLBase, (a))

void __EVP_PKEY_meth_free(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth ) = "\tjsr\t-22554(a6)";
#define EVP_PKEY_meth_free(pmeth) __EVP_PKEY_meth_free(AmiSSLBase, (pmeth))

STACK_OF(X509_EXTENSION) * __TS_REQ_get_exts(__reg("a6") struct Library * , __reg("a0") TS_REQ * a ) = "\tjsr\t-22560(a6)";
#define TS_REQ_get_exts(a) __TS_REQ_get_exts(AmiSSLBase, (a))

int __TS_RESP_CTX_set_clock_precision_digits(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("d0") unsigned clock_precision_digits ) = "\tjsr\t-22566(a6)";
#define TS_RESP_CTX_set_clock_precision_digits(ctx, clock_precision_digits) __TS_RESP_CTX_set_clock_precision_digits(AmiSSLBase, (ctx), (clock_precision_digits))

int __TS_RESP_CTX_add_failure_info(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("d0") int failure ) = "\tjsr\t-22572(a6)";
#define TS_RESP_CTX_add_failure_info(ctx, failure) __TS_RESP_CTX_add_failure_info(AmiSSLBase, (ctx), (failure))

int __i2d_TS_RESP_bio(__reg("a6") struct Library * , __reg("a0") BIO * fp , __reg("a1") const TS_RESP * a ) = "\tjsr\t-22578(a6)";
#define i2d_TS_RESP_bio(fp, a) __i2d_TS_RESP_bio(AmiSSLBase, (fp), (a))

EVP_PKEY * __EVP_PKEY_CTX_get0_peerkey(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-22584(a6)";
#define EVP_PKEY_CTX_get0_peerkey(ctx) __EVP_PKEY_CTX_get0_peerkey(AmiSSLBase, (ctx))

TS_REQ * __TS_REQ_new(__reg("a6") struct Library * ) = "\tjsr\t-22590(a6)";
#define TS_REQ_new() __TS_REQ_new(AmiSSLBase)

TS_MSG_IMPRINT * __TS_MSG_IMPRINT_new(__reg("a6") struct Library * ) = "\tjsr\t-22596(a6)";
#define TS_MSG_IMPRINT_new() __TS_MSG_IMPRINT_new(AmiSSLBase)

const EVP_PKEY_METHOD * __EVP_PKEY_meth_find(__reg("a6") struct Library * , __reg("a0") int type ) = "\tjsr\t-22602(a6)";
#define EVP_PKEY_meth_find(type) __EVP_PKEY_meth_find(AmiSSLBase, (type))

int __EVP_PKEY_get_id(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-22608(a6)";
#define EVP_PKEY_get_id(pkey) __EVP_PKEY_get_id(AmiSSLBase, (pkey))

int __TS_TST_INFO_set_serial(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("a1") const ASN1_INTEGER * serial ) = "\tjsr\t-22614(a6)";
#define TS_TST_INFO_set_serial(a, serial) __TS_TST_INFO_set_serial(AmiSSLBase, (a), (serial))

GENERAL_NAME * __a2i_GENERAL_NAME(__reg("a6") struct Library * , __reg("a0") GENERAL_NAME * out , __reg("a1") const X509V3_EXT_METHOD * method , __reg("a2") X509V3_CTX * ctx , __reg("d0") int gen_type , __reg("a3") const char * value , __reg("d1") int is_nc ) = "\tjsr\t-22620(a6)";
#define a2i_GENERAL_NAME(out, method, ctx, gen_type, value, is_nc) __a2i_GENERAL_NAME(AmiSSLBase, (out), (method), (ctx), (gen_type), (value), (is_nc))

int __TS_CONF_set_crypto_device(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") const char * device ) = "\tjsr\t-22626(a6)";
#define TS_CONF_set_crypto_device(conf, section, device) __TS_CONF_set_crypto_device(AmiSSLBase, (conf), (section), (device))

int __EVP_PKEY_verify_init(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-22632(a6)";
#define EVP_PKEY_verify_init(ctx) __EVP_PKEY_verify_init(AmiSSLBase, (ctx))

int __TS_CONF_set_policies(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") TS_RESP_CTX * ctx ) = "\tjsr\t-22638(a6)";
#define TS_CONF_set_policies(conf, section, ctx) __TS_CONF_set_policies(AmiSSLBase, (conf), (section), (ctx))

ASN1_PCTX * __ASN1_PCTX_new(__reg("a6") struct Library * ) = "\tjsr\t-22644(a6)";
#define ASN1_PCTX_new() __ASN1_PCTX_new(AmiSSLBase)

void __ESS_CERT_ID_free(__reg("a6") struct Library * , __reg("a0") ESS_CERT_ID * a ) = "\tjsr\t-22650(a6)";
#define ESS_CERT_ID_free(a) __ESS_CERT_ID_free(AmiSSLBase, (a))

void __TS_MSG_IMPRINT_free(__reg("a6") struct Library * , __reg("a0") TS_MSG_IMPRINT * a ) = "\tjsr\t-22656(a6)";
#define TS_MSG_IMPRINT_free(a) __TS_MSG_IMPRINT_free(AmiSSLBase, (a))

void __TS_VERIFY_CTX_init(__reg("a6") struct Library * , __reg("a0") TS_VERIFY_CTX * ctx ) = "\tjsr\t-22662(a6)";
#define TS_VERIFY_CTX_init(ctx) __TS_VERIFY_CTX_init(AmiSSLBase, (ctx))

int __PKCS7_stream(__reg("a6") struct Library * , __reg("a0") unsigned char *** boundary , __reg("a1") PKCS7 * p7 ) = "\tjsr\t-22668(a6)";
#define PKCS7_stream(boundary, p7) __PKCS7_stream(AmiSSLBase, (boundary), (p7))

int __TS_RESP_CTX_set_certs(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("a1") STACK_OF(X509) * certs ) = "\tjsr\t-22674(a6)";
#define TS_RESP_CTX_set_certs(ctx, certs) __TS_RESP_CTX_set_certs(AmiSSLBase, (ctx), (certs))

int __TS_CONF_set_def_policy(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") const char * policy , __reg("a3") TS_RESP_CTX * ctx ) = "\tjsr\t-22680(a6)";
#define TS_CONF_set_def_policy(conf, section, policy, ctx) __TS_CONF_set_def_policy(AmiSSLBase, (conf), (section), (policy), (ctx))

ASN1_GENERALIZEDTIME * __ASN1_GENERALIZEDTIME_adj(__reg("a6") struct Library * , __reg("a0") ASN1_GENERALIZEDTIME * s , __reg("d0") time_t t , __reg("d1") int offset_day , __reg("d2") long offset_sec ) = "\tjsr\t-22686(a6)";
#define ASN1_GENERALIZEDTIME_adj(s, t, offset_day, offset_sec) __ASN1_GENERALIZEDTIME_adj(AmiSSLBase, (s), (t), (offset_day), (offset_sec))

void __TS_ACCURACY_free(__reg("a6") struct Library * , __reg("a0") TS_ACCURACY * a ) = "\tjsr\t-22698(a6)";
#define TS_ACCURACY_free(a) __TS_ACCURACY_free(AmiSSLBase, (a))

TS_TST_INFO * __TS_RESP_get_tst_info(__reg("a6") struct Library * , __reg("a0") TS_RESP * a ) = "\tjsr\t-22704(a6)";
#define TS_RESP_get_tst_info(a) __TS_RESP_get_tst_info(AmiSSLBase, (a))

int __EVP_PKEY_derive_set_peer(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") EVP_PKEY * peer ) = "\tjsr\t-22710(a6)";
#define EVP_PKEY_derive_set_peer(ctx, peer) __EVP_PKEY_derive_set_peer(AmiSSLBase, (ctx), (peer))

EVP_PKEY * __PEM_read_bio_Parameters(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") EVP_PKEY ** x ) = "\tjsr\t-22716(a6)";
#define PEM_read_bio_Parameters(bp, x) __PEM_read_bio_Parameters(AmiSSLBase, (bp), (x))

int __TS_CONF_set_clock_precision_digits(__reg("a6") struct Library * , __reg("a0") const CONF * conf , __reg("a1") const char * section , __reg("a2") TS_RESP_CTX * ctx ) = "\tjsr\t-22722(a6)";
#define TS_CONF_set_clock_precision_digits(conf, section, ctx) __TS_CONF_set_clock_precision_digits(AmiSSLBase, (conf), (section), (ctx))

ESS_ISSUER_SERIAL * __ESS_ISSUER_SERIAL_dup(__reg("a6") struct Library * , __reg("a0") const ESS_ISSUER_SERIAL * a ) = "\tjsr\t-22728(a6)";
#define ESS_ISSUER_SERIAL_dup(a) __ESS_ISSUER_SERIAL_dup(AmiSSLBase, (a))

const ASN1_INTEGER * __TS_ACCURACY_get_micros(__reg("a6") struct Library * , __reg("a0") const TS_ACCURACY * a ) = "\tjsr\t-22734(a6)";
#define TS_ACCURACY_get_micros(a) __TS_ACCURACY_get_micros(AmiSSLBase, (a))

unsigned long __ASN1_PCTX_get_str_flags(__reg("a6") struct Library * , __reg("a0") const ASN1_PCTX * p ) = "\tjsr\t-22740(a6)";
#define ASN1_PCTX_get_str_flags(p) __ASN1_PCTX_get_str_flags(AmiSSLBase, (p))

int __NAME_CONSTRAINTS_check(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") NAME_CONSTRAINTS * nc ) = "\tjsr\t-22746(a6)";
#define NAME_CONSTRAINTS_check(x, nc) __NAME_CONSTRAINTS_check(AmiSSLBase, (x), (nc))

int __ASN1_BIT_STRING_check(__reg("a6") struct Library * , __reg("a0") const ASN1_BIT_STRING * a , __reg("a1") const unsigned char * flags , __reg("d0") int flags_len ) = "\tjsr\t-22752(a6)";
#define ASN1_BIT_STRING_check(a, flags, flags_len) __ASN1_BIT_STRING_check(AmiSSLBase, (a), (flags), (flags_len))

int __X509_check_akid(__reg("a6") struct Library * , __reg("a0") const X509 * issuer , __reg("a1") const AUTHORITY_KEYID * akid ) = "\tjsr\t-22758(a6)";
#define X509_check_akid(issuer, akid) __X509_check_akid(AmiSSLBase, (issuer), (akid))

void __ASN1_PCTX_free(__reg("a6") struct Library * , __reg("a0") ASN1_PCTX * p ) = "\tjsr\t-22764(a6)";
#define ASN1_PCTX_free(p) __ASN1_PCTX_free(AmiSSLBase, (p))

int __PEM_write_bio_ASN1_stream(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") ASN1_VALUE * val , __reg("a2") BIO * in , __reg("d0") int flags , __reg("a3") const char * hdr , __reg("d1") const ASN1_ITEM * it ) = "\tjsr\t-22770(a6)";
#define PEM_write_bio_ASN1_stream(out, val, in, flags, hdr, it) __PEM_write_bio_ASN1_stream(AmiSSLBase, (out), (val), (in), (flags), (hdr), (it))

int __i2d_ASN1_bio_stream(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") ASN1_VALUE * val , __reg("a2") BIO * in , __reg("d0") int flags , __reg("a3") const ASN1_ITEM * it ) = "\tjsr\t-22776(a6)";
#define i2d_ASN1_bio_stream(out, val, in, flags, it) __i2d_ASN1_bio_stream(AmiSSLBase, (out), (val), (in), (flags), (it))

int __TS_X509_ALGOR_print_bio(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") const X509_ALGOR * alg ) = "\tjsr\t-22782(a6)";
#define TS_X509_ALGOR_print_bio(bio, alg) __TS_X509_ALGOR_print_bio(AmiSSLBase, (bio), (alg))

void __EVP_PKEY_meth_set_cleanup(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") void (*cleanup)(EVP_PKEY_CTX *ctx) ) = "\tjsr\t-22788(a6)";
#define EVP_PKEY_meth_set_cleanup(pmeth, cleanup) __EVP_PKEY_meth_set_cleanup(AmiSSLBase, (pmeth), (cleanup))

void __EVP_PKEY_asn1_free(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth ) = "\tjsr\t-22794(a6)";
#define EVP_PKEY_asn1_free(ameth) __EVP_PKEY_asn1_free(AmiSSLBase, (ameth))

void __ESS_SIGNING_CERT_free(__reg("a6") struct Library * , __reg("a0") ESS_SIGNING_CERT * a ) = "\tjsr\t-22800(a6)";
#define ESS_SIGNING_CERT_free(a) __ESS_SIGNING_CERT_free(AmiSSLBase, (a))

int __TS_TST_INFO_set_msg_imprint(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("a1") TS_MSG_IMPRINT * msg_imprint ) = "\tjsr\t-22806(a6)";
#define TS_TST_INFO_set_msg_imprint(a, msg_imprint) __TS_TST_INFO_set_msg_imprint(AmiSSLBase, (a), (msg_imprint))

int __GENERAL_NAME_cmp(__reg("a6") struct Library * , __reg("a0") GENERAL_NAME * a , __reg("a1") GENERAL_NAME * b ) = "\tjsr\t-22812(a6)";
#define GENERAL_NAME_cmp(a, b) __GENERAL_NAME_cmp(AmiSSLBase, (a), (b))

ASN1_SEQUENCE_ANY * __d2i_ASN1_SET_ANY(__reg("a6") struct Library * , __reg("a0") ASN1_SEQUENCE_ANY ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-22818(a6)";
#define d2i_ASN1_SET_ANY(a, pp, length) __d2i_ASN1_SET_ANY(AmiSSLBase, (a), (pp), (length))

ASN1_SEQUENCE_ANY * __d2i_ASN1_SEQUENCE_ANY(__reg("a6") struct Library * , __reg("a0") ASN1_SEQUENCE_ANY ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-22830(a6)";
#define d2i_ASN1_SEQUENCE_ANY(a, pp, length) __d2i_ASN1_SEQUENCE_ANY(AmiSSLBase, (a), (pp), (length))

int __GENERAL_NAME_get0_otherName(__reg("a6") struct Library * , __reg("a0") const GENERAL_NAME * gen , __reg("a1") ASN1_OBJECT ** poid , __reg("a2") ASN1_TYPE ** pvalue ) = "\tjsr\t-22836(a6)";
#define GENERAL_NAME_get0_otherName(gen, poid, pvalue) __GENERAL_NAME_get0_otherName(AmiSSLBase, (gen), (poid), (pvalue))

ESS_CERT_ID * __d2i_ESS_CERT_ID(__reg("a6") struct Library * , __reg("a0") ESS_CERT_ID ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-22842(a6)";
#define d2i_ESS_CERT_ID(a, pp, length) __d2i_ESS_CERT_ID(AmiSSLBase, (a), (pp), (length))

int __OBJ_find_sigid_algs(__reg("a6") struct Library * , __reg("d0") int signid , __reg("a0") int * pdig_nid , __reg("a1") int * ppkey_nid ) = "\tjsr\t-22848(a6)";
#define OBJ_find_sigid_algs(signid, pdig_nid, ppkey_nid) __OBJ_find_sigid_algs(AmiSSLBase, (signid), (pdig_nid), (ppkey_nid))

void __EVP_PKEY_meth_set_keygen(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*keygen_init)(EVP_PKEY_CTX *ctx) , __reg("a2") int (*keygen)(EVP_PKEY_CTX *ctx,EVP_PKEY *pkey) ) = "\tjsr\t-22854(a6)";
#define EVP_PKEY_meth_set_keygen(pmeth, keygen_init, keygen) __EVP_PKEY_meth_set_keygen(AmiSSLBase, (pmeth), (keygen_init), (keygen))

int __PKCS5_PBKDF2_HMAC(__reg("a6") struct Library * , __reg("a0") const char * pass , __reg("d0") int passlen , __reg("a1") const unsigned char * salt , __reg("d1") int saltlen , __reg("d2") int iter , __reg("a2") const EVP_MD * digest , __reg("d3") int keylen , __reg("a3") unsigned char * out ) = "\tjsr\t-22860(a6)";
#define PKCS5_PBKDF2_HMAC(pass, passlen, salt, saltlen, iter, digest, keylen, out) __PKCS5_PBKDF2_HMAC(AmiSSLBase, (pass), (passlen), (salt), (saltlen), (iter), (digest), (keylen), (out))

int __EVP_PKEY_paramgen(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") EVP_PKEY ** ppkey ) = "\tjsr\t-22866(a6)";
#define EVP_PKEY_paramgen(ctx, ppkey) __EVP_PKEY_paramgen(AmiSSLBase, (ctx), (ppkey))

void __EVP_PKEY_meth_set_paramgen(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*paramgen_init)(EVP_PKEY_CTX *ctx) , __reg("a2") int (*paramgen)(EVP_PKEY_CTX *ctx,EVP_PKEY *pkey) ) = "\tjsr\t-22872(a6)";
#define EVP_PKEY_meth_set_paramgen(pmeth, paramgen_init, paramgen) __EVP_PKEY_meth_set_paramgen(AmiSSLBase, (pmeth), (paramgen_init), (paramgen))

BIO * __BIO_new_PKCS7(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") PKCS7 * p7 ) = "\tjsr\t-22878(a6)";
#define BIO_new_PKCS7(out, p7) __BIO_new_PKCS7(AmiSSLBase, (out), (p7))

int __EVP_PKEY_verify_recover(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("a1") unsigned char * rout , __reg("a2") size_t * routlen , __reg("a3") const unsigned char * sig , __reg("d0") size_t siglen ) = "\tjsr\t-22884(a6)";
#define EVP_PKEY_verify_recover(ctx, rout, routlen, sig, siglen) __EVP_PKEY_verify_recover(AmiSSLBase, (ctx), (rout), (routlen), (sig), (siglen))

int __TS_ext_print_bio(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") const STACK_OF(X509_EXTENSION) * extensions ) = "\tjsr\t-22890(a6)";
#define TS_ext_print_bio(bio, extensions) __TS_ext_print_bio(AmiSSLBase, (bio), (extensions))

int __TS_ASN1_INTEGER_print_bio(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("a1") const ASN1_INTEGER * num ) = "\tjsr\t-22896(a6)";
#define TS_ASN1_INTEGER_print_bio(bio, num) __TS_ASN1_INTEGER_print_bio(AmiSSLBase, (bio), (num))

int __EVP_PKEY_set_type(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("d0") int type ) = "\tjsr\t-22914(a6)";
#define EVP_PKEY_set_type(pkey, type) __EVP_PKEY_set_type(AmiSSLBase, (pkey), (type))

int __TS_ACCURACY_set_micros(__reg("a6") struct Library * , __reg("a0") TS_ACCURACY * a , __reg("a1") const ASN1_INTEGER * micros ) = "\tjsr\t-22920(a6)";
#define TS_ACCURACY_set_micros(a, micros) __TS_ACCURACY_set_micros(AmiSSLBase, (a), (micros))

TS_VERIFY_CTX * __TS_REQ_to_TS_VERIFY_CTX(__reg("a6") struct Library * , __reg("a0") TS_REQ * req , __reg("a1") TS_VERIFY_CTX * ctx ) = "\tjsr\t-22926(a6)";
#define TS_REQ_to_TS_VERIFY_CTX(req, ctx) __TS_REQ_to_TS_VERIFY_CTX(AmiSSLBase, (req), (ctx))

void __EVP_PKEY_meth_set_copy(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*copy)(EVP_PKEY_CTX *dst,const EVP_PKEY_CTX *src) ) = "\tjsr\t-22932(a6)";
#define EVP_PKEY_meth_set_copy(pmeth, copy) __EVP_PKEY_meth_set_copy(AmiSSLBase, (pmeth), (copy))

void __ASN1_PCTX_set_cert_flags(__reg("a6") struct Library * , __reg("a0") ASN1_PCTX * p , __reg("d0") unsigned long flags ) = "\tjsr\t-22938(a6)";
#define ASN1_PCTX_set_cert_flags(p, flags) __ASN1_PCTX_set_cert_flags(AmiSSLBase, (p), (flags))

X509_EXTENSION * __TS_TST_INFO_get_ext(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("d0") int loc ) = "\tjsr\t-22944(a6)";
#define TS_TST_INFO_get_ext(a, loc) __TS_TST_INFO_get_ext(AmiSSLBase, (a), (loc))

void __EVP_PKEY_asn1_set_ctrl(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*pkey_ctrl)(EVP_PKEY *pkey,int op,long arg1,void *arg2) ) = "\tjsr\t-22950(a6)";
#define EVP_PKEY_asn1_set_ctrl(ameth, pkey_ctrl) __EVP_PKEY_asn1_set_ctrl(AmiSSLBase, (ameth), (pkey_ctrl))

int __TS_TST_INFO_get_ext_by_critical(__reg("a6") struct Library * , __reg("a0") TS_TST_INFO * a , __reg("d0") int crit , __reg("d1") int lastpos ) = "\tjsr\t-22956(a6)";
#define TS_TST_INFO_get_ext_by_critical(a, crit, lastpos) __TS_TST_INFO_get_ext_by_critical(AmiSSLBase, (a), (crit), (lastpos))

EVP_PKEY_CTX * __EVP_PKEY_CTX_new_id(__reg("a6") struct Library * , __reg("d0") int id , __reg("a0") ENGINE * e ) = "\tjsr\t-22962(a6)";
#define EVP_PKEY_CTX_new_id(id, e) __EVP_PKEY_CTX_new_id(AmiSSLBase, (id), (e))

int __TS_REQ_get_ext_by_OBJ(__reg("a6") struct Library * , __reg("a0") TS_REQ * a , __reg("a1") const ASN1_OBJECT * obj , __reg("d0") int lastpos ) = "\tjsr\t-22968(a6)";
#define TS_REQ_get_ext_by_OBJ(a, obj, lastpos) __TS_REQ_get_ext_by_OBJ(AmiSSLBase, (a), (obj), (lastpos))

int __TS_CONF_set_signer_cert(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") const char * cert , __reg("a3") TS_RESP_CTX * ctx ) = "\tjsr\t-22974(a6)";
#define TS_CONF_set_signer_cert(conf, section, cert, ctx) __TS_CONF_set_signer_cert(AmiSSLBase, (conf), (section), (cert), (ctx))

unsigned long __X509_NAME_hash_old(__reg("a6") struct Library * , __reg("a0") const X509_NAME * x ) = "\tjsr\t-22980(a6)";
#define X509_NAME_hash_old(x) __X509_NAME_hash_old(AmiSSLBase, (x))

int __ASN1_TIME_set_string(__reg("a6") struct Library * , __reg("a0") ASN1_TIME * s , __reg("a1") const char * str ) = "\tjsr\t-22986(a6)";
#define ASN1_TIME_set_string(s, str) __ASN1_TIME_set_string(AmiSSLBase, (s), (str))

unsigned long __EVP_MD_get_flags(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) = "\tjsr\t-22992(a6)";
#define EVP_MD_get_flags(md) __EVP_MD_get_flags(AmiSSLBase, (md))

void __TS_RESP_CTX_free(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx ) = "\tjsr\t-22998(a6)";
#define TS_RESP_CTX_free(ctx) __TS_RESP_CTX_free(AmiSSLBase, (ctx))

int __OSSL_HTTP_REQ_CTX_add1_header(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx , __reg("a1") const char * name , __reg("a2") const char * value ) = "\tjsr\t-23004(a6)";
#define OSSL_HTTP_REQ_CTX_add1_header(rctx, name, value) __OSSL_HTTP_REQ_CTX_add1_header(AmiSSLBase, (rctx), (name), (value))

int __OBSOLETE_OCSP_REQ_CTX_set1_req(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx , __reg("a1") OCSP_REQUEST * req ) = "\tjsr\t-23010(a6)";
#define OBSOLETE_OCSP_REQ_CTX_set1_req(rctx, req) __OBSOLETE_OCSP_REQ_CTX_set1_req(AmiSSLBase, (rctx), (req))

void __X509_STORE_set_verify_cb(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_verify_cb verify_cb ) = "\tjsr\t-23016(a6)";
#define X509_STORE_set_verify_cb(xs, verify_cb) __X509_STORE_set_verify_cb(AmiSSLBase, (xs), (verify_cb))

X509_CRL * __X509_STORE_CTX_get0_current_crl(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-23022(a6)";
#define X509_STORE_CTX_get0_current_crl(ctx) __X509_STORE_CTX_get0_current_crl(AmiSSLBase, (ctx))

X509_STORE_CTX * __X509_STORE_CTX_get0_parent_ctx(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-23028(a6)";
#define X509_STORE_CTX_get0_parent_ctx(ctx) __X509_STORE_CTX_get0_parent_ctx(AmiSSLBase, (ctx))

X509 * __X509_STORE_CTX_get0_current_issuer(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-23034(a6)";
#define X509_STORE_CTX_get0_current_issuer(ctx) __X509_STORE_CTX_get0_current_issuer(AmiSSLBase, (ctx))

int __EVP_CIPHER_CTX_copy(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * out , __reg("a1") const EVP_CIPHER_CTX * in ) = "\tjsr\t-23040(a6)";
#define EVP_CIPHER_CTX_copy(out, in) __EVP_CIPHER_CTX_copy(AmiSSLBase, (out), (in))

char * (* __UI_method_get_prompt_constructor(__reg("a6") struct Library * , __reg("a0") const UI_METHOD * method ) )(UI*, const char*, const char*) =  "\tjsr\t-23046(a6)";
#define UI_method_get_prompt_constructor(method) __UI_method_get_prompt_constructor(AmiSSLBase, (method))

int __UI_method_set_prompt_constructor(__reg("a6") struct Library * , __reg("a0") UI_METHOD * method , __reg("a1") char *(*prompt_constructor)(UI* ui,const char* object_desc,const char* object_name) ) = "\tjsr\t-23052(a6)";
#define UI_method_set_prompt_constructor(method, prompt_constructor) __UI_method_set_prompt_constructor(AmiSSLBase, (method), (prompt_constructor))

int __EVP_read_pw_string_min(__reg("a6") struct Library * , __reg("a0") char * buf , __reg("d0") int minlen , __reg("d1") int maxlen , __reg("a1") const char * prompt , __reg("d2") int verify ) = "\tjsr\t-23058(a6)";
#define EVP_read_pw_string_min(buf, minlen, maxlen, prompt, verify) __EVP_read_pw_string_min(AmiSSLBase, (buf), (minlen), (maxlen), (prompt), (verify))

size_t __CRYPTO_cts128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") cbc128_f cbc ) = "\tjsr\t-23064(a6)";
#define CRYPTO_cts128_encrypt(in, out, len, key, ivec, cbc) __CRYPTO_cts128_encrypt(AmiSSLBase, (in), (out), (len), (key), (ivec), (cbc))

size_t __CRYPTO_cts128_decrypt_block(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") block128_f block ) = "\tjsr\t-23070(a6)";
#define CRYPTO_cts128_decrypt_block(in, out, len, key, ivec, block) __CRYPTO_cts128_decrypt_block(AmiSSLBase, (in), (out), (len), (key), (ivec), (block))

void __CRYPTO_cfb128_1_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t bits , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") int enc , __reg("d3") block128_f block ) = "\tjsr\t-23076(a6)";
#define CRYPTO_cfb128_1_encrypt(in, out, bits, key, ivec, num, enc, block) __CRYPTO_cfb128_1_encrypt(AmiSSLBase, (in), (out), (bits), (key), (ivec), (num), (enc), (block))

void __CRYPTO_cbc128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") block128_f block ) = "\tjsr\t-23082(a6)";
#define CRYPTO_cbc128_encrypt(in, out, len, key, ivec, block) __CRYPTO_cbc128_encrypt(AmiSSLBase, (in), (out), (len), (key), (ivec), (block))

void __CRYPTO_ctr128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") unsigned char * ecount_buf , __reg("d2") unsigned int * num , __reg("d3") block128_f block ) = "\tjsr\t-23088(a6)";
#define CRYPTO_ctr128_encrypt(in, out, len, key, ivec, ecount_buf, num, block) __CRYPTO_ctr128_encrypt(AmiSSLBase, (in), (out), (len), (key), (ivec), (ecount_buf), (num), (block))

void __CRYPTO_ofb128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") block128_f block ) = "\tjsr\t-23094(a6)";
#define CRYPTO_ofb128_encrypt(in, out, len, key, ivec, num, block) __CRYPTO_ofb128_encrypt(AmiSSLBase, (in), (out), (len), (key), (ivec), (num), (block))

size_t __CRYPTO_cts128_decrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") cbc128_f cbc ) = "\tjsr\t-23100(a6)";
#define CRYPTO_cts128_decrypt(in, out, len, key, ivec, cbc) __CRYPTO_cts128_decrypt(AmiSSLBase, (in), (out), (len), (key), (ivec), (cbc))

size_t __CRYPTO_cts128_encrypt_block(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") block128_f block ) = "\tjsr\t-23106(a6)";
#define CRYPTO_cts128_encrypt_block(in, out, len, key, ivec, block) __CRYPTO_cts128_encrypt_block(AmiSSLBase, (in), (out), (len), (key), (ivec), (block))

void __CRYPTO_cbc128_decrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") block128_f block ) = "\tjsr\t-23112(a6)";
#define CRYPTO_cbc128_decrypt(in, out, len, key, ivec, block) __CRYPTO_cbc128_decrypt(AmiSSLBase, (in), (out), (len), (key), (ivec), (block))

void __CRYPTO_cfb128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") int enc , __reg("d3") block128_f block ) = "\tjsr\t-23118(a6)";
#define CRYPTO_cfb128_encrypt(in, out, len, key, ivec, num, enc, block) __CRYPTO_cfb128_encrypt(AmiSSLBase, (in), (out), (len), (key), (ivec), (num), (enc), (block))

void __CRYPTO_cfb128_8_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t length , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") int * num , __reg("d2") int enc , __reg("d3") block128_f block ) = "\tjsr\t-23124(a6)";
#define CRYPTO_cfb128_8_encrypt(in, out, length, key, ivec, num, enc, block) __CRYPTO_cfb128_8_encrypt(AmiSSLBase, (in), (out), (length), (key), (ivec), (num), (enc), (block))

struct tm * __OPENSSL_gmtime(__reg("a6") struct Library * , __reg("a0") const time_t * timer , __reg("a1") struct tm * result ) = "\tjsr\t-23136(a6)";
#define OPENSSL_gmtime(timer, result) __OPENSSL_gmtime(AmiSSLBase, (timer), (result))

int __OPENSSL_gmtime_adj(__reg("a6") struct Library * , __reg("a0") struct tm * tm , __reg("d0") int offset_day , __reg("d1") long offset_sec ) = "\tjsr\t-23142(a6)";
#define OPENSSL_gmtime_adj(tm, offset_day, offset_sec) __OPENSSL_gmtime_adj(AmiSSLBase, (tm), (offset_day), (offset_sec))

int __OPENSSL_gmtime_diff(__reg("a6") struct Library * , __reg("a0") int * pday , __reg("a1") int * psec , __reg("a2") const struct tm * from , __reg("a3") const struct tm * to ) = "\tjsr\t-23148(a6)";
#define OPENSSL_gmtime_diff(pday, psec, from, to) __OPENSSL_gmtime_diff(AmiSSLBase, (pday), (psec), (from), (to))

void __EVP_PKEY_meth_get0_info(__reg("a6") struct Library * , __reg("a0") int * ppkey_id , __reg("a1") int * pflags , __reg("a2") const EVP_PKEY_METHOD * meth ) = "\tjsr\t-23154(a6)";
#define EVP_PKEY_meth_get0_info(ppkey_id, pflags, meth) __EVP_PKEY_meth_get0_info(AmiSSLBase, (ppkey_id), (pflags), (meth))

void __EVP_PKEY_meth_copy(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * dst , __reg("a1") const EVP_PKEY_METHOD * src ) = "\tjsr\t-23160(a6)";
#define EVP_PKEY_meth_copy(dst, src) __EVP_PKEY_meth_copy(AmiSSLBase, (dst), (src))

int __RSA_padding_add_PKCS1_PSS_mgf1(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("a1") unsigned char * EM , __reg("a2") const unsigned char * mHash , __reg("a3") const EVP_MD * Hash , __reg("d0") const EVP_MD * mgf1Hash , __reg("d1") int sLen ) = "\tjsr\t-23166(a6)";
#define RSA_padding_add_PKCS1_PSS_mgf1(rsa, EM, mHash, Hash, mgf1Hash, sLen) __RSA_padding_add_PKCS1_PSS_mgf1(AmiSSLBase, (rsa), (EM), (mHash), (Hash), (mgf1Hash), (sLen))

int __RSA_verify_PKCS1_PSS_mgf1(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("a1") const unsigned char * mHash , __reg("a2") const EVP_MD * Hash , __reg("a3") const EVP_MD * mgf1Hash , __reg("d0") const unsigned char * EM , __reg("d1") int sLen ) = "\tjsr\t-23172(a6)";
#define RSA_verify_PKCS1_PSS_mgf1(rsa, mHash, Hash, mgf1Hash, EM, sLen) __RSA_verify_PKCS1_PSS_mgf1(AmiSSLBase, (rsa), (mHash), (Hash), (mgf1Hash), (EM), (sLen))

void __X509_ALGOR_set_md(__reg("a6") struct Library * , __reg("a0") X509_ALGOR * alg , __reg("a1") const EVP_MD * md ) = "\tjsr\t-23178(a6)";
#define X509_ALGOR_set_md(alg, md) __X509_ALGOR_set_md(AmiSSLBase, (alg), (md))

int __CMAC_CTX_copy(__reg("a6") struct Library * , __reg("a0") CMAC_CTX * out , __reg("a1") const CMAC_CTX * in ) = "\tjsr\t-23184(a6)";
#define CMAC_CTX_copy(out, in) __CMAC_CTX_copy(AmiSSLBase, (out), (in))

void __CMAC_CTX_free(__reg("a6") struct Library * , __reg("a0") CMAC_CTX * ctx ) = "\tjsr\t-23190(a6)";
#define CMAC_CTX_free(ctx) __CMAC_CTX_free(AmiSSLBase, (ctx))

EVP_CIPHER_CTX * __CMAC_CTX_get0_cipher_ctx(__reg("a6") struct Library * , __reg("a0") CMAC_CTX * ctx ) = "\tjsr\t-23196(a6)";
#define CMAC_CTX_get0_cipher_ctx(ctx) __CMAC_CTX_get0_cipher_ctx(AmiSSLBase, (ctx))

void __CMAC_CTX_cleanup(__reg("a6") struct Library * , __reg("a0") CMAC_CTX * ctx ) = "\tjsr\t-23202(a6)";
#define CMAC_CTX_cleanup(ctx) __CMAC_CTX_cleanup(AmiSSLBase, (ctx))

int __CMAC_Init(__reg("a6") struct Library * , __reg("a0") CMAC_CTX * ctx , __reg("a1") const void * key , __reg("d0") size_t keylen , __reg("a2") const EVP_CIPHER * cipher , __reg("a3") ENGINE * impl ) = "\tjsr\t-23208(a6)";
#define CMAC_Init(ctx, key, keylen, cipher, impl) __CMAC_Init(AmiSSLBase, (ctx), (key), (keylen), (cipher), (impl))

int __CMAC_Update(__reg("a6") struct Library * , __reg("a0") CMAC_CTX * ctx , __reg("a1") const void * data , __reg("d0") size_t dlen ) = "\tjsr\t-23214(a6)";
#define CMAC_Update(ctx, data, dlen) __CMAC_Update(AmiSSLBase, (ctx), (data), (dlen))

int __CMAC_resume(__reg("a6") struct Library * , __reg("a0") CMAC_CTX * ctx ) = "\tjsr\t-23220(a6)";
#define CMAC_resume(ctx) __CMAC_resume(AmiSSLBase, (ctx))

CMAC_CTX * __CMAC_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-23226(a6)";
#define CMAC_CTX_new() __CMAC_CTX_new(AmiSSLBase)

int __CMAC_Final(__reg("a6") struct Library * , __reg("a0") CMAC_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") size_t * poutlen ) = "\tjsr\t-23232(a6)";
#define CMAC_Final(ctx, out, poutlen) __CMAC_Final(AmiSSLBase, (ctx), (out), (poutlen))

void __CRYPTO_ctr128_encrypt_ctr32(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") unsigned char * ecount_buf , __reg("d2") unsigned int * num , __reg("d3") ctr128_f ctr ) = "\tjsr\t-23238(a6)";
#define CRYPTO_ctr128_encrypt_ctr32(in, out, len, key, ivec, ecount_buf, num, ctr) __CRYPTO_ctr128_encrypt_ctr32(AmiSSLBase, (in), (out), (len), (key), (ivec), (ecount_buf), (num), (ctr))

void __CRYPTO_gcm128_release(__reg("a6") struct Library * , __reg("a0") GCM128_CONTEXT * ctx ) = "\tjsr\t-23244(a6)";
#define CRYPTO_gcm128_release(ctx) __CRYPTO_gcm128_release(AmiSSLBase, (ctx))

int __CRYPTO_ccm128_decrypt_ccm64(__reg("a6") struct Library * , __reg("a0") CCM128_CONTEXT * ctx , __reg("a1") const unsigned char * inp , __reg("a2") unsigned char * out , __reg("d0") size_t len , __reg("a3") ccm128_f stream ) = "\tjsr\t-23250(a6)";
#define CRYPTO_ccm128_decrypt_ccm64(ctx, inp, out, len, stream) __CRYPTO_ccm128_decrypt_ccm64(AmiSSLBase, (ctx), (inp), (out), (len), (stream))

int __CRYPTO_ccm128_encrypt(__reg("a6") struct Library * , __reg("a0") CCM128_CONTEXT * ctx , __reg("a1") const unsigned char * inp , __reg("a2") unsigned char * out , __reg("d0") size_t len ) = "\tjsr\t-23256(a6)";
#define CRYPTO_ccm128_encrypt(ctx, inp, out, len) __CRYPTO_ccm128_encrypt(AmiSSLBase, (ctx), (inp), (out), (len))

int __CRYPTO_gcm128_encrypt(__reg("a6") struct Library * , __reg("a0") GCM128_CONTEXT * ctx , __reg("a1") const unsigned char * in , __reg("a2") unsigned char * out , __reg("d0") size_t len ) = "\tjsr\t-23262(a6)";
#define CRYPTO_gcm128_encrypt(ctx, in, out, len) __CRYPTO_gcm128_encrypt(AmiSSLBase, (ctx), (in), (out), (len))

int __CRYPTO_xts128_encrypt(__reg("a6") struct Library * , __reg("a0") const XTS128_CONTEXT * ctx , __reg("a1") const unsigned char * iv , __reg("a2") const unsigned char * inp , __reg("a3") unsigned char * out , __reg("d0") size_t len , __reg("d1") int enc ) = "\tjsr\t-23268(a6)";
#define CRYPTO_xts128_encrypt(ctx, iv, inp, out, len, enc) __CRYPTO_xts128_encrypt(AmiSSLBase, (ctx), (iv), (inp), (out), (len), (enc))

size_t __CRYPTO_nistcts128_decrypt_block(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("d1") unsigned char * ivec , __reg("a3") block128_f block ) = "\tjsr\t-23274(a6)";
#define CRYPTO_nistcts128_decrypt_block(in, out, len, key, ivec, block) __CRYPTO_nistcts128_decrypt_block(AmiSSLBase, (in), (out), (len), (key), (ivec), (block))

void __CRYPTO_gcm128_setiv(__reg("a6") struct Library * , __reg("a0") GCM128_CONTEXT * ctx , __reg("a1") const unsigned char * iv , __reg("d0") size_t len ) = "\tjsr\t-23280(a6)";
#define CRYPTO_gcm128_setiv(ctx, iv, len) __CRYPTO_gcm128_setiv(AmiSSLBase, (ctx), (iv), (len))

size_t __CRYPTO_nistcts128_encrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") cbc128_f cbc ) = "\tjsr\t-23286(a6)";
#define CRYPTO_nistcts128_encrypt(in, out, len, key, ivec, cbc) __CRYPTO_nistcts128_encrypt(AmiSSLBase, (in), (out), (len), (key), (ivec), (cbc))

void __CRYPTO_gcm128_tag(__reg("a6") struct Library * , __reg("a0") GCM128_CONTEXT * ctx , __reg("a1") unsigned char * tag , __reg("d0") size_t len ) = "\tjsr\t-23292(a6)";
#define CRYPTO_gcm128_tag(ctx, tag, len) __CRYPTO_gcm128_tag(AmiSSLBase, (ctx), (tag), (len))

int __CRYPTO_ccm128_encrypt_ccm64(__reg("a6") struct Library * , __reg("a0") CCM128_CONTEXT * ctx , __reg("a1") const unsigned char * inp , __reg("a2") unsigned char * out , __reg("d0") size_t len , __reg("a3") ccm128_f stream ) = "\tjsr\t-23298(a6)";
#define CRYPTO_ccm128_encrypt_ccm64(ctx, inp, out, len, stream) __CRYPTO_ccm128_encrypt_ccm64(AmiSSLBase, (ctx), (inp), (out), (len), (stream))

int __CRYPTO_ccm128_setiv(__reg("a6") struct Library * , __reg("a0") CCM128_CONTEXT * ctx , __reg("a1") const unsigned char * nonce , __reg("d0") size_t nlen , __reg("d1") size_t mlen ) = "\tjsr\t-23304(a6)";
#define CRYPTO_ccm128_setiv(ctx, nonce, nlen, mlen) __CRYPTO_ccm128_setiv(AmiSSLBase, (ctx), (nonce), (nlen), (mlen))

size_t __CRYPTO_nistcts128_encrypt_block(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") block128_f block ) = "\tjsr\t-23310(a6)";
#define CRYPTO_nistcts128_encrypt_block(in, out, len, key, ivec, block) __CRYPTO_nistcts128_encrypt_block(AmiSSLBase, (in), (out), (len), (key), (ivec), (block))

int __CRYPTO_gcm128_aad(__reg("a6") struct Library * , __reg("a0") GCM128_CONTEXT * ctx , __reg("a1") const unsigned char * aad , __reg("d0") size_t len ) = "\tjsr\t-23316(a6)";
#define CRYPTO_gcm128_aad(ctx, aad, len) __CRYPTO_gcm128_aad(AmiSSLBase, (ctx), (aad), (len))

void __CRYPTO_ccm128_init(__reg("a6") struct Library * , __reg("a0") CCM128_CONTEXT * ctx , __reg("d0") unsigned int M , __reg("d1") unsigned int L , __reg("a1") void * key , __reg("a2") block128_f block ) = "\tjsr\t-23322(a6)";
#define CRYPTO_ccm128_init(ctx, M, L, key, block) __CRYPTO_ccm128_init(AmiSSLBase, (ctx), (M), (L), (key), (block))

size_t __CRYPTO_nistcts128_decrypt(__reg("a6") struct Library * , __reg("a0") const unsigned char * in , __reg("a1") unsigned char * out , __reg("d0") size_t len , __reg("a2") const void * key , __reg("a3") unsigned char * ivec , __reg("d1") cbc128_f cbc ) = "\tjsr\t-23328(a6)";
#define CRYPTO_nistcts128_decrypt(in, out, len, key, ivec, cbc) __CRYPTO_nistcts128_decrypt(AmiSSLBase, (in), (out), (len), (key), (ivec), (cbc))

GCM128_CONTEXT * __CRYPTO_gcm128_new(__reg("a6") struct Library * , __reg("a0") void * key , __reg("a1") block128_f block ) = "\tjsr\t-23334(a6)";
#define CRYPTO_gcm128_new(key, block) __CRYPTO_gcm128_new(AmiSSLBase, (key), (block))

size_t __CRYPTO_ccm128_tag(__reg("a6") struct Library * , __reg("a0") CCM128_CONTEXT * ctx , __reg("a1") unsigned char * tag , __reg("d0") size_t len ) = "\tjsr\t-23340(a6)";
#define CRYPTO_ccm128_tag(ctx, tag, len) __CRYPTO_ccm128_tag(AmiSSLBase, (ctx), (tag), (len))

int __CRYPTO_ccm128_decrypt(__reg("a6") struct Library * , __reg("a0") CCM128_CONTEXT * ctx , __reg("a1") const unsigned char * inp , __reg("a2") unsigned char * out , __reg("d0") size_t len ) = "\tjsr\t-23346(a6)";
#define CRYPTO_ccm128_decrypt(ctx, inp, out, len) __CRYPTO_ccm128_decrypt(AmiSSLBase, (ctx), (inp), (out), (len))

void __CRYPTO_ccm128_aad(__reg("a6") struct Library * , __reg("a0") CCM128_CONTEXT * ctx , __reg("a1") const unsigned char * aad , __reg("d0") size_t alen ) = "\tjsr\t-23352(a6)";
#define CRYPTO_ccm128_aad(ctx, aad, alen) __CRYPTO_ccm128_aad(AmiSSLBase, (ctx), (aad), (alen))

void __CRYPTO_gcm128_init(__reg("a6") struct Library * , __reg("a0") GCM128_CONTEXT * ctx , __reg("a1") void * key , __reg("a2") block128_f block ) = "\tjsr\t-23358(a6)";
#define CRYPTO_gcm128_init(ctx, key, block) __CRYPTO_gcm128_init(AmiSSLBase, (ctx), (key), (block))

int __CRYPTO_gcm128_decrypt(__reg("a6") struct Library * , __reg("a0") GCM128_CONTEXT * ctx , __reg("a1") const unsigned char * in , __reg("a2") unsigned char * out , __reg("d0") size_t len ) = "\tjsr\t-23364(a6)";
#define CRYPTO_gcm128_decrypt(ctx, in, out, len) __CRYPTO_gcm128_decrypt(AmiSSLBase, (ctx), (in), (out), (len))

int __CRYPTO_gcm128_decrypt_ctr32(__reg("a6") struct Library * , __reg("a0") GCM128_CONTEXT * ctx , __reg("a1") const unsigned char * in , __reg("a2") unsigned char * out , __reg("d0") size_t len , __reg("a3") ctr128_f stream ) = "\tjsr\t-23370(a6)";
#define CRYPTO_gcm128_decrypt_ctr32(ctx, in, out, len, stream) __CRYPTO_gcm128_decrypt_ctr32(AmiSSLBase, (ctx), (in), (out), (len), (stream))

int __CRYPTO_gcm128_encrypt_ctr32(__reg("a6") struct Library * , __reg("a0") GCM128_CONTEXT * ctx , __reg("a1") const unsigned char * in , __reg("a2") unsigned char * out , __reg("d0") size_t len , __reg("a3") ctr128_f stream ) = "\tjsr\t-23376(a6)";
#define CRYPTO_gcm128_encrypt_ctr32(ctx, in, out, len, stream) __CRYPTO_gcm128_encrypt_ctr32(AmiSSLBase, (ctx), (in), (out), (len), (stream))

int __CRYPTO_gcm128_finish(__reg("a6") struct Library * , __reg("a0") GCM128_CONTEXT * ctx , __reg("a1") const unsigned char * tag , __reg("d0") size_t len ) = "\tjsr\t-23382(a6)";
#define CRYPTO_gcm128_finish(ctx, tag, len) __CRYPTO_gcm128_finish(AmiSSLBase, (ctx), (tag), (len))

X509_ALGOR * __PKCS5_pbkdf2_set(__reg("a6") struct Library * , __reg("d0") int iter , __reg("a0") unsigned char * salt , __reg("d1") int saltlen , __reg("d2") int prf_nid , __reg("d3") int keylen ) = "\tjsr\t-23388(a6)";
#define PKCS5_pbkdf2_set(iter, salt, saltlen, prf_nid, keylen) __PKCS5_pbkdf2_set(AmiSSLBase, (iter), (salt), (saltlen), (prf_nid), (keylen))

RSA_PSS_PARAMS * __RSA_PSS_PARAMS_new(__reg("a6") struct Library * ) = "\tjsr\t-23394(a6)";
#define RSA_PSS_PARAMS_new() __RSA_PSS_PARAMS_new(AmiSSLBase)

RSA_PSS_PARAMS * __d2i_RSA_PSS_PARAMS(__reg("a6") struct Library * , __reg("a0") RSA_PSS_PARAMS ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-23400(a6)";
#define d2i_RSA_PSS_PARAMS(a, pp, length) __d2i_RSA_PSS_PARAMS(AmiSSLBase, (a), (pp), (length))

void __RSA_PSS_PARAMS_free(__reg("a6") struct Library * , __reg("a0") RSA_PSS_PARAMS * a ) = "\tjsr\t-23406(a6)";
#define RSA_PSS_PARAMS_free(a) __RSA_PSS_PARAMS_free(AmiSSLBase, (a))

int __i2d_RSA_PSS_PARAMS(__reg("a6") struct Library * , __reg("a0") const RSA_PSS_PARAMS * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-23412(a6)";
#define i2d_RSA_PSS_PARAMS(a, out) __i2d_RSA_PSS_PARAMS(AmiSSLBase, (a), (out))

const ASN1_ITEM * __POLICY_MAPPING_it(__reg("a6") struct Library * ) = "\tjsr\t-23424(a6)";
#define POLICY_MAPPING_it() __POLICY_MAPPING_it(AmiSSLBase)

const ASN1_ITEM * __NAME_CONSTRAINTS_it(__reg("a6") struct Library * ) = "\tjsr\t-23430(a6)";
#define NAME_CONSTRAINTS_it() __NAME_CONSTRAINTS_it(AmiSSLBase)

const ASN1_ITEM * __ASN1_OCTET_STRING_NDEF_it(__reg("a6") struct Library * ) = "\tjsr\t-23436(a6)";
#define ASN1_OCTET_STRING_NDEF_it() __ASN1_OCTET_STRING_NDEF_it(AmiSSLBase)

const ASN1_ITEM * __POLICY_CONSTRAINTS_it(__reg("a6") struct Library * ) = "\tjsr\t-23448(a6)";
#define POLICY_CONSTRAINTS_it() __POLICY_CONSTRAINTS_it(AmiSSLBase)

const ASN1_ITEM * __POLICY_MAPPINGS_it(__reg("a6") struct Library * ) = "\tjsr\t-23454(a6)";
#define POLICY_MAPPINGS_it() __POLICY_MAPPINGS_it(AmiSSLBase)

const ASN1_ITEM * __GENERAL_SUBTREE_it(__reg("a6") struct Library * ) = "\tjsr\t-23460(a6)";
#define GENERAL_SUBTREE_it() __GENERAL_SUBTREE_it(AmiSSLBase)

const ASN1_ITEM * __X509_EXTENSIONS_it(__reg("a6") struct Library * ) = "\tjsr\t-23466(a6)";
#define X509_EXTENSIONS_it() __X509_EXTENSIONS_it(AmiSSLBase)

const ASN1_ITEM * __X509_ALGORS_it(__reg("a6") struct Library * ) = "\tjsr\t-23472(a6)";
#define X509_ALGORS_it() __X509_ALGORS_it(AmiSSLBase)

const ASN1_ITEM * __CMS_ContentInfo_it(__reg("a6") struct Library * ) = "\tjsr\t-23478(a6)";
#define CMS_ContentInfo_it() __CMS_ContentInfo_it(AmiSSLBase)

const ASN1_ITEM * __CMS_ReceiptRequest_it(__reg("a6") struct Library * ) = "\tjsr\t-23484(a6)";
#define CMS_ReceiptRequest_it() __CMS_ReceiptRequest_it(AmiSSLBase)

const ASN1_ITEM * __ASN1_SEQUENCE_ANY_it(__reg("a6") struct Library * ) = "\tjsr\t-23490(a6)";
#define ASN1_SEQUENCE_ANY_it() __ASN1_SEQUENCE_ANY_it(AmiSSLBase)

const ASN1_ITEM * __ASN1_SET_ANY_it(__reg("a6") struct Library * ) = "\tjsr\t-23496(a6)";
#define ASN1_SET_ANY_it() __ASN1_SET_ANY_it(AmiSSLBase)

const ASN1_ITEM * __ISSUING_DIST_POINT_it(__reg("a6") struct Library * ) = "\tjsr\t-23508(a6)";
#define ISSUING_DIST_POINT_it() __ISSUING_DIST_POINT_it(AmiSSLBase)

const ASN1_ITEM * __RSA_PSS_PARAMS_it(__reg("a6") struct Library * ) = "\tjsr\t-23514(a6)";
#define RSA_PSS_PARAMS_it() __RSA_PSS_PARAMS_it(AmiSSLBase)

int __PEM_write_bio_DHxparams(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const DH * x ) = "\tjsr\t-23526(a6)";
#define PEM_write_bio_DHxparams(bp, x) __PEM_write_bio_DHxparams(AmiSSLBase, (bp), (x))

int __X509_ALGOR_cmp(__reg("a6") struct Library * , __reg("a0") const X509_ALGOR * a , __reg("a1") const X509_ALGOR * b ) = "\tjsr\t-23532(a6)";
#define X509_ALGOR_cmp(a, b) __X509_ALGOR_cmp(AmiSSLBase, (a), (b))

void __ASN1_STRING_clear_free(__reg("a6") struct Library * , __reg("a0") ASN1_STRING * a ) = "\tjsr\t-23538(a6)";
#define ASN1_STRING_clear_free(a) __ASN1_STRING_clear_free(AmiSSLBase, (a))

int __ASN1_TIME_diff(__reg("a6") struct Library * , __reg("a0") int * pday , __reg("a1") int * psec , __reg("a2") const ASN1_TIME * from , __reg("a3") const ASN1_TIME * to ) = "\tjsr\t-23544(a6)";
#define ASN1_TIME_diff(pday, psec, from, to) __ASN1_TIME_diff(AmiSSLBase, (pday), (psec), (from), (to))

int __BIO_hex_string(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("d0") int indent , __reg("d1") int width , __reg("a1") const void * data , __reg("d2") int datalen ) = "\tjsr\t-23550(a6)";
#define BIO_hex_string(out, indent, width, data, datalen) __BIO_hex_string(AmiSSLBase, (out), (indent), (width), (data), (datalen))

size_t __OBSOLETE_BUF_strnlen(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("d0") size_t maxlen ) = "\tjsr\t-23556(a6)";
#define OBSOLETE_BUF_strnlen(str, maxlen) __OBSOLETE_BUF_strnlen(AmiSSLBase, (str), (maxlen))

int __CMS_RecipientEncryptedKey_cert_cmp(__reg("a6") struct Library * , __reg("a0") CMS_RecipientEncryptedKey * rek , __reg("a1") X509 * cert ) = "\tjsr\t-23562(a6)";
#define CMS_RecipientEncryptedKey_cert_cmp(rek, cert) __CMS_RecipientEncryptedKey_cert_cmp(AmiSSLBase, (rek), (cert))

int __CMS_RecipientEncryptedKey_get0_id(__reg("a6") struct Library * , __reg("a0") CMS_RecipientEncryptedKey * rek , __reg("a1") ASN1_OCTET_STRING ** keyid , __reg("a2") ASN1_GENERALIZEDTIME ** tm , __reg("a3") CMS_OtherKeyAttribute ** other , __reg("d0") X509_NAME ** issuer , __reg("d1") ASN1_INTEGER ** sno ) = "\tjsr\t-23568(a6)";
#define CMS_RecipientEncryptedKey_get0_id(rek, keyid, tm, other, issuer, sno) __CMS_RecipientEncryptedKey_get0_id(AmiSSLBase, (rek), (keyid), (tm), (other), (issuer), (sno))

int __CMS_RecipientInfo_encrypt(__reg("a6") struct Library * , __reg("a0") const CMS_ContentInfo * cms , __reg("a1") CMS_RecipientInfo * ri ) = "\tjsr\t-23574(a6)";
#define CMS_RecipientInfo_encrypt(cms, ri) __CMS_RecipientInfo_encrypt(AmiSSLBase, (cms), (ri))

EVP_PKEY_CTX * __CMS_RecipientInfo_get0_pkey_ctx(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri ) = "\tjsr\t-23580(a6)";
#define CMS_RecipientInfo_get0_pkey_ctx(ri) __CMS_RecipientInfo_get0_pkey_ctx(AmiSSLBase, (ri))

int __CMS_RecipientInfo_kari_decrypt(__reg("a6") struct Library * , __reg("a0") CMS_ContentInfo * cms , __reg("a1") CMS_RecipientInfo * ri , __reg("a2") CMS_RecipientEncryptedKey * rek ) = "\tjsr\t-23586(a6)";
#define CMS_RecipientInfo_kari_decrypt(cms, ri, rek) __CMS_RecipientInfo_kari_decrypt(AmiSSLBase, (cms), (ri), (rek))

int __CMS_RecipientInfo_kari_get0_alg(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") X509_ALGOR ** palg , __reg("a2") ASN1_OCTET_STRING ** pukm ) = "\tjsr\t-23592(a6)";
#define CMS_RecipientInfo_kari_get0_alg(ri, palg, pukm) __CMS_RecipientInfo_kari_get0_alg(AmiSSLBase, (ri), (palg), (pukm))

EVP_CIPHER_CTX * __CMS_RecipientInfo_kari_get0_ctx(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri ) = "\tjsr\t-23598(a6)";
#define CMS_RecipientInfo_kari_get0_ctx(ri) __CMS_RecipientInfo_kari_get0_ctx(AmiSSLBase, (ri))

int __CMS_RecipientInfo_kari_get0_orig_id(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") X509_ALGOR ** pubalg , __reg("a2") ASN1_BIT_STRING ** pubkey , __reg("a3") ASN1_OCTET_STRING ** keyid , __reg("d0") X509_NAME ** issuer , __reg("d1") ASN1_INTEGER ** sno ) = "\tjsr\t-23604(a6)";
#define CMS_RecipientInfo_kari_get0_orig_id(ri, pubalg, pubkey, keyid, issuer, sno) __CMS_RecipientInfo_kari_get0_orig_id(AmiSSLBase, (ri), (pubalg), (pubkey), (keyid), (issuer), (sno))

STACK_OF(CMS_RecipientEncryptedKey) * __CMS_RecipientInfo_kari_get0_reks(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri ) = "\tjsr\t-23610(a6)";
#define CMS_RecipientInfo_kari_get0_reks(ri) __CMS_RecipientInfo_kari_get0_reks(AmiSSLBase, (ri))

int __CMS_RecipientInfo_kari_orig_id_cmp(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") X509 * cert ) = "\tjsr\t-23616(a6)";
#define CMS_RecipientInfo_kari_orig_id_cmp(ri, cert) __CMS_RecipientInfo_kari_orig_id_cmp(AmiSSLBase, (ri), (cert))

int __CMS_RecipientInfo_kari_set0_pkey(__reg("a6") struct Library * , __reg("a0") CMS_RecipientInfo * ri , __reg("a1") EVP_PKEY * pk ) = "\tjsr\t-23622(a6)";
#define CMS_RecipientInfo_kari_set0_pkey(ri, pk) __CMS_RecipientInfo_kari_set0_pkey(AmiSSLBase, (ri), (pk))

int __CMS_SharedInfo_encode(__reg("a6") struct Library * , __reg("a0") unsigned char ** pder , __reg("a1") X509_ALGOR * kekalg , __reg("a2") ASN1_OCTET_STRING * ukm , __reg("d0") int keylen ) = "\tjsr\t-23628(a6)";
#define CMS_SharedInfo_encode(pder, kekalg, ukm, keylen) __CMS_SharedInfo_encode(AmiSSLBase, (pder), (kekalg), (ukm), (keylen))

EVP_MD_CTX * __CMS_SignerInfo_get0_md_ctx(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si ) = "\tjsr\t-23634(a6)";
#define CMS_SignerInfo_get0_md_ctx(si) __CMS_SignerInfo_get0_md_ctx(AmiSSLBase, (si))

EVP_PKEY_CTX * __CMS_SignerInfo_get0_pkey_ctx(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si ) = "\tjsr\t-23640(a6)";
#define CMS_SignerInfo_get0_pkey_ctx(si) __CMS_SignerInfo_get0_pkey_ctx(AmiSSLBase, (si))

ASN1_OCTET_STRING * __CMS_SignerInfo_get0_signature(__reg("a6") struct Library * , __reg("a0") CMS_SignerInfo * si ) = "\tjsr\t-23646(a6)";
#define CMS_SignerInfo_get0_signature(si) __CMS_SignerInfo_get0_signature(AmiSSLBase, (si))

DH * __d2i_DHxparams(__reg("a6") struct Library * , __reg("a0") DH ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-23652(a6)";
#define d2i_DHxparams(a, pp, length) __d2i_DHxparams(AmiSSLBase, (a), (pp), (length))

int __i2d_DHxparams(__reg("a6") struct Library * , __reg("a0") const DH * dh , __reg("a1") unsigned char ** pp ) = "\tjsr\t-23658(a6)";
#define i2d_DHxparams(dh, pp) __i2d_DHxparams(AmiSSLBase, (dh), (pp))

int __DH_compute_key_padded(__reg("a6") struct Library * , __reg("a0") unsigned char * key , __reg("a1") const BIGNUM * pub_key , __reg("a2") DH * dh ) = "\tjsr\t-23664(a6)";
#define DH_compute_key_padded(key, pub_key, dh) __DH_compute_key_padded(AmiSSLBase, (key), (pub_key), (dh))

DH * __DH_get_1024_160(__reg("a6") struct Library * ) = "\tjsr\t-23670(a6)";
#define DH_get_1024_160() __DH_get_1024_160(AmiSSLBase)

DH * __DH_get_2048_224(__reg("a6") struct Library * ) = "\tjsr\t-23676(a6)";
#define DH_get_2048_224() __DH_get_2048_224(AmiSSLBase)

DH * __DH_get_2048_256(__reg("a6") struct Library * ) = "\tjsr\t-23682(a6)";
#define DH_get_2048_256() __DH_get_2048_256(AmiSSLBase)

int __DH_KDF_X9_42(__reg("a6") struct Library * , __reg("a0") unsigned char * out , __reg("d0") size_t outlen , __reg("a1") const unsigned char * Z , __reg("d1") size_t Zlen , __reg("a2") ASN1_OBJECT * key_oid , __reg("a3") const unsigned char * ukm , __reg("d2") size_t ukmlen , __reg("d3") const EVP_MD * md ) = "\tjsr\t-23688(a6)";
#define DH_KDF_X9_42(out, outlen, Z, Zlen, key_oid, ukm, ukmlen, md) __DH_KDF_X9_42(AmiSSLBase, (out), (outlen), (Z), (Zlen), (key_oid), (ukm), (ukmlen), (md))

const char * __EC_curve_nid2nist(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-23694(a6)";
#define EC_curve_nid2nist(nid) __EC_curve_nid2nist(AmiSSLBase, (nid))

int __EC_curve_nist2nid(__reg("a6") struct Library * , __reg("a0") const char * name ) = "\tjsr\t-23700(a6)";
#define EC_curve_nist2nid(name) __EC_curve_nist2nid(AmiSSLBase, (name))

BN_MONT_CTX * __EC_GROUP_get_mont_data(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group ) = "\tjsr\t-23706(a6)";
#define EC_GROUP_get_mont_data(group) __EC_GROUP_get_mont_data(AmiSSLBase, (group))

int __ECDH_KDF_X9_62(__reg("a6") struct Library * , __reg("a0") unsigned char * out , __reg("d0") size_t outlen , __reg("a1") const unsigned char * Z , __reg("d1") size_t Zlen , __reg("a2") const unsigned char * sinfo , __reg("d2") size_t sinfolen , __reg("d3") const EVP_MD * md ) = "\tjsr\t-23712(a6)";
#define ECDH_KDF_X9_62(out, outlen, Z, Zlen, sinfo, sinfolen, md) __ECDH_KDF_X9_62(AmiSSLBase, (out), (outlen), (Z), (Zlen), (sinfo), (sinfolen), (md))

const EVP_CIPHER * __EVP_aes_128_cbc_hmac_sha256(__reg("a6") struct Library * ) = "\tjsr\t-23772(a6)";
#define EVP_aes_128_cbc_hmac_sha256() __EVP_aes_128_cbc_hmac_sha256(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_wrap(__reg("a6") struct Library * ) = "\tjsr\t-23778(a6)";
#define EVP_aes_128_wrap() __EVP_aes_128_wrap(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_192_wrap(__reg("a6") struct Library * ) = "\tjsr\t-23784(a6)";
#define EVP_aes_192_wrap() __EVP_aes_192_wrap(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_cbc_hmac_sha256(__reg("a6") struct Library * ) = "\tjsr\t-23790(a6)";
#define EVP_aes_256_cbc_hmac_sha256() __EVP_aes_256_cbc_hmac_sha256(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_wrap(__reg("a6") struct Library * ) = "\tjsr\t-23796(a6)";
#define EVP_aes_256_wrap() __EVP_aes_256_wrap(AmiSSLBase)

const EVP_CIPHER * __EVP_des_ede3_wrap(__reg("a6") struct Library * ) = "\tjsr\t-23802(a6)";
#define EVP_des_ede3_wrap() __EVP_des_ede3_wrap(AmiSSLBase)

size_t __CRYPTO_128_unwrap(__reg("a6") struct Library * , __reg("a0") void * key , __reg("a1") const unsigned char * iv , __reg("a2") unsigned char * out , __reg("a3") const unsigned char * in , __reg("d0") size_t inlen , __reg("d1") block128_f block ) = "\tjsr\t-23808(a6)";
#define CRYPTO_128_unwrap(key, iv, out, in, inlen, block) __CRYPTO_128_unwrap(AmiSSLBase, (key), (iv), (out), (in), (inlen), (block))

size_t __CRYPTO_128_wrap(__reg("a6") struct Library * , __reg("a0") void * key , __reg("a1") const unsigned char * iv , __reg("a2") unsigned char * out , __reg("a3") const unsigned char * in , __reg("d0") size_t inlen , __reg("d1") block128_f block ) = "\tjsr\t-23814(a6)";
#define CRYPTO_128_wrap(key, iv, out, in, inlen, block) __CRYPTO_128_wrap(AmiSSLBase, (key), (iv), (out), (in), (inlen), (block))

BIO * __OSSL_HTTP_REQ_CTX_get0_mem_bio(__reg("a6") struct Library * , __reg("a0") const OSSL_HTTP_REQ_CTX * rctx ) = "\tjsr\t-23820(a6)";
#define OSSL_HTTP_REQ_CTX_get0_mem_bio(rctx) __OSSL_HTTP_REQ_CTX_get0_mem_bio(AmiSSLBase, (rctx))

int __OBSOLETE_OCSP_REQ_CTX_http(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx , __reg("a1") const char * op , __reg("a2") const char * path ) = "\tjsr\t-23826(a6)";
#define OBSOLETE_OCSP_REQ_CTX_http(rctx, op, path) __OBSOLETE_OCSP_REQ_CTX_http(AmiSSLBase, (rctx), (op), (path))

int __OBSOLETE_OCSP_REQ_CTX_i2d(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx , __reg("a1") const ASN1_ITEM * it , __reg("a2") ASN1_VALUE * val ) = "\tjsr\t-23832(a6)";
#define OBSOLETE_OCSP_REQ_CTX_i2d(rctx, it, val) __OBSOLETE_OCSP_REQ_CTX_i2d(AmiSSLBase, (rctx), (it), (val))

int __OSSL_HTTP_REQ_CTX_nbio(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx ) = "\tjsr\t-23838(a6)";
#define OSSL_HTTP_REQ_CTX_nbio(rctx) __OSSL_HTTP_REQ_CTX_nbio(AmiSSLBase, (rctx))

int __OSSL_HTTP_REQ_CTX_nbio_d2i(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx , __reg("a1") ASN1_VALUE ** pval , __reg("a2") const ASN1_ITEM * it ) = "\tjsr\t-23844(a6)";
#define OSSL_HTTP_REQ_CTX_nbio_d2i(rctx, pval, it) __OSSL_HTTP_REQ_CTX_nbio_d2i(AmiSSLBase, (rctx), (pval), (it))

OSSL_HTTP_REQ_CTX * __OBSOLETE_OCSP_REQ_CTX_new(__reg("a6") struct Library * , __reg("a0") BIO * io , __reg("d0") int maxline ) = "\tjsr\t-23850(a6)";
#define OBSOLETE_OCSP_REQ_CTX_new(io, maxline) __OBSOLETE_OCSP_REQ_CTX_new(AmiSSLBase, (io), (maxline))

void __OSSL_HTTP_REQ_CTX_set_max_response_length(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx , __reg("d0") unsigned long len ) = "\tjsr\t-23856(a6)";
#define OSSL_HTTP_REQ_CTX_set_max_response_length(rctx, len) __OSSL_HTTP_REQ_CTX_set_max_response_length(AmiSSLBase, (rctx), (len))

RSA_OAEP_PARAMS * __d2i_RSA_OAEP_PARAMS(__reg("a6") struct Library * , __reg("a0") RSA_OAEP_PARAMS ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-23862(a6)";
#define d2i_RSA_OAEP_PARAMS(a, in, len) __d2i_RSA_OAEP_PARAMS(AmiSSLBase, (a), (in), (len))

void __RSA_OAEP_PARAMS_free(__reg("a6") struct Library * , __reg("a0") RSA_OAEP_PARAMS * a ) = "\tjsr\t-23868(a6)";
#define RSA_OAEP_PARAMS_free(a) __RSA_OAEP_PARAMS_free(AmiSSLBase, (a))

const ASN1_ITEM * __RSA_OAEP_PARAMS_it(__reg("a6") struct Library * ) = "\tjsr\t-23874(a6)";
#define RSA_OAEP_PARAMS_it() __RSA_OAEP_PARAMS_it(AmiSSLBase)

RSA_OAEP_PARAMS * __RSA_OAEP_PARAMS_new(__reg("a6") struct Library * ) = "\tjsr\t-23880(a6)";
#define RSA_OAEP_PARAMS_new() __RSA_OAEP_PARAMS_new(AmiSSLBase)

int __RSA_padding_add_PKCS1_OAEP_mgf1(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * from , __reg("d1") int flen , __reg("a2") const unsigned char * param , __reg("d2") int plen , __reg("a3") const EVP_MD * md , __reg("d3") const EVP_MD * mgf1md ) = "\tjsr\t-23886(a6)";
#define RSA_padding_add_PKCS1_OAEP_mgf1(to, tlen, from, flen, param, plen, md, mgf1md) __RSA_padding_add_PKCS1_OAEP_mgf1(AmiSSLBase, (to), (tlen), (from), (flen), (param), (plen), (md), (mgf1md))

int __RSA_padding_check_PKCS1_OAEP_mgf1(__reg("a6") struct Library * , __reg("a0") unsigned char * to , __reg("d0") int tlen , __reg("a1") const unsigned char * from , __reg("d1") int flen , __reg("d2") int num , __reg("a2") const unsigned char * param , __reg("d3") int plen , __reg("a3") const EVP_MD * md , __reg("d4") const EVP_MD * mgf1md ) = "\tjsr\t-23892(a6)";
#define RSA_padding_check_PKCS1_OAEP_mgf1(to, tlen, from, flen, num, param, plen, md, mgf1md) __RSA_padding_check_PKCS1_OAEP_mgf1(AmiSSLBase, (to), (tlen), (from), (flen), (num), (param), (plen), (md), (mgf1md))

OPENSSL_STACK * __OPENSSL_sk_deep_copy(__reg("a6") struct Library * , __reg("a0") const OPENSSL_STACK * sk , __reg("a1") OPENSSL_sk_copyfunc c , __reg("a2") OPENSSL_sk_freefunc f ) = "\tjsr\t-23898(a6)";
#define OPENSSL_sk_deep_copy(sk, c, f) __OPENSSL_sk_deep_copy(AmiSSLBase, (sk), (c), (f))

int __i2d_re_X509_tbs(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") unsigned char ** pp ) = "\tjsr\t-23904(a6)";
#define i2d_re_X509_tbs(x, pp) __i2d_re_X509_tbs(AmiSSLBase, (x), (pp))

int __X509_chain_check_suiteb(__reg("a6") struct Library * , __reg("a0") int * perror_depth , __reg("a1") X509 * x , __reg("a2") STACK_OF(X509) * chain , __reg("d0") unsigned long flags ) = "\tjsr\t-23910(a6)";
#define X509_chain_check_suiteb(perror_depth, x, chain, flags) __X509_chain_check_suiteb(AmiSSLBase, (perror_depth), (x), (chain), (flags))

STACK_OF(X509) * __X509_chain_up_ref(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509) * chain ) = "\tjsr\t-23916(a6)";
#define X509_chain_up_ref(chain) __X509_chain_up_ref(AmiSSLBase, (chain))

int __X509_CRL_check_suiteb(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl , __reg("a1") EVP_PKEY * pk , __reg("d0") unsigned long flags ) = "\tjsr\t-23922(a6)";
#define X509_CRL_check_suiteb(crl, pk, flags) __X509_CRL_check_suiteb(AmiSSLBase, (crl), (pk), (flags))

X509_CRL * __X509_CRL_diff(__reg("a6") struct Library * , __reg("a0") X509_CRL * base , __reg("a1") X509_CRL * newer , __reg("a2") EVP_PKEY * skey , __reg("a3") const EVP_MD * md , __reg("d0") unsigned int flags ) = "\tjsr\t-23928(a6)";
#define X509_CRL_diff(base, newer, skey, md, flags) __X509_CRL_diff(AmiSSLBase, (base), (newer), (skey), (md), (flags))

int __OBSOLETE_X509_CRL_http_nbio(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx , __reg("a1") X509_CRL ** pcrl ) = "\tjsr\t-23934(a6)";
#define OBSOLETE_X509_CRL_http_nbio(rctx, pcrl) __OBSOLETE_X509_CRL_http_nbio(AmiSSLBase, (rctx), (pcrl))

void __X509_get0_signature(__reg("a6") struct Library * , __reg("a0") const ASN1_BIT_STRING ** psig , __reg("a1") const X509_ALGOR ** palg , __reg("a2") const X509 * x ) = "\tjsr\t-23940(a6)";
#define X509_get0_signature(psig, palg, x) __X509_get0_signature(AmiSSLBase, (psig), (palg), (x))

int __X509_get_signature_nid(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-23946(a6)";
#define X509_get_signature_nid(x) __X509_get_signature_nid(AmiSSLBase, (x))

int __OBSOLETE_X509_http_nbio(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx , __reg("a1") X509 ** pcert ) = "\tjsr\t-23952(a6)";
#define OBSOLETE_X509_http_nbio(rctx, pcert) __OBSOLETE_X509_http_nbio(AmiSSLBase, (rctx), (pcert))

X509_REVOKED * __X509_REVOKED_dup(__reg("a6") struct Library * , __reg("a0") const X509_REVOKED * rev ) = "\tjsr\t-23958(a6)";
#define X509_REVOKED_dup(rev) __X509_REVOKED_dup(AmiSSLBase, (rev))

X509_STORE * __X509_STORE_CTX_get0_store(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-23964(a6)";
#define X509_STORE_CTX_get0_store(ctx) __X509_STORE_CTX_get0_store(AmiSSLBase, (ctx))

int __X509_VERIFY_PARAM_add1_host(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("a1") const char * name , __reg("d0") size_t namelen ) = "\tjsr\t-23970(a6)";
#define X509_VERIFY_PARAM_add1_host(param, name, namelen) __X509_VERIFY_PARAM_add1_host(AmiSSLBase, (param), (name), (namelen))

const X509_VERIFY_PARAM * __X509_VERIFY_PARAM_get0(__reg("a6") struct Library * , __reg("d0") int id ) = "\tjsr\t-23976(a6)";
#define X509_VERIFY_PARAM_get0(id) __X509_VERIFY_PARAM_get0(AmiSSLBase, (id))

const char * __X509_VERIFY_PARAM_get0_name(__reg("a6") struct Library * , __reg("a0") const X509_VERIFY_PARAM * param ) = "\tjsr\t-23982(a6)";
#define X509_VERIFY_PARAM_get0_name(param) __X509_VERIFY_PARAM_get0_name(AmiSSLBase, (param))

char * __X509_VERIFY_PARAM_get0_peername(__reg("a6") struct Library * , __reg("a0") const X509_VERIFY_PARAM * param ) = "\tjsr\t-23988(a6)";
#define X509_VERIFY_PARAM_get0_peername(param) __X509_VERIFY_PARAM_get0_peername(AmiSSLBase, (param))

int __X509_VERIFY_PARAM_get_count(__reg("a6") struct Library * ) = "\tjsr\t-23994(a6)";
#define X509_VERIFY_PARAM_get_count() __X509_VERIFY_PARAM_get_count(AmiSSLBase)

int __X509_VERIFY_PARAM_set1_email(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("a1") const char * email , __reg("d0") size_t emaillen ) = "\tjsr\t-24000(a6)";
#define X509_VERIFY_PARAM_set1_email(param, email, emaillen) __X509_VERIFY_PARAM_set1_email(AmiSSLBase, (param), (email), (emaillen))

int __X509_VERIFY_PARAM_set1_host(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("a1") const char * name , __reg("d0") size_t namelen ) = "\tjsr\t-24006(a6)";
#define X509_VERIFY_PARAM_set1_host(param, name, namelen) __X509_VERIFY_PARAM_set1_host(AmiSSLBase, (param), (name), (namelen))

int __X509_VERIFY_PARAM_set1_ip(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("a1") const unsigned char * ip , __reg("d0") size_t iplen ) = "\tjsr\t-24012(a6)";
#define X509_VERIFY_PARAM_set1_ip(param, ip, iplen) __X509_VERIFY_PARAM_set1_ip(AmiSSLBase, (param), (ip), (iplen))

int __X509_VERIFY_PARAM_set1_ip_asc(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("a1") const char * ipasc ) = "\tjsr\t-24018(a6)";
#define X509_VERIFY_PARAM_set1_ip_asc(param, ipasc) __X509_VERIFY_PARAM_set1_ip_asc(AmiSSLBase, (param), (ipasc))

void __X509_VERIFY_PARAM_set_hostflags(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("d0") unsigned int flags ) = "\tjsr\t-24024(a6)";
#define X509_VERIFY_PARAM_set_hostflags(param, flags) __X509_VERIFY_PARAM_set_hostflags(AmiSSLBase, (param), (flags))

int __X509_check_email(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const char * chk , __reg("d0") size_t chklen , __reg("d1") unsigned int flags ) = "\tjsr\t-24030(a6)";
#define X509_check_email(x, chk, chklen, flags) __X509_check_email(AmiSSLBase, (x), (chk), (chklen), (flags))

int __X509_check_host(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const char * chk , __reg("d0") size_t chklen , __reg("d1") unsigned int flags , __reg("a2") char ** peername ) = "\tjsr\t-24036(a6)";
#define X509_check_host(x, chk, chklen, flags, peername) __X509_check_host(AmiSSLBase, (x), (chk), (chklen), (flags), (peername))

int __X509_check_ip(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const unsigned char * chk , __reg("d0") size_t chklen , __reg("d1") unsigned int flags ) = "\tjsr\t-24042(a6)";
#define X509_check_ip(x, chk, chklen, flags) __X509_check_ip(AmiSSLBase, (x), (chk), (chklen), (flags))

int __X509_check_ip_asc(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") const char * ipasc , __reg("d1") unsigned int flags ) = "\tjsr\t-24048(a6)";
#define X509_check_ip_asc(x, ipasc, flags) __X509_check_ip_asc(AmiSSLBase, (x), (ipasc), (flags))

void __EVP_PKEY_asn1_set_item(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*item_verify)(EVP_MD_CTX *,const ASN1_ITEM *,const void *,const X509_ALGOR *,const ASN1_BIT_STRING *,EVP_PKEY *) , __reg("a2") int (*item_sign)(EVP_MD_CTX *,const ASN1_ITEM *,const void *,X509_ALGOR *,X509_ALGOR *,ASN1_BIT_STRING *) ) = "\tjsr\t-24060(a6)";
#define EVP_PKEY_asn1_set_item(ameth, item_verify, item_sign) __EVP_PKEY_asn1_set_item(AmiSSLBase, (ameth), (item_verify), (item_sign))

const SSL_METHOD * __DTLS_client_method(__reg("a6") struct Library * ) = "\tjsr\t-24066(a6)";
#define DTLS_client_method() __DTLS_client_method(AmiSSLBase)

const SSL_METHOD * __DTLS_method(__reg("a6") struct Library * ) = "\tjsr\t-24072(a6)";
#define DTLS_method() __DTLS_method(AmiSSLBase)

const SSL_METHOD * __DTLS_server_method(__reg("a6") struct Library * ) = "\tjsr\t-24078(a6)";
#define DTLS_server_method() __DTLS_server_method(AmiSSLBase)

void __SSL_certs_clear(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-24102(a6)";
#define SSL_certs_clear(s) __SSL_certs_clear(AmiSSLBase, (s))

const SSL_CIPHER * __SSL_CIPHER_find(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const unsigned char * ptr ) = "\tjsr\t-24108(a6)";
#define SSL_CIPHER_find(ssl, ptr) __SSL_CIPHER_find(AmiSSLBase, (ssl), (ptr))

int __SSL_CONF_cmd(__reg("a6") struct Library * , __reg("a0") SSL_CONF_CTX * ctx , __reg("a1") const char * cmd , __reg("a2") const char * value ) = "\tjsr\t-24120(a6)";
#define SSL_CONF_cmd(ctx, cmd, value) __SSL_CONF_cmd(AmiSSLBase, (ctx), (cmd), (value))

int __SSL_CONF_cmd_argv(__reg("a6") struct Library * , __reg("a0") SSL_CONF_CTX * cctx , __reg("a1") int * pargc , __reg("a2") char *** pargv ) = "\tjsr\t-24126(a6)";
#define SSL_CONF_cmd_argv(cctx, pargc, pargv) __SSL_CONF_cmd_argv(AmiSSLBase, (cctx), (pargc), (pargv))

int __SSL_CONF_cmd_value_type(__reg("a6") struct Library * , __reg("a0") SSL_CONF_CTX * cctx , __reg("a1") const char * cmd ) = "\tjsr\t-24132(a6)";
#define SSL_CONF_cmd_value_type(cctx, cmd) __SSL_CONF_cmd_value_type(AmiSSLBase, (cctx), (cmd))

unsigned int __SSL_CONF_CTX_clear_flags(__reg("a6") struct Library * , __reg("a0") SSL_CONF_CTX * cctx , __reg("a1") unsigned int flags ) = "\tjsr\t-24138(a6)";
#define SSL_CONF_CTX_clear_flags(cctx, flags) __SSL_CONF_CTX_clear_flags(AmiSSLBase, (cctx), (flags))

int __SSL_CONF_CTX_finish(__reg("a6") struct Library * , __reg("a0") SSL_CONF_CTX * cctx ) = "\tjsr\t-24144(a6)";
#define SSL_CONF_CTX_finish(cctx) __SSL_CONF_CTX_finish(AmiSSLBase, (cctx))

void __SSL_CONF_CTX_free(__reg("a6") struct Library * , __reg("a0") SSL_CONF_CTX * cctx ) = "\tjsr\t-24150(a6)";
#define SSL_CONF_CTX_free(cctx) __SSL_CONF_CTX_free(AmiSSLBase, (cctx))

SSL_CONF_CTX * __SSL_CONF_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-24156(a6)";
#define SSL_CONF_CTX_new() __SSL_CONF_CTX_new(AmiSSLBase)

int __SSL_CONF_CTX_set1_prefix(__reg("a6") struct Library * , __reg("a0") SSL_CONF_CTX * cctx , __reg("a1") const char * pre ) = "\tjsr\t-24162(a6)";
#define SSL_CONF_CTX_set1_prefix(cctx, pre) __SSL_CONF_CTX_set1_prefix(AmiSSLBase, (cctx), (pre))

unsigned int __SSL_CONF_CTX_set_flags(__reg("a6") struct Library * , __reg("a0") SSL_CONF_CTX * cctx , __reg("a1") unsigned int flags ) = "\tjsr\t-24168(a6)";
#define SSL_CONF_CTX_set_flags(cctx, flags) __SSL_CONF_CTX_set_flags(AmiSSLBase, (cctx), (flags))

void __SSL_CONF_CTX_set_ssl(__reg("a6") struct Library * , __reg("a0") SSL_CONF_CTX * cctx , __reg("a1") SSL * ssl ) = "\tjsr\t-24174(a6)";
#define SSL_CONF_CTX_set_ssl(cctx, ssl) __SSL_CONF_CTX_set_ssl(AmiSSLBase, (cctx), (ssl))

void __SSL_CONF_CTX_set_ssl_ctx(__reg("a6") struct Library * , __reg("a0") SSL_CONF_CTX * cctx , __reg("a1") SSL_CTX * ctx ) = "\tjsr\t-24180(a6)";
#define SSL_CONF_CTX_set_ssl_ctx(cctx, ctx) __SSL_CONF_CTX_set_ssl_ctx(AmiSSLBase, (cctx), (ctx))

int __SSL_CTX_add_client_custom_ext(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") unsigned int ext_type , __reg("d1") custom_ext_add_cb add_cb , __reg("d2") custom_ext_free_cb free_cb , __reg("a1") void * add_arg , __reg("d3") custom_ext_parse_cb parse_cb , __reg("a2") void * parse_arg ) = "\tjsr\t-24186(a6)";
#define SSL_CTX_add_client_custom_ext(ctx, ext_type, add_cb, free_cb, add_arg, parse_cb, parse_arg) __SSL_CTX_add_client_custom_ext(AmiSSLBase, (ctx), (ext_type), (add_cb), (free_cb), (add_arg), (parse_cb), (parse_arg))

int __SSL_CTX_add_server_custom_ext(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") unsigned int ext_type , __reg("d1") custom_ext_add_cb add_cb , __reg("d2") custom_ext_free_cb free_cb , __reg("a1") void * add_arg , __reg("d3") custom_ext_parse_cb parse_cb , __reg("a2") void * parse_arg ) = "\tjsr\t-24192(a6)";
#define SSL_CTX_add_server_custom_ext(ctx, ext_type, add_cb, free_cb, add_arg, parse_cb, parse_arg) __SSL_CTX_add_server_custom_ext(AmiSSLBase, (ctx), (ext_type), (add_cb), (free_cb), (add_arg), (parse_cb), (parse_arg))

X509 * __SSL_CTX_get0_certificate(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-24198(a6)";
#define SSL_CTX_get0_certificate(ctx) __SSL_CTX_get0_certificate(AmiSSLBase, (ctx))

X509_VERIFY_PARAM * __SSL_CTX_get0_param(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-24204(a6)";
#define SSL_CTX_get0_param(ctx) __SSL_CTX_get0_param(AmiSSLBase, (ctx))

EVP_PKEY * __SSL_CTX_get0_privatekey(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-24210(a6)";
#define SSL_CTX_get0_privatekey(ctx) __SSL_CTX_get0_privatekey(AmiSSLBase, (ctx))

const SSL_METHOD * __SSL_CTX_get_ssl_method(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-24216(a6)";
#define SSL_CTX_get_ssl_method(ctx) __SSL_CTX_get_ssl_method(AmiSSLBase, (ctx))

int __SSL_CTX_set_alpn_protos(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const unsigned char * protos , __reg("d0") unsigned int protos_len ) = "\tjsr\t-24222(a6)";
#define SSL_CTX_set_alpn_protos(ctx, protos, protos_len) __SSL_CTX_set_alpn_protos(AmiSSLBase, (ctx), (protos), (protos_len))

void __SSL_CTX_set_alpn_select_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_CTX_alpn_select_cb_func cb , __reg("a2") void * arg ) = "\tjsr\t-24228(a6)";
#define SSL_CTX_set_alpn_select_cb(ctx, cb, arg) __SSL_CTX_set_alpn_select_cb(AmiSSLBase, (ctx), (cb), (arg))

void __SSL_CTX_set_cert_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * c , __reg("a1") int (*cb)(SSL *ssl,void *arg) , __reg("a2") void * arg ) = "\tjsr\t-24234(a6)";
#define SSL_CTX_set_cert_cb(c, cb, arg) __SSL_CTX_set_cert_cb(AmiSSLBase, (c), (cb), (arg))

int __SSL_CTX_use_serverinfo(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const unsigned char * serverinfo , __reg("d0") size_t serverinfo_length ) = "\tjsr\t-24240(a6)";
#define SSL_CTX_use_serverinfo(ctx, serverinfo, serverinfo_length) __SSL_CTX_use_serverinfo(AmiSSLBase, (ctx), (serverinfo), (serverinfo_length))

int __SSL_CTX_use_serverinfo_file(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * file ) = "\tjsr\t-24246(a6)";
#define SSL_CTX_use_serverinfo_file(ctx, file) __SSL_CTX_use_serverinfo_file(AmiSSLBase, (ctx), (file))

int __SSL_extension_supported(__reg("a6") struct Library * , __reg("d0") unsigned int ext_type ) = "\tjsr\t-24252(a6)";
#define SSL_extension_supported(ext_type) __SSL_extension_supported(AmiSSLBase, (ext_type))

void __SSL_get0_alpn_selected(__reg("a6") struct Library * , __reg("a0") const SSL * ssl , __reg("a1") const unsigned char ** data , __reg("a2") unsigned int * len ) = "\tjsr\t-24258(a6)";
#define SSL_get0_alpn_selected(ssl, data, len) __SSL_get0_alpn_selected(AmiSSLBase, (ssl), (data), (len))

X509_VERIFY_PARAM * __SSL_get0_param(__reg("a6") struct Library * , __reg("a0") SSL * ssl ) = "\tjsr\t-24264(a6)";
#define SSL_get0_param(ssl) __SSL_get0_param(AmiSSLBase, (ssl))

int __SSL_is_server(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-24270(a6)";
#define SSL_is_server(s) __SSL_is_server(AmiSSLBase, (s))

int __SSL_set_alpn_protos(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const unsigned char * protos , __reg("a2") unsigned int protos_len ) = "\tjsr\t-24276(a6)";
#define SSL_set_alpn_protos(ssl, protos, protos_len) __SSL_set_alpn_protos(AmiSSLBase, (ssl), (protos), (protos_len))

void __SSL_set_cert_cb(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") int (*cb)(SSL *ssl,void *arg) , __reg("a2") void * arg ) = "\tjsr\t-24282(a6)";
#define SSL_set_cert_cb(s, cb, arg) __SSL_set_cert_cb(AmiSSLBase, (s), (cb), (arg))

int __SSL_check_chain(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") X509 * x , __reg("a2") EVP_PKEY * pk , __reg("a3") STACK_OF(X509) * chain ) = "\tjsr\t-24288(a6)";
#define SSL_check_chain(s, x, pk, chain) __SSL_check_chain(AmiSSLBase, (s), (x), (pk), (chain))

int __SSL_get_shared_sigalgs(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int idx , __reg("a1") int * psign , __reg("a2") int * phash , __reg("a3") int * psignandhash , __reg("d1") unsigned char * rsig , __reg("d2") unsigned char * rhash ) = "\tjsr\t-24294(a6)";
#define SSL_get_shared_sigalgs(s, idx, psign, phash, psignandhash, rsig, rhash) __SSL_get_shared_sigalgs(AmiSSLBase, (s), (idx), (psign), (phash), (psignandhash), (rsig), (rhash))

int __SSL_get_sigalgs(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int idx , __reg("a1") int * psign , __reg("a2") int * phash , __reg("a3") int * psignandhash , __reg("d1") unsigned char * rsig , __reg("d2") unsigned char * rhash ) = "\tjsr\t-24300(a6)";
#define SSL_get_sigalgs(s, idx, psign, phash, psignandhash, rsig, rhash) __SSL_get_sigalgs(AmiSSLBase, (s), (idx), (psign), (phash), (psignandhash), (rsig), (rhash))

void __ASN1_add_stable_module(__reg("a6") struct Library * ) = "\tjsr\t-24306(a6)";
#define ASN1_add_stable_module() __ASN1_add_stable_module(AmiSSLBase)

int __ASN1_buf_print(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const unsigned char * buf , __reg("a2") size_t buflen , __reg("d0") int off ) = "\tjsr\t-24312(a6)";
#define ASN1_buf_print(bp, buf, buflen, off) __ASN1_buf_print(AmiSSLBase, (bp), (buf), (buflen), (off))

int __ASN1_ENUMERATED_get_int64(__reg("a6") struct Library * , __reg("a0") int64_t * pr , __reg("a1") const ASN1_ENUMERATED * a ) = "\tjsr\t-24318(a6)";
#define ASN1_ENUMERATED_get_int64(pr, a) __ASN1_ENUMERATED_get_int64(AmiSSLBase, (pr), (a))

int __ASN1_ENUMERATED_set_int64(__reg("a6") struct Library * , __reg("a0") ASN1_ENUMERATED * a , __reg("d0/d1") int64_t r ) = "\tjsr\t-24324(a6)";
#define ASN1_ENUMERATED_set_int64(a, r) __ASN1_ENUMERATED_set_int64(AmiSSLBase, (a), (r))

int __ASN1_INTEGER_get_int64(__reg("a6") struct Library * , __reg("a0") int64_t * pr , __reg("a1") const ASN1_INTEGER * a ) = "\tjsr\t-24330(a6)";
#define ASN1_INTEGER_get_int64(pr, a) __ASN1_INTEGER_get_int64(AmiSSLBase, (pr), (a))

int __ASN1_INTEGER_get_uint64(__reg("a6") struct Library * , __reg("a0") uint64_t * pr , __reg("a1") const ASN1_INTEGER * a ) = "\tjsr\t-24336(a6)";
#define ASN1_INTEGER_get_uint64(pr, a) __ASN1_INTEGER_get_uint64(AmiSSLBase, (pr), (a))

int __ASN1_INTEGER_set_int64(__reg("a6") struct Library * , __reg("a0") ASN1_INTEGER * a , __reg("d0/d1") int64_t r ) = "\tjsr\t-24342(a6)";
#define ASN1_INTEGER_set_int64(a, r) __ASN1_INTEGER_set_int64(AmiSSLBase, (a), (r))

int __ASN1_INTEGER_set_uint64(__reg("a6") struct Library * , __reg("a0") ASN1_INTEGER * a , __reg("d0/d1") uint64_t r ) = "\tjsr\t-24348(a6)";
#define ASN1_INTEGER_set_uint64(a, r) __ASN1_INTEGER_set_uint64(AmiSSLBase, (a), (r))

void __ASN1_SCTX_free(__reg("a6") struct Library * , __reg("a0") ASN1_SCTX * p ) = "\tjsr\t-24354(a6)";
#define ASN1_SCTX_free(p) __ASN1_SCTX_free(AmiSSLBase, (p))

void * __ASN1_SCTX_get_app_data(__reg("a6") struct Library * , __reg("a0") ASN1_SCTX * p ) = "\tjsr\t-24360(a6)";
#define ASN1_SCTX_get_app_data(p) __ASN1_SCTX_get_app_data(AmiSSLBase, (p))

unsigned long __ASN1_SCTX_get_flags(__reg("a6") struct Library * , __reg("a0") ASN1_SCTX * p ) = "\tjsr\t-24366(a6)";
#define ASN1_SCTX_get_flags(p) __ASN1_SCTX_get_flags(AmiSSLBase, (p))

const ASN1_ITEM * __ASN1_SCTX_get_item(__reg("a6") struct Library * , __reg("a0") ASN1_SCTX * p ) = "\tjsr\t-24372(a6)";
#define ASN1_SCTX_get_item(p) __ASN1_SCTX_get_item(AmiSSLBase, (p))

const ASN1_TEMPLATE * __ASN1_SCTX_get_template(__reg("a6") struct Library * , __reg("a0") ASN1_SCTX * p ) = "\tjsr\t-24378(a6)";
#define ASN1_SCTX_get_template(p) __ASN1_SCTX_get_template(AmiSSLBase, (p))

ASN1_SCTX * __ASN1_SCTX_new(__reg("a6") struct Library * , __reg("a0") int (*scan_cb)(ASN1_SCTX *) ) = "\tjsr\t-24384(a6)";
#define ASN1_SCTX_new(scan_cb) __ASN1_SCTX_new(AmiSSLBase, (scan_cb))

void __ASN1_SCTX_set_app_data(__reg("a6") struct Library * , __reg("a0") ASN1_SCTX * p , __reg("a1") void * data ) = "\tjsr\t-24390(a6)";
#define ASN1_SCTX_set_app_data(p, data) __ASN1_SCTX_set_app_data(AmiSSLBase, (p), (data))

int __ASN1_str2mask(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("a1") unsigned long * pmask ) = "\tjsr\t-24396(a6)";
#define ASN1_str2mask(str, pmask) __ASN1_str2mask(AmiSSLBase, (str), (pmask))

ASN1_TYPE * __ASN1_TYPE_pack_sequence(__reg("a6") struct Library * , __reg("a0") const ASN1_ITEM * it , __reg("a1") void * s , __reg("a2") ASN1_TYPE ** t ) = "\tjsr\t-24402(a6)";
#define ASN1_TYPE_pack_sequence(it, s, t) __ASN1_TYPE_pack_sequence(AmiSSLBase, (it), (s), (t))

void * __ASN1_TYPE_unpack_sequence(__reg("a6") struct Library * , __reg("a0") const ASN1_ITEM * it , __reg("a1") const ASN1_TYPE * t ) = "\tjsr\t-24408(a6)";
#define ASN1_TYPE_unpack_sequence(it, t) __ASN1_TYPE_unpack_sequence(AmiSSLBase, (it), (t))

void __ASYNC_block_pause(__reg("a6") struct Library * ) = "\tjsr\t-24414(a6)";
#define ASYNC_block_pause() __ASYNC_block_pause(AmiSSLBase)

void __ASYNC_cleanup_thread(__reg("a6") struct Library * ) = "\tjsr\t-24420(a6)";
#define ASYNC_cleanup_thread() __ASYNC_cleanup_thread(AmiSSLBase)

ASYNC_JOB * __ASYNC_get_current_job(__reg("a6") struct Library * ) = "\tjsr\t-24432(a6)";
#define ASYNC_get_current_job() __ASYNC_get_current_job(AmiSSLBase)

int __ASYNC_init_thread(__reg("a6") struct Library * , __reg("d0") size_t max_size , __reg("d1") size_t init_size ) = "\tjsr\t-24444(a6)";
#define ASYNC_init_thread(max_size, init_size) __ASYNC_init_thread(AmiSSLBase, (max_size), (init_size))

int __ASYNC_pause_job(__reg("a6") struct Library * ) = "\tjsr\t-24450(a6)";
#define ASYNC_pause_job() __ASYNC_pause_job(AmiSSLBase)

int __ASYNC_start_job(__reg("a6") struct Library * , __reg("a0") ASYNC_JOB ** job , __reg("a1") ASYNC_WAIT_CTX * ctx , __reg("a2") int * ret , __reg("a3") int (*func)(void *) , __reg("d0") void * args , __reg("d1") size_t size ) = "\tjsr\t-24456(a6)";
#define ASYNC_start_job(job, ctx, ret, func, args, size) __ASYNC_start_job(AmiSSLBase, (job), (ctx), (ret), (func), (args), (size))

void __ASYNC_unblock_pause(__reg("a6") struct Library * ) = "\tjsr\t-24462(a6)";
#define ASYNC_unblock_pause() __ASYNC_unblock_pause(AmiSSLBase)

int __ERR_load_ASYNC_strings(__reg("a6") struct Library * ) = "\tjsr\t-24474(a6)";
#define ERR_load_ASYNC_strings() __ERR_load_ASYNC_strings(AmiSSLBase)

int __BIO_accept_ex(__reg("a6") struct Library * , __reg("d0") int accept_sock , __reg("a0") BIO_ADDR * addr , __reg("d1") int options ) = "\tjsr\t-24480(a6)";
#define BIO_accept_ex(accept_sock, addr, options) __BIO_accept_ex(AmiSSLBase, (accept_sock), (addr), (options))

void __BIO_ADDR_clear(__reg("a6") struct Library * , __reg("a0") BIO_ADDR * ap ) = "\tjsr\t-24486(a6)";
#define BIO_ADDR_clear(ap) __BIO_ADDR_clear(AmiSSLBase, (ap))

int __BIO_ADDR_family(__reg("a6") struct Library * , __reg("a0") const BIO_ADDR * ap ) = "\tjsr\t-24492(a6)";
#define BIO_ADDR_family(ap) __BIO_ADDR_family(AmiSSLBase, (ap))

void __BIO_ADDR_free(__reg("a6") struct Library * , __reg("a0") BIO_ADDR * ap ) = "\tjsr\t-24498(a6)";
#define BIO_ADDR_free(ap) __BIO_ADDR_free(AmiSSLBase, (ap))

char * __BIO_ADDR_hostname_string(__reg("a6") struct Library * , __reg("a0") const BIO_ADDR * ap , __reg("a1") int numeric ) = "\tjsr\t-24504(a6)";
#define BIO_ADDR_hostname_string(ap, numeric) __BIO_ADDR_hostname_string(AmiSSLBase, (ap), (numeric))

BIO_ADDR * __BIO_ADDR_new(__reg("a6") struct Library * ) = "\tjsr\t-24510(a6)";
#define BIO_ADDR_new() __BIO_ADDR_new(AmiSSLBase)

char * __BIO_ADDR_path_string(__reg("a6") struct Library * , __reg("a0") const BIO_ADDR * ap ) = "\tjsr\t-24516(a6)";
#define BIO_ADDR_path_string(ap) __BIO_ADDR_path_string(AmiSSLBase, (ap))

int __BIO_ADDR_rawaddress(__reg("a6") struct Library * , __reg("a0") const BIO_ADDR * ap , __reg("a1") void * p , __reg("a2") size_t * l ) = "\tjsr\t-24522(a6)";
#define BIO_ADDR_rawaddress(ap, p, l) __BIO_ADDR_rawaddress(AmiSSLBase, (ap), (p), (l))

int __BIO_ADDR_rawmake(__reg("a6") struct Library * , __reg("a0") BIO_ADDR * ap , __reg("d0") int family , __reg("a1") const void * where , __reg("d1") size_t wherelen , __reg("d2") unsigned short port ) = "\tjsr\t-24528(a6)";
#define BIO_ADDR_rawmake(ap, family, where, wherelen, port) __BIO_ADDR_rawmake(AmiSSLBase, (ap), (family), (where), (wherelen), (port))

unsigned short __BIO_ADDR_rawport(__reg("a6") struct Library * , __reg("a0") const BIO_ADDR * ap ) = "\tjsr\t-24534(a6)";
#define BIO_ADDR_rawport(ap) __BIO_ADDR_rawport(AmiSSLBase, (ap))

char * __BIO_ADDR_service_string(__reg("a6") struct Library * , __reg("a0") const BIO_ADDR * ap , __reg("d0") int numeric ) = "\tjsr\t-24540(a6)";
#define BIO_ADDR_service_string(ap, numeric) __BIO_ADDR_service_string(AmiSSLBase, (ap), (numeric))

const BIO_ADDR * __BIO_ADDRINFO_address(__reg("a6") struct Library * , __reg("a0") const BIO_ADDRINFO * bai ) = "\tjsr\t-24546(a6)";
#define BIO_ADDRINFO_address(bai) __BIO_ADDRINFO_address(AmiSSLBase, (bai))

int __BIO_ADDRINFO_family(__reg("a6") struct Library * , __reg("a0") const BIO_ADDRINFO * bai ) = "\tjsr\t-24552(a6)";
#define BIO_ADDRINFO_family(bai) __BIO_ADDRINFO_family(AmiSSLBase, (bai))

void __BIO_ADDRINFO_free(__reg("a6") struct Library * , __reg("a0") BIO_ADDRINFO * bai ) = "\tjsr\t-24558(a6)";
#define BIO_ADDRINFO_free(bai) __BIO_ADDRINFO_free(AmiSSLBase, (bai))

const BIO_ADDRINFO * __BIO_ADDRINFO_next(__reg("a6") struct Library * , __reg("a0") const BIO_ADDRINFO * bai ) = "\tjsr\t-24564(a6)";
#define BIO_ADDRINFO_next(bai) __BIO_ADDRINFO_next(AmiSSLBase, (bai))

int __BIO_ADDRINFO_protocol(__reg("a6") struct Library * , __reg("a0") const BIO_ADDRINFO * bai ) = "\tjsr\t-24570(a6)";
#define BIO_ADDRINFO_protocol(bai) __BIO_ADDRINFO_protocol(AmiSSLBase, (bai))

int __BIO_ADDRINFO_socktype(__reg("a6") struct Library * , __reg("a0") const BIO_ADDRINFO * bai ) = "\tjsr\t-24576(a6)";
#define BIO_ADDRINFO_socktype(bai) __BIO_ADDRINFO_socktype(AmiSSLBase, (bai))

int __BIO_closesocket(__reg("a6") struct Library * , __reg("d0") int sock ) = "\tjsr\t-24582(a6)";
#define BIO_closesocket(sock) __BIO_closesocket(AmiSSLBase, (sock))

int __BIO_connect(__reg("a6") struct Library * , __reg("d0") int sock , __reg("a0") const BIO_ADDR * addr , __reg("d1") int options ) = "\tjsr\t-24588(a6)";
#define BIO_connect(sock, addr, options) __BIO_connect(AmiSSLBase, (sock), (addr), (options))

int __BIO_listen(__reg("a6") struct Library * , __reg("d0") int sock , __reg("a0") const BIO_ADDR * addr , __reg("d1") int options ) = "\tjsr\t-24594(a6)";
#define BIO_listen(sock, addr, options) __BIO_listen(AmiSSLBase, (sock), (addr), (options))

int __BIO_lookup(__reg("a6") struct Library * , __reg("a0") const char * host , __reg("a1") const char * service , __reg("d0") enum BIO_lookup_type lookup_type , __reg("d1") int family , __reg("d2") int socktype , __reg("a2") BIO_ADDRINFO ** res ) = "\tjsr\t-24600(a6)";
#define BIO_lookup(host, service, lookup_type, family, socktype, res) __BIO_lookup(AmiSSLBase, (host), (service), (lookup_type), (family), (socktype), (res))

int __BIO_parse_hostserv(__reg("a6") struct Library * , __reg("a0") const char * hostserv , __reg("a1") char ** host , __reg("a2") char ** service , __reg("d0") enum BIO_hostserv_priorities hostserv_prio ) = "\tjsr\t-24606(a6)";
#define BIO_parse_hostserv(hostserv, host, service, hostserv_prio) __BIO_parse_hostserv(AmiSSLBase, (hostserv), (host), (service), (hostserv_prio))

const BIO_METHOD * __BIO_s_secmem(__reg("a6") struct Library * ) = "\tjsr\t-24612(a6)";
#define BIO_s_secmem() __BIO_s_secmem(AmiSSLBase)

int __BIO_sock_info(__reg("a6") struct Library * , __reg("d0") int sock , __reg("d1") enum BIO_sock_info_type type , __reg("a0") union BIO_sock_info_u * info ) = "\tjsr\t-24618(a6)";
#define BIO_sock_info(sock, type, info) __BIO_sock_info(AmiSSLBase, (sock), (type), (info))

int __BIO_socket(__reg("a6") struct Library * , __reg("d0") int domain , __reg("d1") int socktype , __reg("d2") int protocol , __reg("d3") int options ) = "\tjsr\t-24624(a6)";
#define BIO_socket(domain, socktype, protocol, options) __BIO_socket(AmiSSLBase, (domain), (socktype), (protocol), (options))

int __BN_abs_is_word(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("d0") const BN_ULONG w ) = "\tjsr\t-24630(a6)";
#define BN_abs_is_word(a, w) __BN_abs_is_word(AmiSSLBase, (a), (w))

int __BN_bn2binpad(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("a1") unsigned char * to , __reg("d0") int tolen ) = "\tjsr\t-24636(a6)";
#define BN_bn2binpad(a, to, tolen) __BN_bn2binpad(AmiSSLBase, (a), (to), (tolen))

int __BN_bn2lebinpad(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("a1") unsigned char * to , __reg("d0") int tolen ) = "\tjsr\t-24642(a6)";
#define BN_bn2lebinpad(a, to, tolen) __BN_bn2lebinpad(AmiSSLBase, (a), (to), (tolen))

BN_CTX * __BN_CTX_secure_new(__reg("a6") struct Library * ) = "\tjsr\t-24648(a6)";
#define BN_CTX_secure_new() __BN_CTX_secure_new(AmiSSLBase)

void __BN_GENCB_free(__reg("a6") struct Library * , __reg("a0") BN_GENCB * cb ) = "\tjsr\t-24654(a6)";
#define BN_GENCB_free(cb) __BN_GENCB_free(AmiSSLBase, (cb))

void * __BN_GENCB_get_arg(__reg("a6") struct Library * , __reg("a0") BN_GENCB * cb ) = "\tjsr\t-24660(a6)";
#define BN_GENCB_get_arg(cb) __BN_GENCB_get_arg(AmiSSLBase, (cb))

BN_GENCB * __BN_GENCB_new(__reg("a6") struct Library * ) = "\tjsr\t-24666(a6)";
#define BN_GENCB_new() __BN_GENCB_new(AmiSSLBase)

void __BN_GENCB_set(__reg("a6") struct Library * , __reg("a0") BN_GENCB * gencb , __reg("a1") int (*callback)(int,int,BN_GENCB *) , __reg("a2") void * cb_arg ) = "\tjsr\t-24672(a6)";
#define BN_GENCB_set(gencb, callback, cb_arg) __BN_GENCB_set(AmiSSLBase, (gencb), (callback), (cb_arg))

void __BN_GENCB_set_old(__reg("a6") struct Library * , __reg("a0") BN_GENCB * gencb , __reg("a1") void (*callback)(int,int,void *) , __reg("a2") void * cb_arg ) = "\tjsr\t-24678(a6)";
#define BN_GENCB_set_old(gencb, callback, cb_arg) __BN_GENCB_set_old(AmiSSLBase, (gencb), (callback), (cb_arg))

int __BN_generate_dsa_nonce(__reg("a6") struct Library * , __reg("a0") BIGNUM * out , __reg("a1") const BIGNUM * range , __reg("a2") const BIGNUM * priv , __reg("a3") const unsigned char * message , __reg("d0") size_t message_len , __reg("d1") BN_CTX * ctx ) = "\tjsr\t-24684(a6)";
#define BN_generate_dsa_nonce(out, range, priv, message, message_len, ctx) __BN_generate_dsa_nonce(AmiSSLBase, (out), (range), (priv), (message), (message_len), (ctx))

int __BN_get_flags(__reg("a6") struct Library * , __reg("a0") const BIGNUM * b , __reg("d0") int n ) = "\tjsr\t-24690(a6)";
#define BN_get_flags(b, n) __BN_get_flags(AmiSSLBase, (b), (n))

int __BN_is_negative(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a ) = "\tjsr\t-24696(a6)";
#define BN_is_negative(a) __BN_is_negative(AmiSSLBase, (a))

int __BN_is_odd(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a ) = "\tjsr\t-24702(a6)";
#define BN_is_odd(a) __BN_is_odd(AmiSSLBase, (a))

int __BN_is_one(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a ) = "\tjsr\t-24708(a6)";
#define BN_is_one(a) __BN_is_one(AmiSSLBase, (a))

int __BN_is_word(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("d0") const BN_ULONG w ) = "\tjsr\t-24714(a6)";
#define BN_is_word(a, w) __BN_is_word(AmiSSLBase, (a), (w))

int __BN_is_zero(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a ) = "\tjsr\t-24720(a6)";
#define BN_is_zero(a) __BN_is_zero(AmiSSLBase, (a))

BIGNUM * __BN_lebin2bn(__reg("a6") struct Library * , __reg("a0") const unsigned char * s , __reg("d0") int len , __reg("a1") BIGNUM * ret ) = "\tjsr\t-24726(a6)";
#define BN_lebin2bn(s, len, ret) __BN_lebin2bn(AmiSSLBase, (s), (len), (ret))

int  (* __BN_nist_mod_func(__reg("a6") struct Library * , __reg("a0") const BIGNUM * p ) )(BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *) =  "\tjsr\t-24732(a6)";
#define BN_nist_mod_func(p) __BN_nist_mod_func(AmiSSLBase, (p))

BIGNUM * __BN_secure_new(__reg("a6") struct Library * ) = "\tjsr\t-24738(a6)";
#define BN_secure_new() __BN_secure_new(AmiSSLBase)

int __BN_security_bits(__reg("a6") struct Library * , __reg("d0") int L , __reg("d1") int N ) = "\tjsr\t-24744(a6)";
#define BN_security_bits(L, N) __BN_security_bits(AmiSSLBase, (L), (N))

void __BN_set_flags(__reg("a6") struct Library * , __reg("a0") BIGNUM * b , __reg("d0") int n ) = "\tjsr\t-24750(a6)";
#define BN_set_flags(b, n) __BN_set_flags(AmiSSLBase, (b), (n))

int __BN_to_montgomery(__reg("a6") struct Library * , __reg("a0") BIGNUM * r , __reg("a1") const BIGNUM * a , __reg("a2") BN_MONT_CTX * mont , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-24756(a6)";
#define BN_to_montgomery(r, a, mont, ctx) __BN_to_montgomery(AmiSSLBase, (r), (a), (mont), (ctx))

void __BN_with_flags(__reg("a6") struct Library * , __reg("a0") BIGNUM * dest , __reg("a1") const BIGNUM * b , __reg("d0") int flags ) = "\tjsr\t-24762(a6)";
#define BN_with_flags(dest, b, flags) __BN_with_flags(AmiSSLBase, (dest), (b), (flags))

void __BN_zero_ex(__reg("a6") struct Library * , __reg("a0") BIGNUM * a ) = "\tjsr\t-24768(a6)";
#define BN_zero_ex(a) __BN_zero_ex(AmiSSLBase, (a))

BUF_MEM * __BUF_MEM_new_ex(__reg("a6") struct Library * , __reg("d0") unsigned long flags ) = "\tjsr\t-24774(a6)";
#define BUF_MEM_new_ex(flags) __BUF_MEM_new_ex(AmiSSLBase, (flags))

const COMP_METHOD * __COMP_CTX_get_method(__reg("a6") struct Library * , __reg("a0") const COMP_CTX * ctx ) = "\tjsr\t-24780(a6)";
#define COMP_CTX_get_method(ctx) __COMP_CTX_get_method(AmiSSLBase, (ctx))

int __COMP_CTX_get_type(__reg("a6") struct Library * , __reg("a0") const COMP_CTX * ctx ) = "\tjsr\t-24786(a6)";
#define COMP_CTX_get_type(ctx) __COMP_CTX_get_type(AmiSSLBase, (ctx))

const char * __COMP_get_name(__reg("a6") struct Library * , __reg("a0") const COMP_METHOD * meth ) = "\tjsr\t-24792(a6)";
#define COMP_get_name(meth) __COMP_get_name(AmiSSLBase, (meth))

int __COMP_get_type(__reg("a6") struct Library * , __reg("a0") const COMP_METHOD * meth ) = "\tjsr\t-24798(a6)";
#define COMP_get_type(meth) __COMP_get_type(AmiSSLBase, (meth))

void __CRYPTO_clear_free(__reg("a6") struct Library * , __reg("a0") void * str , __reg("d0") size_t num , __reg("a1") const char * file , __reg("d1") int line ) = "\tjsr\t-24804(a6)";
#define CRYPTO_clear_free(str, num, file, line) __CRYPTO_clear_free(AmiSSLBase, (str), (num), (file), (line))

void * __CRYPTO_clear_realloc(__reg("a6") struct Library * , __reg("a0") void * str , __reg("d0") size_t old_len , __reg("d1") size_t num , __reg("a1") const char * file , __reg("d2") int line ) = "\tjsr\t-24810(a6)";
#define CRYPTO_clear_realloc(str, old_len, num, file, line) __CRYPTO_clear_realloc(AmiSSLBase, (str), (old_len), (num), (file), (line))

int __CRYPTO_free_ex_index(__reg("a6") struct Library * , __reg("d0") int class_index , __reg("d1") int idx ) = "\tjsr\t-24816(a6)";
#define CRYPTO_free_ex_index(class_index, idx) __CRYPTO_free_ex_index(AmiSSLBase, (class_index), (idx))

void * __CRYPTO_memdup(__reg("a6") struct Library * , __reg("a0") const void * data , __reg("d0") size_t siz , __reg("a1") const char * file , __reg("d1") int line ) = "\tjsr\t-24822(a6)";
#define CRYPTO_memdup(data, siz, file, line) __CRYPTO_memdup(AmiSSLBase, (data), (siz), (file), (line))

size_t __CRYPTO_secure_actual_size(__reg("a6") struct Library * , __reg("a0") void * ptr ) = "\tjsr\t-24828(a6)";
#define CRYPTO_secure_actual_size(ptr) __CRYPTO_secure_actual_size(AmiSSLBase, (ptr))

int __CRYPTO_secure_allocated(__reg("a6") struct Library * , __reg("a0") const void * ptr ) = "\tjsr\t-24834(a6)";
#define CRYPTO_secure_allocated(ptr) __CRYPTO_secure_allocated(AmiSSLBase, (ptr))

void __CRYPTO_secure_free(__reg("a6") struct Library * , __reg("a0") void * ptr , __reg("a1") const char * file , __reg("d0") int line ) = "\tjsr\t-24840(a6)";
#define CRYPTO_secure_free(ptr, file, line) __CRYPTO_secure_free(AmiSSLBase, (ptr), (file), (line))

void * __CRYPTO_secure_malloc(__reg("a6") struct Library * , __reg("d0") size_t num , __reg("a0") const char * file , __reg("d1") int line ) = "\tjsr\t-24846(a6)";
#define CRYPTO_secure_malloc(num, file, line) __CRYPTO_secure_malloc(AmiSSLBase, (num), (file), (line))

int __CRYPTO_secure_malloc_done(__reg("a6") struct Library * ) = "\tjsr\t-24852(a6)";
#define CRYPTO_secure_malloc_done() __CRYPTO_secure_malloc_done(AmiSSLBase)

int __CRYPTO_secure_malloc_init(__reg("a6") struct Library * , __reg("d0") size_t sz , __reg("d1") size_t minsize ) = "\tjsr\t-24858(a6)";
#define CRYPTO_secure_malloc_init(sz, minsize) __CRYPTO_secure_malloc_init(AmiSSLBase, (sz), (minsize))

int __CRYPTO_secure_malloc_initialized(__reg("a6") struct Library * ) = "\tjsr\t-24864(a6)";
#define CRYPTO_secure_malloc_initialized() __CRYPTO_secure_malloc_initialized(AmiSSLBase)

size_t __CRYPTO_secure_used(__reg("a6") struct Library * ) = "\tjsr\t-24870(a6)";
#define CRYPTO_secure_used() __CRYPTO_secure_used(AmiSSLBase)

void * __CRYPTO_secure_zalloc(__reg("a6") struct Library * , __reg("d0") size_t num , __reg("a0") const char * file , __reg("d1") int line ) = "\tjsr\t-24876(a6)";
#define CRYPTO_secure_zalloc(num, file, line) __CRYPTO_secure_zalloc(AmiSSLBase, (num), (file), (line))

char * __CRYPTO_strndup(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("d0") size_t s , __reg("a1") const char * file , __reg("d1") int line ) = "\tjsr\t-24888(a6)";
#define CRYPTO_strndup(str, s, file, line) __CRYPTO_strndup(AmiSSLBase, (str), (s), (file), (line))

void * __CRYPTO_zalloc(__reg("a6") struct Library * , __reg("d0") size_t num , __reg("a0") const char * file , __reg("d1") int line ) = "\tjsr\t-24894(a6)";
#define CRYPTO_zalloc(num, file, line) __CRYPTO_zalloc(AmiSSLBase, (num), (file), (line))

int __OPENSSL_atexit(__reg("a6") struct Library * , __reg("a0") void (*handler)(void) ) = "\tjsr\t-24900(a6)";
#define OPENSSL_atexit(handler) __OPENSSL_atexit(AmiSSLBase, (handler))

void __OPENSSL_cleanup(__reg("a6") struct Library * ) = "\tjsr\t-24906(a6)";
#define OPENSSL_cleanup() __OPENSSL_cleanup(AmiSSLBase)

int __OPENSSL_init_crypto(__reg("a6") struct Library * , __reg("d0/d1") uint64_t opts , __reg("a0") const OPENSSL_INIT_SETTINGS * settings ) = "\tjsr\t-24912(a6)";
#define OPENSSL_init_crypto(opts, settings) __OPENSSL_init_crypto(AmiSSLBase, (opts), (settings))

void __OPENSSL_INIT_free(__reg("a6") struct Library * , __reg("a0") OPENSSL_INIT_SETTINGS * settings ) = "\tjsr\t-24918(a6)";
#define OPENSSL_INIT_free(settings) __OPENSSL_INIT_free(AmiSSLBase, (settings))

OPENSSL_INIT_SETTINGS * __OPENSSL_INIT_new(__reg("a6") struct Library * ) = "\tjsr\t-24924(a6)";
#define OPENSSL_INIT_new() __OPENSSL_INIT_new(AmiSSLBase)

size_t __OPENSSL_strlcat(__reg("a6") struct Library * , __reg("a0") char * dst , __reg("a1") const char * src , __reg("d0") size_t size ) = "\tjsr\t-24936(a6)";
#define OPENSSL_strlcat(dst, src, size) __OPENSSL_strlcat(AmiSSLBase, (dst), (src), (size))

size_t __OPENSSL_strlcpy(__reg("a6") struct Library * , __reg("a0") char * dst , __reg("a1") const char * src , __reg("d0") size_t size ) = "\tjsr\t-24942(a6)";
#define OPENSSL_strlcpy(dst, src, size) __OPENSSL_strlcpy(AmiSSLBase, (dst), (src), (size))

size_t __OPENSSL_strnlen(__reg("a6") struct Library * , __reg("a0") const char * str , __reg("d0") size_t maxlen ) = "\tjsr\t-24948(a6)";
#define OPENSSL_strnlen(str, maxlen) __OPENSSL_strnlen(AmiSSLBase, (str), (maxlen))

void __OPENSSL_thread_stop(__reg("a6") struct Library * ) = "\tjsr\t-24954(a6)";
#define OPENSSL_thread_stop() __OPENSSL_thread_stop(AmiSSLBase)

const char * __OpenSSL_version(__reg("a6") struct Library * , __reg("d0") int type ) = "\tjsr\t-24960(a6)";
#define OpenSSL_version(type) __OpenSSL_version(AmiSSLBase, (type))

unsigned long __OpenSSL_version_num(__reg("a6") struct Library * ) = "\tjsr\t-24966(a6)";
#define OpenSSL_version_num() __OpenSSL_version_num(AmiSSLBase)

int __DH_bits(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-24972(a6)";
#define DH_bits(dh) __DH_bits(AmiSSLBase, (dh))

int __DH_security_bits(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-24978(a6)";
#define DH_security_bits(dh) __DH_security_bits(AmiSSLBase, (dh))

int __DSA_security_bits(__reg("a6") struct Library * , __reg("a0") const DSA * d ) = "\tjsr\t-24984(a6)";
#define DSA_security_bits(d) __DSA_security_bits(AmiSSLBase, (d))

const BIGNUM * __EC_GROUP_get0_cofactor(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group ) = "\tjsr\t-24990(a6)";
#define EC_GROUP_get0_cofactor(group) __EC_GROUP_get0_cofactor(AmiSSLBase, (group))

const BIGNUM * __EC_GROUP_get0_order(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group ) = "\tjsr\t-24996(a6)";
#define EC_GROUP_get0_order(group) __EC_GROUP_get0_order(AmiSSLBase, (group))

int __EC_GROUP_order_bits(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group ) = "\tjsr\t-25002(a6)";
#define EC_GROUP_order_bits(group) __EC_GROUP_order_bits(AmiSSLBase, (group))

const EC_KEY_METHOD * __EC_KEY_get_default_method(__reg("a6") struct Library * ) = "\tjsr\t-25008(a6)";
#define EC_KEY_get_default_method() __EC_KEY_get_default_method(AmiSSLBase)

void * __EC_KEY_get_ex_data(__reg("a6") struct Library * , __reg("a0") const EC_KEY * key , __reg("d0") int idx ) = "\tjsr\t-25014(a6)";
#define EC_KEY_get_ex_data(key, idx) __EC_KEY_get_ex_data(AmiSSLBase, (key), (idx))

const EC_KEY_METHOD * __EC_KEY_get_method(__reg("a6") struct Library * , __reg("a0") const EC_KEY * key ) = "\tjsr\t-25020(a6)";
#define EC_KEY_get_method(key) __EC_KEY_get_method(AmiSSLBase, (key))

size_t __EC_KEY_key2buf(__reg("a6") struct Library * , __reg("a0") const EC_KEY * key , __reg("d0") point_conversion_form_t form , __reg("a1") unsigned char ** pbuf , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-25026(a6)";
#define EC_KEY_key2buf(key, form, pbuf, ctx) __EC_KEY_key2buf(AmiSSLBase, (key), (form), (pbuf), (ctx))

void __EC_KEY_METHOD_free(__reg("a6") struct Library * , __reg("a0") EC_KEY_METHOD * meth ) = "\tjsr\t-25032(a6)";
#define EC_KEY_METHOD_free(meth) __EC_KEY_METHOD_free(AmiSSLBase, (meth))

void __EC_KEY_METHOD_get_compute_key(__reg("a6") struct Library * , __reg("a0") const EC_KEY_METHOD * meth , __reg("a1") int (**pck)(unsigned char **,size_t *,const EC_POINT *,const EC_KEY *) ) = "\tjsr\t-25038(a6)";
#define EC_KEY_METHOD_get_compute_key(meth, pck) __EC_KEY_METHOD_get_compute_key(AmiSSLBase, (meth), (pck))

void __EC_KEY_METHOD_get_init(__reg("a6") struct Library * , __reg("a0") const EC_KEY_METHOD * meth , __reg("a1") int (**pinit)(EC_KEY *) , __reg("a2") void (**pfinish)(EC_KEY *) , __reg("a3") int (**pcopy)(EC_KEY *,const EC_KEY *) , __reg("d0") int (**pset_group)(EC_KEY *,const EC_GROUP *) , __reg("d1") int (**pset_private)(EC_KEY *,const BIGNUM *) , __reg("d2") int (**pset_public)(EC_KEY *,const EC_POINT *) ) = "\tjsr\t-25044(a6)";
#define EC_KEY_METHOD_get_init(meth, pinit, pfinish, pcopy, pset_group, pset_private, pset_public) __EC_KEY_METHOD_get_init(AmiSSLBase, (meth), (pinit), (pfinish), (pcopy), (pset_group), (pset_private), (pset_public))

void __EC_KEY_METHOD_get_keygen(__reg("a6") struct Library * , __reg("a0") const EC_KEY_METHOD * meth , __reg("a1") int (**pkeygen)(EC_KEY *) ) = "\tjsr\t-25050(a6)";
#define EC_KEY_METHOD_get_keygen(meth, pkeygen) __EC_KEY_METHOD_get_keygen(AmiSSLBase, (meth), (pkeygen))

void __EC_KEY_METHOD_get_sign(__reg("a6") struct Library * , __reg("a0") const EC_KEY_METHOD * meth , __reg("a1") int (**psign)(int,const unsigned char *,int,unsigned char *,unsigned int *,const BIGNUM *,const BIGNUM *,EC_KEY *) , __reg("a2") int (**psign_setup)(EC_KEY *,BN_CTX *,BIGNUM **,BIGNUM **) , __reg("a3") ECDSA_SIG * (**psign_sig)(const unsigned char *,int,const BIGNUM *,const BIGNUM *,EC_KEY *) ) = "\tjsr\t-25056(a6)";
#define EC_KEY_METHOD_get_sign(meth, psign, psign_setup, psign_sig) __EC_KEY_METHOD_get_sign(AmiSSLBase, (meth), (psign), (psign_setup), (psign_sig))

void __EC_KEY_METHOD_get_verify(__reg("a6") struct Library * , __reg("a0") const EC_KEY_METHOD * meth , __reg("a1") int (**pverify)(int,const unsigned char *,int,const unsigned char *,int,EC_KEY *) , __reg("a2") int (**pverify_sig)(const unsigned char *,int,const ECDSA_SIG *,EC_KEY *) ) = "\tjsr\t-25062(a6)";
#define EC_KEY_METHOD_get_verify(meth, pverify, pverify_sig) __EC_KEY_METHOD_get_verify(AmiSSLBase, (meth), (pverify), (pverify_sig))

EC_KEY_METHOD * __EC_KEY_METHOD_new(__reg("a6") struct Library * , __reg("a0") const EC_KEY_METHOD * meth ) = "\tjsr\t-25068(a6)";
#define EC_KEY_METHOD_new(meth) __EC_KEY_METHOD_new(AmiSSLBase, (meth))

void __EC_KEY_METHOD_set_compute_key(__reg("a6") struct Library * , __reg("a0") EC_KEY_METHOD * meth , __reg("a1") int (*ckey)(unsigned char **,size_t *,const EC_POINT *,const EC_KEY *) ) = "\tjsr\t-25074(a6)";
#define EC_KEY_METHOD_set_compute_key(meth, ckey) __EC_KEY_METHOD_set_compute_key(AmiSSLBase, (meth), (ckey))

void __EC_KEY_METHOD_set_init(__reg("a6") struct Library * , __reg("a0") EC_KEY_METHOD * meth , __reg("a1") int (*init)(EC_KEY *) , __reg("a2") void (*finish)(EC_KEY *) , __reg("a3") int (*copy)(EC_KEY *,const EC_KEY *) , __reg("d0") int (*set_group)(EC_KEY *,const EC_GROUP *) , __reg("d1") int (*set_private)(EC_KEY *,const BIGNUM *) , __reg("d2") int (*set_public)(EC_KEY *,const EC_POINT *) ) = "\tjsr\t-25080(a6)";
#define EC_KEY_METHOD_set_init(meth, init, finish, copy, set_group, set_private, set_public) __EC_KEY_METHOD_set_init(AmiSSLBase, (meth), (init), (finish), (copy), (set_group), (set_private), (set_public))

void __EC_KEY_METHOD_set_keygen(__reg("a6") struct Library * , __reg("a0") EC_KEY_METHOD * meth , __reg("a1") int (*keygen)(EC_KEY *) ) = "\tjsr\t-25086(a6)";
#define EC_KEY_METHOD_set_keygen(meth, keygen) __EC_KEY_METHOD_set_keygen(AmiSSLBase, (meth), (keygen))

void __EC_KEY_METHOD_set_sign(__reg("a6") struct Library * , __reg("a0") EC_KEY_METHOD * meth , __reg("a1") int (*sign)(int,const unsigned char *,int,unsigned char *,unsigned int *,const BIGNUM *,const BIGNUM *,EC_KEY *) , __reg("a2") int (*sign_setup)(EC_KEY *,BN_CTX *,BIGNUM **,BIGNUM **) , __reg("a3") ECDSA_SIG * (*sign_sig)(const unsigned char *,int,const BIGNUM *,const BIGNUM *,EC_KEY *) ) = "\tjsr\t-25092(a6)";
#define EC_KEY_METHOD_set_sign(meth, sign, sign_setup, sign_sig) __EC_KEY_METHOD_set_sign(AmiSSLBase, (meth), (sign), (sign_setup), (sign_sig))

void __EC_KEY_METHOD_set_verify(__reg("a6") struct Library * , __reg("a0") EC_KEY_METHOD * meth , __reg("a1") int (*verify)(int,const unsigned char *,int,const unsigned char *,int,EC_KEY *) , __reg("a2") int (*verify_sig)(const unsigned char *,int,const ECDSA_SIG *,EC_KEY *) ) = "\tjsr\t-25098(a6)";
#define EC_KEY_METHOD_set_verify(meth, verify, verify_sig) __EC_KEY_METHOD_set_verify(AmiSSLBase, (meth), (verify), (verify_sig))

EC_KEY * __EC_KEY_new_method(__reg("a6") struct Library * , __reg("a0") ENGINE * engine ) = "\tjsr\t-25104(a6)";
#define EC_KEY_new_method(engine) __EC_KEY_new_method(AmiSSLBase, (engine))

int __EC_KEY_oct2key(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("a1") const unsigned char * buf , __reg("d0") size_t len , __reg("a2") BN_CTX * ctx ) = "\tjsr\t-25110(a6)";
#define EC_KEY_oct2key(key, buf, len, ctx) __EC_KEY_oct2key(AmiSSLBase, (key), (buf), (len), (ctx))

int __EC_KEY_oct2priv(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("a1") const unsigned char * buf , __reg("d0") size_t len ) = "\tjsr\t-25116(a6)";
#define EC_KEY_oct2priv(key, buf, len) __EC_KEY_oct2priv(AmiSSLBase, (key), (buf), (len))

const EC_KEY_METHOD * __EC_KEY_OpenSSL(__reg("a6") struct Library * ) = "\tjsr\t-25122(a6)";
#define EC_KEY_OpenSSL() __EC_KEY_OpenSSL(AmiSSLBase)

size_t __EC_KEY_priv2buf(__reg("a6") struct Library * , __reg("a0") const EC_KEY * eckey , __reg("a1") unsigned char ** pbuf ) = "\tjsr\t-25128(a6)";
#define EC_KEY_priv2buf(eckey, pbuf) __EC_KEY_priv2buf(AmiSSLBase, (eckey), (pbuf))

size_t __EC_KEY_priv2oct(__reg("a6") struct Library * , __reg("a0") const EC_KEY * eckey , __reg("a1") unsigned char * buf , __reg("d0") size_t len ) = "\tjsr\t-25134(a6)";
#define EC_KEY_priv2oct(eckey, buf, len) __EC_KEY_priv2oct(AmiSSLBase, (eckey), (buf), (len))

void __EC_KEY_set_default_method(__reg("a6") struct Library * , __reg("a0") const EC_KEY_METHOD * meth ) = "\tjsr\t-25140(a6)";
#define EC_KEY_set_default_method(meth) __EC_KEY_set_default_method(AmiSSLBase, (meth))

int __EC_KEY_set_ex_data(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("d0") int idx , __reg("a1") void * arg ) = "\tjsr\t-25146(a6)";
#define EC_KEY_set_ex_data(key, idx, arg) __EC_KEY_set_ex_data(AmiSSLBase, (key), (idx), (arg))

int __EC_KEY_set_method(__reg("a6") struct Library * , __reg("a0") EC_KEY * key , __reg("a1") const EC_KEY_METHOD * meth ) = "\tjsr\t-25152(a6)";
#define EC_KEY_set_method(key, meth) __EC_KEY_set_method(AmiSSLBase, (key), (meth))

size_t __EC_POINT_point2buf(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") const EC_POINT * point , __reg("d0") point_conversion_form_t form , __reg("a2") unsigned char ** pbuf , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-25158(a6)";
#define EC_POINT_point2buf(group, point, form, pbuf, ctx) __EC_POINT_point2buf(AmiSSLBase, (group), (point), (form), (pbuf), (ctx))

void __ECDSA_SIG_get0(__reg("a6") struct Library * , __reg("a0") const ECDSA_SIG * sig , __reg("a1") const BIGNUM ** pr , __reg("a2") const BIGNUM ** ps ) = "\tjsr\t-25164(a6)";
#define ECDSA_SIG_get0(sig, pr, ps) __ECDSA_SIG_get0(AmiSSLBase, (sig), (pr), (ps))

ENGINE * __ENGINE_get_default_EC(__reg("a6") struct Library * ) = "\tjsr\t-25170(a6)";
#define ENGINE_get_default_EC() __ENGINE_get_default_EC(AmiSSLBase)

const EC_KEY_METHOD * __ENGINE_get_EC(__reg("a6") struct Library * , __reg("a0") const ENGINE * e ) = "\tjsr\t-25176(a6)";
#define ENGINE_get_EC(e) __ENGINE_get_EC(AmiSSLBase, (e))

void __ENGINE_register_all_EC(__reg("a6") struct Library * ) = "\tjsr\t-25182(a6)";
#define ENGINE_register_all_EC() __ENGINE_register_all_EC(AmiSSLBase)

int __ENGINE_register_EC(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-25188(a6)";
#define ENGINE_register_EC(e) __ENGINE_register_EC(AmiSSLBase, (e))

int __ENGINE_set_default_EC(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-25194(a6)";
#define ENGINE_set_default_EC(e) __ENGINE_set_default_EC(AmiSSLBase, (e))

int __ENGINE_set_EC(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const EC_KEY_METHOD * ecdsa_meth ) = "\tjsr\t-25200(a6)";
#define ENGINE_set_EC(e, ecdsa_meth) __ENGINE_set_EC(AmiSSLBase, (e), (ecdsa_meth))

void __ENGINE_unregister_EC(__reg("a6") struct Library * , __reg("a0") ENGINE * e ) = "\tjsr\t-25206(a6)";
#define ENGINE_unregister_EC(e) __ENGINE_unregister_EC(AmiSSLBase, (e))

const EVP_CIPHER * __EVP_aes_128_ocb(__reg("a6") struct Library * ) = "\tjsr\t-25212(a6)";
#define EVP_aes_128_ocb() __EVP_aes_128_ocb(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_128_wrap_pad(__reg("a6") struct Library * ) = "\tjsr\t-25218(a6)";
#define EVP_aes_128_wrap_pad() __EVP_aes_128_wrap_pad(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_192_ocb(__reg("a6") struct Library * ) = "\tjsr\t-25224(a6)";
#define EVP_aes_192_ocb() __EVP_aes_192_ocb(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_192_wrap_pad(__reg("a6") struct Library * ) = "\tjsr\t-25230(a6)";
#define EVP_aes_192_wrap_pad() __EVP_aes_192_wrap_pad(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_ocb(__reg("a6") struct Library * ) = "\tjsr\t-25236(a6)";
#define EVP_aes_256_ocb() __EVP_aes_256_ocb(AmiSSLBase)

const EVP_CIPHER * __EVP_aes_256_wrap_pad(__reg("a6") struct Library * ) = "\tjsr\t-25242(a6)";
#define EVP_aes_256_wrap_pad() __EVP_aes_256_wrap_pad(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_128_ctr(__reg("a6") struct Library * ) = "\tjsr\t-25248(a6)";
#define EVP_camellia_128_ctr() __EVP_camellia_128_ctr(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_192_ctr(__reg("a6") struct Library * ) = "\tjsr\t-25254(a6)";
#define EVP_camellia_192_ctr() __EVP_camellia_192_ctr(AmiSSLBase)

const EVP_CIPHER * __EVP_camellia_256_ctr(__reg("a6") struct Library * ) = "\tjsr\t-25260(a6)";
#define EVP_camellia_256_ctr() __EVP_camellia_256_ctr(AmiSSLBase)

const EVP_CIPHER * __EVP_chacha20(__reg("a6") struct Library * ) = "\tjsr\t-25266(a6)";
#define EVP_chacha20() __EVP_chacha20(AmiSSLBase)

const EVP_CIPHER * __EVP_chacha20_poly1305(__reg("a6") struct Library * ) = "\tjsr\t-25272(a6)";
#define EVP_chacha20_poly1305() __EVP_chacha20_poly1305(AmiSSLBase)

unsigned char * __EVP_CIPHER_CTX_buf_noconst(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx ) = "\tjsr\t-25278(a6)";
#define EVP_CIPHER_CTX_buf_noconst(ctx) __EVP_CIPHER_CTX_buf_noconst(AmiSSLBase, (ctx))

void * __EVP_CIPHER_CTX_get_cipher_data(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-25284(a6)";
#define EVP_CIPHER_CTX_get_cipher_data(ctx) __EVP_CIPHER_CTX_get_cipher_data(AmiSSLBase, (ctx))

void * __EVP_CIPHER_CTX_set_cipher_data(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") void * cipher_data ) = "\tjsr\t-25290(a6)";
#define EVP_CIPHER_CTX_set_cipher_data(ctx, cipher_data) __EVP_CIPHER_CTX_set_cipher_data(AmiSSLBase, (ctx), (cipher_data))

int __EVP_CIPHER_CTX_is_encrypting(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-25296(a6)";
#define EVP_CIPHER_CTX_is_encrypting(ctx) __EVP_CIPHER_CTX_is_encrypting(AmiSSLBase, (ctx))

const unsigned char * __EVP_CIPHER_CTX_iv(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-25302(a6)";
#define EVP_CIPHER_CTX_iv(ctx) __EVP_CIPHER_CTX_iv(AmiSSLBase, (ctx))

unsigned char * __EVP_CIPHER_CTX_iv_noconst(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx ) = "\tjsr\t-25308(a6)";
#define EVP_CIPHER_CTX_iv_noconst(ctx) __EVP_CIPHER_CTX_iv_noconst(AmiSSLBase, (ctx))

int __EVP_CIPHER_CTX_get_num(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-25314(a6)";
#define EVP_CIPHER_CTX_get_num(ctx) __EVP_CIPHER_CTX_get_num(AmiSSLBase, (ctx))

const unsigned char * __EVP_CIPHER_CTX_original_iv(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER_CTX * ctx ) = "\tjsr\t-25320(a6)";
#define EVP_CIPHER_CTX_original_iv(ctx) __EVP_CIPHER_CTX_original_iv(AmiSSLBase, (ctx))

int __EVP_CIPHER_CTX_reset(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx ) = "\tjsr\t-25326(a6)";
#define EVP_CIPHER_CTX_reset(ctx) __EVP_CIPHER_CTX_reset(AmiSSLBase, (ctx))

int __EVP_CIPHER_CTX_set_num(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("d0") int num ) = "\tjsr\t-25332(a6)";
#define EVP_CIPHER_CTX_set_num(ctx, num) __EVP_CIPHER_CTX_set_num(AmiSSLBase, (ctx), (num))

int __EVP_CIPHER_impl_ctx_size(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) = "\tjsr\t-25338(a6)";
#define EVP_CIPHER_impl_ctx_size(cipher) __EVP_CIPHER_impl_ctx_size(AmiSSLBase, (cipher))

EVP_CIPHER * __EVP_CIPHER_meth_dup(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) = "\tjsr\t-25344(a6)";
#define EVP_CIPHER_meth_dup(cipher) __EVP_CIPHER_meth_dup(AmiSSLBase, (cipher))

void __EVP_CIPHER_meth_free(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER * cipher ) = "\tjsr\t-25350(a6)";
#define EVP_CIPHER_meth_free(cipher) __EVP_CIPHER_meth_free(AmiSSLBase, (cipher))

int  (* __EVP_CIPHER_meth_get_cleanup(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) )(EVP_CIPHER_CTX *) =  "\tjsr\t-25356(a6)";
#define EVP_CIPHER_meth_get_cleanup(cipher) __EVP_CIPHER_meth_get_cleanup(AmiSSLBase, (cipher))

int  (* __EVP_CIPHER_meth_get_ctrl(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) )(EVP_CIPHER_CTX *, int, int, void *) =  "\tjsr\t-25362(a6)";
#define EVP_CIPHER_meth_get_ctrl(cipher) __EVP_CIPHER_meth_get_ctrl(AmiSSLBase, (cipher))

int  (* __EVP_CIPHER_meth_get_do_cipher(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) )(EVP_CIPHER_CTX *, unsigned char *, const unsigned char *, size_t) =  "\tjsr\t-25368(a6)";
#define EVP_CIPHER_meth_get_do_cipher(cipher) __EVP_CIPHER_meth_get_do_cipher(AmiSSLBase, (cipher))

int  (* __EVP_CIPHER_meth_get_get_asn1_params(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) )(EVP_CIPHER_CTX *, ASN1_TYPE *) =  "\tjsr\t-25374(a6)";
#define EVP_CIPHER_meth_get_get_asn1_params(cipher) __EVP_CIPHER_meth_get_get_asn1_params(AmiSSLBase, (cipher))

int  (* __EVP_CIPHER_meth_get_init(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) )(EVP_CIPHER_CTX *, const unsigned char *, const unsigned char *, int) =  "\tjsr\t-25380(a6)";
#define EVP_CIPHER_meth_get_init(cipher) __EVP_CIPHER_meth_get_init(AmiSSLBase, (cipher))

int  (* __EVP_CIPHER_meth_get_set_asn1_params(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher ) )(EVP_CIPHER_CTX *, ASN1_TYPE *) =  "\tjsr\t-25386(a6)";
#define EVP_CIPHER_meth_get_set_asn1_params(cipher) __EVP_CIPHER_meth_get_set_asn1_params(AmiSSLBase, (cipher))

EVP_CIPHER * __EVP_CIPHER_meth_new(__reg("a6") struct Library * , __reg("d0") int cipher_type , __reg("d1") int block_size , __reg("d2") int key_len ) = "\tjsr\t-25392(a6)";
#define EVP_CIPHER_meth_new(cipher_type, block_size, key_len) __EVP_CIPHER_meth_new(AmiSSLBase, (cipher_type), (block_size), (key_len))

int __EVP_CIPHER_meth_set_cleanup(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER * cipher , __reg("a1") int (*cleanup)(EVP_CIPHER_CTX *) ) = "\tjsr\t-25398(a6)";
#define EVP_CIPHER_meth_set_cleanup(cipher, cleanup) __EVP_CIPHER_meth_set_cleanup(AmiSSLBase, (cipher), (cleanup))

int __EVP_CIPHER_meth_set_ctrl(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER * cipher , __reg("a1") int (*ctrl)(EVP_CIPHER_CTX *,int,int,void *) ) = "\tjsr\t-25404(a6)";
#define EVP_CIPHER_meth_set_ctrl(cipher, ctrl) __EVP_CIPHER_meth_set_ctrl(AmiSSLBase, (cipher), (ctrl))

int __EVP_CIPHER_meth_set_do_cipher(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER * cipher , __reg("a1") int (*do_cipher)(EVP_CIPHER_CTX *,unsigned char *,const unsigned char *,size_t) ) = "\tjsr\t-25410(a6)";
#define EVP_CIPHER_meth_set_do_cipher(cipher, do_cipher) __EVP_CIPHER_meth_set_do_cipher(AmiSSLBase, (cipher), (do_cipher))

int __EVP_CIPHER_meth_set_flags(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER * cipher , __reg("d0") unsigned long flags ) = "\tjsr\t-25416(a6)";
#define EVP_CIPHER_meth_set_flags(cipher, flags) __EVP_CIPHER_meth_set_flags(AmiSSLBase, (cipher), (flags))

int __EVP_CIPHER_meth_set_get_asn1_params(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER * cipher , __reg("a1") int (*get_asn1_parameters)(EVP_CIPHER_CTX *,ASN1_TYPE *) ) = "\tjsr\t-25422(a6)";
#define EVP_CIPHER_meth_set_get_asn1_params(cipher, get_asn1_parameters) __EVP_CIPHER_meth_set_get_asn1_params(AmiSSLBase, (cipher), (get_asn1_parameters))

int __EVP_CIPHER_meth_set_impl_ctx_size(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER * cipher , __reg("d0") int ctx_size ) = "\tjsr\t-25428(a6)";
#define EVP_CIPHER_meth_set_impl_ctx_size(cipher, ctx_size) __EVP_CIPHER_meth_set_impl_ctx_size(AmiSSLBase, (cipher), (ctx_size))

int __EVP_CIPHER_meth_set_init(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER * cipher , __reg("a1") int (*init)(EVP_CIPHER_CTX *,const unsigned char *,const unsigned char *,int) ) = "\tjsr\t-25434(a6)";
#define EVP_CIPHER_meth_set_init(cipher, init) __EVP_CIPHER_meth_set_init(AmiSSLBase, (cipher), (init))

int __EVP_CIPHER_meth_set_iv_length(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER * cipher , __reg("d0") int iv_len ) = "\tjsr\t-25440(a6)";
#define EVP_CIPHER_meth_set_iv_length(cipher, iv_len) __EVP_CIPHER_meth_set_iv_length(AmiSSLBase, (cipher), (iv_len))

int __EVP_CIPHER_meth_set_set_asn1_params(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER * cipher , __reg("a1") int (*set_asn1_parameters)(EVP_CIPHER_CTX *,ASN1_TYPE *) ) = "\tjsr\t-25446(a6)";
#define EVP_CIPHER_meth_set_set_asn1_params(cipher, set_asn1_parameters) __EVP_CIPHER_meth_set_set_asn1_params(AmiSSLBase, (cipher), (set_asn1_parameters))

void __EVP_ENCODE_CTX_free(__reg("a6") struct Library * , __reg("a0") EVP_ENCODE_CTX * ctx ) = "\tjsr\t-25452(a6)";
#define EVP_ENCODE_CTX_free(ctx) __EVP_ENCODE_CTX_free(AmiSSLBase, (ctx))

EVP_ENCODE_CTX * __EVP_ENCODE_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-25458(a6)";
#define EVP_ENCODE_CTX_new() __EVP_ENCODE_CTX_new(AmiSSLBase)

int __EVP_ENCODE_CTX_num(__reg("a6") struct Library * , __reg("a0") EVP_ENCODE_CTX * ctx ) = "\tjsr\t-25464(a6)";
#define EVP_ENCODE_CTX_num(ctx) __EVP_ENCODE_CTX_num(AmiSSLBase, (ctx))

const EVP_MD * __EVP_md5_sha1(__reg("a6") struct Library * ) = "\tjsr\t-25470(a6)";
#define EVP_md5_sha1() __EVP_md5_sha1(AmiSSLBase)

int __EVP_MD_CTX_ctrl(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("d0") int cmd , __reg("d1") int p1 , __reg("a1") void * p2 ) = "\tjsr\t-25476(a6)";
#define EVP_MD_CTX_ctrl(ctx, cmd, p1, p2) __EVP_MD_CTX_ctrl(AmiSSLBase, (ctx), (cmd), (p1), (p2))

void __EVP_MD_CTX_free(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx ) = "\tjsr\t-25482(a6)";
#define EVP_MD_CTX_free(ctx) __EVP_MD_CTX_free(AmiSSLBase, (ctx))

void * __EVP_MD_CTX_get0_md_data(__reg("a6") struct Library * , __reg("a0") const EVP_MD_CTX * ctx ) = "\tjsr\t-25488(a6)";
#define EVP_MD_CTX_get0_md_data(ctx) __EVP_MD_CTX_get0_md_data(AmiSSLBase, (ctx))

EVP_MD_CTX * __EVP_MD_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-25494(a6)";
#define EVP_MD_CTX_new() __EVP_MD_CTX_new(AmiSSLBase)

EVP_PKEY_CTX * __EVP_MD_CTX_get_pkey_ctx(__reg("a6") struct Library * , __reg("a0") const EVP_MD_CTX * ctx ) = "\tjsr\t-25500(a6)";
#define EVP_MD_CTX_get_pkey_ctx(ctx) __EVP_MD_CTX_get_pkey_ctx(AmiSSLBase, (ctx))

int __EVP_MD_CTX_reset(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx ) = "\tjsr\t-25506(a6)";
#define EVP_MD_CTX_reset(ctx) __EVP_MD_CTX_reset(AmiSSLBase, (ctx))

void __EVP_MD_CTX_set_update_fn(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") int (*update)(EVP_MD_CTX *,const void *,size_t) ) = "\tjsr\t-25512(a6)";
#define EVP_MD_CTX_set_update_fn(ctx, update) __EVP_MD_CTX_set_update_fn(AmiSSLBase, (ctx), (update))

int  (* __EVP_MD_CTX_update_fn(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx ) )(EVP_MD_CTX *, const void *, size_t) =  "\tjsr\t-25518(a6)";
#define EVP_MD_CTX_update_fn(ctx) __EVP_MD_CTX_update_fn(AmiSSLBase, (ctx))

EVP_MD * __EVP_MD_meth_dup(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) = "\tjsr\t-25524(a6)";
#define EVP_MD_meth_dup(md) __EVP_MD_meth_dup(AmiSSLBase, (md))

void __EVP_MD_meth_free(__reg("a6") struct Library * , __reg("a0") EVP_MD * md ) = "\tjsr\t-25530(a6)";
#define EVP_MD_meth_free(md) __EVP_MD_meth_free(AmiSSLBase, (md))

int __EVP_MD_meth_get_app_datasize(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) = "\tjsr\t-25536(a6)";
#define EVP_MD_meth_get_app_datasize(md) __EVP_MD_meth_get_app_datasize(AmiSSLBase, (md))

int  (* __EVP_MD_meth_get_cleanup(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) )(EVP_MD_CTX *) =  "\tjsr\t-25542(a6)";
#define EVP_MD_meth_get_cleanup(md) __EVP_MD_meth_get_cleanup(AmiSSLBase, (md))

int  (* __EVP_MD_meth_get_copy(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) )(EVP_MD_CTX *, const EVP_MD_CTX *) =  "\tjsr\t-25548(a6)";
#define EVP_MD_meth_get_copy(md) __EVP_MD_meth_get_copy(AmiSSLBase, (md))

int  (* __EVP_MD_meth_get_ctrl(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) )(EVP_MD_CTX *, int, int, void *) =  "\tjsr\t-25554(a6)";
#define EVP_MD_meth_get_ctrl(md) __EVP_MD_meth_get_ctrl(AmiSSLBase, (md))

int  (* __EVP_MD_meth_get_final(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) )(EVP_MD_CTX *, unsigned char *) =  "\tjsr\t-25560(a6)";
#define EVP_MD_meth_get_final(md) __EVP_MD_meth_get_final(AmiSSLBase, (md))

unsigned long __EVP_MD_meth_get_flags(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) = "\tjsr\t-25566(a6)";
#define EVP_MD_meth_get_flags(md) __EVP_MD_meth_get_flags(AmiSSLBase, (md))

int  (* __EVP_MD_meth_get_init(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) )(EVP_MD_CTX *) =  "\tjsr\t-25572(a6)";
#define EVP_MD_meth_get_init(md) __EVP_MD_meth_get_init(AmiSSLBase, (md))

int __EVP_MD_meth_get_input_blocksize(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) = "\tjsr\t-25578(a6)";
#define EVP_MD_meth_get_input_blocksize(md) __EVP_MD_meth_get_input_blocksize(AmiSSLBase, (md))

int __EVP_MD_meth_get_result_size(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) = "\tjsr\t-25584(a6)";
#define EVP_MD_meth_get_result_size(md) __EVP_MD_meth_get_result_size(AmiSSLBase, (md))

int  (* __EVP_MD_meth_get_update(__reg("a6") struct Library * , __reg("a0") const EVP_MD * md ) )(EVP_MD_CTX *, const void *, size_t) =  "\tjsr\t-25590(a6)";
#define EVP_MD_meth_get_update(md) __EVP_MD_meth_get_update(AmiSSLBase, (md))

EVP_MD * __EVP_MD_meth_new(__reg("a6") struct Library * , __reg("d0") int md_type , __reg("d1") int pkey_type ) = "\tjsr\t-25596(a6)";
#define EVP_MD_meth_new(md_type, pkey_type) __EVP_MD_meth_new(AmiSSLBase, (md_type), (pkey_type))

int __EVP_MD_meth_set_app_datasize(__reg("a6") struct Library * , __reg("a0") EVP_MD * md , __reg("d0") int datasize ) = "\tjsr\t-25602(a6)";
#define EVP_MD_meth_set_app_datasize(md, datasize) __EVP_MD_meth_set_app_datasize(AmiSSLBase, (md), (datasize))

int __EVP_MD_meth_set_cleanup(__reg("a6") struct Library * , __reg("a0") EVP_MD * md , __reg("a1") int (*cleanup)(EVP_MD_CTX *) ) = "\tjsr\t-25608(a6)";
#define EVP_MD_meth_set_cleanup(md, cleanup) __EVP_MD_meth_set_cleanup(AmiSSLBase, (md), (cleanup))

int __EVP_MD_meth_set_copy(__reg("a6") struct Library * , __reg("a0") EVP_MD * md , __reg("a1") int (*copy)(EVP_MD_CTX *,const EVP_MD_CTX *) ) = "\tjsr\t-25614(a6)";
#define EVP_MD_meth_set_copy(md, copy) __EVP_MD_meth_set_copy(AmiSSLBase, (md), (copy))

int __EVP_MD_meth_set_ctrl(__reg("a6") struct Library * , __reg("a0") EVP_MD * md , __reg("a1") int (*ctrl)(EVP_MD_CTX *,int,int,void *) ) = "\tjsr\t-25620(a6)";
#define EVP_MD_meth_set_ctrl(md, ctrl) __EVP_MD_meth_set_ctrl(AmiSSLBase, (md), (ctrl))

int __EVP_MD_meth_set_final(__reg("a6") struct Library * , __reg("a0") EVP_MD * md , __reg("a1") int (*final)(EVP_MD_CTX *,unsigned char *) ) = "\tjsr\t-25626(a6)";
#define EVP_MD_meth_set_final(md, final) __EVP_MD_meth_set_final(AmiSSLBase, (md), (final))

int __EVP_MD_meth_set_flags(__reg("a6") struct Library * , __reg("a0") EVP_MD * md , __reg("d0") unsigned long flags ) = "\tjsr\t-25632(a6)";
#define EVP_MD_meth_set_flags(md, flags) __EVP_MD_meth_set_flags(AmiSSLBase, (md), (flags))

int __EVP_MD_meth_set_init(__reg("a6") struct Library * , __reg("a0") EVP_MD * md , __reg("a1") int (*init)(EVP_MD_CTX *) ) = "\tjsr\t-25638(a6)";
#define EVP_MD_meth_set_init(md, init) __EVP_MD_meth_set_init(AmiSSLBase, (md), (init))

int __EVP_MD_meth_set_input_blocksize(__reg("a6") struct Library * , __reg("a0") EVP_MD * md , __reg("d0") int blocksize ) = "\tjsr\t-25644(a6)";
#define EVP_MD_meth_set_input_blocksize(md, blocksize) __EVP_MD_meth_set_input_blocksize(AmiSSLBase, (md), (blocksize))

int __EVP_MD_meth_set_result_size(__reg("a6") struct Library * , __reg("a0") EVP_MD * md , __reg("d0") int resultsize ) = "\tjsr\t-25650(a6)";
#define EVP_MD_meth_set_result_size(md, resultsize) __EVP_MD_meth_set_result_size(AmiSSLBase, (md), (resultsize))

int __EVP_MD_meth_set_update(__reg("a6") struct Library * , __reg("a0") EVP_MD * md , __reg("a1") int (*update)(EVP_MD_CTX *,const void *,size_t) ) = "\tjsr\t-25656(a6)";
#define EVP_MD_meth_set_update(md, update) __EVP_MD_meth_set_update(AmiSSLBase, (md), (update))

int __EVP_PBE_get(__reg("a6") struct Library * , __reg("a0") int * ptype , __reg("a1") int * ppbe_nid , __reg("d0") size_t num ) = "\tjsr\t-25662(a6)";
#define EVP_PBE_get(ptype, ppbe_nid, num) __EVP_PBE_get(AmiSSLBase, (ptype), (ppbe_nid), (num))

int __OBSOLETE_EVP_PBE_scrypt(__reg("a6") struct Library * , __reg("a0") const char * pass , __reg("d0") size_t passlen , __reg("a1") const unsigned char * salt , __reg("d1") size_t saltlen , __reg("d2") unsigned long N , __reg("d3") unsigned long r , __reg("d6") unsigned long p , __reg("d4/d5") uint64_t maxmem , __reg("a2") unsigned char * key , __reg("a3") size_t keylen ) = "\texg\td5,d6\n\texg\td4,d5\n\t\tjsr\t-25668(a6)";
#define OBSOLETE_EVP_PBE_scrypt(pass, passlen, salt, saltlen, N, r, p, maxmem, key, keylen) __OBSOLETE_EVP_PBE_scrypt(AmiSSLBase, (pass), (passlen), (salt), (saltlen), (N), (r), (p), (maxmem), (key), (keylen))

void __EVP_PKEY_asn1_set_security_bits(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*pkey_security_bits)(const EVP_PKEY *) ) = "\tjsr\t-25674(a6)";
#define EVP_PKEY_asn1_set_security_bits(ameth, pkey_security_bits) __EVP_PKEY_asn1_set_security_bits(AmiSSLBase, (ameth), (pkey_security_bits))

const DH * __EVP_PKEY_get0_DH(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-25680(a6)";
#define EVP_PKEY_get0_DH(pkey) __EVP_PKEY_get0_DH(AmiSSLBase, (pkey))

const DSA * __EVP_PKEY_get0_DSA(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-25686(a6)";
#define EVP_PKEY_get0_DSA(pkey) __EVP_PKEY_get0_DSA(AmiSSLBase, (pkey))

const EC_KEY * __EVP_PKEY_get0_EC_KEY(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-25692(a6)";
#define EVP_PKEY_get0_EC_KEY(pkey) __EVP_PKEY_get0_EC_KEY(AmiSSLBase, (pkey))

const RSA * __EVP_PKEY_get0_RSA(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-25698(a6)";
#define EVP_PKEY_get0_RSA(pkey) __EVP_PKEY_get0_RSA(AmiSSLBase, (pkey))

void __EVP_PKEY_meth_get_cleanup(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") void (**pcleanup)(EVP_PKEY_CTX *) ) = "\tjsr\t-25704(a6)";
#define EVP_PKEY_meth_get_cleanup(pmeth, pcleanup) __EVP_PKEY_meth_get_cleanup(AmiSSLBase, (pmeth), (pcleanup))

void __EVP_PKEY_meth_get_copy(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pcopy)(EVP_PKEY_CTX *,const EVP_PKEY_CTX *) ) = "\tjsr\t-25710(a6)";
#define EVP_PKEY_meth_get_copy(pmeth, pcopy) __EVP_PKEY_meth_get_copy(AmiSSLBase, (pmeth), (pcopy))

void __EVP_PKEY_meth_get_ctrl(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pctrl)(EVP_PKEY_CTX *,int,int,void *) , __reg("a2") int (**pctrl_str)(EVP_PKEY_CTX *,const char *,const char *) ) = "\tjsr\t-25716(a6)";
#define EVP_PKEY_meth_get_ctrl(pmeth, pctrl, pctrl_str) __EVP_PKEY_meth_get_ctrl(AmiSSLBase, (pmeth), (pctrl), (pctrl_str))

void __EVP_PKEY_meth_get_decrypt(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pdecrypt_init)(EVP_PKEY_CTX *) , __reg("a2") int (**pdecrypt)(EVP_PKEY_CTX *,unsigned char *,size_t *,const unsigned char *,size_t) ) = "\tjsr\t-25722(a6)";
#define EVP_PKEY_meth_get_decrypt(pmeth, pdecrypt_init, pdecrypt) __EVP_PKEY_meth_get_decrypt(AmiSSLBase, (pmeth), (pdecrypt_init), (pdecrypt))

void __EVP_PKEY_meth_get_derive(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pderive_init)(EVP_PKEY_CTX *) , __reg("a2") int (**pderive)(EVP_PKEY_CTX *,unsigned char *,size_t *) ) = "\tjsr\t-25728(a6)";
#define EVP_PKEY_meth_get_derive(pmeth, pderive_init, pderive) __EVP_PKEY_meth_get_derive(AmiSSLBase, (pmeth), (pderive_init), (pderive))

void __EVP_PKEY_meth_get_encrypt(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pencrypt_init)(EVP_PKEY_CTX *) , __reg("a2") int (**pencryptfn)(EVP_PKEY_CTX *,unsigned char *,size_t *,const unsigned char *,size_t) ) = "\tjsr\t-25734(a6)";
#define EVP_PKEY_meth_get_encrypt(pmeth, pencrypt_init, pencryptfn) __EVP_PKEY_meth_get_encrypt(AmiSSLBase, (pmeth), (pencrypt_init), (pencryptfn))

void __EVP_PKEY_meth_get_init(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pinit)(EVP_PKEY_CTX *) ) = "\tjsr\t-25740(a6)";
#define EVP_PKEY_meth_get_init(pmeth, pinit) __EVP_PKEY_meth_get_init(AmiSSLBase, (pmeth), (pinit))

void __EVP_PKEY_meth_get_keygen(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pkeygen_init)(EVP_PKEY_CTX *) , __reg("a2") int (**pkeygen)(EVP_PKEY_CTX *,EVP_PKEY *) ) = "\tjsr\t-25746(a6)";
#define EVP_PKEY_meth_get_keygen(pmeth, pkeygen_init, pkeygen) __EVP_PKEY_meth_get_keygen(AmiSSLBase, (pmeth), (pkeygen_init), (pkeygen))

void __EVP_PKEY_meth_get_paramgen(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pparamgen_init)(EVP_PKEY_CTX *) , __reg("a2") int (**pparamgen)(EVP_PKEY_CTX *,EVP_PKEY *) ) = "\tjsr\t-25752(a6)";
#define EVP_PKEY_meth_get_paramgen(pmeth, pparamgen_init, pparamgen) __EVP_PKEY_meth_get_paramgen(AmiSSLBase, (pmeth), (pparamgen_init), (pparamgen))

void __EVP_PKEY_meth_get_sign(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**psign_init)(EVP_PKEY_CTX *) , __reg("a2") int (**psign)(EVP_PKEY_CTX *,unsigned char *,size_t *,const unsigned char *,size_t) ) = "\tjsr\t-25758(a6)";
#define EVP_PKEY_meth_get_sign(pmeth, psign_init, psign) __EVP_PKEY_meth_get_sign(AmiSSLBase, (pmeth), (psign_init), (psign))

void __EVP_PKEY_meth_get_signctx(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**psignctx_init)(EVP_PKEY_CTX *,EVP_MD_CTX *) , __reg("a2") int (**psignctx)(EVP_PKEY_CTX *,unsigned char *,size_t *,EVP_MD_CTX *) ) = "\tjsr\t-25764(a6)";
#define EVP_PKEY_meth_get_signctx(pmeth, psignctx_init, psignctx) __EVP_PKEY_meth_get_signctx(AmiSSLBase, (pmeth), (psignctx_init), (psignctx))

void __EVP_PKEY_meth_get_verify(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pverify_init)(EVP_PKEY_CTX *) , __reg("a2") int (**pverify)(EVP_PKEY_CTX *,const unsigned char *,size_t,const unsigned char *,size_t) ) = "\tjsr\t-25770(a6)";
#define EVP_PKEY_meth_get_verify(pmeth, pverify_init, pverify) __EVP_PKEY_meth_get_verify(AmiSSLBase, (pmeth), (pverify_init), (pverify))

void __EVP_PKEY_meth_get_verify_recover(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pverify_recover_init)(EVP_PKEY_CTX *) , __reg("a2") int (**pverify_recover)(EVP_PKEY_CTX *,unsigned char *,size_t *,const unsigned char *,size_t) ) = "\tjsr\t-25776(a6)";
#define EVP_PKEY_meth_get_verify_recover(pmeth, pverify_recover_init, pverify_recover) __EVP_PKEY_meth_get_verify_recover(AmiSSLBase, (pmeth), (pverify_recover_init), (pverify_recover))

void __EVP_PKEY_meth_get_verifyctx(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pverifyctx_init)(EVP_PKEY_CTX *,EVP_MD_CTX *) , __reg("a2") int (**pverifyctx)(EVP_PKEY_CTX *,const unsigned char *,int,EVP_MD_CTX *) ) = "\tjsr\t-25782(a6)";
#define EVP_PKEY_meth_get_verifyctx(pmeth, pverifyctx_init, pverifyctx) __EVP_PKEY_meth_get_verifyctx(AmiSSLBase, (pmeth), (pverifyctx_init), (pverifyctx))

int __EVP_PKEY_get_security_bits(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-25788(a6)";
#define EVP_PKEY_get_security_bits(pkey) __EVP_PKEY_get_security_bits(AmiSSLBase, (pkey))

int __EVP_PKEY_up_ref(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey ) = "\tjsr\t-25794(a6)";
#define EVP_PKEY_up_ref(pkey) __EVP_PKEY_up_ref(AmiSSLBase, (pkey))

int __PKCS5_v2_scrypt_keyivgen(__reg("a6") struct Library * , __reg("a0") EVP_CIPHER_CTX * ctx , __reg("a1") const char * pass , __reg("d0") int passlen , __reg("a2") ASN1_TYPE * param , __reg("a3") const EVP_CIPHER * c , __reg("d1") const EVP_MD * md , __reg("d2") int en_de ) = "\tjsr\t-25800(a6)";
#define PKCS5_v2_scrypt_keyivgen(ctx, pass, passlen, param, c, md, en_de) __PKCS5_v2_scrypt_keyivgen(AmiSSLBase, (ctx), (pass), (passlen), (param), (c), (md), (en_de))

void __HMAC_CTX_free(__reg("a6") struct Library * , __reg("a0") HMAC_CTX * ctx ) = "\tjsr\t-25806(a6)";
#define HMAC_CTX_free(ctx) __HMAC_CTX_free(AmiSSLBase, (ctx))

HMAC_CTX * __HMAC_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-25812(a6)";
#define HMAC_CTX_new() __HMAC_CTX_new(AmiSSLBase)

int __HMAC_CTX_reset(__reg("a6") struct Library * , __reg("a0") HMAC_CTX * ctx ) = "\tjsr\t-25818(a6)";
#define HMAC_CTX_reset(ctx) __HMAC_CTX_reset(AmiSSLBase, (ctx))

size_t __HMAC_size(__reg("a6") struct Library * , __reg("a0") const HMAC_CTX * ctx ) = "\tjsr\t-25824(a6)";
#define HMAC_size(ctx) __HMAC_size(AmiSSLBase, (ctx))

int __OPENSSL_LH_error(__reg("a6") struct Library * , __reg("a0") OPENSSL_LHASH * lh ) = "\tjsr\t-25830(a6)";
#define OPENSSL_LH_error(lh) __OPENSSL_LH_error(AmiSSLBase, (lh))

unsigned long __OPENSSL_LH_get_down_load(__reg("a6") struct Library * , __reg("a0") const OPENSSL_LHASH * lh ) = "\tjsr\t-25836(a6)";
#define OPENSSL_LH_get_down_load(lh) __OPENSSL_LH_get_down_load(AmiSSLBase, (lh))

void __OPENSSL_LH_set_down_load(__reg("a6") struct Library * , __reg("a0") OPENSSL_LHASH * lh , __reg("d0") unsigned long down_load ) = "\tjsr\t-25842(a6)";
#define OPENSSL_LH_set_down_load(lh, down_load) __OPENSSL_LH_set_down_load(AmiSSLBase, (lh), (down_load))

size_t __CRYPTO_128_unwrap_pad(__reg("a6") struct Library * , __reg("a0") void * key , __reg("a1") const unsigned char * icv , __reg("a2") unsigned char * out , __reg("a3") const unsigned char * in , __reg("d0") size_t inlen , __reg("d1") block128_f block ) = "\tjsr\t-25848(a6)";
#define CRYPTO_128_unwrap_pad(key, icv, out, in, inlen, block) __CRYPTO_128_unwrap_pad(AmiSSLBase, (key), (icv), (out), (in), (inlen), (block))

size_t __CRYPTO_128_wrap_pad(__reg("a6") struct Library * , __reg("a0") void * key , __reg("a1") const unsigned char * icv , __reg("a2") unsigned char * out , __reg("a3") const unsigned char * in , __reg("d0") size_t inlen , __reg("d1") block128_f block ) = "\tjsr\t-25854(a6)";
#define CRYPTO_128_wrap_pad(key, icv, out, in, inlen, block) __CRYPTO_128_wrap_pad(AmiSSLBase, (key), (icv), (out), (in), (inlen), (block))

int __CRYPTO_ocb128_aad(__reg("a6") struct Library * , __reg("a0") OCB128_CONTEXT * ctx , __reg("a1") const unsigned char * aad , __reg("d0") size_t len ) = "\tjsr\t-25860(a6)";
#define CRYPTO_ocb128_aad(ctx, aad, len) __CRYPTO_ocb128_aad(AmiSSLBase, (ctx), (aad), (len))

void __CRYPTO_ocb128_cleanup(__reg("a6") struct Library * , __reg("a0") OCB128_CONTEXT * ctx ) = "\tjsr\t-25866(a6)";
#define CRYPTO_ocb128_cleanup(ctx) __CRYPTO_ocb128_cleanup(AmiSSLBase, (ctx))

int __CRYPTO_ocb128_copy_ctx(__reg("a6") struct Library * , __reg("a0") OCB128_CONTEXT * dest , __reg("a1") OCB128_CONTEXT * src , __reg("a2") void * keyenc , __reg("a3") void * keydec ) = "\tjsr\t-25872(a6)";
#define CRYPTO_ocb128_copy_ctx(dest, src, keyenc, keydec) __CRYPTO_ocb128_copy_ctx(AmiSSLBase, (dest), (src), (keyenc), (keydec))

int __CRYPTO_ocb128_decrypt(__reg("a6") struct Library * , __reg("a0") OCB128_CONTEXT * ctx , __reg("a1") const unsigned char * in , __reg("a2") unsigned char * out , __reg("d0") size_t len ) = "\tjsr\t-25878(a6)";
#define CRYPTO_ocb128_decrypt(ctx, in, out, len) __CRYPTO_ocb128_decrypt(AmiSSLBase, (ctx), (in), (out), (len))

int __CRYPTO_ocb128_encrypt(__reg("a6") struct Library * , __reg("a0") OCB128_CONTEXT * ctx , __reg("a1") const unsigned char * in , __reg("a2") unsigned char * out , __reg("d0") size_t len ) = "\tjsr\t-25884(a6)";
#define CRYPTO_ocb128_encrypt(ctx, in, out, len) __CRYPTO_ocb128_encrypt(AmiSSLBase, (ctx), (in), (out), (len))

int __CRYPTO_ocb128_finish(__reg("a6") struct Library * , __reg("a0") OCB128_CONTEXT * ctx , __reg("a1") const unsigned char * tag , __reg("d0") size_t len ) = "\tjsr\t-25890(a6)";
#define CRYPTO_ocb128_finish(ctx, tag, len) __CRYPTO_ocb128_finish(AmiSSLBase, (ctx), (tag), (len))

int __CRYPTO_ocb128_init(__reg("a6") struct Library * , __reg("a0") OCB128_CONTEXT * ctx , __reg("a1") void * keyenc , __reg("a2") void * keydec , __reg("d0") block128_f encrypt , __reg("d1") block128_f decrypt , __reg("d2") ocb128_f stream ) = "\tjsr\t-25896(a6)";
#define CRYPTO_ocb128_init(ctx, keyenc, keydec, encrypt, decrypt, stream) __CRYPTO_ocb128_init(AmiSSLBase, (ctx), (keyenc), (keydec), (encrypt), (decrypt), (stream))

OCB128_CONTEXT * __CRYPTO_ocb128_new(__reg("a6") struct Library * , __reg("a0") void * keyenc , __reg("a1") void * keydec , __reg("d0") block128_f encrypt , __reg("d1") block128_f decrypt , __reg("d2") ocb128_f stream ) = "\tjsr\t-25902(a6)";
#define CRYPTO_ocb128_new(keyenc, keydec, encrypt, decrypt, stream) __CRYPTO_ocb128_new(AmiSSLBase, (keyenc), (keydec), (encrypt), (decrypt), (stream))

int __CRYPTO_ocb128_setiv(__reg("a6") struct Library * , __reg("a0") OCB128_CONTEXT * ctx , __reg("a1") const unsigned char * iv , __reg("d0") size_t len , __reg("d1") size_t taglen ) = "\tjsr\t-25908(a6)";
#define CRYPTO_ocb128_setiv(ctx, iv, len, taglen) __CRYPTO_ocb128_setiv(AmiSSLBase, (ctx), (iv), (len), (taglen))

int __CRYPTO_ocb128_tag(__reg("a6") struct Library * , __reg("a0") OCB128_CONTEXT * ctx , __reg("a1") unsigned char * tag , __reg("d0") size_t len ) = "\tjsr\t-25914(a6)";
#define CRYPTO_ocb128_tag(ctx, tag, len) __CRYPTO_ocb128_tag(AmiSSLBase, (ctx), (tag), (len))

const unsigned char * __OBJ_get0_data(__reg("a6") struct Library * , __reg("a0") const ASN1_OBJECT * obj ) = "\tjsr\t-25920(a6)";
#define OBJ_get0_data(obj) __OBJ_get0_data(AmiSSLBase, (obj))

size_t __OBJ_length(__reg("a6") struct Library * , __reg("a0") const ASN1_OBJECT * obj ) = "\tjsr\t-25926(a6)";
#define OBJ_length(obj) __OBJ_length(AmiSSLBase, (obj))

const ASN1_GENERALIZEDTIME * __OCSP_resp_get0_produced_at(__reg("a6") struct Library * , __reg("a0") const OCSP_BASICRESP * bs ) = "\tjsr\t-25932(a6)";
#define OCSP_resp_get0_produced_at(bs) __OCSP_resp_get0_produced_at(AmiSSLBase, (bs))

const ASN1_OCTET_STRING * __OCSP_resp_get0_signature(__reg("a6") struct Library * , __reg("a0") const OCSP_BASICRESP * bs ) = "\tjsr\t-25938(a6)";
#define OCSP_resp_get0_signature(bs) __OCSP_resp_get0_signature(AmiSSLBase, (bs))

const OCSP_CERTID * __OCSP_SINGLERESP_get0_id(__reg("a6") struct Library * , __reg("a0") const OCSP_SINGLERESP * bs ) = "\tjsr\t-25944(a6)";
#define OCSP_SINGLERESP_get0_id(bs) __OCSP_SINGLERESP_get0_id(AmiSSLBase, (bs))

void __PKCS12_get0_mac(__reg("a6") struct Library * , __reg("a0") const ASN1_OCTET_STRING ** pmac , __reg("a1") const X509_ALGOR ** pmacalg , __reg("a2") const ASN1_OCTET_STRING ** psalt , __reg("a3") const ASN1_INTEGER ** piter , __reg("d0") const PKCS12 * p12 ) = "\tjsr\t-25950(a6)";
#define PKCS12_get0_mac(pmac, pmacalg, psalt, piter, p12) __PKCS12_get0_mac(AmiSSLBase, (pmac), (pmacalg), (psalt), (piter), (p12))

int __PKCS12_mac_present(__reg("a6") struct Library * , __reg("a0") const PKCS12 * p12 ) = "\tjsr\t-25956(a6)";
#define PKCS12_mac_present(p12) __PKCS12_mac_present(AmiSSLBase, (p12))

PKCS12_SAFEBAG * __PKCS12_SAFEBAG_create0_p8inf(__reg("a6") struct Library * , __reg("a0") PKCS8_PRIV_KEY_INFO * p8 ) = "\tjsr\t-25962(a6)";
#define PKCS12_SAFEBAG_create0_p8inf(p8) __PKCS12_SAFEBAG_create0_p8inf(AmiSSLBase, (p8))

PKCS12_SAFEBAG * __PKCS12_SAFEBAG_create0_pkcs8(__reg("a6") struct Library * , __reg("a0") X509_SIG * p8 ) = "\tjsr\t-25968(a6)";
#define PKCS12_SAFEBAG_create0_pkcs8(p8) __PKCS12_SAFEBAG_create0_pkcs8(AmiSSLBase, (p8))

PKCS12_SAFEBAG * __PKCS12_SAFEBAG_create_cert(__reg("a6") struct Library * , __reg("a0") X509 * x509 ) = "\tjsr\t-25974(a6)";
#define PKCS12_SAFEBAG_create_cert(x509) __PKCS12_SAFEBAG_create_cert(AmiSSLBase, (x509))

PKCS12_SAFEBAG * __PKCS12_SAFEBAG_create_crl(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl ) = "\tjsr\t-25980(a6)";
#define PKCS12_SAFEBAG_create_crl(crl) __PKCS12_SAFEBAG_create_crl(AmiSSLBase, (crl))

PKCS12_SAFEBAG * __PKCS12_SAFEBAG_create_pkcs8_encrypt(__reg("a6") struct Library * , __reg("d0") int pbe_nid , __reg("a0") const char * pass , __reg("d1") int passlen , __reg("a1") unsigned char * salt , __reg("d2") int saltlen , __reg("d3") int iter , __reg("a2") PKCS8_PRIV_KEY_INFO * p8inf ) = "\tjsr\t-25986(a6)";
#define PKCS12_SAFEBAG_create_pkcs8_encrypt(pbe_nid, pass, passlen, salt, saltlen, iter, p8inf) __PKCS12_SAFEBAG_create_pkcs8_encrypt(AmiSSLBase, (pbe_nid), (pass), (passlen), (salt), (saltlen), (iter), (p8inf))

const ASN1_TYPE * __PKCS12_SAFEBAG_get0_attr(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag , __reg("d0") int attr_nid ) = "\tjsr\t-25992(a6)";
#define PKCS12_SAFEBAG_get0_attr(bag, attr_nid) __PKCS12_SAFEBAG_get0_attr(AmiSSLBase, (bag), (attr_nid))

const STACK_OF(X509_ATTRIBUTE) * __PKCS12_SAFEBAG_get0_attrs(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag ) = "\tjsr\t-25998(a6)";
#define PKCS12_SAFEBAG_get0_attrs(bag) __PKCS12_SAFEBAG_get0_attrs(AmiSSLBase, (bag))

const PKCS8_PRIV_KEY_INFO * __PKCS12_SAFEBAG_get0_p8inf(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag ) = "\tjsr\t-26004(a6)";
#define PKCS12_SAFEBAG_get0_p8inf(bag) __PKCS12_SAFEBAG_get0_p8inf(AmiSSLBase, (bag))

const X509_SIG * __PKCS12_SAFEBAG_get0_pkcs8(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag ) = "\tjsr\t-26010(a6)";
#define PKCS12_SAFEBAG_get0_pkcs8(bag) __PKCS12_SAFEBAG_get0_pkcs8(AmiSSLBase, (bag))

const STACK_OF(PKCS12_SAFEBAG) * __PKCS12_SAFEBAG_get0_safes(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag ) = "\tjsr\t-26016(a6)";
#define PKCS12_SAFEBAG_get0_safes(bag) __PKCS12_SAFEBAG_get0_safes(AmiSSLBase, (bag))

const ASN1_OBJECT * __PKCS12_SAFEBAG_get0_type(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag ) = "\tjsr\t-26022(a6)";
#define PKCS12_SAFEBAG_get0_type(bag) __PKCS12_SAFEBAG_get0_type(AmiSSLBase, (bag))

X509 * __PKCS12_SAFEBAG_get1_cert(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag ) = "\tjsr\t-26028(a6)";
#define PKCS12_SAFEBAG_get1_cert(bag) __PKCS12_SAFEBAG_get1_cert(AmiSSLBase, (bag))

X509_CRL * __PKCS12_SAFEBAG_get1_crl(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag ) = "\tjsr\t-26034(a6)";
#define PKCS12_SAFEBAG_get1_crl(bag) __PKCS12_SAFEBAG_get1_crl(AmiSSLBase, (bag))

int __PKCS12_SAFEBAG_get_bag_nid(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag ) = "\tjsr\t-26040(a6)";
#define PKCS12_SAFEBAG_get_bag_nid(bag) __PKCS12_SAFEBAG_get_bag_nid(AmiSSLBase, (bag))

int __PKCS12_SAFEBAG_get_nid(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag ) = "\tjsr\t-26046(a6)";
#define PKCS12_SAFEBAG_get_nid(bag) __PKCS12_SAFEBAG_get_nid(AmiSSLBase, (bag))

ASN1_TYPE * __PKCS8_get_attr(__reg("a6") struct Library * , __reg("a0") PKCS8_PRIV_KEY_INFO * p8 , __reg("d0") int attr_nid ) = "\tjsr\t-26052(a6)";
#define PKCS8_get_attr(p8, attr_nid) __PKCS8_get_attr(AmiSSLBase, (p8), (attr_nid))

X509_SIG * __PKCS8_set0_pbe(__reg("a6") struct Library * , __reg("a0") const char * pass , __reg("d0") int passlen , __reg("a1") PKCS8_PRIV_KEY_INFO * p8inf , __reg("a2") X509_ALGOR * pbe ) = "\tjsr\t-26058(a6)";
#define PKCS8_set0_pbe(pass, passlen, p8inf, pbe) __PKCS8_set0_pbe(AmiSSLBase, (pass), (passlen), (p8inf), (pbe))

RAND_METHOD * __RAND_OpenSSL(__reg("a6") struct Library * ) = "\tjsr\t-26064(a6)";
#define RAND_OpenSSL() __RAND_OpenSSL(AmiSSLBase)

int __RSA_bits(__reg("a6") struct Library * , __reg("a0") const RSA * r ) = "\tjsr\t-26070(a6)";
#define RSA_bits(r) __RSA_bits(AmiSSLBase, (r))

int __RSA_check_key_ex(__reg("a6") struct Library * , __reg("a0") const RSA * key , __reg("a1") BN_GENCB * cb ) = "\tjsr\t-26076(a6)";
#define RSA_check_key_ex(key, cb) __RSA_check_key_ex(AmiSSLBase, (key), (cb))

const RSA_METHOD * __RSA_PKCS1_OpenSSL(__reg("a6") struct Library * ) = "\tjsr\t-26082(a6)";
#define RSA_PKCS1_OpenSSL() __RSA_PKCS1_OpenSSL(AmiSSLBase)

int __RSA_security_bits(__reg("a6") struct Library * , __reg("a0") const RSA * rsa ) = "\tjsr\t-26088(a6)";
#define RSA_security_bits(rsa) __RSA_security_bits(AmiSSLBase, (rsa))

int __OBSOLETE_RSA_X931_derive_ex(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("a1") BIGNUM * p1 , __reg("a2") BIGNUM * p2 , __reg("a3") BIGNUM * q1 , __reg("d0") BIGNUM * q2 , __reg("d1") const BIGNUM * Xp1 , __reg("d2") const BIGNUM * Xp2 , __reg("d3") const BIGNUM * Xp , __reg("d4") const BIGNUM * Xq1 , __reg("d5") const BIGNUM * Xq2 , __reg("d6") const BIGNUM * Xq , __reg("d7") const BIGNUM * e , __reg("a4") BN_GENCB * cb ) = "\tjsr\t-26094(a6)";
#define OBSOLETE_RSA_X931_derive_ex(rsa, p1, p2, q1, q2, Xp1, Xp2, Xp, Xq1, Xq2, Xq, e, cb) __OBSOLETE_RSA_X931_derive_ex(AmiSSLBase, (rsa), (p1), (p2), (q1), (q2), (Xp1), (Xp2), (Xp), (Xq1), (Xq2), (Xq), (e), (cb))

int __RSA_X931_generate_key_ex(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("d0") int bits , __reg("a1") const BIGNUM * e , __reg("d1") BN_GENCB * cb ) = "\tjsr\t-26100(a6)";
#define RSA_X931_generate_key_ex(rsa, bits, e, cb) __RSA_X931_generate_key_ex(AmiSSLBase, (rsa), (bits), (e), (cb))

int __TS_CONF_set_signer_digest(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") const char * md , __reg("a3") TS_RESP_CTX * ctx ) = "\tjsr\t-26106(a6)";
#define TS_CONF_set_signer_digest(conf, section, md, ctx) __TS_CONF_set_signer_digest(AmiSSLBase, (conf), (section), (md), (ctx))

int __TS_RESP_CTX_set_signer_digest(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("a1") const EVP_MD * md ) = "\tjsr\t-26112(a6)";
#define TS_RESP_CTX_set_signer_digest(ctx, md) __TS_RESP_CTX_set_signer_digest(AmiSSLBase, (ctx), (md))

const ASN1_BIT_STRING * __TS_STATUS_INFO_get0_failure_info(__reg("a6") struct Library * , __reg("a0") const TS_STATUS_INFO * a ) = "\tjsr\t-26118(a6)";
#define TS_STATUS_INFO_get0_failure_info(a) __TS_STATUS_INFO_get0_failure_info(AmiSSLBase, (a))

const ASN1_INTEGER * __TS_STATUS_INFO_get0_status(__reg("a6") struct Library * , __reg("a0") const TS_STATUS_INFO * a ) = "\tjsr\t-26124(a6)";
#define TS_STATUS_INFO_get0_status(a) __TS_STATUS_INFO_get0_status(AmiSSLBase, (a))

int __TS_STATUS_INFO_set_status(__reg("a6") struct Library * , __reg("a0") TS_STATUS_INFO * a , __reg("d0") int i ) = "\tjsr\t-26130(a6)";
#define TS_STATUS_INFO_set_status(a, i) __TS_STATUS_INFO_set_status(AmiSSLBase, (a), (i))

int __TS_VERIFY_CTX_add_flags(__reg("a6") struct Library * , __reg("a0") TS_VERIFY_CTX * ctx , __reg("d0") int f ) = "\tjsr\t-26136(a6)";
#define TS_VERIFY_CTX_add_flags(ctx, f) __TS_VERIFY_CTX_add_flags(AmiSSLBase, (ctx), (f))

BIO * __TS_VERIFY_CTX_set_data(__reg("a6") struct Library * , __reg("a0") TS_VERIFY_CTX * ctx , __reg("a1") BIO * b ) = "\tjsr\t-26142(a6)";
#define TS_VERIFY_CTX_set_data(ctx, b) __TS_VERIFY_CTX_set_data(AmiSSLBase, (ctx), (b))

int __TS_VERIFY_CTX_set_flags(__reg("a6") struct Library * , __reg("a0") TS_VERIFY_CTX * ctx , __reg("d0") int f ) = "\tjsr\t-26148(a6)";
#define TS_VERIFY_CTX_set_flags(ctx, f) __TS_VERIFY_CTX_set_flags(AmiSSLBase, (ctx), (f))

unsigned char * __TS_VERIFY_CTX_set_imprint(__reg("a6") struct Library * , __reg("a0") TS_VERIFY_CTX * ctx , __reg("a1") unsigned char * hexstr , __reg("d0") long len ) = "\tjsr\t-26154(a6)";
#define TS_VERIFY_CTX_set_imprint(ctx, hexstr, len) __TS_VERIFY_CTX_set_imprint(AmiSSLBase, (ctx), (hexstr), (len))

X509_STORE * __TS_VERIFY_CTX_set_store(__reg("a6") struct Library * , __reg("a0") TS_VERIFY_CTX * ctx , __reg("a1") X509_STORE * s ) = "\tjsr\t-26160(a6)";
#define TS_VERIFY_CTX_set_store(ctx, s) __TS_VERIFY_CTX_set_store(AmiSSLBase, (ctx), (s))

STACK_OF(X509) * __TS_VERIFY_CTX_set_certs(__reg("a6") struct Library * , __reg("a0") TS_VERIFY_CTX * ctx , __reg("a1") STACK_OF(X509) * certs ) = "\tjsr\t-26166(a6)";
#define TS_VERIFY_CTX_set_certs(ctx, certs) __TS_VERIFY_CTX_set_certs(AmiSSLBase, (ctx), (certs))

int __i2d_re_X509_CRL_tbs(__reg("a6") struct Library * , __reg("a0") X509_CRL * req , __reg("a1") unsigned char ** pp ) = "\tjsr\t-26172(a6)";
#define i2d_re_X509_CRL_tbs(req, pp) __i2d_re_X509_CRL_tbs(AmiSSLBase, (req), (pp))

int __i2d_re_X509_REQ_tbs(__reg("a6") struct Library * , __reg("a0") X509_REQ * req , __reg("a1") unsigned char ** pp ) = "\tjsr\t-26178(a6)";
#define i2d_re_X509_REQ_tbs(req, pp) __i2d_re_X509_REQ_tbs(AmiSSLBase, (req), (pp))

X509_ALGOR * __PKCS5_pbe2_set_scrypt(__reg("a6") struct Library * , __reg("a0") const EVP_CIPHER * cipher , __reg("a1") const unsigned char * salt , __reg("d0") int saltlen , __reg("a2") unsigned char * aiv , __reg("d2/d3") uint64_t N , __reg("d4/d5") uint64_t r , __reg("d6/d7") uint64_t p ) = "\tjsr\t-26184(a6)";
#define PKCS5_pbe2_set_scrypt(cipher, salt, saltlen, aiv, N, r, p) __PKCS5_pbe2_set_scrypt(AmiSSLBase, (cipher), (salt), (saltlen), (aiv), (N), (r), (p))

const STACK_OF(X509_EXTENSION) * __X509_CRL_get0_extensions(__reg("a6") struct Library * , __reg("a0") const X509_CRL * crl ) = "\tjsr\t-26196(a6)";
#define X509_CRL_get0_extensions(crl) __X509_CRL_get0_extensions(AmiSSLBase, (crl))

void __X509_CRL_get0_signature(__reg("a6") struct Library * , __reg("a0") const X509_CRL * crl , __reg("a1") const ASN1_BIT_STRING ** psig , __reg("a2") const X509_ALGOR ** palg ) = "\tjsr\t-26202(a6)";
#define X509_CRL_get0_signature(crl, psig, palg) __X509_CRL_get0_signature(AmiSSLBase, (crl), (psig), (palg))

X509_NAME * __X509_CRL_get_issuer(__reg("a6") struct Library * , __reg("a0") const X509_CRL * crl ) = "\tjsr\t-26208(a6)";
#define X509_CRL_get_issuer(crl) __X509_CRL_get_issuer(AmiSSLBase, (crl))

ASN1_TIME * __X509_CRL_get_lastUpdate(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl ) = "\tjsr\t-26214(a6)";
#define X509_CRL_get_lastUpdate(crl) __X509_CRL_get_lastUpdate(AmiSSLBase, (crl))

ASN1_TIME * __X509_CRL_get_nextUpdate(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl ) = "\tjsr\t-26220(a6)";
#define X509_CRL_get_nextUpdate(crl) __X509_CRL_get_nextUpdate(AmiSSLBase, (crl))

STACK_OF(X509_REVOKED) * __X509_CRL_get_REVOKED(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl ) = "\tjsr\t-26226(a6)";
#define X509_CRL_get_REVOKED(crl) __X509_CRL_get_REVOKED(AmiSSLBase, (crl))

int __X509_CRL_get_signature_nid(__reg("a6") struct Library * , __reg("a0") const X509_CRL * crl ) = "\tjsr\t-26232(a6)";
#define X509_CRL_get_signature_nid(crl) __X509_CRL_get_signature_nid(AmiSSLBase, (crl))

long __X509_CRL_get_version(__reg("a6") struct Library * , __reg("a0") const X509_CRL * crl ) = "\tjsr\t-26238(a6)";
#define X509_CRL_get_version(crl) __X509_CRL_get_version(AmiSSLBase, (crl))

int __X509_CRL_up_ref(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl ) = "\tjsr\t-26244(a6)";
#define X509_CRL_up_ref(crl) __X509_CRL_up_ref(AmiSSLBase, (crl))

const STACK_OF(X509_EXTENSION) * __X509_get0_extensions(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-26250(a6)";
#define X509_get0_extensions(x) __X509_get0_extensions(AmiSSLBase, (x))

EVP_PKEY * __X509_get0_pubkey(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-26256(a6)";
#define X509_get0_pubkey(x) __X509_get0_pubkey(AmiSSLBase, (x))

STACK_OF(ASN1_OBJECT) * __X509_get0_reject_objects(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-26262(a6)";
#define X509_get0_reject_objects(x) __X509_get0_reject_objects(AmiSSLBase, (x))

const X509_ALGOR * __X509_get0_tbs_sigalg(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-26268(a6)";
#define X509_get0_tbs_sigalg(x) __X509_get0_tbs_sigalg(AmiSSLBase, (x))

STACK_OF(ASN1_OBJECT) * __X509_get0_trust_objects(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-26274(a6)";
#define X509_get0_trust_objects(x) __X509_get0_trust_objects(AmiSSLBase, (x))

void __X509_get0_uids(__reg("a6") struct Library * , __reg("a0") const X509 * x , __reg("a1") const ASN1_BIT_STRING ** piuid , __reg("a2") const ASN1_BIT_STRING ** psuid ) = "\tjsr\t-26280(a6)";
#define X509_get0_uids(x, piuid, psuid) __X509_get0_uids(AmiSSLBase, (x), (piuid), (psuid))

ASN1_TIME * __X509_getm_notAfter(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-26286(a6)";
#define X509_getm_notAfter(x) __X509_getm_notAfter(AmiSSLBase, (x))

ASN1_TIME * __X509_getm_notBefore(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-26292(a6)";
#define X509_getm_notBefore(x) __X509_getm_notBefore(AmiSSLBase, (x))

int __X509_get_signature_type(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-26298(a6)";
#define X509_get_signature_type(x) __X509_get_signature_type(AmiSSLBase, (x))

long __X509_get_version(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-26304(a6)";
#define X509_get_version(x) __X509_get_version(AmiSSLBase, (x))

X509_PUBKEY * __X509_get_X509_PUBKEY(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-26310(a6)";
#define X509_get_X509_PUBKEY(x) __X509_get_X509_PUBKEY(AmiSSLBase, (x))

int __X509_NAME_ENTRY_set(__reg("a6") struct Library * , __reg("a0") const X509_NAME_ENTRY * ne ) = "\tjsr\t-26316(a6)";
#define X509_NAME_ENTRY_set(ne) __X509_NAME_ENTRY_set(AmiSSLBase, (ne))

int __X509_NAME_get0_der(__reg("a6") struct Library * , __reg("a0") const X509_NAME * nm , __reg("a1") const unsigned char ** pder , __reg("a2") size_t * pderlen ) = "\tjsr\t-26322(a6)";
#define X509_NAME_get0_der(nm, pder, pderlen) __X509_NAME_get0_der(AmiSSLBase, (nm), (pder), (pderlen))

EVP_PKEY * __X509_PUBKEY_get0(__reg("a6") struct Library * , __reg("a0") const X509_PUBKEY * key ) = "\tjsr\t-26328(a6)";
#define X509_PUBKEY_get0(key) __X509_PUBKEY_get0(AmiSSLBase, (key))

void __X509_REQ_get0_signature(__reg("a6") struct Library * , __reg("a0") const X509_REQ * req , __reg("a1") const ASN1_BIT_STRING ** psig , __reg("a2") const X509_ALGOR ** palg ) = "\tjsr\t-26334(a6)";
#define X509_REQ_get0_signature(req, psig, palg) __X509_REQ_get0_signature(AmiSSLBase, (req), (psig), (palg))

int __X509_REQ_get_signature_nid(__reg("a6") struct Library * , __reg("a0") const X509_REQ * req ) = "\tjsr\t-26340(a6)";
#define X509_REQ_get_signature_nid(req) __X509_REQ_get_signature_nid(AmiSSLBase, (req))

X509_NAME * __X509_REQ_get_subject_name(__reg("a6") struct Library * , __reg("a0") const X509_REQ * req ) = "\tjsr\t-26346(a6)";
#define X509_REQ_get_subject_name(req) __X509_REQ_get_subject_name(AmiSSLBase, (req))

long __X509_REQ_get_version(__reg("a6") struct Library * , __reg("a0") const X509_REQ * req ) = "\tjsr\t-26352(a6)";
#define X509_REQ_get_version(req) __X509_REQ_get_version(AmiSSLBase, (req))

X509_PUBKEY * __X509_REQ_get_X509_PUBKEY(__reg("a6") struct Library * , __reg("a0") X509_REQ * req ) = "\tjsr\t-26358(a6)";
#define X509_REQ_get_X509_PUBKEY(req) __X509_REQ_get_X509_PUBKEY(AmiSSLBase, (req))

const STACK_OF(X509_EXTENSION) * __X509_REVOKED_get0_extensions(__reg("a6") struct Library * , __reg("a0") const X509_REVOKED * r ) = "\tjsr\t-26364(a6)";
#define X509_REVOKED_get0_extensions(r) __X509_REVOKED_get0_extensions(AmiSSLBase, (r))

const ASN1_TIME * __X509_REVOKED_get0_revocationDate(__reg("a6") struct Library * , __reg("a0") const X509_REVOKED * x ) = "\tjsr\t-26370(a6)";
#define X509_REVOKED_get0_revocationDate(x) __X509_REVOKED_get0_revocationDate(AmiSSLBase, (x))

const ASN1_INTEGER * __X509_REVOKED_get0_serialNumber(__reg("a6") struct Library * , __reg("a0") const X509_REVOKED * x ) = "\tjsr\t-26376(a6)";
#define X509_REVOKED_get0_serialNumber(x) __X509_REVOKED_get0_serialNumber(AmiSSLBase, (x))

int __X509_trusted(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-26382(a6)";
#define X509_trusted(x) __X509_trusted(AmiSSLBase, (x))

int __X509_up_ref(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-26388(a6)";
#define X509_up_ref(x) __X509_up_ref(AmiSSLBase, (x))

int __X509_STORE_CTX_get_num_untrusted(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-26394(a6)";
#define X509_STORE_CTX_get_num_untrusted(ctx) __X509_STORE_CTX_get_num_untrusted(AmiSSLBase, (ctx))

void __X509_STORE_CTX_set0_dane(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("a1") SSL_DANE * dane ) = "\tjsr\t-26400(a6)";
#define X509_STORE_CTX_set0_dane(ctx, dane) __X509_STORE_CTX_set0_dane(AmiSSLBase, (ctx), (dane))

void __X509_VERIFY_PARAM_move_peername(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * to , __reg("a1") X509_VERIFY_PARAM * from ) = "\tjsr\t-26406(a6)";
#define X509_VERIFY_PARAM_move_peername(to, from) __X509_VERIFY_PARAM_move_peername(AmiSSLBase, (to), (from))

char * __i2s_ASN1_IA5STRING(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * method , __reg("a1") ASN1_IA5STRING * ia5 ) = "\tjsr\t-26412(a6)";
#define i2s_ASN1_IA5STRING(method, ia5) __i2s_ASN1_IA5STRING(AmiSSLBase, (method), (ia5))

ASN1_IA5STRING * __s2i_ASN1_IA5STRING(__reg("a6") struct Library * , __reg("a0") X509V3_EXT_METHOD * method , __reg("a1") X509V3_CTX * ctx , __reg("a2") const char * str ) = "\tjsr\t-26418(a6)";
#define s2i_ASN1_IA5STRING(method, ctx, str) __s2i_ASN1_IA5STRING(AmiSSLBase, (method), (ctx), (str))

int __X509v3_addr_add_inherit(__reg("a6") struct Library * , __reg("a0") IPAddrBlocks * addr , __reg("d0") const unsigned afi , __reg("a1") const unsigned * safi ) = "\tjsr\t-26424(a6)";
#define X509v3_addr_add_inherit(addr, afi, safi) __X509v3_addr_add_inherit(AmiSSLBase, (addr), (afi), (safi))

int __X509v3_addr_add_prefix(__reg("a6") struct Library * , __reg("a0") IPAddrBlocks * addr , __reg("d0") const unsigned afi , __reg("a1") const unsigned * safi , __reg("a2") unsigned char * a , __reg("d1") const int prefixlen ) = "\tjsr\t-26430(a6)";
#define X509v3_addr_add_prefix(addr, afi, safi, a, prefixlen) __X509v3_addr_add_prefix(AmiSSLBase, (addr), (afi), (safi), (a), (prefixlen))

int __X509v3_addr_add_range(__reg("a6") struct Library * , __reg("a0") IPAddrBlocks * addr , __reg("d0") const unsigned afi , __reg("a1") const unsigned * safi , __reg("a2") unsigned char * min , __reg("a3") unsigned char * max ) = "\tjsr\t-26436(a6)";
#define X509v3_addr_add_range(addr, afi, safi, min, max) __X509v3_addr_add_range(AmiSSLBase, (addr), (afi), (safi), (min), (max))

int __X509v3_addr_canonize(__reg("a6") struct Library * , __reg("a0") IPAddrBlocks * addr ) = "\tjsr\t-26442(a6)";
#define X509v3_addr_canonize(addr) __X509v3_addr_canonize(AmiSSLBase, (addr))

unsigned __X509v3_addr_get_afi(__reg("a6") struct Library * , __reg("a0") const IPAddressFamily * f ) = "\tjsr\t-26448(a6)";
#define X509v3_addr_get_afi(f) __X509v3_addr_get_afi(AmiSSLBase, (f))

int __X509v3_addr_get_range(__reg("a6") struct Library * , __reg("a0") IPAddressOrRange * aor , __reg("d0") const unsigned afi , __reg("a1") unsigned char * min , __reg("a2") unsigned char * max , __reg("d1") const int length ) = "\tjsr\t-26454(a6)";
#define X509v3_addr_get_range(aor, afi, min, max, length) __X509v3_addr_get_range(AmiSSLBase, (aor), (afi), (min), (max), (length))

int __X509v3_addr_inherits(__reg("a6") struct Library * , __reg("a0") IPAddrBlocks * addr ) = "\tjsr\t-26460(a6)";
#define X509v3_addr_inherits(addr) __X509v3_addr_inherits(AmiSSLBase, (addr))

int __X509v3_addr_is_canonical(__reg("a6") struct Library * , __reg("a0") IPAddrBlocks * addr ) = "\tjsr\t-26466(a6)";
#define X509v3_addr_is_canonical(addr) __X509v3_addr_is_canonical(AmiSSLBase, (addr))

int __X509v3_addr_subset(__reg("a6") struct Library * , __reg("a0") IPAddrBlocks * a , __reg("a1") IPAddrBlocks * b ) = "\tjsr\t-26472(a6)";
#define X509v3_addr_subset(a, b) __X509v3_addr_subset(AmiSSLBase, (a), (b))

int __X509v3_addr_validate_path(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx ) = "\tjsr\t-26478(a6)";
#define X509v3_addr_validate_path(ctx) __X509v3_addr_validate_path(AmiSSLBase, (ctx))

int __X509v3_addr_validate_resource_set(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509) * chain , __reg("a1") IPAddrBlocks * ext , __reg("d0") int allow_inheritance ) = "\tjsr\t-26484(a6)";
#define X509v3_addr_validate_resource_set(chain, ext, allow_inheritance) __X509v3_addr_validate_resource_set(AmiSSLBase, (chain), (ext), (allow_inheritance))

int __X509v3_asid_add_inherit(__reg("a6") struct Library * , __reg("a0") ASIdentifiers * asid , __reg("d0") int which ) = "\tjsr\t-26490(a6)";
#define X509v3_asid_add_inherit(asid, which) __X509v3_asid_add_inherit(AmiSSLBase, (asid), (which))

int __X509v3_asid_add_id_or_range(__reg("a6") struct Library * , __reg("a0") ASIdentifiers * asid , __reg("d0") int which , __reg("a1") ASN1_INTEGER * min , __reg("a2") ASN1_INTEGER * max ) = "\tjsr\t-26496(a6)";
#define X509v3_asid_add_id_or_range(asid, which, min, max) __X509v3_asid_add_id_or_range(AmiSSLBase, (asid), (which), (min), (max))

int __X509v3_asid_canonize(__reg("a6") struct Library * , __reg("a0") ASIdentifiers * asid ) = "\tjsr\t-26502(a6)";
#define X509v3_asid_canonize(asid) __X509v3_asid_canonize(AmiSSLBase, (asid))

int __X509v3_asid_inherits(__reg("a6") struct Library * , __reg("a0") ASIdentifiers * asid ) = "\tjsr\t-26508(a6)";
#define X509v3_asid_inherits(asid) __X509v3_asid_inherits(AmiSSLBase, (asid))

int __X509v3_asid_is_canonical(__reg("a6") struct Library * , __reg("a0") ASIdentifiers * asid ) = "\tjsr\t-26514(a6)";
#define X509v3_asid_is_canonical(asid) __X509v3_asid_is_canonical(AmiSSLBase, (asid))

int __X509v3_asid_subset(__reg("a6") struct Library * , __reg("a0") ASIdentifiers * a , __reg("a1") ASIdentifiers * b ) = "\tjsr\t-26520(a6)";
#define X509v3_asid_subset(a, b) __X509v3_asid_subset(AmiSSLBase, (a), (b))

int __X509v3_asid_validate_path(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx ) = "\tjsr\t-26526(a6)";
#define X509v3_asid_validate_path(ctx) __X509v3_asid_validate_path(AmiSSLBase, (ctx))

int __X509v3_asid_validate_resource_set(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509) * chain , __reg("a1") ASIdentifiers * ext , __reg("d0") int allow_inheritance ) = "\tjsr\t-26532(a6)";
#define X509v3_asid_validate_resource_set(chain, ext, allow_inheritance) __X509v3_asid_validate_resource_set(AmiSSLBase, (chain), (ext), (allow_inheritance))

const ASN1_OCTET_STRING * __X509_get0_subject_key_id(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-26538(a6)";
#define X509_get0_subject_key_id(x) __X509_get0_subject_key_id(AmiSSLBase, (x))

uint32_t __X509_get_extended_key_usage(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-26544(a6)";
#define X509_get_extended_key_usage(x) __X509_get_extended_key_usage(AmiSSLBase, (x))

uint32_t __X509_get_extension_flags(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-26550(a6)";
#define X509_get_extension_flags(x) __X509_get_extension_flags(AmiSSLBase, (x))

uint32_t __X509_get_key_usage(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-26556(a6)";
#define X509_get_key_usage(x) __X509_get_key_usage(AmiSSLBase, (x))

int __DTLSv1_listen(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") BIO_ADDR * client ) = "\tjsr\t-26562(a6)";
#define DTLSv1_listen(s, client) __DTLSv1_listen(AmiSSLBase, (s), (client))

int __OPENSSL_init_ssl(__reg("a6") struct Library * , __reg("d0/d1") uint64_t opts , __reg("a0") const OPENSSL_INIT_SETTINGS * settings ) = "\tjsr\t-26568(a6)";
#define OPENSSL_init_ssl(opts, settings) __OPENSSL_init_ssl(AmiSSLBase, (opts), (settings))

int __SSL_add1_host(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const char * host ) = "\tjsr\t-26574(a6)";
#define SSL_add1_host(s, host) __SSL_add1_host(AmiSSLBase, (s), (host))

void __SSL_add_ssl_module(__reg("a6") struct Library * ) = "\tjsr\t-26580(a6)";
#define SSL_add_ssl_module() __SSL_add_ssl_module(AmiSSLBase)

int __SSL_CIPHER_get_cipher_nid(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c ) = "\tjsr\t-26586(a6)";
#define SSL_CIPHER_get_cipher_nid(c) __SSL_CIPHER_get_cipher_nid(AmiSSLBase, (c))

int __SSL_CIPHER_get_digest_nid(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c ) = "\tjsr\t-26592(a6)";
#define SSL_CIPHER_get_digest_nid(c) __SSL_CIPHER_get_digest_nid(AmiSSLBase, (c))

uint64_t __SSL_clear_options(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0/d1") uint64_t op ) = "\tjsr\t-26598(a6)";
#define SSL_clear_options(s, op) __SSL_clear_options(AmiSSLBase, (s), (op))

int __SSL_config(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const char * name ) = "\tjsr\t-26604(a6)";
#define SSL_config(s, name) __SSL_config(AmiSSLBase, (s), (name))

uint64_t __SSL_CTX_clear_options(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0/d1") uint64_t op ) = "\tjsr\t-26610(a6)";
#define SSL_CTX_clear_options(ctx, op) __SSL_CTX_clear_options(AmiSSLBase, (ctx), (op))

int __SSL_CTX_config(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * name ) = "\tjsr\t-26616(a6)";
#define SSL_CTX_config(ctx, name) __SSL_CTX_config(AmiSSLBase, (ctx), (name))

int __SSL_CTX_dane_enable(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-26622(a6)";
#define SSL_CTX_dane_enable(ctx) __SSL_CTX_dane_enable(AmiSSLBase, (ctx))

int __SSL_CTX_dane_mtype_set(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const EVP_MD * md , __reg("d0") uint8_t mtype , __reg("d1") uint8_t ord ) = "\tjsr\t-26628(a6)";
#define SSL_CTX_dane_mtype_set(ctx, md, mtype, ord) __SSL_CTX_dane_mtype_set(AmiSSLBase, (ctx), (md), (mtype), (ord))

void * __SSL_CTX_get0_security_ex_data(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-26634(a6)";
#define SSL_CTX_get0_security_ex_data(ctx) __SSL_CTX_get0_security_ex_data(AmiSSLBase, (ctx))

uint64_t __SSL_CTX_get_options(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-26640(a6)";
#define SSL_CTX_get_options(ctx) __SSL_CTX_get_options(AmiSSLBase, (ctx))

int  (* __SSL_CTX_get_security_callback(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) )(const SSL *, const SSL_CTX *, int, int, int, void *, void *) =  "\tjsr\t-26646(a6)";
#define SSL_CTX_get_security_callback(ctx) __SSL_CTX_get_security_callback(AmiSSLBase, (ctx))

int __SSL_CTX_get_security_level(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-26652(a6)";
#define SSL_CTX_get_security_level(ctx) __SSL_CTX_get_security_level(AmiSSLBase, (ctx))

void __SSL_CTX_set0_security_ex_data(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") void * ex ) = "\tjsr\t-26658(a6)";
#define SSL_CTX_set0_security_ex_data(ctx, ex) __SSL_CTX_set0_security_ex_data(AmiSSLBase, (ctx), (ex))

int __SSL_CTX_set_default_verify_dir(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-26664(a6)";
#define SSL_CTX_set_default_verify_dir(ctx) __SSL_CTX_set_default_verify_dir(AmiSSLBase, (ctx))

int __SSL_CTX_set_default_verify_file(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-26670(a6)";
#define SSL_CTX_set_default_verify_file(ctx) __SSL_CTX_set_default_verify_file(AmiSSLBase, (ctx))

void __SSL_CTX_set_not_resumable_session_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*cb)(SSL *,int) ) = "\tjsr\t-26676(a6)";
#define SSL_CTX_set_not_resumable_session_callback(ctx, cb) __SSL_CTX_set_not_resumable_session_callback(AmiSSLBase, (ctx), (cb))

uint64_t __SSL_CTX_set_options(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0/d1") uint64_t op ) = "\tjsr\t-26682(a6)";
#define SSL_CTX_set_options(ctx, op) __SSL_CTX_set_options(AmiSSLBase, (ctx), (op))

void __SSL_CTX_set_security_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*cb)(const SSL *,const SSL_CTX *,int,int,int,void *,void *) ) = "\tjsr\t-26688(a6)";
#define SSL_CTX_set_security_callback(ctx, cb) __SSL_CTX_set_security_callback(AmiSSLBase, (ctx), (cb))

void __SSL_CTX_set_security_level(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int level ) = "\tjsr\t-26694(a6)";
#define SSL_CTX_set_security_level(ctx, level) __SSL_CTX_set_security_level(AmiSSLBase, (ctx), (level))

int __SSL_CTX_up_ref(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-26700(a6)";
#define SSL_CTX_up_ref(ctx) __SSL_CTX_up_ref(AmiSSLBase, (ctx))

int __SSL_dane_enable(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const char * basedomain ) = "\tjsr\t-26706(a6)";
#define SSL_dane_enable(s, basedomain) __SSL_dane_enable(AmiSSLBase, (s), (basedomain))

int __SSL_dane_tlsa_add(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") uint8_t usage , __reg("d1") uint8_t selector , __reg("d2") uint8_t mtype , __reg("a1") unsigned const char * data , __reg("d3") size_t dlen ) = "\tjsr\t-26712(a6)";
#define SSL_dane_tlsa_add(s, usage, selector, mtype, data, dlen) __SSL_dane_tlsa_add(AmiSSLBase, (s), (usage), (selector), (mtype), (data), (dlen))

SSL_DANE * __SSL_get0_dane(__reg("a6") struct Library * , __reg("a0") SSL * ssl ) = "\tjsr\t-26718(a6)";
#define SSL_get0_dane(ssl) __SSL_get0_dane(AmiSSLBase, (ssl))

int __SSL_get0_dane_authority(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") X509 ** mcert , __reg("a2") EVP_PKEY ** mspki ) = "\tjsr\t-26724(a6)";
#define SSL_get0_dane_authority(s, mcert, mspki) __SSL_get0_dane_authority(AmiSSLBase, (s), (mcert), (mspki))

int __SSL_get0_dane_tlsa(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") uint8_t * usage , __reg("a2") uint8_t * selector , __reg("a3") uint8_t * mtype , __reg("d0") unsigned const char ** data , __reg("d1") size_t * dlen ) = "\tjsr\t-26730(a6)";
#define SSL_get0_dane_tlsa(s, usage, selector, mtype, data, dlen) __SSL_get0_dane_tlsa(AmiSSLBase, (s), (usage), (selector), (mtype), (data), (dlen))

const char * __SSL_get0_peername(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-26736(a6)";
#define SSL_get0_peername(s) __SSL_get0_peername(AmiSSLBase, (s))

void * __SSL_get0_security_ex_data(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-26742(a6)";
#define SSL_get0_security_ex_data(s) __SSL_get0_security_ex_data(AmiSSLBase, (s))

STACK_OF(SSL_CIPHER) * __SSL_get1_supported_ciphers(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-26748(a6)";
#define SSL_get1_supported_ciphers(s) __SSL_get1_supported_ciphers(AmiSSLBase, (s))

size_t __SSL_get_client_random(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("a1") unsigned char * out , __reg("d0") size_t outlen ) = "\tjsr\t-26760(a6)";
#define SSL_get_client_random(s, out, outlen) __SSL_get_client_random(AmiSSLBase, (s), (out), (outlen))

uint64_t __SSL_get_options(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-26766(a6)";
#define SSL_get_options(s) __SSL_get_options(AmiSSLBase, (s))

int  (* __SSL_get_security_callback(__reg("a6") struct Library * , __reg("a0") const SSL * s ) )(const SSL *, const SSL_CTX *, int, int, int, void *, void *) =  "\tjsr\t-26772(a6)";
#define SSL_get_security_callback(s) __SSL_get_security_callback(AmiSSLBase, (s))

int __SSL_get_security_level(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-26778(a6)";
#define SSL_get_security_level(s) __SSL_get_security_level(AmiSSLBase, (s))

size_t __SSL_get_server_random(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("a1") unsigned char * out , __reg("d0") size_t outlen ) = "\tjsr\t-26784(a6)";
#define SSL_get_server_random(s, out, outlen) __SSL_get_server_random(AmiSSLBase, (s), (out), (outlen))

OSSL_HANDSHAKE_STATE __SSL_get_state(__reg("a6") struct Library * , __reg("a0") const SSL * ssl ) = "\tjsr\t-26790(a6)";
#define SSL_get_state(ssl) __SSL_get_state(AmiSSLBase, (ssl))

int __SSL_in_before(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-26796(a6)";
#define SSL_in_before(s) __SSL_in_before(AmiSSLBase, (s))

int __SSL_in_init(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-26802(a6)";
#define SSL_in_init(s) __SSL_in_init(AmiSSLBase, (s))

int __SSL_is_init_finished(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-26808(a6)";
#define SSL_is_init_finished(s) __SSL_is_init_finished(AmiSSLBase, (s))

void __SSL_SESSION_get0_ticket(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s , __reg("a1") const unsigned char ** tick , __reg("a2") size_t * len ) = "\tjsr\t-26814(a6)";
#define SSL_SESSION_get0_ticket(s, tick, len) __SSL_SESSION_get0_ticket(AmiSSLBase, (s), (tick), (len))

size_t __SSL_SESSION_get_master_key(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * sess , __reg("a1") unsigned char * out , __reg("d0") size_t outlen ) = "\tjsr\t-26820(a6)";
#define SSL_SESSION_get_master_key(sess, out, outlen) __SSL_SESSION_get_master_key(AmiSSLBase, (sess), (out), (outlen))

unsigned long __SSL_SESSION_get_ticket_lifetime_hint(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s ) = "\tjsr\t-26826(a6)";
#define SSL_SESSION_get_ticket_lifetime_hint(s) __SSL_SESSION_get_ticket_lifetime_hint(AmiSSLBase, (s))

int __SSL_SESSION_has_ticket(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s ) = "\tjsr\t-26832(a6)";
#define SSL_SESSION_has_ticket(s) __SSL_SESSION_has_ticket(AmiSSLBase, (s))

int __SSL_SESSION_print_keylog(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const SSL_SESSION * x ) = "\tjsr\t-26838(a6)";
#define SSL_SESSION_print_keylog(bp, x) __SSL_SESSION_print_keylog(AmiSSLBase, (bp), (x))

int __SSL_session_reused(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-26844(a6)";
#define SSL_session_reused(s) __SSL_session_reused(AmiSSLBase, (s))

void __SSL_set0_security_ex_data(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") void * ex ) = "\tjsr\t-26850(a6)";
#define SSL_set0_security_ex_data(s, ex) __SSL_set0_security_ex_data(AmiSSLBase, (s), (ex))

int __SSL_set1_host(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const char * host ) = "\tjsr\t-26856(a6)";
#define SSL_set1_host(s, host) __SSL_set1_host(AmiSSLBase, (s), (host))

void __SSL_set_default_passwd_cb(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") pem_password_cb * cb ) = "\tjsr\t-26862(a6)";
#define SSL_set_default_passwd_cb(s, cb) __SSL_set_default_passwd_cb(AmiSSLBase, (s), (cb))

void __SSL_set_default_passwd_cb_userdata(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") void * u ) = "\tjsr\t-26868(a6)";
#define SSL_set_default_passwd_cb_userdata(s, u) __SSL_set_default_passwd_cb_userdata(AmiSSLBase, (s), (u))

void __SSL_set_hostflags(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") unsigned int flags ) = "\tjsr\t-26874(a6)";
#define SSL_set_hostflags(s, flags) __SSL_set_hostflags(AmiSSLBase, (s), (flags))

void __SSL_set_not_resumable_session_callback(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") int (*cb)(SSL *,int) ) = "\tjsr\t-26880(a6)";
#define SSL_set_not_resumable_session_callback(ssl, cb) __SSL_set_not_resumable_session_callback(AmiSSLBase, (ssl), (cb))

uint64_t __SSL_set_options(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0/d1") uint64_t op ) = "\tjsr\t-26886(a6)";
#define SSL_set_options(s, op) __SSL_set_options(AmiSSLBase, (s), (op))

void __SSL_set0_rbio(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") BIO * rbio ) = "\tjsr\t-26892(a6)";
#define SSL_set0_rbio(s, rbio) __SSL_set0_rbio(AmiSSLBase, (s), (rbio))

void __SSL_set_security_callback(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") int (*cb)(const SSL *,const SSL_CTX *,int,int,int,void *,void *) ) = "\tjsr\t-26898(a6)";
#define SSL_set_security_callback(s, cb) __SSL_set_security_callback(AmiSSLBase, (s), (cb))

void __SSL_set_security_level(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int level ) = "\tjsr\t-26904(a6)";
#define SSL_set_security_level(s, level) __SSL_set_security_level(AmiSSLBase, (s), (level))

void __SSL_set0_wbio(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") BIO * wbio ) = "\tjsr\t-26910(a6)";
#define SSL_set0_wbio(s, wbio) __SSL_set0_wbio(AmiSSLBase, (s), (wbio))

int __SSL_up_ref(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-26916(a6)";
#define SSL_up_ref(s) __SSL_up_ref(AmiSSLBase, (s))

int __SSL_use_certificate_chain_file(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const char * file ) = "\tjsr\t-26922(a6)";
#define SSL_use_certificate_chain_file(ssl, file) __SSL_use_certificate_chain_file(AmiSSLBase, (ssl), (file))

int __SSL_waiting_for_async(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-26928(a6)";
#define SSL_waiting_for_async(s) __SSL_waiting_for_async(AmiSSLBase, (s))

const SSL_METHOD * __TLS_client_method(__reg("a6") struct Library * ) = "\tjsr\t-26934(a6)";
#define TLS_client_method() __TLS_client_method(AmiSSLBase)

const SSL_METHOD * __TLS_method(__reg("a6") struct Library * ) = "\tjsr\t-26940(a6)";
#define TLS_method() __TLS_method(AmiSSLBase)

const SSL_METHOD * __TLS_server_method(__reg("a6") struct Library * ) = "\tjsr\t-26946(a6)";
#define TLS_server_method() __TLS_server_method(AmiSSLBase)

ASYNC_WAIT_CTX * __ASYNC_WAIT_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-26952(a6)";
#define ASYNC_WAIT_CTX_new() __ASYNC_WAIT_CTX_new(AmiSSLBase)

void __ASYNC_WAIT_CTX_free(__reg("a6") struct Library * , __reg("a0") ASYNC_WAIT_CTX * ctx ) = "\tjsr\t-26958(a6)";
#define ASYNC_WAIT_CTX_free(ctx) __ASYNC_WAIT_CTX_free(AmiSSLBase, (ctx))

int __ASYNC_WAIT_CTX_set_wait_fd(__reg("a6") struct Library * , __reg("a0") ASYNC_WAIT_CTX * ctx , __reg("a1") const void * key , __reg("d0") OSSL_ASYNC_FD fd , __reg("a2") void * custom_data , __reg("a3") void (*cleanup)(ASYNC_WAIT_CTX *,const void *,OSSL_ASYNC_FD,void *) ) = "\tjsr\t-26964(a6)";
#define ASYNC_WAIT_CTX_set_wait_fd(ctx, key, fd, custom_data, cleanup) __ASYNC_WAIT_CTX_set_wait_fd(AmiSSLBase, (ctx), (key), (fd), (custom_data), (cleanup))

int __ASYNC_WAIT_CTX_get_fd(__reg("a6") struct Library * , __reg("a0") ASYNC_WAIT_CTX * ctx , __reg("a1") const void * key , __reg("a2") OSSL_ASYNC_FD * fd , __reg("a3") void ** custom_data ) = "\tjsr\t-26970(a6)";
#define ASYNC_WAIT_CTX_get_fd(ctx, key, fd, custom_data) __ASYNC_WAIT_CTX_get_fd(AmiSSLBase, (ctx), (key), (fd), (custom_data))

int __ASYNC_WAIT_CTX_get_all_fds(__reg("a6") struct Library * , __reg("a0") ASYNC_WAIT_CTX * ctx , __reg("a1") OSSL_ASYNC_FD * fd , __reg("a2") size_t * numfds ) = "\tjsr\t-26976(a6)";
#define ASYNC_WAIT_CTX_get_all_fds(ctx, fd, numfds) __ASYNC_WAIT_CTX_get_all_fds(AmiSSLBase, (ctx), (fd), (numfds))

int __ASYNC_WAIT_CTX_get_changed_fds(__reg("a6") struct Library * , __reg("a0") ASYNC_WAIT_CTX * ctx , __reg("a1") OSSL_ASYNC_FD * addfd , __reg("a2") size_t * numaddfds , __reg("a3") OSSL_ASYNC_FD * delfd , __reg("d0") size_t * numdelfds ) = "\tjsr\t-26982(a6)";
#define ASYNC_WAIT_CTX_get_changed_fds(ctx, addfd, numaddfds, delfd, numdelfds) __ASYNC_WAIT_CTX_get_changed_fds(AmiSSLBase, (ctx), (addfd), (numaddfds), (delfd), (numdelfds))

int __ASYNC_WAIT_CTX_clear_fd(__reg("a6") struct Library * , __reg("a0") ASYNC_WAIT_CTX * ctx , __reg("a1") const void * key ) = "\tjsr\t-26988(a6)";
#define ASYNC_WAIT_CTX_clear_fd(ctx, key) __ASYNC_WAIT_CTX_clear_fd(AmiSSLBase, (ctx), (key))

int __ASYNC_is_capable(__reg("a6") struct Library * ) = "\tjsr\t-26994(a6)";
#define ASYNC_is_capable() __ASYNC_is_capable(AmiSSLBase)

ASYNC_WAIT_CTX * __ASYNC_get_wait_ctx(__reg("a6") struct Library * , __reg("a0") ASYNC_JOB * job ) = "\tjsr\t-27000(a6)";
#define ASYNC_get_wait_ctx(job) __ASYNC_get_wait_ctx(AmiSSLBase, (job))

int __BIO_up_ref(__reg("a6") struct Library * , __reg("a0") BIO * a ) = "\tjsr\t-27006(a6)";
#define BIO_up_ref(a) __BIO_up_ref(AmiSSLBase, (a))

int __BN_BLINDING_is_current_thread(__reg("a6") struct Library * , __reg("a0") BN_BLINDING * b ) = "\tjsr\t-27012(a6)";
#define BN_BLINDING_is_current_thread(b) __BN_BLINDING_is_current_thread(AmiSSLBase, (b))

void __BN_BLINDING_set_current_thread(__reg("a6") struct Library * , __reg("a0") BN_BLINDING * b ) = "\tjsr\t-27018(a6)";
#define BN_BLINDING_set_current_thread(b) __BN_BLINDING_set_current_thread(AmiSSLBase, (b))

int __BN_BLINDING_lock(__reg("a6") struct Library * , __reg("a0") BN_BLINDING * b ) = "\tjsr\t-27024(a6)";
#define BN_BLINDING_lock(b) __BN_BLINDING_lock(AmiSSLBase, (b))

int __BN_BLINDING_unlock(__reg("a6") struct Library * , __reg("a0") BN_BLINDING * b ) = "\tjsr\t-27030(a6)";
#define BN_BLINDING_unlock(b) __BN_BLINDING_unlock(AmiSSLBase, (b))

int __CRYPTO_THREAD_run_once(__reg("a6") struct Library * , __reg("a0") CRYPTO_ONCE * once , __reg("a1") void (*init)(void) ) = "\tjsr\t-27036(a6)";
#define CRYPTO_THREAD_run_once(once, init) __CRYPTO_THREAD_run_once(AmiSSLBase, (once), (init))

int __CRYPTO_THREAD_init_local(__reg("a6") struct Library * , __reg("a0") CRYPTO_THREAD_LOCAL * key , __reg("a1") void (*cleanup)(void *) ) = "\tjsr\t-27042(a6)";
#define CRYPTO_THREAD_init_local(key, cleanup) __CRYPTO_THREAD_init_local(AmiSSLBase, (key), (cleanup))

void * __CRYPTO_THREAD_get_local(__reg("a6") struct Library * , __reg("a0") CRYPTO_THREAD_LOCAL * key ) = "\tjsr\t-27048(a6)";
#define CRYPTO_THREAD_get_local(key) __CRYPTO_THREAD_get_local(AmiSSLBase, (key))

int __CRYPTO_THREAD_set_local(__reg("a6") struct Library * , __reg("a0") CRYPTO_THREAD_LOCAL * key , __reg("a1") void * val ) = "\tjsr\t-27054(a6)";
#define CRYPTO_THREAD_set_local(key, val) __CRYPTO_THREAD_set_local(AmiSSLBase, (key), (val))

int __CRYPTO_THREAD_cleanup_local(__reg("a6") struct Library * , __reg("a0") CRYPTO_THREAD_LOCAL * key ) = "\tjsr\t-27060(a6)";
#define CRYPTO_THREAD_cleanup_local(key) __CRYPTO_THREAD_cleanup_local(AmiSSLBase, (key))

CRYPTO_THREAD_ID __CRYPTO_THREAD_get_current_id(__reg("a6") struct Library * ) = "\tjsr\t-27066(a6)";
#define CRYPTO_THREAD_get_current_id() __CRYPTO_THREAD_get_current_id(AmiSSLBase)

int __CRYPTO_THREAD_compare_id(__reg("a6") struct Library * , __reg("d0") CRYPTO_THREAD_ID a , __reg("d1") CRYPTO_THREAD_ID b ) = "\tjsr\t-27072(a6)";
#define CRYPTO_THREAD_compare_id(a, b) __CRYPTO_THREAD_compare_id(AmiSSLBase, (a), (b))

CRYPTO_RWLOCK * __CRYPTO_THREAD_lock_new(__reg("a6") struct Library * ) = "\tjsr\t-27078(a6)";
#define CRYPTO_THREAD_lock_new() __CRYPTO_THREAD_lock_new(AmiSSLBase)

int __CRYPTO_THREAD_read_lock(__reg("a6") struct Library * , __reg("a0") CRYPTO_RWLOCK * lock ) = "\tjsr\t-27084(a6)";
#define CRYPTO_THREAD_read_lock(lock) __CRYPTO_THREAD_read_lock(AmiSSLBase, (lock))

int __CRYPTO_THREAD_write_lock(__reg("a6") struct Library * , __reg("a0") CRYPTO_RWLOCK * lock ) = "\tjsr\t-27090(a6)";
#define CRYPTO_THREAD_write_lock(lock) __CRYPTO_THREAD_write_lock(AmiSSLBase, (lock))

int __CRYPTO_THREAD_unlock(__reg("a6") struct Library * , __reg("a0") CRYPTO_RWLOCK * lock ) = "\tjsr\t-27096(a6)";
#define CRYPTO_THREAD_unlock(lock) __CRYPTO_THREAD_unlock(AmiSSLBase, (lock))

void __CRYPTO_THREAD_lock_free(__reg("a6") struct Library * , __reg("a0") CRYPTO_RWLOCK * lock ) = "\tjsr\t-27102(a6)";
#define CRYPTO_THREAD_lock_free(lock) __CRYPTO_THREAD_lock_free(AmiSSLBase, (lock))

int __CRYPTO_atomic_add(__reg("a6") struct Library * , __reg("a0") int * val , __reg("d0") int amount , __reg("a1") int * ret , __reg("a2") CRYPTO_RWLOCK * lock ) = "\tjsr\t-27108(a6)";
#define CRYPTO_atomic_add(val, amount, ret, lock) __CRYPTO_atomic_add(AmiSSLBase, (val), (amount), (ret), (lock))

void __OPENSSL_die(__reg("a6") struct Library * , __reg("a0") const char * assertion , __reg("a1") const char * file , __reg("d0") int line ) = "\tjsr\t-27114(a6)";
#define OPENSSL_die(assertion, file, line) __OPENSSL_die(AmiSSLBase, (assertion), (file), (line))

CT_POLICY_EVAL_CTX * __CT_POLICY_EVAL_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-27120(a6)";
#define CT_POLICY_EVAL_CTX_new() __CT_POLICY_EVAL_CTX_new(AmiSSLBase)

void __CT_POLICY_EVAL_CTX_free(__reg("a6") struct Library * , __reg("a0") CT_POLICY_EVAL_CTX * ctx ) = "\tjsr\t-27126(a6)";
#define CT_POLICY_EVAL_CTX_free(ctx) __CT_POLICY_EVAL_CTX_free(AmiSSLBase, (ctx))

X509 * __CT_POLICY_EVAL_CTX_get0_cert(__reg("a6") struct Library * , __reg("a0") const CT_POLICY_EVAL_CTX * ctx ) = "\tjsr\t-27132(a6)";
#define CT_POLICY_EVAL_CTX_get0_cert(ctx) __CT_POLICY_EVAL_CTX_get0_cert(AmiSSLBase, (ctx))

X509 * __CT_POLICY_EVAL_CTX_get0_issuer(__reg("a6") struct Library * , __reg("a0") const CT_POLICY_EVAL_CTX * ctx ) = "\tjsr\t-27138(a6)";
#define CT_POLICY_EVAL_CTX_get0_issuer(ctx) __CT_POLICY_EVAL_CTX_get0_issuer(AmiSSLBase, (ctx))

const CTLOG_STORE * __CT_POLICY_EVAL_CTX_get0_log_store(__reg("a6") struct Library * , __reg("a0") const CT_POLICY_EVAL_CTX * ctx ) = "\tjsr\t-27144(a6)";
#define CT_POLICY_EVAL_CTX_get0_log_store(ctx) __CT_POLICY_EVAL_CTX_get0_log_store(AmiSSLBase, (ctx))

SCT * __SCT_new(__reg("a6") struct Library * ) = "\tjsr\t-27150(a6)";
#define SCT_new() __SCT_new(AmiSSLBase)

SCT * __SCT_new_from_base64(__reg("a6") struct Library * , __reg("d0") unsigned char version , __reg("a0") const char * logid_base64 , __reg("d1") ct_log_entry_type_t entry_type , __reg("d2/d3") uint64_t timestamp , __reg("a1") const char * extensions_base64 , __reg("a2") const char * signature_base64 ) = "\tjsr\t-27156(a6)";
#define SCT_new_from_base64(version, logid_base64, entry_type, timestamp, extensions_base64, signature_base64) __SCT_new_from_base64(AmiSSLBase, (version), (logid_base64), (entry_type), (timestamp), (extensions_base64), (signature_base64))

void __SCT_free(__reg("a6") struct Library * , __reg("a0") SCT * sct ) = "\tjsr\t-27162(a6)";
#define SCT_free(sct) __SCT_free(AmiSSLBase, (sct))

void __SCT_LIST_free(__reg("a6") struct Library * , __reg("a0") STACK_OF(SCT) * a ) = "\tjsr\t-27168(a6)";
#define SCT_LIST_free(a) __SCT_LIST_free(AmiSSLBase, (a))

sct_version_t __SCT_get_version(__reg("a6") struct Library * , __reg("a0") const SCT * sct ) = "\tjsr\t-27174(a6)";
#define SCT_get_version(sct) __SCT_get_version(AmiSSLBase, (sct))

int __SCT_set_version(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("d0") sct_version_t version ) = "\tjsr\t-27180(a6)";
#define SCT_set_version(sct, version) __SCT_set_version(AmiSSLBase, (sct), (version))

ct_log_entry_type_t __SCT_get_log_entry_type(__reg("a6") struct Library * , __reg("a0") const SCT * sct ) = "\tjsr\t-27186(a6)";
#define SCT_get_log_entry_type(sct) __SCT_get_log_entry_type(AmiSSLBase, (sct))

int __SCT_set_log_entry_type(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("d0") ct_log_entry_type_t entry_type ) = "\tjsr\t-27192(a6)";
#define SCT_set_log_entry_type(sct, entry_type) __SCT_set_log_entry_type(AmiSSLBase, (sct), (entry_type))

size_t __SCT_get0_log_id(__reg("a6") struct Library * , __reg("a0") const SCT * sct , __reg("a1") unsigned char ** log_id ) = "\tjsr\t-27198(a6)";
#define SCT_get0_log_id(sct, log_id) __SCT_get0_log_id(AmiSSLBase, (sct), (log_id))

int __SCT_set0_log_id(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("a1") unsigned char * log_id , __reg("d0") size_t log_id_len ) = "\tjsr\t-27204(a6)";
#define SCT_set0_log_id(sct, log_id, log_id_len) __SCT_set0_log_id(AmiSSLBase, (sct), (log_id), (log_id_len))

int __SCT_set1_log_id(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("a1") const unsigned char * log_id , __reg("d0") size_t log_id_len ) = "\tjsr\t-27210(a6)";
#define SCT_set1_log_id(sct, log_id, log_id_len) __SCT_set1_log_id(AmiSSLBase, (sct), (log_id), (log_id_len))

uint64_t __SCT_get_timestamp(__reg("a6") struct Library * , __reg("a0") const SCT * sct ) = "\tjsr\t-27216(a6)";
#define SCT_get_timestamp(sct) __SCT_get_timestamp(AmiSSLBase, (sct))

void __SCT_set_timestamp(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("d0/d1") uint64_t timestamp ) = "\tjsr\t-27222(a6)";
#define SCT_set_timestamp(sct, timestamp) __SCT_set_timestamp(AmiSSLBase, (sct), (timestamp))

int __SCT_get_signature_nid(__reg("a6") struct Library * , __reg("a0") const SCT * sct ) = "\tjsr\t-27228(a6)";
#define SCT_get_signature_nid(sct) __SCT_get_signature_nid(AmiSSLBase, (sct))

int __SCT_set_signature_nid(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("d0") int nid ) = "\tjsr\t-27234(a6)";
#define SCT_set_signature_nid(sct, nid) __SCT_set_signature_nid(AmiSSLBase, (sct), (nid))

size_t __SCT_get0_extensions(__reg("a6") struct Library * , __reg("a0") const SCT * sct , __reg("a1") unsigned char ** ext ) = "\tjsr\t-27240(a6)";
#define SCT_get0_extensions(sct, ext) __SCT_get0_extensions(AmiSSLBase, (sct), (ext))

void __SCT_set0_extensions(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("a1") unsigned char * ext , __reg("d0") size_t ext_len ) = "\tjsr\t-27246(a6)";
#define SCT_set0_extensions(sct, ext, ext_len) __SCT_set0_extensions(AmiSSLBase, (sct), (ext), (ext_len))

int __SCT_set1_extensions(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("a1") const unsigned char * ext , __reg("d0") size_t ext_len ) = "\tjsr\t-27252(a6)";
#define SCT_set1_extensions(sct, ext, ext_len) __SCT_set1_extensions(AmiSSLBase, (sct), (ext), (ext_len))

size_t __SCT_get0_signature(__reg("a6") struct Library * , __reg("a0") const SCT * sct , __reg("a1") unsigned char ** sig ) = "\tjsr\t-27258(a6)";
#define SCT_get0_signature(sct, sig) __SCT_get0_signature(AmiSSLBase, (sct), (sig))

void __SCT_set0_signature(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("a1") unsigned char * sig , __reg("d0") size_t sig_len ) = "\tjsr\t-27264(a6)";
#define SCT_set0_signature(sct, sig, sig_len) __SCT_set0_signature(AmiSSLBase, (sct), (sig), (sig_len))

int __SCT_set1_signature(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("a1") const unsigned char * sig , __reg("d0") size_t sig_len ) = "\tjsr\t-27270(a6)";
#define SCT_set1_signature(sct, sig, sig_len) __SCT_set1_signature(AmiSSLBase, (sct), (sig), (sig_len))

sct_source_t __SCT_get_source(__reg("a6") struct Library * , __reg("a0") const SCT * sct ) = "\tjsr\t-27276(a6)";
#define SCT_get_source(sct) __SCT_get_source(AmiSSLBase, (sct))

int __SCT_set_source(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("d0") sct_source_t source ) = "\tjsr\t-27282(a6)";
#define SCT_set_source(sct, source) __SCT_set_source(AmiSSLBase, (sct), (source))

void __SCT_print(__reg("a6") struct Library * , __reg("a0") const SCT * sct , __reg("a1") BIO * out , __reg("d0") int indent , __reg("a2") const CTLOG_STORE * logs ) = "\tjsr\t-27288(a6)";
#define SCT_print(sct, out, indent, logs) __SCT_print(AmiSSLBase, (sct), (out), (indent), (logs))

void __SCT_LIST_print(__reg("a6") struct Library * , __reg("a0") const STACK_OF(SCT) * sct_list , __reg("a1") BIO * out , __reg("d0") int indent , __reg("a2") const char * separator , __reg("a3") const CTLOG_STORE * logs ) = "\tjsr\t-27294(a6)";
#define SCT_LIST_print(sct_list, out, indent, separator, logs) __SCT_LIST_print(AmiSSLBase, (sct_list), (out), (indent), (separator), (logs))

sct_validation_status_t __SCT_get_validation_status(__reg("a6") struct Library * , __reg("a0") const SCT * sct ) = "\tjsr\t-27300(a6)";
#define SCT_get_validation_status(sct) __SCT_get_validation_status(AmiSSLBase, (sct))

int __SCT_validate(__reg("a6") struct Library * , __reg("a0") SCT * sct , __reg("a1") const CT_POLICY_EVAL_CTX * ctx ) = "\tjsr\t-27306(a6)";
#define SCT_validate(sct, ctx) __SCT_validate(AmiSSLBase, (sct), (ctx))

int __SCT_LIST_validate(__reg("a6") struct Library * , __reg("a0") const STACK_OF(SCT) * scts , __reg("a1") CT_POLICY_EVAL_CTX * ctx ) = "\tjsr\t-27312(a6)";
#define SCT_LIST_validate(scts, ctx) __SCT_LIST_validate(AmiSSLBase, (scts), (ctx))

int __i2o_SCT_LIST(__reg("a6") struct Library * , __reg("a0") const STACK_OF(SCT) * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-27318(a6)";
#define i2o_SCT_LIST(a, pp) __i2o_SCT_LIST(AmiSSLBase, (a), (pp))

STACK_OF(SCT) * __o2i_SCT_LIST(__reg("a6") struct Library * , __reg("a0") STACK_OF(SCT) ** a , __reg("a1") const unsigned char ** pp , __reg("d0") size_t len ) = "\tjsr\t-27324(a6)";
#define o2i_SCT_LIST(a, pp, len) __o2i_SCT_LIST(AmiSSLBase, (a), (pp), (len))

int __i2d_SCT_LIST(__reg("a6") struct Library * , __reg("a0") const STACK_OF(SCT) * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-27330(a6)";
#define i2d_SCT_LIST(a, pp) __i2d_SCT_LIST(AmiSSLBase, (a), (pp))

STACK_OF(SCT) * __d2i_SCT_LIST(__reg("a6") struct Library * , __reg("a0") STACK_OF(SCT) ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long len ) = "\tjsr\t-27336(a6)";
#define d2i_SCT_LIST(a, pp, len) __d2i_SCT_LIST(AmiSSLBase, (a), (pp), (len))

int __i2o_SCT(__reg("a6") struct Library * , __reg("a0") const SCT * sct , __reg("a1") unsigned char ** out ) = "\tjsr\t-27342(a6)";
#define i2o_SCT(sct, out) __i2o_SCT(AmiSSLBase, (sct), (out))

SCT * __o2i_SCT(__reg("a6") struct Library * , __reg("a0") SCT ** psct , __reg("a1") const unsigned char ** in , __reg("d0") size_t len ) = "\tjsr\t-27348(a6)";
#define o2i_SCT(psct, in, len) __o2i_SCT(AmiSSLBase, (psct), (in), (len))

CTLOG * __CTLOG_new(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * public_key , __reg("a1") const char * name ) = "\tjsr\t-27354(a6)";
#define CTLOG_new(public_key, name) __CTLOG_new(AmiSSLBase, (public_key), (name))

int __CTLOG_new_from_base64(__reg("a6") struct Library * , __reg("a0") CTLOG ** ct_log , __reg("a1") const char * pkey_base64 , __reg("a2") const char * name ) = "\tjsr\t-27360(a6)";
#define CTLOG_new_from_base64(ct_log, pkey_base64, name) __CTLOG_new_from_base64(AmiSSLBase, (ct_log), (pkey_base64), (name))

void __CTLOG_free(__reg("a6") struct Library * , __reg("a0") CTLOG * log ) = "\tjsr\t-27366(a6)";
#define CTLOG_free(log) __CTLOG_free(AmiSSLBase, (log))

const char * __CTLOG_get0_name(__reg("a6") struct Library * , __reg("a0") const CTLOG * log ) = "\tjsr\t-27372(a6)";
#define CTLOG_get0_name(log) __CTLOG_get0_name(AmiSSLBase, (log))

void __CTLOG_get0_log_id(__reg("a6") struct Library * , __reg("a0") const CTLOG * log , __reg("a1") const uint8_t ** log_id , __reg("a2") size_t * log_id_len ) = "\tjsr\t-27378(a6)";
#define CTLOG_get0_log_id(log, log_id, log_id_len) __CTLOG_get0_log_id(AmiSSLBase, (log), (log_id), (log_id_len))

EVP_PKEY * __CTLOG_get0_public_key(__reg("a6") struct Library * , __reg("a0") const CTLOG * log ) = "\tjsr\t-27384(a6)";
#define CTLOG_get0_public_key(log) __CTLOG_get0_public_key(AmiSSLBase, (log))

CTLOG_STORE * __CTLOG_STORE_new(__reg("a6") struct Library * ) = "\tjsr\t-27390(a6)";
#define CTLOG_STORE_new() __CTLOG_STORE_new(AmiSSLBase)

void __CTLOG_STORE_free(__reg("a6") struct Library * , __reg("a0") CTLOG_STORE * store ) = "\tjsr\t-27396(a6)";
#define CTLOG_STORE_free(store) __CTLOG_STORE_free(AmiSSLBase, (store))

const CTLOG * __CTLOG_STORE_get0_log_by_id(__reg("a6") struct Library * , __reg("a0") const CTLOG_STORE * store , __reg("a1") const uint8_t * log_id , __reg("d0") size_t log_id_len ) = "\tjsr\t-27402(a6)";
#define CTLOG_STORE_get0_log_by_id(store, log_id, log_id_len) __CTLOG_STORE_get0_log_by_id(AmiSSLBase, (store), (log_id), (log_id_len))

int __CTLOG_STORE_load_file(__reg("a6") struct Library * , __reg("a0") CTLOG_STORE * store , __reg("a1") const char * file ) = "\tjsr\t-27408(a6)";
#define CTLOG_STORE_load_file(store, file) __CTLOG_STORE_load_file(AmiSSLBase, (store), (file))

int __CTLOG_STORE_load_default_file(__reg("a6") struct Library * , __reg("a0") CTLOG_STORE * store ) = "\tjsr\t-27414(a6)";
#define CTLOG_STORE_load_default_file(store) __CTLOG_STORE_load_default_file(AmiSSLBase, (store))

int __ERR_load_CT_strings(__reg("a6") struct Library * ) = "\tjsr\t-27420(a6)";
#define ERR_load_CT_strings() __ERR_load_CT_strings(AmiSSLBase)

const ASN1_ITEM * __DHparams_it(__reg("a6") struct Library * ) = "\tjsr\t-27426(a6)";
#define DHparams_it() __DHparams_it(AmiSSLBase)

void __DSA_SIG_get0(__reg("a6") struct Library * , __reg("a0") const DSA_SIG * sig , __reg("a1") const BIGNUM ** pr , __reg("a2") const BIGNUM ** ps ) = "\tjsr\t-27432(a6)";
#define DSA_SIG_get0(sig, pr, ps) __DSA_SIG_get0(AmiSSLBase, (sig), (pr), (ps))

EC_GROUP * __EC_GROUP_new_from_ecparameters(__reg("a6") struct Library * , __reg("a0") const ECPARAMETERS * params ) = "\tjsr\t-27438(a6)";
#define EC_GROUP_new_from_ecparameters(params) __EC_GROUP_new_from_ecparameters(AmiSSLBase, (params))

ECPARAMETERS * __EC_GROUP_get_ecparameters(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") ECPARAMETERS * params ) = "\tjsr\t-27444(a6)";
#define EC_GROUP_get_ecparameters(group, params) __EC_GROUP_get_ecparameters(AmiSSLBase, (group), (params))

EC_GROUP * __EC_GROUP_new_from_ecpkparameters(__reg("a6") struct Library * , __reg("a0") const ECPKPARAMETERS * params ) = "\tjsr\t-27450(a6)";
#define EC_GROUP_new_from_ecpkparameters(params) __EC_GROUP_new_from_ecpkparameters(AmiSSLBase, (params))

ECPKPARAMETERS * __EC_GROUP_get_ecpkparameters(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") ECPKPARAMETERS * params ) = "\tjsr\t-27456(a6)";
#define EC_GROUP_get_ecpkparameters(group, params) __EC_GROUP_get_ecpkparameters(AmiSSLBase, (group), (params))

const ASN1_ITEM * __ECPKPARAMETERS_it(__reg("a6") struct Library * ) = "\tjsr\t-27462(a6)";
#define ECPKPARAMETERS_it() __ECPKPARAMETERS_it(AmiSSLBase)

const ASN1_ITEM * __ECPARAMETERS_it(__reg("a6") struct Library * ) = "\tjsr\t-27468(a6)";
#define ECPARAMETERS_it() __ECPARAMETERS_it(AmiSSLBase)

int __EC_KEY_can_sign(__reg("a6") struct Library * , __reg("a0") const EC_KEY * eckey ) = "\tjsr\t-27474(a6)";
#define EC_KEY_can_sign(eckey) __EC_KEY_can_sign(AmiSSLBase, (eckey))

const EVP_MD * __EVP_blake2b512(__reg("a6") struct Library * ) = "\tjsr\t-27480(a6)";
#define EVP_blake2b512() __EVP_blake2b512(AmiSSLBase)

const EVP_MD * __EVP_blake2s256(__reg("a6") struct Library * ) = "\tjsr\t-27486(a6)";
#define EVP_blake2s256() __EVP_blake2s256(AmiSSLBase)

int __EVP_PKEY_CTX_str2ctrl(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("d0") int cmd , __reg("a1") const char * str ) = "\tjsr\t-27492(a6)";
#define EVP_PKEY_CTX_str2ctrl(ctx, cmd, str) __EVP_PKEY_CTX_str2ctrl(AmiSSLBase, (ctx), (cmd), (str))

int __EVP_PKEY_CTX_hex2ctrl(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("d0") int cmd , __reg("a1") const char * hex ) = "\tjsr\t-27498(a6)";
#define EVP_PKEY_CTX_hex2ctrl(ctx, cmd, hex) __EVP_PKEY_CTX_hex2ctrl(AmiSSLBase, (ctx), (cmd), (hex))

int __ERR_load_KDF_strings(__reg("a6") struct Library * ) = "\tjsr\t-27504(a6)";
#define ERR_load_KDF_strings() __ERR_load_KDF_strings(AmiSSLBase)

void __SRP_user_pwd_free(__reg("a6") struct Library * , __reg("a0") SRP_user_pwd * user_pwd ) = "\tjsr\t-27510(a6)";
#define SRP_user_pwd_free(user_pwd) __SRP_user_pwd_free(AmiSSLBase, (user_pwd))

SRP_user_pwd * __SRP_VBASE_get1_by_user(__reg("a6") struct Library * , __reg("a0") SRP_VBASE * vb , __reg("a1") char * username ) = "\tjsr\t-27516(a6)";
#define SRP_VBASE_get1_by_user(vb, username) __SRP_VBASE_get1_by_user(AmiSSLBase, (vb), (username))

int __SSL_CTX_has_client_custom_ext(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx , __reg("d0") unsigned int ext_type ) = "\tjsr\t-27522(a6)";
#define SSL_CTX_has_client_custom_ext(ctx, ext_type) __SSL_CTX_has_client_custom_ext(AmiSSLBase, (ctx), (ext_type))

int __SSL_CIPHER_get_kx_nid(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c ) = "\tjsr\t-27528(a6)";
#define SSL_CIPHER_get_kx_nid(c) __SSL_CIPHER_get_kx_nid(AmiSSLBase, (c))

int __SSL_CIPHER_get_auth_nid(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c ) = "\tjsr\t-27534(a6)";
#define SSL_CIPHER_get_auth_nid(c) __SSL_CIPHER_get_auth_nid(AmiSSLBase, (c))

int __SSL_CIPHER_is_aead(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c ) = "\tjsr\t-27540(a6)";
#define SSL_CIPHER_is_aead(c) __SSL_CIPHER_is_aead(AmiSSLBase, (c))

int __SSL_has_pending(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-27546(a6)";
#define SSL_has_pending(s) __SSL_has_pending(AmiSSLBase, (s))

int __SSL_SESSION_up_ref(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * ses ) = "\tjsr\t-27552(a6)";
#define SSL_SESSION_up_ref(ses) __SSL_SESSION_up_ref(AmiSSLBase, (ses))

int  (* __SSL_CTX_get_default_passwd_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) )(char *, int, int, void *) =  "\tjsr\t-27558(a6)";
#define SSL_CTX_get_default_passwd_cb(ctx) __SSL_CTX_get_default_passwd_cb(AmiSSLBase, (ctx))

void * __SSL_CTX_get_default_passwd_cb_userdata(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-27564(a6)";
#define SSL_CTX_get_default_passwd_cb_userdata(ctx) __SSL_CTX_get_default_passwd_cb_userdata(AmiSSLBase, (ctx))

int  (* __SSL_get_default_passwd_cb(__reg("a6") struct Library * , __reg("a0") SSL * ctx ) )(char *, int, int, void *) =  "\tjsr\t-27570(a6)";
#define SSL_get_default_passwd_cb(ctx) __SSL_get_default_passwd_cb(AmiSSLBase, (ctx))

void * __SSL_get_default_passwd_cb_userdata(__reg("a6") struct Library * , __reg("a0") SSL * ctx ) = "\tjsr\t-27576(a6)";
#define SSL_get_default_passwd_cb_userdata(ctx) __SSL_get_default_passwd_cb_userdata(AmiSSLBase, (ctx))

int __SSL_get_all_async_fds(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") OSSL_ASYNC_FD * fds , __reg("a2") size_t * numfds ) = "\tjsr\t-27582(a6)";
#define SSL_get_all_async_fds(s, fds, numfds) __SSL_get_all_async_fds(AmiSSLBase, (s), (fds), (numfds))

int __SSL_get_changed_async_fds(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") OSSL_ASYNC_FD * addfd , __reg("a2") size_t * numaddfds , __reg("a3") OSSL_ASYNC_FD * delfd , __reg("d0") size_t * numdelfds ) = "\tjsr\t-27588(a6)";
#define SSL_get_changed_async_fds(s, addfd, numaddfds, delfd, numdelfds) __SSL_get_changed_async_fds(AmiSSLBase, (s), (addfd), (numaddfds), (delfd), (numdelfds))

void __SSL_CTX_set_default_read_buffer_len(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") size_t len ) = "\tjsr\t-27594(a6)";
#define SSL_CTX_set_default_read_buffer_len(ctx, len) __SSL_CTX_set_default_read_buffer_len(AmiSSLBase, (ctx), (len))

void __SSL_set_default_read_buffer_len(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") size_t len ) = "\tjsr\t-27600(a6)";
#define SSL_set_default_read_buffer_len(s, len) __SSL_set_default_read_buffer_len(AmiSSLBase, (s), (len))

int __SSL_set_ct_validation_callback(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") ssl_ct_validation_cb callback , __reg("a2") void * arg ) = "\tjsr\t-27606(a6)";
#define SSL_set_ct_validation_callback(s, callback, arg) __SSL_set_ct_validation_callback(AmiSSLBase, (s), (callback), (arg))

int __SSL_CTX_set_ct_validation_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") ssl_ct_validation_cb callback , __reg("a2") void * arg ) = "\tjsr\t-27612(a6)";
#define SSL_CTX_set_ct_validation_callback(ctx, callback, arg) __SSL_CTX_set_ct_validation_callback(AmiSSLBase, (ctx), (callback), (arg))

int __SSL_ct_is_enabled(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-27618(a6)";
#define SSL_ct_is_enabled(s) __SSL_ct_is_enabled(AmiSSLBase, (s))

int __SSL_CTX_ct_is_enabled(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-27624(a6)";
#define SSL_CTX_ct_is_enabled(ctx) __SSL_CTX_ct_is_enabled(AmiSSLBase, (ctx))

const STACK_OF(SCT) * __SSL_get0_peer_scts(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-27630(a6)";
#define SSL_get0_peer_scts(s) __SSL_get0_peer_scts(AmiSSLBase, (s))

int __SSL_CTX_set_default_ctlog_list_file(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-27636(a6)";
#define SSL_CTX_set_default_ctlog_list_file(ctx) __SSL_CTX_set_default_ctlog_list_file(AmiSSLBase, (ctx))

int __SSL_CTX_set_ctlog_list_file(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * path ) = "\tjsr\t-27642(a6)";
#define SSL_CTX_set_ctlog_list_file(ctx, path) __SSL_CTX_set_ctlog_list_file(AmiSSLBase, (ctx), (path))

void __SSL_CTX_set0_ctlog_store(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") CTLOG_STORE * logs ) = "\tjsr\t-27648(a6)";
#define SSL_CTX_set0_ctlog_store(ctx, logs) __SSL_CTX_set0_ctlog_store(AmiSSLBase, (ctx), (logs))

const CTLOG_STORE * __SSL_CTX_get0_ctlog_store(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-27654(a6)";
#define SSL_CTX_get0_ctlog_store(ctx) __SSL_CTX_get0_ctlog_store(AmiSSLBase, (ctx))

void __X509_SIG_get0(__reg("a6") struct Library * , __reg("a0") const X509_SIG * sig , __reg("a1") const X509_ALGOR ** palg , __reg("a2") const ASN1_OCTET_STRING ** pdigest ) = "\tjsr\t-27660(a6)";
#define X509_SIG_get0(sig, palg, pdigest) __X509_SIG_get0(AmiSSLBase, (sig), (palg), (pdigest))

const STACK_OF(X509_ATTRIBUTE) * __PKCS8_pkey_get0_attrs(__reg("a6") struct Library * , __reg("a0") const PKCS8_PRIV_KEY_INFO * p8 ) = "\tjsr\t-27666(a6)";
#define PKCS8_pkey_get0_attrs(p8) __PKCS8_pkey_get0_attrs(AmiSSLBase, (p8))

int __PKCS8_pkey_add1_attr_by_NID(__reg("a6") struct Library * , __reg("a0") PKCS8_PRIV_KEY_INFO * p8 , __reg("d0") int nid , __reg("d1") int type , __reg("a1") const unsigned char * bytes , __reg("d2") int len ) = "\tjsr\t-27672(a6)";
#define PKCS8_pkey_add1_attr_by_NID(p8, nid, type, bytes, len) __PKCS8_pkey_add1_attr_by_NID(AmiSSLBase, (p8), (nid), (type), (bytes), (len))

int __X509_STORE_up_ref(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs ) = "\tjsr\t-27678(a6)";
#define X509_STORE_up_ref(xs) __X509_STORE_up_ref(AmiSSLBase, (xs))

int __SSL_enable_ct(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int validation_mode ) = "\tjsr\t-27684(a6)";
#define SSL_enable_ct(s, validation_mode) __SSL_enable_ct(AmiSSLBase, (s), (validation_mode))

int __SSL_CTX_enable_ct(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int validation_mode ) = "\tjsr\t-27690(a6)";
#define SSL_CTX_enable_ct(ctx, validation_mode) __SSL_CTX_enable_ct(AmiSSLBase, (ctx), (validation_mode))

STACK_OF(SSL_CIPHER) * __SSL_CTX_get_ciphers(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-27696(a6)";
#define SSL_CTX_get_ciphers(ctx) __SSL_CTX_get_ciphers(AmiSSLBase, (ctx))

const char * __SSL_SESSION_get0_hostname(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s ) = "\tjsr\t-27702(a6)";
#define SSL_SESSION_get0_hostname(s) __SSL_SESSION_get0_hostname(AmiSSLBase, (s))

const char * __SCT_validation_status_string(__reg("a6") struct Library * , __reg("a0") const SCT * sct ) = "\tjsr\t-27708(a6)";
#define SCT_validation_status_string(sct) __SCT_validation_status_string(AmiSSLBase, (sct))

BIO_METHOD * __BIO_meth_new(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") const char * name ) = "\tjsr\t-27714(a6)";
#define BIO_meth_new(type, name) __BIO_meth_new(AmiSSLBase, (type), (name))

int  (* __BIO_meth_get_puts(__reg("a6") struct Library * , __reg("a0") const BIO_METHOD * biom ) )(BIO *, const char *) =  "\tjsr\t-27720(a6)";
#define BIO_meth_get_puts(biom) __BIO_meth_get_puts(AmiSSLBase, (biom))

long  (* __BIO_meth_get_ctrl(__reg("a6") struct Library * , __reg("a0") const BIO_METHOD * biom ) )(BIO *, int, long, void *) =  "\tjsr\t-27726(a6)";
#define BIO_meth_get_ctrl(biom) __BIO_meth_get_ctrl(AmiSSLBase, (biom))

int  (* __BIO_meth_get_gets(__reg("a6") struct Library * , __reg("a0") const BIO_METHOD * biom ) )(BIO *, char *, int) =  "\tjsr\t-27732(a6)";
#define BIO_meth_get_gets(biom) __BIO_meth_get_gets(AmiSSLBase, (biom))

void * __BIO_get_data(__reg("a6") struct Library * , __reg("a0") BIO * a ) = "\tjsr\t-27738(a6)";
#define BIO_get_data(a) __BIO_get_data(AmiSSLBase, (a))

void __BIO_set_init(__reg("a6") struct Library * , __reg("a0") BIO * a , __reg("d0") int init ) = "\tjsr\t-27744(a6)";
#define BIO_set_init(a, init) __BIO_set_init(AmiSSLBase, (a), (init))

int __BIO_meth_set_puts(__reg("a6") struct Library * , __reg("a0") BIO_METHOD * biom , __reg("a1") int (*func)(BIO *,const char *) ) = "\tjsr\t-27750(a6)";
#define BIO_meth_set_puts(biom, func) __BIO_meth_set_puts(AmiSSLBase, (biom), (func))

int __BIO_get_shutdown(__reg("a6") struct Library * , __reg("a0") BIO * a ) = "\tjsr\t-27756(a6)";
#define BIO_get_shutdown(a) __BIO_get_shutdown(AmiSSLBase, (a))

int __BIO_get_init(__reg("a6") struct Library * , __reg("a0") BIO * a ) = "\tjsr\t-27762(a6)";
#define BIO_get_init(a) __BIO_get_init(AmiSSLBase, (a))

int __BIO_meth_set_ctrl(__reg("a6") struct Library * , __reg("a0") BIO_METHOD * biom , __reg("a1") long (*ctrl)(BIO *,int,long,void *) ) = "\tjsr\t-27768(a6)";
#define BIO_meth_set_ctrl(biom, ctrl) __BIO_meth_set_ctrl(AmiSSLBase, (biom), (ctrl))

int __BIO_meth_set_read(__reg("a6") struct Library * , __reg("a0") BIO_METHOD * biom , __reg("a1") int (*read)(BIO *,char *,int) ) = "\tjsr\t-27774(a6)";
#define BIO_meth_set_read(biom, read) __BIO_meth_set_read(AmiSSLBase, (biom), (read))

void __BIO_set_shutdown(__reg("a6") struct Library * , __reg("a0") BIO * a , __reg("d0") int shut ) = "\tjsr\t-27780(a6)";
#define BIO_set_shutdown(a, shut) __BIO_set_shutdown(AmiSSLBase, (a), (shut))

int __BIO_meth_set_create(__reg("a6") struct Library * , __reg("a0") BIO_METHOD * biom , __reg("a1") int (*create)(BIO *) ) = "\tjsr\t-27786(a6)";
#define BIO_meth_set_create(biom, create) __BIO_meth_set_create(AmiSSLBase, (biom), (create))

int  (* __BIO_meth_get_write(__reg("a6") struct Library * , __reg("a0") const BIO_METHOD * biom ) )(BIO *, const char *, int) =  "\tjsr\t-27792(a6)";
#define BIO_meth_get_write(biom) __BIO_meth_get_write(AmiSSLBase, (biom))

int __BIO_meth_set_callback_ctrl(__reg("a6") struct Library * , __reg("a0") BIO_METHOD * biom , __reg("a1") long (*callback_ctrl)(BIO *,int,BIO_info_cb *) ) = "\tjsr\t-27798(a6)";
#define BIO_meth_set_callback_ctrl(biom, callback_ctrl) __BIO_meth_set_callback_ctrl(AmiSSLBase, (biom), (callback_ctrl))

int  (* __BIO_meth_get_create(__reg("a6") struct Library * , __reg("a0") const BIO_METHOD * biom ) )(BIO *) =  "\tjsr\t-27804(a6)";
#define BIO_meth_get_create(biom) __BIO_meth_get_create(AmiSSLBase, (biom))

void __BIO_set_next(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") BIO * next ) = "\tjsr\t-27810(a6)";
#define BIO_set_next(b, next) __BIO_set_next(AmiSSLBase, (b), (next))

void __BIO_set_data(__reg("a6") struct Library * , __reg("a0") BIO * a , __reg("a1") void * ptr ) = "\tjsr\t-27816(a6)";
#define BIO_set_data(a, ptr) __BIO_set_data(AmiSSLBase, (a), (ptr))

int __BIO_meth_set_write(__reg("a6") struct Library * , __reg("a0") BIO_METHOD * biom , __reg("a1") int (*write)(BIO *,const char *,int) ) = "\tjsr\t-27822(a6)";
#define BIO_meth_set_write(biom, write) __BIO_meth_set_write(AmiSSLBase, (biom), (write))

int __BIO_meth_set_destroy(__reg("a6") struct Library * , __reg("a0") BIO_METHOD * biom , __reg("a1") int (*destroy)(BIO *) ) = "\tjsr\t-27828(a6)";
#define BIO_meth_set_destroy(biom, destroy) __BIO_meth_set_destroy(AmiSSLBase, (biom), (destroy))

int __BIO_meth_set_gets(__reg("a6") struct Library * , __reg("a0") BIO_METHOD * biom , __reg("a1") int (*ossl_gets)(BIO *,char *,int) ) = "\tjsr\t-27834(a6)";
#define BIO_meth_set_gets(biom, ossl_gets) __BIO_meth_set_gets(AmiSSLBase, (biom), (ossl_gets))

long  (* __BIO_meth_get_callback_ctrl(__reg("a6") struct Library * , __reg("a0") const BIO_METHOD * biom ) )(BIO *, int, BIO_info_cb *) =  "\tjsr\t-27840(a6)";
#define BIO_meth_get_callback_ctrl(biom) __BIO_meth_get_callback_ctrl(AmiSSLBase, (biom))

int  (* __BIO_meth_get_destroy(__reg("a6") struct Library * , __reg("a0") const BIO_METHOD * biom ) )(BIO *) =  "\tjsr\t-27846(a6)";
#define BIO_meth_get_destroy(biom) __BIO_meth_get_destroy(AmiSSLBase, (biom))

int  (* __BIO_meth_get_read(__reg("a6") struct Library * , __reg("a0") const BIO_METHOD * biom ) )(BIO *, char *, int) =  "\tjsr\t-27852(a6)";
#define BIO_meth_get_read(biom) __BIO_meth_get_read(AmiSSLBase, (biom))

void __BIO_set_retry_reason(__reg("a6") struct Library * , __reg("a0") BIO * bio , __reg("d0") int reason ) = "\tjsr\t-27858(a6)";
#define BIO_set_retry_reason(bio, reason) __BIO_set_retry_reason(AmiSSLBase, (bio), (reason))

void __BIO_meth_free(__reg("a6") struct Library * , __reg("a0") BIO_METHOD * biom ) = "\tjsr\t-27864(a6)";
#define BIO_meth_free(biom) __BIO_meth_free(AmiSSLBase, (biom))

int __DSA_meth_set_bn_mod_exp(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("a1") int (*bn_mod_exp)(DSA *,BIGNUM *,const BIGNUM *,const BIGNUM *,const BIGNUM *,BN_CTX *,BN_MONT_CTX *) ) = "\tjsr\t-27870(a6)";
#define DSA_meth_set_bn_mod_exp(dsam, bn_mod_exp) __DSA_meth_set_bn_mod_exp(AmiSSLBase, (dsam), (bn_mod_exp))

int __DSA_meth_set_init(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("a1") int (*init)(DSA *) ) = "\tjsr\t-27876(a6)";
#define DSA_meth_set_init(dsam, init) __DSA_meth_set_init(AmiSSLBase, (dsam), (init))

void __DSA_meth_free(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam ) = "\tjsr\t-27882(a6)";
#define DSA_meth_free(dsam) __DSA_meth_free(AmiSSLBase, (dsam))

int __DSA_meth_set_mod_exp(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("a1") int (*mod_exp)(DSA *,BIGNUM *,const BIGNUM *,const BIGNUM *,const BIGNUM *,const BIGNUM *,const BIGNUM *,BN_CTX *,BN_MONT_CTX *) ) = "\tjsr\t-27888(a6)";
#define DSA_meth_set_mod_exp(dsam, mod_exp) __DSA_meth_set_mod_exp(AmiSSLBase, (dsam), (mod_exp))

int __DSA_meth_set_sign(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("a1") DSA_SIG * (*sign)(const unsigned char *,int,DSA *) ) = "\tjsr\t-27894(a6)";
#define DSA_meth_set_sign(dsam, sign) __DSA_meth_set_sign(AmiSSLBase, (dsam), (sign))

int  (* __DSA_meth_get_finish(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) )(DSA *) =  "\tjsr\t-27900(a6)";
#define DSA_meth_get_finish(dsam) __DSA_meth_get_finish(AmiSSLBase, (dsam))

void __DSA_set_flags(__reg("a6") struct Library * , __reg("a0") DSA * d , __reg("d0") int flags ) = "\tjsr\t-27906(a6)";
#define DSA_set_flags(d, flags) __DSA_set_flags(AmiSSLBase, (d), (flags))

void __DSA_get0_pqg(__reg("a6") struct Library * , __reg("a0") const DSA * d , __reg("a1") const BIGNUM ** p , __reg("a2") const BIGNUM ** q , __reg("a3") const BIGNUM ** g ) = "\tjsr\t-27912(a6)";
#define DSA_get0_pqg(d, p, q, g) __DSA_get0_pqg(AmiSSLBase, (d), (p), (q), (g))

void * __DSA_meth_get0_app_data(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) = "\tjsr\t-27918(a6)";
#define DSA_meth_get0_app_data(dsam) __DSA_meth_get0_app_data(AmiSSLBase, (dsam))

int  (* __DSA_meth_get_keygen(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) )(DSA *) =  "\tjsr\t-27924(a6)";
#define DSA_meth_get_keygen(dsam) __DSA_meth_get_keygen(AmiSSLBase, (dsam))

void __DSA_clear_flags(__reg("a6") struct Library * , __reg("a0") DSA * d , __reg("d0") int flags ) = "\tjsr\t-27930(a6)";
#define DSA_clear_flags(d, flags) __DSA_clear_flags(AmiSSLBase, (d), (flags))

const char * __DSA_meth_get0_name(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) = "\tjsr\t-27936(a6)";
#define DSA_meth_get0_name(dsam) __DSA_meth_get0_name(AmiSSLBase, (dsam))

int  (* __DSA_meth_get_paramgen(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) )(DSA *, int, const unsigned char *, int, int *, unsigned long *, BN_GENCB *) =  "\tjsr\t-27942(a6)";
#define DSA_meth_get_paramgen(dsam) __DSA_meth_get_paramgen(AmiSSLBase, (dsam))

DSA_SIG *  (* __DSA_meth_get_sign(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) )(const unsigned char *, int, DSA *) =  "\tjsr\t-27948(a6)";
#define DSA_meth_get_sign(dsam) __DSA_meth_get_sign(AmiSSLBase, (dsam))

int __DSA_meth_set_paramgen(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("a1") int (*paramgen)(DSA *,int,const unsigned char *,int,int *,unsigned long *,BN_GENCB *) ) = "\tjsr\t-27954(a6)";
#define DSA_meth_set_paramgen(dsam, paramgen) __DSA_meth_set_paramgen(AmiSSLBase, (dsam), (paramgen))

int __DSA_test_flags(__reg("a6") struct Library * , __reg("a0") const DSA * d , __reg("d0") int flags ) = "\tjsr\t-27960(a6)";
#define DSA_test_flags(d, flags) __DSA_test_flags(AmiSSLBase, (d), (flags))

int __DSA_meth_set0_app_data(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("a1") void * app_data ) = "\tjsr\t-27966(a6)";
#define DSA_meth_set0_app_data(dsam, app_data) __DSA_meth_set0_app_data(AmiSSLBase, (dsam), (app_data))

int __DSA_meth_set1_name(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("a1") const char * name ) = "\tjsr\t-27972(a6)";
#define DSA_meth_set1_name(dsam, name) __DSA_meth_set1_name(AmiSSLBase, (dsam), (name))

void __DSA_get0_key(__reg("a6") struct Library * , __reg("a0") const DSA * d , __reg("a1") const BIGNUM ** pub_key , __reg("a2") const BIGNUM ** priv_key ) = "\tjsr\t-27978(a6)";
#define DSA_get0_key(d, pub_key, priv_key) __DSA_get0_key(AmiSSLBase, (d), (pub_key), (priv_key))

int  (* __DSA_meth_get_mod_exp(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) )(DSA *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *) =  "\tjsr\t-27984(a6)";
#define DSA_meth_get_mod_exp(dsam) __DSA_meth_get_mod_exp(AmiSSLBase, (dsam))

int __DSA_set0_pqg(__reg("a6") struct Library * , __reg("a0") DSA * d , __reg("a1") BIGNUM * p , __reg("a2") BIGNUM * q , __reg("a3") BIGNUM * g ) = "\tjsr\t-27990(a6)";
#define DSA_set0_pqg(d, p, q, g) __DSA_set0_pqg(AmiSSLBase, (d), (p), (q), (g))

int __DSA_meth_get_flags(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) = "\tjsr\t-27996(a6)";
#define DSA_meth_get_flags(dsam) __DSA_meth_get_flags(AmiSSLBase, (dsam))

int  (* __DSA_meth_get_verify(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) )(const unsigned char *, int, DSA_SIG *, DSA *) =  "\tjsr\t-28002(a6)";
#define DSA_meth_get_verify(dsam) __DSA_meth_get_verify(AmiSSLBase, (dsam))

int __DSA_meth_set_verify(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("a1") int (*verify)(const unsigned char *,int,DSA_SIG *,DSA *) ) = "\tjsr\t-28008(a6)";
#define DSA_meth_set_verify(dsam, verify) __DSA_meth_set_verify(AmiSSLBase, (dsam), (verify))

int __DSA_meth_set_finish(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("a1") int (*finish)(DSA *) ) = "\tjsr\t-28014(a6)";
#define DSA_meth_set_finish(dsam, finish) __DSA_meth_set_finish(AmiSSLBase, (dsam), (finish))

int __DSA_meth_set_keygen(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("a1") int (*keygen)(DSA *) ) = "\tjsr\t-28020(a6)";
#define DSA_meth_set_keygen(dsam, keygen) __DSA_meth_set_keygen(AmiSSLBase, (dsam), (keygen))

DSA_METHOD * __DSA_meth_dup(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) = "\tjsr\t-28026(a6)";
#define DSA_meth_dup(dsam) __DSA_meth_dup(AmiSSLBase, (dsam))

int __DSA_set0_key(__reg("a6") struct Library * , __reg("a0") DSA * d , __reg("a1") BIGNUM * pub_key , __reg("a2") BIGNUM * priv_key ) = "\tjsr\t-28032(a6)";
#define DSA_set0_key(d, pub_key, priv_key) __DSA_set0_key(AmiSSLBase, (d), (pub_key), (priv_key))

int  (* __DSA_meth_get_init(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) )(DSA *) =  "\tjsr\t-28038(a6)";
#define DSA_meth_get_init(dsam) __DSA_meth_get_init(AmiSSLBase, (dsam))

int __DSA_meth_set_sign_setup(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("a1") int (*sign_setup)(DSA *,BN_CTX *,BIGNUM **,BIGNUM **) ) = "\tjsr\t-28044(a6)";
#define DSA_meth_set_sign_setup(dsam, sign_setup) __DSA_meth_set_sign_setup(AmiSSLBase, (dsam), (sign_setup))

int  (* __DSA_meth_get_bn_mod_exp(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) )(DSA *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *) =  "\tjsr\t-28050(a6)";
#define DSA_meth_get_bn_mod_exp(dsam) __DSA_meth_get_bn_mod_exp(AmiSSLBase, (dsam))

const DSA_METHOD * __DSA_get_method(__reg("a6") struct Library * , __reg("a0") DSA * d ) = "\tjsr\t-28056(a6)";
#define DSA_get_method(d) __DSA_get_method(AmiSSLBase, (d))

DSA_METHOD * __DSA_meth_new(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("d0") int flags ) = "\tjsr\t-28062(a6)";
#define DSA_meth_new(name, flags) __DSA_meth_new(AmiSSLBase, (name), (flags))

int __DSA_meth_set_flags(__reg("a6") struct Library * , __reg("a0") DSA_METHOD * dsam , __reg("d0") int flags ) = "\tjsr\t-28068(a6)";
#define DSA_meth_set_flags(dsam, flags) __DSA_meth_set_flags(AmiSSLBase, (dsam), (flags))

int  (* __DSA_meth_get_sign_setup(__reg("a6") struct Library * , __reg("a0") const DSA_METHOD * dsam ) )(DSA *, BN_CTX *, BIGNUM **, BIGNUM **) =  "\tjsr\t-28074(a6)";
#define DSA_meth_get_sign_setup(dsam) __DSA_meth_get_sign_setup(AmiSSLBase, (dsam))

ENGINE * __DSA_get0_engine(__reg("a6") struct Library * , __reg("a0") DSA * d ) = "\tjsr\t-28080(a6)";
#define DSA_get0_engine(d) __DSA_get0_engine(AmiSSLBase, (d))

void __X509_VERIFY_PARAM_set_auth_level(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("d0") int auth_level ) = "\tjsr\t-28086(a6)";
#define X509_VERIFY_PARAM_set_auth_level(param, auth_level) __X509_VERIFY_PARAM_set_auth_level(AmiSSLBase, (param), (auth_level))

int __X509_VERIFY_PARAM_get_auth_level(__reg("a6") struct Library * , __reg("a0") const X509_VERIFY_PARAM * param ) = "\tjsr\t-28092(a6)";
#define X509_VERIFY_PARAM_get_auth_level(param) __X509_VERIFY_PARAM_get_auth_level(AmiSSLBase, (param))

EVP_PKEY * __X509_REQ_get0_pubkey(__reg("a6") struct Library * , __reg("a0") const X509_REQ * req ) = "\tjsr\t-28098(a6)";
#define X509_REQ_get0_pubkey(req) __X509_REQ_get0_pubkey(AmiSSLBase, (req))

int __RSA_set0_key(__reg("a6") struct Library * , __reg("a0") RSA * r , __reg("a1") BIGNUM * n , __reg("a2") BIGNUM * e , __reg("a3") BIGNUM * d ) = "\tjsr\t-28104(a6)";
#define RSA_set0_key(r, n, e, d) __RSA_set0_key(AmiSSLBase, (r), (n), (e), (d))

int __RSA_meth_get_flags(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) = "\tjsr\t-28110(a6)";
#define RSA_meth_get_flags(meth) __RSA_meth_get_flags(AmiSSLBase, (meth))

int __RSA_meth_set_finish(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * rsa , __reg("a1") int (*finish)(RSA *) ) = "\tjsr\t-28116(a6)";
#define RSA_meth_set_finish(rsa, finish) __RSA_meth_set_finish(AmiSSLBase, (rsa), (finish))

int  (* __RSA_meth_get_priv_dec(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(int, const unsigned char *, unsigned char *, RSA *, int) =  "\tjsr\t-28122(a6)";
#define RSA_meth_get_priv_dec(meth) __RSA_meth_get_priv_dec(AmiSSLBase, (meth))

int  (* __RSA_meth_get_sign(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(int, const unsigned char *, unsigned int, unsigned char *, unsigned int *, const RSA *) =  "\tjsr\t-28128(a6)";
#define RSA_meth_get_sign(meth) __RSA_meth_get_sign(AmiSSLBase, (meth))

int  (* __RSA_meth_get_bn_mod_exp(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *) =  "\tjsr\t-28134(a6)";
#define RSA_meth_get_bn_mod_exp(meth) __RSA_meth_get_bn_mod_exp(AmiSSLBase, (meth))

int __RSA_test_flags(__reg("a6") struct Library * , __reg("a0") const RSA * r , __reg("d0") int flags ) = "\tjsr\t-28140(a6)";
#define RSA_test_flags(r, flags) __RSA_test_flags(AmiSSLBase, (r), (flags))

RSA_METHOD * __RSA_meth_new(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("d0") int flags ) = "\tjsr\t-28146(a6)";
#define RSA_meth_new(name, flags) __RSA_meth_new(AmiSSLBase, (name), (flags))

void * __RSA_meth_get0_app_data(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) = "\tjsr\t-28152(a6)";
#define RSA_meth_get0_app_data(meth) __RSA_meth_get0_app_data(AmiSSLBase, (meth))

RSA_METHOD * __RSA_meth_dup(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) = "\tjsr\t-28158(a6)";
#define RSA_meth_dup(meth) __RSA_meth_dup(AmiSSLBase, (meth))

int __RSA_meth_set1_name(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * meth , __reg("a1") const char * name ) = "\tjsr\t-28164(a6)";
#define RSA_meth_set1_name(meth, name) __RSA_meth_set1_name(AmiSSLBase, (meth), (name))

int __RSA_meth_set0_app_data(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * meth , __reg("a1") void * app_data ) = "\tjsr\t-28170(a6)";
#define RSA_meth_set0_app_data(meth, app_data) __RSA_meth_set0_app_data(AmiSSLBase, (meth), (app_data))

void __RSA_set_flags(__reg("a6") struct Library * , __reg("a0") RSA * r , __reg("d0") int flags ) = "\tjsr\t-28176(a6)";
#define RSA_set_flags(r, flags) __RSA_set_flags(AmiSSLBase, (r), (flags))

int __RSA_meth_set_sign(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * rsa , __reg("d0") int (*sign)(int,const unsigned char *,unsigned int,unsigned char *,unsigned int *,const RSA *) ) = "\tjsr\t-28182(a6)";
#define RSA_meth_set_sign(rsa, sign) __RSA_meth_set_sign(AmiSSLBase, (rsa), (sign))

void __RSA_clear_flags(__reg("a6") struct Library * , __reg("a0") RSA * r , __reg("d0") int flags ) = "\tjsr\t-28188(a6)";
#define RSA_clear_flags(r, flags) __RSA_clear_flags(AmiSSLBase, (r), (flags))

int  (* __RSA_meth_get_keygen(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(RSA *, int, BIGNUM *, BN_GENCB *) =  "\tjsr\t-28194(a6)";
#define RSA_meth_get_keygen(meth) __RSA_meth_get_keygen(AmiSSLBase, (meth))

int __RSA_meth_set_keygen(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * rsa , __reg("a1") int (*keygen)(RSA *,int,BIGNUM *,BN_GENCB *) ) = "\tjsr\t-28200(a6)";
#define RSA_meth_set_keygen(rsa, keygen) __RSA_meth_set_keygen(AmiSSLBase, (rsa), (keygen))

int __RSA_meth_set_pub_dec(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * rsa , __reg("a1") int (*pub_dec)(int,const unsigned char *,unsigned char *,RSA *,int) ) = "\tjsr\t-28206(a6)";
#define RSA_meth_set_pub_dec(rsa, pub_dec) __RSA_meth_set_pub_dec(AmiSSLBase, (rsa), (pub_dec))

int  (* __RSA_meth_get_finish(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(RSA *rsa) =  "\tjsr\t-28212(a6)";
#define RSA_meth_get_finish(meth) __RSA_meth_get_finish(AmiSSLBase, (meth))

void __RSA_get0_key(__reg("a6") struct Library * , __reg("a0") const RSA * r , __reg("a1") const BIGNUM ** n , __reg("a2") const BIGNUM ** e , __reg("a3") const BIGNUM ** d ) = "\tjsr\t-28218(a6)";
#define RSA_get0_key(r, n, e, d) __RSA_get0_key(AmiSSLBase, (r), (n), (e), (d))

ENGINE * __RSA_get0_engine(__reg("a6") struct Library * , __reg("a0") const RSA * r ) = "\tjsr\t-28224(a6)";
#define RSA_get0_engine(r) __RSA_get0_engine(AmiSSLBase, (r))

int __RSA_meth_set_priv_enc(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * rsa , __reg("a1") int (*priv_enc)(int,const unsigned char *,unsigned char *,RSA *,int) ) = "\tjsr\t-28230(a6)";
#define RSA_meth_set_priv_enc(rsa, priv_enc) __RSA_meth_set_priv_enc(AmiSSLBase, (rsa), (priv_enc))

int __RSA_meth_set_verify(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * rsa , __reg("a1") int (*verify)(int,const unsigned char *,unsigned int,const unsigned char *,unsigned int,const RSA *) ) = "\tjsr\t-28236(a6)";
#define RSA_meth_set_verify(rsa, verify) __RSA_meth_set_verify(AmiSSLBase, (rsa), (verify))

void __RSA_get0_factors(__reg("a6") struct Library * , __reg("a0") const RSA * r , __reg("a1") const BIGNUM ** p , __reg("a2") const BIGNUM ** q ) = "\tjsr\t-28242(a6)";
#define RSA_get0_factors(r, p, q) __RSA_get0_factors(AmiSSLBase, (r), (p), (q))

const char * __RSA_meth_get0_name(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) = "\tjsr\t-28248(a6)";
#define RSA_meth_get0_name(meth) __RSA_meth_get0_name(AmiSSLBase, (meth))

int  (* __RSA_meth_get_mod_exp(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(BIGNUM *, const BIGNUM *, RSA *, BN_CTX *) =  "\tjsr\t-28254(a6)";
#define RSA_meth_get_mod_exp(meth) __RSA_meth_get_mod_exp(AmiSSLBase, (meth))

int __RSA_meth_set_flags(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * meth , __reg("d0") int flags ) = "\tjsr\t-28260(a6)";
#define RSA_meth_set_flags(meth, flags) __RSA_meth_set_flags(AmiSSLBase, (meth), (flags))

int  (* __RSA_meth_get_pub_dec(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(int, const unsigned char *, unsigned char *, RSA *, int) =  "\tjsr\t-28266(a6)";
#define RSA_meth_get_pub_dec(meth) __RSA_meth_get_pub_dec(AmiSSLBase, (meth))

int __RSA_meth_set_bn_mod_exp(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * rsa , __reg("a1") int (*bn_mod_exp)(BIGNUM *,const BIGNUM *,const BIGNUM *,const BIGNUM *,BN_CTX *,BN_MONT_CTX *) ) = "\tjsr\t-28272(a6)";
#define RSA_meth_set_bn_mod_exp(rsa, bn_mod_exp) __RSA_meth_set_bn_mod_exp(AmiSSLBase, (rsa), (bn_mod_exp))

int  (* __RSA_meth_get_init(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(RSA *) =  "\tjsr\t-28278(a6)";
#define RSA_meth_get_init(meth) __RSA_meth_get_init(AmiSSLBase, (meth))

void __RSA_meth_free(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * meth ) = "\tjsr\t-28284(a6)";
#define RSA_meth_free(meth) __RSA_meth_free(AmiSSLBase, (meth))

int  (* __RSA_meth_get_pub_enc(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(int, const unsigned char *, unsigned char *, RSA *, int) =  "\tjsr\t-28290(a6)";
#define RSA_meth_get_pub_enc(meth) __RSA_meth_get_pub_enc(AmiSSLBase, (meth))

int __RSA_meth_set_mod_exp(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * rsa , __reg("a1") int (*mod_exp)(BIGNUM *,const BIGNUM *,RSA *,BN_CTX *) ) = "\tjsr\t-28296(a6)";
#define RSA_meth_set_mod_exp(rsa, mod_exp) __RSA_meth_set_mod_exp(AmiSSLBase, (rsa), (mod_exp))

int __RSA_set0_factors(__reg("a6") struct Library * , __reg("a0") RSA * r , __reg("a1") BIGNUM * p , __reg("a2") BIGNUM * q ) = "\tjsr\t-28302(a6)";
#define RSA_set0_factors(r, p, q) __RSA_set0_factors(AmiSSLBase, (r), (p), (q))

int __RSA_meth_set_pub_enc(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * rsa , __reg("a1") int (*pub_enc)(int,const unsigned char *,unsigned char *,RSA *,int) ) = "\tjsr\t-28308(a6)";
#define RSA_meth_set_pub_enc(rsa, pub_enc) __RSA_meth_set_pub_enc(AmiSSLBase, (rsa), (pub_enc))

int __RSA_meth_set_priv_dec(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * rsa , __reg("a1") int (*priv_dec)(int,const unsigned char *,unsigned char *,RSA *,int) ) = "\tjsr\t-28314(a6)";
#define RSA_meth_set_priv_dec(rsa, priv_dec) __RSA_meth_set_priv_dec(AmiSSLBase, (rsa), (priv_dec))

int  (* __RSA_meth_get_verify(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(int, const unsigned char *, unsigned int, const unsigned char *, unsigned int, const RSA *) =  "\tjsr\t-28320(a6)";
#define RSA_meth_get_verify(meth) __RSA_meth_get_verify(AmiSSLBase, (meth))

int __RSA_meth_set_init(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * rsa , __reg("a1") int (*init)(RSA *) ) = "\tjsr\t-28326(a6)";
#define RSA_meth_set_init(rsa, init) __RSA_meth_set_init(AmiSSLBase, (rsa), (init))

int  (* __RSA_meth_get_priv_enc(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(int, const unsigned char *, unsigned char *, RSA *, int) =  "\tjsr\t-28332(a6)";
#define RSA_meth_get_priv_enc(meth) __RSA_meth_get_priv_enc(AmiSSLBase, (meth))

int __RSA_set0_crt_params(__reg("a6") struct Library * , __reg("a0") RSA * r , __reg("a1") BIGNUM * dmp1 , __reg("a2") BIGNUM * dmq1 , __reg("a3") BIGNUM * iqmp ) = "\tjsr\t-28338(a6)";
#define RSA_set0_crt_params(r, dmp1, dmq1, iqmp) __RSA_set0_crt_params(AmiSSLBase, (r), (dmp1), (dmq1), (iqmp))

void __RSA_get0_crt_params(__reg("a6") struct Library * , __reg("a0") const RSA * r , __reg("a1") const BIGNUM ** dmp1 , __reg("a2") const BIGNUM ** dmq1 , __reg("a3") const BIGNUM ** iqmp ) = "\tjsr\t-28344(a6)";
#define RSA_get0_crt_params(r, dmp1, dmq1, iqmp) __RSA_get0_crt_params(AmiSSLBase, (r), (dmp1), (dmq1), (iqmp))

int __DH_set0_pqg(__reg("a6") struct Library * , __reg("a0") DH * dh , __reg("a1") BIGNUM * p , __reg("a2") BIGNUM * q , __reg("a3") BIGNUM * g ) = "\tjsr\t-28350(a6)";
#define DH_set0_pqg(dh, p, q, g) __DH_set0_pqg(AmiSSLBase, (dh), (p), (q), (g))

void __DH_clear_flags(__reg("a6") struct Library * , __reg("a0") DH * dh , __reg("d0") int flags ) = "\tjsr\t-28356(a6)";
#define DH_clear_flags(dh, flags) __DH_clear_flags(AmiSSLBase, (dh), (flags))

void __DH_get0_key(__reg("a6") struct Library * , __reg("a0") const DH * dh , __reg("a1") const BIGNUM ** pub_key , __reg("a2") const BIGNUM ** priv_key ) = "\tjsr\t-28362(a6)";
#define DH_get0_key(dh, pub_key, priv_key) __DH_get0_key(AmiSSLBase, (dh), (pub_key), (priv_key))

ENGINE * __DH_get0_engine(__reg("a6") struct Library * , __reg("a0") DH * d ) = "\tjsr\t-28368(a6)";
#define DH_get0_engine(d) __DH_get0_engine(AmiSSLBase, (d))

int __DH_set0_key(__reg("a6") struct Library * , __reg("a0") DH * dh , __reg("a1") BIGNUM * pub_key , __reg("a2") BIGNUM * priv_key ) = "\tjsr\t-28374(a6)";
#define DH_set0_key(dh, pub_key, priv_key) __DH_set0_key(AmiSSLBase, (dh), (pub_key), (priv_key))

int __DH_set_length(__reg("a6") struct Library * , __reg("a0") DH * dh , __reg("d0") long length ) = "\tjsr\t-28380(a6)";
#define DH_set_length(dh, length) __DH_set_length(AmiSSLBase, (dh), (length))

int __DH_test_flags(__reg("a6") struct Library * , __reg("a0") const DH * dh , __reg("d0") int flags ) = "\tjsr\t-28386(a6)";
#define DH_test_flags(dh, flags) __DH_test_flags(AmiSSLBase, (dh), (flags))

long __DH_get_length(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-28392(a6)";
#define DH_get_length(dh) __DH_get_length(AmiSSLBase, (dh))

void __DH_get0_pqg(__reg("a6") struct Library * , __reg("a0") const DH * dh , __reg("a1") const BIGNUM ** p , __reg("a2") const BIGNUM ** q , __reg("a3") const BIGNUM ** g ) = "\tjsr\t-28398(a6)";
#define DH_get0_pqg(dh, p, q, g) __DH_get0_pqg(AmiSSLBase, (dh), (p), (q), (g))

int  (* __DH_meth_get_compute_key(__reg("a6") struct Library * , __reg("a0") const DH_METHOD * dhm ) )(unsigned char *, const BIGNUM *, DH *) =  "\tjsr\t-28404(a6)";
#define DH_meth_get_compute_key(dhm) __DH_meth_get_compute_key(AmiSSLBase, (dhm))

int __DH_meth_set1_name(__reg("a6") struct Library * , __reg("a0") DH_METHOD * dhm , __reg("a1") const char * name ) = "\tjsr\t-28410(a6)";
#define DH_meth_set1_name(dhm, name) __DH_meth_set1_name(AmiSSLBase, (dhm), (name))

int __DH_meth_set_init(__reg("a6") struct Library * , __reg("a0") DH_METHOD * dhm , __reg("a1") int (*init)(DH *) ) = "\tjsr\t-28416(a6)";
#define DH_meth_set_init(dhm, init) __DH_meth_set_init(AmiSSLBase, (dhm), (init))

int  (* __DH_meth_get_finish(__reg("a6") struct Library * , __reg("a0") const DH_METHOD * dhm ) )(DH *) =  "\tjsr\t-28422(a6)";
#define DH_meth_get_finish(dhm) __DH_meth_get_finish(AmiSSLBase, (dhm))

const char * __DH_meth_get0_name(__reg("a6") struct Library * , __reg("a0") const DH_METHOD * dhm ) = "\tjsr\t-28428(a6)";
#define DH_meth_get0_name(dhm) __DH_meth_get0_name(AmiSSLBase, (dhm))

int __DH_meth_set_generate_params(__reg("a6") struct Library * , __reg("a0") DH_METHOD * dhm , __reg("a1") int (*generate_params)(DH *,int,int,BN_GENCB *) ) = "\tjsr\t-28434(a6)";
#define DH_meth_set_generate_params(dhm, generate_params) __DH_meth_set_generate_params(AmiSSLBase, (dhm), (generate_params))

int __DH_meth_set_compute_key(__reg("a6") struct Library * , __reg("a0") DH_METHOD * dhm , __reg("a1") int (*compute_key)(unsigned char *,const BIGNUM *,DH *) ) = "\tjsr\t-28440(a6)";
#define DH_meth_set_compute_key(dhm, compute_key) __DH_meth_set_compute_key(AmiSSLBase, (dhm), (compute_key))

int __DH_meth_set_flags(__reg("a6") struct Library * , __reg("a0") DH_METHOD * dhm , __reg("d0") int flags ) = "\tjsr\t-28446(a6)";
#define DH_meth_set_flags(dhm, flags) __DH_meth_set_flags(AmiSSLBase, (dhm), (flags))

int  (* __DH_meth_get_generate_params(__reg("a6") struct Library * , __reg("a0") const DH_METHOD * dhm ) )(DH *, int, int, BN_GENCB *) =  "\tjsr\t-28452(a6)";
#define DH_meth_get_generate_params(dhm) __DH_meth_get_generate_params(AmiSSLBase, (dhm))

int __DH_meth_get_flags(__reg("a6") struct Library * , __reg("a0") const DH_METHOD * dhm ) = "\tjsr\t-28458(a6)";
#define DH_meth_get_flags(dhm) __DH_meth_get_flags(AmiSSLBase, (dhm))

int __DH_meth_set_finish(__reg("a6") struct Library * , __reg("a0") DH_METHOD * dhm , __reg("a1") int (*finish)(DH *) ) = "\tjsr\t-28464(a6)";
#define DH_meth_set_finish(dhm, finish) __DH_meth_set_finish(AmiSSLBase, (dhm), (finish))

void * __DH_meth_get0_app_data(__reg("a6") struct Library * , __reg("a0") const DH_METHOD * dhm ) = "\tjsr\t-28470(a6)";
#define DH_meth_get0_app_data(dhm) __DH_meth_get0_app_data(AmiSSLBase, (dhm))

int __DH_meth_set0_app_data(__reg("a6") struct Library * , __reg("a0") DH_METHOD * dhm , __reg("a1") void * app_data ) = "\tjsr\t-28476(a6)";
#define DH_meth_set0_app_data(dhm, app_data) __DH_meth_set0_app_data(AmiSSLBase, (dhm), (app_data))

int  (* __DH_meth_get_init(__reg("a6") struct Library * , __reg("a0") const DH_METHOD * dhm ) )(DH *) =  "\tjsr\t-28482(a6)";
#define DH_meth_get_init(dhm) __DH_meth_get_init(AmiSSLBase, (dhm))

int  (* __DH_meth_get_bn_mod_exp(__reg("a6") struct Library * , __reg("a0") const DH_METHOD * dhm ) )(const DH *, BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *, BN_MONT_CTX *) =  "\tjsr\t-28488(a6)";
#define DH_meth_get_bn_mod_exp(dhm) __DH_meth_get_bn_mod_exp(AmiSSLBase, (dhm))

DH_METHOD * __DH_meth_new(__reg("a6") struct Library * , __reg("a0") const char * name , __reg("d0") int flags ) = "\tjsr\t-28494(a6)";
#define DH_meth_new(name, flags) __DH_meth_new(AmiSSLBase, (name), (flags))

DH_METHOD * __DH_meth_dup(__reg("a6") struct Library * , __reg("a0") const DH_METHOD * dhm ) = "\tjsr\t-28500(a6)";
#define DH_meth_dup(dhm) __DH_meth_dup(AmiSSLBase, (dhm))

int __DH_meth_set_bn_mod_exp(__reg("a6") struct Library * , __reg("a0") DH_METHOD * dhm , __reg("a1") int (*bn_mod_exp)(const DH *,BIGNUM *,const BIGNUM *,const BIGNUM *,const BIGNUM *,BN_CTX *,BN_MONT_CTX *) ) = "\tjsr\t-28506(a6)";
#define DH_meth_set_bn_mod_exp(dhm, bn_mod_exp) __DH_meth_set_bn_mod_exp(AmiSSLBase, (dhm), (bn_mod_exp))

int __DH_meth_set_generate_key(__reg("a6") struct Library * , __reg("a0") DH_METHOD * dhm , __reg("a1") int (*generate_key)(DH *) ) = "\tjsr\t-28512(a6)";
#define DH_meth_set_generate_key(dhm, generate_key) __DH_meth_set_generate_key(AmiSSLBase, (dhm), (generate_key))

void __DH_meth_free(__reg("a6") struct Library * , __reg("a0") DH_METHOD * dhm ) = "\tjsr\t-28518(a6)";
#define DH_meth_free(dhm) __DH_meth_free(AmiSSLBase, (dhm))

int  (* __DH_meth_get_generate_key(__reg("a6") struct Library * , __reg("a0") const DH_METHOD * dhm ) )(DH *) =  "\tjsr\t-28524(a6)";
#define DH_meth_get_generate_key(dhm) __DH_meth_get_generate_key(AmiSSLBase, (dhm))

void __DH_set_flags(__reg("a6") struct Library * , __reg("a0") DH * dh , __reg("d0") int flags ) = "\tjsr\t-28530(a6)";
#define DH_set_flags(dh, flags) __DH_set_flags(AmiSSLBase, (dh), (flags))

X509_OBJECT * __X509_STORE_CTX_get_obj_by_subject(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * vs , __reg("d0") X509_LOOKUP_TYPE type , __reg("a1") const X509_NAME * name ) = "\tjsr\t-28536(a6)";
#define X509_STORE_CTX_get_obj_by_subject(vs, type, name) __X509_STORE_CTX_get_obj_by_subject(AmiSSLBase, (vs), (type), (name))

void __X509_OBJECT_free(__reg("a6") struct Library * , __reg("a0") X509_OBJECT * a ) = "\tjsr\t-28542(a6)";
#define X509_OBJECT_free(a) __X509_OBJECT_free(AmiSSLBase, (a))

X509 * __X509_OBJECT_get0_X509(__reg("a6") struct Library * , __reg("a0") const X509_OBJECT * a ) = "\tjsr\t-28548(a6)";
#define X509_OBJECT_get0_X509(a) __X509_OBJECT_get0_X509(AmiSSLBase, (a))

STACK_OF(X509) * __X509_STORE_CTX_get0_untrusted(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28554(a6)";
#define X509_STORE_CTX_get0_untrusted(ctx) __X509_STORE_CTX_get0_untrusted(AmiSSLBase, (ctx))

X509 * __X509_STORE_CTX_get0_cert(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28560(a6)";
#define X509_STORE_CTX_get0_cert(ctx) __X509_STORE_CTX_get0_cert(AmiSSLBase, (ctx))

void __X509_STORE_CTX_set_verify(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("a1") X509_STORE_CTX_verify_fn verify ) = "\tjsr\t-28566(a6)";
#define X509_STORE_CTX_set_verify(ctx, verify) __X509_STORE_CTX_set_verify(AmiSSLBase, (ctx), (verify))

X509_STORE_CTX_verify_fn __X509_STORE_CTX_get_verify(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28572(a6)";
#define X509_STORE_CTX_get_verify(ctx) __X509_STORE_CTX_get_verify(AmiSSLBase, (ctx))

X509_STORE_CTX_verify_cb __X509_STORE_CTX_get_verify_cb(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28578(a6)";
#define X509_STORE_CTX_get_verify_cb(ctx) __X509_STORE_CTX_get_verify_cb(AmiSSLBase, (ctx))

void __X509_STORE_CTX_set0_verified_chain(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("a1") STACK_OF(X509) * sk ) = "\tjsr\t-28584(a6)";
#define X509_STORE_CTX_set0_verified_chain(ctx, sk) __X509_STORE_CTX_set0_verified_chain(AmiSSLBase, (ctx), (sk))

void __X509_STORE_CTX_set0_untrusted(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("a1") STACK_OF(X509) * sk ) = "\tjsr\t-28590(a6)";
#define X509_STORE_CTX_set0_untrusted(ctx, sk) __X509_STORE_CTX_set0_untrusted(AmiSSLBase, (ctx), (sk))

int __OPENSSL_hexchar2int(__reg("a6") struct Library * , __reg("d0") unsigned char c ) = "\tjsr\t-28596(a6)";
#define OPENSSL_hexchar2int(c) __OPENSSL_hexchar2int(AmiSSLBase, (c))

int __DSA_SIG_set0(__reg("a6") struct Library * , __reg("a0") DSA_SIG * sig , __reg("a1") BIGNUM * r , __reg("a2") BIGNUM * s ) = "\tjsr\t-28632(a6)";
#define DSA_SIG_set0(sig, r, s) __DSA_SIG_set0(AmiSSLBase, (sig), (r), (s))

int __DSA_bits(__reg("a6") struct Library * , __reg("a0") const DSA * d ) = "\tjsr\t-28638(a6)";
#define DSA_bits(d) __DSA_bits(AmiSSLBase, (d))

int __ECDSA_SIG_set0(__reg("a6") struct Library * , __reg("a0") ECDSA_SIG * sig , __reg("a1") BIGNUM * r , __reg("a2") BIGNUM * s ) = "\tjsr\t-28644(a6)";
#define ECDSA_SIG_set0(sig, r, s) __ECDSA_SIG_set0(AmiSSLBase, (sig), (r), (s))

int __EVP_ENCODE_CTX_copy(__reg("a6") struct Library * , __reg("a0") EVP_ENCODE_CTX * dctx , __reg("a1") const EVP_ENCODE_CTX * sctx ) = "\tjsr\t-28650(a6)";
#define EVP_ENCODE_CTX_copy(dctx, sctx) __EVP_ENCODE_CTX_copy(AmiSSLBase, (dctx), (sctx))

const unsigned char * __EVP_PKEY_get0_hmac(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey , __reg("a2") size_t * len ) = "\tjsr\t-28656(a6)";
#define EVP_PKEY_get0_hmac(pkey, len) __EVP_PKEY_get0_hmac(AmiSSLBase, (pkey), (len))

const EVP_MD * __HMAC_CTX_get_md(__reg("a6") struct Library * , __reg("a0") const HMAC_CTX * ctx ) = "\tjsr\t-28662(a6)";
#define HMAC_CTX_get_md(ctx) __HMAC_CTX_get_md(AmiSSLBase, (ctx))

const STACK_OF(X509) * __OCSP_resp_get0_certs(__reg("a6") struct Library * , __reg("a0") const OCSP_BASICRESP * bs ) = "\tjsr\t-28668(a6)";
#define OCSP_resp_get0_certs(bs) __OCSP_resp_get0_certs(AmiSSLBase, (bs))

int __OCSP_resp_get0_id(__reg("a6") struct Library * , __reg("a0") const OCSP_BASICRESP * bs , __reg("a1") const ASN1_OCTET_STRING ** pid , __reg("a2") const X509_NAME ** pname ) = "\tjsr\t-28674(a6)";
#define OCSP_resp_get0_id(bs, pid, pname) __OCSP_resp_get0_id(AmiSSLBase, (bs), (pid), (pname))

int __PEM_write_bio_PrivateKey_traditional(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") const EVP_PKEY * x , __reg("a2") const EVP_CIPHER * enc , __reg("a3") const unsigned char * kstr , __reg("d0") int klen , __reg("d1") pem_password_cb * cb , __reg("d2") void * u ) = "\tjsr\t-28680(a6)";
#define PEM_write_bio_PrivateKey_traditional(bp, x, enc, kstr, klen, cb, u) __PEM_write_bio_PrivateKey_traditional(AmiSSLBase, (bp), (x), (enc), (kstr), (klen), (cb), (u))

int __SSL_SESSION_get_protocol_version(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s ) = "\tjsr\t-28686(a6)";
#define SSL_SESSION_get_protocol_version(s) __SSL_SESSION_get_protocol_version(AmiSSLBase, (s))

int __SSL_is_dtls(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-28692(a6)";
#define SSL_is_dtls(s) __SSL_is_dtls(AmiSSLBase, (s))

unsigned long __SSL_CTX_dane_set_flags(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") unsigned long flags ) = "\tjsr\t-28698(a6)";
#define SSL_CTX_dane_set_flags(ctx, flags) __SSL_CTX_dane_set_flags(AmiSSLBase, (ctx), (flags))

unsigned long __SSL_CTX_dane_clear_flags(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") unsigned long flags ) = "\tjsr\t-28704(a6)";
#define SSL_CTX_dane_clear_flags(ctx, flags) __SSL_CTX_dane_clear_flags(AmiSSLBase, (ctx), (flags))

unsigned long __SSL_dane_set_flags(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("d0") unsigned long flags ) = "\tjsr\t-28710(a6)";
#define SSL_dane_set_flags(ssl, flags) __SSL_dane_set_flags(AmiSSLBase, (ssl), (flags))

unsigned long __SSL_dane_clear_flags(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("d0") unsigned long flags ) = "\tjsr\t-28716(a6)";
#define SSL_dane_clear_flags(ssl, flags) __SSL_dane_clear_flags(AmiSSLBase, (ssl), (flags))

int __SSL_client_version(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-28722(a6)";
#define SSL_client_version(s) __SSL_client_version(AmiSSLBase, (s))

long __X509_get_pathlen(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-28728(a6)";
#define X509_get_pathlen(x) __X509_get_pathlen(AmiSSLBase, (x))

X509_LOOKUP_TYPE __X509_OBJECT_get_type(__reg("a6") struct Library * , __reg("a0") const X509_OBJECT * a ) = "\tjsr\t-28734(a6)";
#define X509_OBJECT_get_type(a) __X509_OBJECT_get_type(AmiSSLBase, (a))

X509_CRL * __X509_OBJECT_get0_X509_CRL(__reg("a6") struct Library * , __reg("a0") const X509_OBJECT * a ) = "\tjsr\t-28740(a6)";
#define X509_OBJECT_get0_X509_CRL(a) __X509_OBJECT_get0_X509_CRL(AmiSSLBase, (a))

int __X509_STORE_lock(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs ) = "\tjsr\t-28746(a6)";
#define X509_STORE_lock(xs) __X509_STORE_lock(AmiSSLBase, (xs))

int __X509_STORE_unlock(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs ) = "\tjsr\t-28752(a6)";
#define X509_STORE_unlock(xs) __X509_STORE_unlock(AmiSSLBase, (xs))

STACK_OF(X509_OBJECT) * __X509_STORE_get0_objects(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28758(a6)";
#define X509_STORE_get0_objects(xs) __X509_STORE_get0_objects(AmiSSLBase, (xs))

X509_VERIFY_PARAM * __X509_STORE_get0_param(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28764(a6)";
#define X509_STORE_get0_param(xs) __X509_STORE_get0_param(AmiSSLBase, (xs))

void __X509_STORE_set_verify(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_verify_fn verify ) = "\tjsr\t-28770(a6)";
#define X509_STORE_set_verify(xs, verify) __X509_STORE_set_verify(AmiSSLBase, (xs), (verify))

X509_STORE_CTX_verify_fn __X509_STORE_get_verify(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28776(a6)";
#define X509_STORE_get_verify(xs) __X509_STORE_get_verify(AmiSSLBase, (xs))

X509_STORE_CTX_verify_cb __X509_STORE_get_verify_cb(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28782(a6)";
#define X509_STORE_get_verify_cb(xs) __X509_STORE_get_verify_cb(AmiSSLBase, (xs))

void __X509_STORE_set_get_issuer(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_get_issuer_fn get_issuer ) = "\tjsr\t-28788(a6)";
#define X509_STORE_set_get_issuer(xs, get_issuer) __X509_STORE_set_get_issuer(AmiSSLBase, (xs), (get_issuer))

X509_STORE_CTX_get_issuer_fn __X509_STORE_get_get_issuer(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28794(a6)";
#define X509_STORE_get_get_issuer(xs) __X509_STORE_get_get_issuer(AmiSSLBase, (xs))

void __X509_STORE_set_check_issued(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_check_issued_fn check_issued ) = "\tjsr\t-28800(a6)";
#define X509_STORE_set_check_issued(xs, check_issued) __X509_STORE_set_check_issued(AmiSSLBase, (xs), (check_issued))

X509_STORE_CTX_check_issued_fn __X509_STORE_get_check_issued(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28806(a6)";
#define X509_STORE_get_check_issued(xs) __X509_STORE_get_check_issued(AmiSSLBase, (xs))

void __X509_STORE_set_check_revocation(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_check_revocation_fn check_revocation ) = "\tjsr\t-28812(a6)";
#define X509_STORE_set_check_revocation(xs, check_revocation) __X509_STORE_set_check_revocation(AmiSSLBase, (xs), (check_revocation))

X509_STORE_CTX_check_revocation_fn __X509_STORE_get_check_revocation(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28818(a6)";
#define X509_STORE_get_check_revocation(xs) __X509_STORE_get_check_revocation(AmiSSLBase, (xs))

void __X509_STORE_set_get_crl(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_get_crl_fn get_crl ) = "\tjsr\t-28824(a6)";
#define X509_STORE_set_get_crl(xs, get_crl) __X509_STORE_set_get_crl(AmiSSLBase, (xs), (get_crl))

X509_STORE_CTX_get_crl_fn __X509_STORE_get_get_crl(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28830(a6)";
#define X509_STORE_get_get_crl(xs) __X509_STORE_get_get_crl(AmiSSLBase, (xs))

void __X509_STORE_set_check_crl(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_check_crl_fn check_crl ) = "\tjsr\t-28836(a6)";
#define X509_STORE_set_check_crl(xs, check_crl) __X509_STORE_set_check_crl(AmiSSLBase, (xs), (check_crl))

X509_STORE_CTX_check_crl_fn __X509_STORE_get_check_crl(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28842(a6)";
#define X509_STORE_get_check_crl(xs) __X509_STORE_get_check_crl(AmiSSLBase, (xs))

void __X509_STORE_set_cert_crl(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_cert_crl_fn cert_crl ) = "\tjsr\t-28848(a6)";
#define X509_STORE_set_cert_crl(xs, cert_crl) __X509_STORE_set_cert_crl(AmiSSLBase, (xs), (cert_crl))

X509_STORE_CTX_cert_crl_fn __X509_STORE_get_cert_crl(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28854(a6)";
#define X509_STORE_get_cert_crl(xs) __X509_STORE_get_cert_crl(AmiSSLBase, (xs))

void __X509_STORE_set_check_policy(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_check_policy_fn check_policy ) = "\tjsr\t-28860(a6)";
#define X509_STORE_set_check_policy(xs, check_policy) __X509_STORE_set_check_policy(AmiSSLBase, (xs), (check_policy))

X509_STORE_CTX_check_policy_fn __X509_STORE_get_check_policy(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28866(a6)";
#define X509_STORE_get_check_policy(xs) __X509_STORE_get_check_policy(AmiSSLBase, (xs))

void __X509_STORE_set_lookup_certs(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_lookup_certs_fn lookup_certs ) = "\tjsr\t-28872(a6)";
#define X509_STORE_set_lookup_certs(xs, lookup_certs) __X509_STORE_set_lookup_certs(AmiSSLBase, (xs), (lookup_certs))

X509_STORE_CTX_lookup_certs_fn __X509_STORE_get_lookup_certs(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28878(a6)";
#define X509_STORE_get_lookup_certs(xs) __X509_STORE_get_lookup_certs(AmiSSLBase, (xs))

void __X509_STORE_set_lookup_crls(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_lookup_crls_fn lookup_crls ) = "\tjsr\t-28884(a6)";
#define X509_STORE_set_lookup_crls(xs, lookup_crls) __X509_STORE_set_lookup_crls(AmiSSLBase, (xs), (lookup_crls))

X509_STORE_CTX_lookup_crls_fn __X509_STORE_get_lookup_crls(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28890(a6)";
#define X509_STORE_get_lookup_crls(xs) __X509_STORE_get_lookup_crls(AmiSSLBase, (xs))

void __X509_STORE_set_cleanup(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("a1") X509_STORE_CTX_cleanup_fn cleanup ) = "\tjsr\t-28896(a6)";
#define X509_STORE_set_cleanup(xs, cleanup) __X509_STORE_set_cleanup(AmiSSLBase, (xs), (cleanup))

X509_STORE_CTX_cleanup_fn __X509_STORE_get_cleanup(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs ) = "\tjsr\t-28902(a6)";
#define X509_STORE_get_cleanup(xs) __X509_STORE_get_cleanup(AmiSSLBase, (xs))

int __X509_STORE_set_ex_data(__reg("a6") struct Library * , __reg("a0") X509_STORE * xs , __reg("d0") int idx , __reg("a1") void * data ) = "\tjsr\t-28908(a6)";
#define X509_STORE_set_ex_data(xs, idx, data) __X509_STORE_set_ex_data(AmiSSLBase, (xs), (idx), (data))

void * __X509_STORE_get_ex_data(__reg("a6") struct Library * , __reg("a0") const X509_STORE * xs , __reg("d0") int idx ) = "\tjsr\t-28914(a6)";
#define X509_STORE_get_ex_data(xs, idx) __X509_STORE_get_ex_data(AmiSSLBase, (xs), (idx))

X509_STORE_CTX_get_issuer_fn __X509_STORE_CTX_get_get_issuer(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28920(a6)";
#define X509_STORE_CTX_get_get_issuer(ctx) __X509_STORE_CTX_get_get_issuer(AmiSSLBase, (ctx))

X509_STORE_CTX_check_issued_fn __X509_STORE_CTX_get_check_issued(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28926(a6)";
#define X509_STORE_CTX_get_check_issued(ctx) __X509_STORE_CTX_get_check_issued(AmiSSLBase, (ctx))

X509_STORE_CTX_check_revocation_fn __X509_STORE_CTX_get_check_revocation(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28932(a6)";
#define X509_STORE_CTX_get_check_revocation(ctx) __X509_STORE_CTX_get_check_revocation(AmiSSLBase, (ctx))

X509_STORE_CTX_get_crl_fn __X509_STORE_CTX_get_get_crl(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28938(a6)";
#define X509_STORE_CTX_get_get_crl(ctx) __X509_STORE_CTX_get_get_crl(AmiSSLBase, (ctx))

X509_STORE_CTX_check_crl_fn __X509_STORE_CTX_get_check_crl(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28944(a6)";
#define X509_STORE_CTX_get_check_crl(ctx) __X509_STORE_CTX_get_check_crl(AmiSSLBase, (ctx))

X509_STORE_CTX_cert_crl_fn __X509_STORE_CTX_get_cert_crl(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28950(a6)";
#define X509_STORE_CTX_get_cert_crl(ctx) __X509_STORE_CTX_get_cert_crl(AmiSSLBase, (ctx))

X509_STORE_CTX_check_policy_fn __X509_STORE_CTX_get_check_policy(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28956(a6)";
#define X509_STORE_CTX_get_check_policy(ctx) __X509_STORE_CTX_get_check_policy(AmiSSLBase, (ctx))

X509_STORE_CTX_lookup_certs_fn __X509_STORE_CTX_get_lookup_certs(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28962(a6)";
#define X509_STORE_CTX_get_lookup_certs(ctx) __X509_STORE_CTX_get_lookup_certs(AmiSSLBase, (ctx))

X509_STORE_CTX_lookup_crls_fn __X509_STORE_CTX_get_lookup_crls(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28968(a6)";
#define X509_STORE_CTX_get_lookup_crls(ctx) __X509_STORE_CTX_get_lookup_crls(AmiSSLBase, (ctx))

X509_STORE_CTX_cleanup_fn __X509_STORE_CTX_get_cleanup(__reg("a6") struct Library * , __reg("a0") const X509_STORE_CTX * ctx ) = "\tjsr\t-28974(a6)";
#define X509_STORE_CTX_get_cleanup(ctx) __X509_STORE_CTX_get_cleanup(AmiSSLBase, (ctx))

void __X509_STORE_CTX_set_error_depth(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("d0") int depth ) = "\tjsr\t-28980(a6)";
#define X509_STORE_CTX_set_error_depth(ctx, depth) __X509_STORE_CTX_set_error_depth(AmiSSLBase, (ctx), (depth))

void __X509_STORE_CTX_set_current_cert(__reg("a6") struct Library * , __reg("a0") X509_STORE_CTX * ctx , __reg("a1") X509 * x ) = "\tjsr\t-28986(a6)";
#define X509_STORE_CTX_set_current_cert(ctx, x) __X509_STORE_CTX_set_current_cert(AmiSSLBase, (ctx), (x))

int __NAME_CONSTRAINTS_check_CN(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") NAME_CONSTRAINTS * nc ) = "\tjsr\t-28992(a6)";
#define NAME_CONSTRAINTS_check_CN(x, nc) __NAME_CONSTRAINTS_check_CN(AmiSSLBase, (x), (nc))

void __X509_set_proxy_flag(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-28998(a6)";
#define X509_set_proxy_flag(x) __X509_set_proxy_flag(AmiSSLBase, (x))

void __X509_set_proxy_pathlen(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("d0") long l ) = "\tjsr\t-29004(a6)";
#define X509_set_proxy_pathlen(x, l) __X509_set_proxy_pathlen(AmiSSLBase, (x), (l))

long __X509_get_proxy_pathlen(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-29010(a6)";
#define X509_get_proxy_pathlen(x) __X509_get_proxy_pathlen(AmiSSLBase, (x))

ASIdentifierChoice * __ASIdentifierChoice_new(__reg("a6") struct Library * ) = "\tjsr\t-29016(a6)";
#define ASIdentifierChoice_new() __ASIdentifierChoice_new(AmiSSLBase)

void __ASIdentifierChoice_free(__reg("a6") struct Library * , __reg("a0") ASIdentifierChoice * a ) = "\tjsr\t-29022(a6)";
#define ASIdentifierChoice_free(a) __ASIdentifierChoice_free(AmiSSLBase, (a))

ASIdentifierChoice * __d2i_ASIdentifierChoice(__reg("a6") struct Library * , __reg("a0") ASIdentifierChoice ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-29028(a6)";
#define d2i_ASIdentifierChoice(a, in, len) __d2i_ASIdentifierChoice(AmiSSLBase, (a), (in), (len))

int __i2d_ASIdentifierChoice(__reg("a6") struct Library * , __reg("a0") const ASIdentifierChoice * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-29034(a6)";
#define i2d_ASIdentifierChoice(a, out) __i2d_ASIdentifierChoice(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASIdentifierChoice_it(__reg("a6") struct Library * ) = "\tjsr\t-29040(a6)";
#define ASIdentifierChoice_it() __ASIdentifierChoice_it(AmiSSLBase)

ASIdentifiers * __ASIdentifiers_new(__reg("a6") struct Library * ) = "\tjsr\t-29046(a6)";
#define ASIdentifiers_new() __ASIdentifiers_new(AmiSSLBase)

void __ASIdentifiers_free(__reg("a6") struct Library * , __reg("a0") ASIdentifiers * a ) = "\tjsr\t-29052(a6)";
#define ASIdentifiers_free(a) __ASIdentifiers_free(AmiSSLBase, (a))

ASIdentifiers * __d2i_ASIdentifiers(__reg("a6") struct Library * , __reg("a0") ASIdentifiers ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-29058(a6)";
#define d2i_ASIdentifiers(a, in, len) __d2i_ASIdentifiers(AmiSSLBase, (a), (in), (len))

int __i2d_ASIdentifiers(__reg("a6") struct Library * , __reg("a0") const ASIdentifiers * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-29064(a6)";
#define i2d_ASIdentifiers(a, out) __i2d_ASIdentifiers(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASIdentifiers_it(__reg("a6") struct Library * ) = "\tjsr\t-29070(a6)";
#define ASIdentifiers_it() __ASIdentifiers_it(AmiSSLBase)

ASIdOrRange * __ASIdOrRange_new(__reg("a6") struct Library * ) = "\tjsr\t-29076(a6)";
#define ASIdOrRange_new() __ASIdOrRange_new(AmiSSLBase)

void __ASIdOrRange_free(__reg("a6") struct Library * , __reg("a0") ASIdOrRange * a ) = "\tjsr\t-29082(a6)";
#define ASIdOrRange_free(a) __ASIdOrRange_free(AmiSSLBase, (a))

ASIdOrRange * __d2i_ASIdOrRange(__reg("a6") struct Library * , __reg("a0") ASIdOrRange ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-29088(a6)";
#define d2i_ASIdOrRange(a, in, len) __d2i_ASIdOrRange(AmiSSLBase, (a), (in), (len))

int __i2d_ASIdOrRange(__reg("a6") struct Library * , __reg("a0") const ASIdOrRange * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-29094(a6)";
#define i2d_ASIdOrRange(a, out) __i2d_ASIdOrRange(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASIdOrRange_it(__reg("a6") struct Library * ) = "\tjsr\t-29100(a6)";
#define ASIdOrRange_it() __ASIdOrRange_it(AmiSSLBase)

ASRange * __ASRange_new(__reg("a6") struct Library * ) = "\tjsr\t-29106(a6)";
#define ASRange_new() __ASRange_new(AmiSSLBase)

void __ASRange_free(__reg("a6") struct Library * , __reg("a0") ASRange * a ) = "\tjsr\t-29112(a6)";
#define ASRange_free(a) __ASRange_free(AmiSSLBase, (a))

ASRange * __d2i_ASRange(__reg("a6") struct Library * , __reg("a0") ASRange ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-29118(a6)";
#define d2i_ASRange(a, in, len) __d2i_ASRange(AmiSSLBase, (a), (in), (len))

int __i2d_ASRange(__reg("a6") struct Library * , __reg("a0") const ASRange * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-29124(a6)";
#define i2d_ASRange(a, out) __i2d_ASRange(AmiSSLBase, (a), (out))

const ASN1_ITEM * __ASRange_it(__reg("a6") struct Library * ) = "\tjsr\t-29130(a6)";
#define ASRange_it() __ASRange_it(AmiSSLBase)

IPAddressChoice * __IPAddressChoice_new(__reg("a6") struct Library * ) = "\tjsr\t-29136(a6)";
#define IPAddressChoice_new() __IPAddressChoice_new(AmiSSLBase)

void __IPAddressChoice_free(__reg("a6") struct Library * , __reg("a0") IPAddressChoice * a ) = "\tjsr\t-29142(a6)";
#define IPAddressChoice_free(a) __IPAddressChoice_free(AmiSSLBase, (a))

IPAddressChoice * __d2i_IPAddressChoice(__reg("a6") struct Library * , __reg("a0") IPAddressChoice ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-29148(a6)";
#define d2i_IPAddressChoice(a, in, len) __d2i_IPAddressChoice(AmiSSLBase, (a), (in), (len))

int __i2d_IPAddressChoice(__reg("a6") struct Library * , __reg("a0") const IPAddressChoice * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-29154(a6)";
#define i2d_IPAddressChoice(a, out) __i2d_IPAddressChoice(AmiSSLBase, (a), (out))

const ASN1_ITEM * __IPAddressChoice_it(__reg("a6") struct Library * ) = "\tjsr\t-29160(a6)";
#define IPAddressChoice_it() __IPAddressChoice_it(AmiSSLBase)

IPAddressFamily * __IPAddressFamily_new(__reg("a6") struct Library * ) = "\tjsr\t-29166(a6)";
#define IPAddressFamily_new() __IPAddressFamily_new(AmiSSLBase)

void __IPAddressFamily_free(__reg("a6") struct Library * , __reg("a0") IPAddressFamily * a ) = "\tjsr\t-29172(a6)";
#define IPAddressFamily_free(a) __IPAddressFamily_free(AmiSSLBase, (a))

IPAddressFamily * __d2i_IPAddressFamily(__reg("a6") struct Library * , __reg("a0") IPAddressFamily ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-29178(a6)";
#define d2i_IPAddressFamily(a, in, len) __d2i_IPAddressFamily(AmiSSLBase, (a), (in), (len))

int __i2d_IPAddressFamily(__reg("a6") struct Library * , __reg("a0") const IPAddressFamily * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-29184(a6)";
#define i2d_IPAddressFamily(a, out) __i2d_IPAddressFamily(AmiSSLBase, (a), (out))

const ASN1_ITEM * __IPAddressFamily_it(__reg("a6") struct Library * ) = "\tjsr\t-29190(a6)";
#define IPAddressFamily_it() __IPAddressFamily_it(AmiSSLBase)

IPAddressOrRange * __IPAddressOrRange_new(__reg("a6") struct Library * ) = "\tjsr\t-29196(a6)";
#define IPAddressOrRange_new() __IPAddressOrRange_new(AmiSSLBase)

void __IPAddressOrRange_free(__reg("a6") struct Library * , __reg("a0") IPAddressOrRange * a ) = "\tjsr\t-29202(a6)";
#define IPAddressOrRange_free(a) __IPAddressOrRange_free(AmiSSLBase, (a))

IPAddressOrRange * __d2i_IPAddressOrRange(__reg("a6") struct Library * , __reg("a0") IPAddressOrRange ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-29208(a6)";
#define d2i_IPAddressOrRange(a, in, len) __d2i_IPAddressOrRange(AmiSSLBase, (a), (in), (len))

int __i2d_IPAddressOrRange(__reg("a6") struct Library * , __reg("a0") const IPAddressOrRange * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-29214(a6)";
#define i2d_IPAddressOrRange(a, out) __i2d_IPAddressOrRange(AmiSSLBase, (a), (out))

const ASN1_ITEM * __IPAddressOrRange_it(__reg("a6") struct Library * ) = "\tjsr\t-29220(a6)";
#define IPAddressOrRange_it() __IPAddressOrRange_it(AmiSSLBase)

const unsigned char * __ASN1_STRING_get0_data(__reg("a6") struct Library * , __reg("a0") const ASN1_STRING * x ) = "\tjsr\t-29226(a6)";
#define ASN1_STRING_get0_data(x) __ASN1_STRING_get0_data(AmiSSLBase, (x))

const ASN1_TIME * __X509_get0_notBefore(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-29232(a6)";
#define X509_get0_notBefore(x) __X509_get0_notBefore(AmiSSLBase, (x))

const ASN1_TIME * __X509_get0_notAfter(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-29238(a6)";
#define X509_get0_notAfter(x) __X509_get0_notAfter(AmiSSLBase, (x))

const ASN1_TIME * __X509_CRL_get0_lastUpdate(__reg("a6") struct Library * , __reg("a0") const X509_CRL * crl ) = "\tjsr\t-29244(a6)";
#define X509_CRL_get0_lastUpdate(crl) __X509_CRL_get0_lastUpdate(AmiSSLBase, (crl))

const ASN1_TIME * __X509_CRL_get0_nextUpdate(__reg("a6") struct Library * , __reg("a0") const X509_CRL * crl ) = "\tjsr\t-29250(a6)";
#define X509_CRL_get0_nextUpdate(crl) __X509_CRL_get0_nextUpdate(AmiSSLBase, (crl))

char * __OPENSSL_uni2utf8(__reg("a6") struct Library * , __reg("a0") const unsigned char * uni , __reg("d0") int unilen ) = "\tjsr\t-29256(a6)";
#define OPENSSL_uni2utf8(uni, unilen) __OPENSSL_uni2utf8(AmiSSLBase, (uni), (unilen))

void __CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE(__reg("a6") struct Library * , __reg("a0") CT_POLICY_EVAL_CTX * ctx , __reg("a1") CTLOG_STORE * log_store ) = "\tjsr\t-29262(a6)";
#define CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE(ctx, log_store) __CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE(AmiSSLBase, (ctx), (log_store))

int __CT_POLICY_EVAL_CTX_set1_cert(__reg("a6") struct Library * , __reg("a0") CT_POLICY_EVAL_CTX * ctx , __reg("a1") X509 * cert ) = "\tjsr\t-29268(a6)";
#define CT_POLICY_EVAL_CTX_set1_cert(ctx, cert) __CT_POLICY_EVAL_CTX_set1_cert(AmiSSLBase, (ctx), (cert))

int __CT_POLICY_EVAL_CTX_set1_issuer(__reg("a6") struct Library * , __reg("a0") CT_POLICY_EVAL_CTX * ctx , __reg("a1") X509 * issuer ) = "\tjsr\t-29274(a6)";
#define CT_POLICY_EVAL_CTX_set1_issuer(ctx, issuer) __CT_POLICY_EVAL_CTX_set1_issuer(AmiSSLBase, (ctx), (issuer))

ECPARAMETERS * __ECPARAMETERS_new(__reg("a6") struct Library * ) = "\tjsr\t-29280(a6)";
#define ECPARAMETERS_new() __ECPARAMETERS_new(AmiSSLBase)

void __ECPARAMETERS_free(__reg("a6") struct Library * , __reg("a0") ECPARAMETERS * a ) = "\tjsr\t-29286(a6)";
#define ECPARAMETERS_free(a) __ECPARAMETERS_free(AmiSSLBase, (a))

int __BIO_get_new_index(__reg("a6") struct Library * ) = "\tjsr\t-29292(a6)";
#define BIO_get_new_index() __BIO_get_new_index(AmiSSLBase)

int __EVP_PKEY_set1_encoded_public_key(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") const unsigned char * pub , __reg("d0") size_t publen ) = "\tjsr\t-29298(a6)";
#define EVP_PKEY_set1_encoded_public_key(pkey, pub, publen) __EVP_PKEY_set1_encoded_public_key(AmiSSLBase, (pkey), (pub), (publen))

size_t __EVP_PKEY_get1_encoded_public_key(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") unsigned char ** ppub ) = "\tjsr\t-29304(a6)";
#define EVP_PKEY_get1_encoded_public_key(pkey, ppub) __EVP_PKEY_get1_encoded_public_key(AmiSSLBase, (pkey), (ppub))

int __OCSP_RESPID_set_by_name(__reg("a6") struct Library * , __reg("a0") OCSP_RESPID * respid , __reg("a1") X509 * cert ) = "\tjsr\t-29310(a6)";
#define OCSP_RESPID_set_by_name(respid, cert) __OCSP_RESPID_set_by_name(AmiSSLBase, (respid), (cert))

int __OCSP_RESPID_set_by_key(__reg("a6") struct Library * , __reg("a0") OCSP_RESPID * respid , __reg("a1") X509 * cert ) = "\tjsr\t-29316(a6)";
#define OCSP_RESPID_set_by_key(respid, cert) __OCSP_RESPID_set_by_key(AmiSSLBase, (respid), (cert))

int __OCSP_RESPID_match(__reg("a6") struct Library * , __reg("a0") OCSP_RESPID * respid , __reg("a1") X509 * cert ) = "\tjsr\t-29322(a6)";
#define OCSP_RESPID_match(respid, cert) __OCSP_RESPID_match(AmiSSLBase, (respid), (cert))

int __PKCS12_add_friendlyname_utf8(__reg("a6") struct Library * , __reg("a0") PKCS12_SAFEBAG * bag , __reg("a1") const char * name , __reg("d0") int namelen ) = "\tjsr\t-29328(a6)";
#define PKCS12_add_friendlyname_utf8(bag, name, namelen) __PKCS12_add_friendlyname_utf8(AmiSSLBase, (bag), (name), (namelen))

int __PKCS12_key_gen_utf8(__reg("a6") struct Library * , __reg("a0") const char * pass , __reg("d0") int passlen , __reg("a1") unsigned char * salt , __reg("d1") int saltlen , __reg("d2") int id , __reg("d3") int iter , __reg("d4") int n , __reg("a2") unsigned char * out , __reg("a3") const EVP_MD * md_type ) = "\tjsr\t-29334(a6)";
#define PKCS12_key_gen_utf8(pass, passlen, salt, saltlen, id, iter, n, out, md_type) __PKCS12_key_gen_utf8(AmiSSLBase, (pass), (passlen), (salt), (saltlen), (id), (iter), (n), (out), (md_type))

unsigned char * __OPENSSL_utf82uni(__reg("a6") struct Library * , __reg("a0") const char * asc , __reg("d0") int asclen , __reg("a1") unsigned char ** uni , __reg("a2") int * unilen ) = "\tjsr\t-29340(a6)";
#define OPENSSL_utf82uni(asc, asclen, uni, unilen) __OPENSSL_utf82uni(AmiSSLBase, (asc), (asclen), (uni), (unilen))

const SSL_CIPHER * __SSL_SESSION_get0_cipher(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s ) = "\tjsr\t-29346(a6)";
#define SSL_SESSION_get0_cipher(s) __SSL_SESSION_get0_cipher(AmiSSLBase, (s))

int __SSL_SESSION_set1_id(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * s , __reg("a1") const unsigned char * sid , __reg("d0") unsigned int sid_len ) = "\tjsr\t-29352(a6)";
#define SSL_SESSION_set1_id(s, sid, sid_len) __SSL_SESSION_set1_id(AmiSSLBase, (s), (sid), (sid_len))

const unsigned char * __SSL_SESSION_get0_id_context(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s , __reg("a1") unsigned int * len ) = "\tjsr\t-29358(a6)";
#define SSL_SESSION_get0_id_context(s, len) __SSL_SESSION_get0_id_context(AmiSSLBase, (s), (len))

const STACK_OF(ASN1_UTF8STRING) * __TS_STATUS_INFO_get0_text(__reg("a6") struct Library * , __reg("a0") const TS_STATUS_INFO * a ) = "\tjsr\t-29364(a6)";
#define TS_STATUS_INFO_get0_text(a) __TS_STATUS_INFO_get0_text(AmiSSLBase, (a))

void __X509_SIG_getm(__reg("a6") struct Library * , __reg("a0") X509_SIG * sig , __reg("a1") X509_ALGOR ** palg , __reg("a2") ASN1_OCTET_STRING ** pdigest ) = "\tjsr\t-29370(a6)";
#define X509_SIG_getm(sig, palg, pdigest) __X509_SIG_getm(AmiSSLBase, (sig), (palg), (pdigest))

const ASN1_INTEGER * __X509_get0_serialNumber(__reg("a6") struct Library * , __reg("a0") const X509 * x ) = "\tjsr\t-29376(a6)";
#define X509_get0_serialNumber(x) __X509_get0_serialNumber(AmiSSLBase, (x))

uint64_t __CT_POLICY_EVAL_CTX_get_time(__reg("a6") struct Library * , __reg("a0") const CT_POLICY_EVAL_CTX * ctx ) = "\tjsr\t-29382(a6)";
#define CT_POLICY_EVAL_CTX_get_time(ctx) __CT_POLICY_EVAL_CTX_get_time(AmiSSLBase, (ctx))

void __CT_POLICY_EVAL_CTX_set_time(__reg("a6") struct Library * , __reg("a0") CT_POLICY_EVAL_CTX * ctx , __reg("d0/d1") uint64_t time_in_ms ) = "\tjsr\t-29388(a6)";
#define CT_POLICY_EVAL_CTX_set_time(ctx, time_in_ms) __CT_POLICY_EVAL_CTX_set_time(AmiSSLBase, (ctx), (time_in_ms))

int __DH_check_params(__reg("a6") struct Library * , __reg("a0") const DH * dh , __reg("a1") int * ret ) = "\tjsr\t-29394(a6)";
#define DH_check_params(dh, ret) __DH_check_params(AmiSSLBase, (dh), (ret))

const char * __SSL_COMP_get0_name(__reg("a6") struct Library * , __reg("a0") const SSL_COMP * comp ) = "\tjsr\t-29400(a6)";
#define SSL_COMP_get0_name(comp) __SSL_COMP_get0_name(AmiSSLBase, (comp))

int __SSL_COMP_get_id(__reg("a6") struct Library * , __reg("a0") const SSL_COMP * comp ) = "\tjsr\t-29406(a6)";
#define SSL_COMP_get_id(comp) __SSL_COMP_get_id(AmiSSLBase, (comp))

time_t __X509_VERIFY_PARAM_get_time(__reg("a6") struct Library * , __reg("a0") const X509_VERIFY_PARAM * param ) = "\tjsr\t-29412(a6)";
#define X509_VERIFY_PARAM_get_time(param) __X509_VERIFY_PARAM_get_time(AmiSSLBase, (param))

int __X509_VERIFY_PARAM_set_inh_flags(__reg("a6") struct Library * , __reg("a0") X509_VERIFY_PARAM * param , __reg("d0") uint32_t flags ) = "\tjsr\t-29418(a6)";
#define X509_VERIFY_PARAM_set_inh_flags(param, flags) __X509_VERIFY_PARAM_set_inh_flags(AmiSSLBase, (param), (flags))

uint32_t __X509_VERIFY_PARAM_get_inh_flags(__reg("a6") struct Library * , __reg("a0") const X509_VERIFY_PARAM * param ) = "\tjsr\t-29424(a6)";
#define X509_VERIFY_PARAM_get_inh_flags(param) __X509_VERIFY_PARAM_get_inh_flags(AmiSSLBase, (param))

void __CRYPTO_secure_clear_free(__reg("a6") struct Library * , __reg("a0") void * ptr , __reg("d0") size_t num , __reg("a1") const char * file , __reg("d1") int line ) = "\tjsr\t-29430(a6)";
#define CRYPTO_secure_clear_free(ptr, num, file, line) __CRYPTO_secure_clear_free(AmiSSLBase, (ptr), (num), (file), (line))

int __EVP_PKEY_set1_engine(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") ENGINE * e ) = "\tjsr\t-29436(a6)";
#define EVP_PKEY_set1_engine(pkey, e) __EVP_PKEY_set1_engine(AmiSSLBase, (pkey), (e))

STACK_OF(SSL_CIPHER) * __SSL_get_client_ciphers(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-29442(a6)";
#define SSL_get_client_ciphers(s) __SSL_get_client_ciphers(AmiSSLBase, (s))

const char * __SSL_CIPHER_standard_name(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c ) = "\tjsr\t-29448(a6)";
#define SSL_CIPHER_standard_name(c) __SSL_CIPHER_standard_name(AmiSSLBase, (c))

STACK_OF(X509) * __SSL_get0_verified_chain(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-29454(a6)";
#define SSL_get0_verified_chain(s) __SSL_get0_verified_chain(AmiSSLBase, (s))

STACK_OF(SSL_COMP) * __SSL_COMP_set0_compression_methods(__reg("a6") struct Library * , __reg("a0") STACK_OF(SSL_COMP) * meths ) = "\tjsr\t-29460(a6)";
#define SSL_COMP_set0_compression_methods(meths) __SSL_COMP_set0_compression_methods(AmiSSLBase, (meths))

void __SSL_CTX_set1_cert_store(__reg("a6") struct Library * , __reg("a0") SSL_CTX * a , __reg("a1") X509_STORE * b ) = "\tjsr\t-29472(a6)";
#define SSL_CTX_set1_cert_store(a, b) __SSL_CTX_set1_cert_store(AmiSSLBase, (a), (b))

size_t __DTLS_get_data_mtu(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-29478(a6)";
#define DTLS_get_data_mtu(s) __DTLS_get_data_mtu(AmiSSLBase, (s))

int __SSL_read_ex(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") void * buf , __reg("d0") size_t num , __reg("a2") size_t * readbytes ) = "\tjsr\t-29484(a6)";
#define SSL_read_ex(ssl, buf, num, readbytes) __SSL_read_ex(AmiSSLBase, (ssl), (buf), (num), (readbytes))

int __SSL_peek_ex(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") void * buf , __reg("d0") size_t num , __reg("a2") size_t * readbytes ) = "\tjsr\t-29490(a6)";
#define SSL_peek_ex(ssl, buf, num, readbytes) __SSL_peek_ex(AmiSSLBase, (ssl), (buf), (num), (readbytes))

int __SSL_write_ex(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const void * buf , __reg("d0") size_t num , __reg("a2") size_t * written ) = "\tjsr\t-29496(a6)";
#define SSL_write_ex(s, buf, num, written) __SSL_write_ex(AmiSSLBase, (s), (buf), (num), (written))

void __SSL_CTX_set_keylog_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_CTX_keylog_cb_func cb ) = "\tjsr\t-29502(a6)";
#define SSL_CTX_set_keylog_callback(ctx, cb) __SSL_CTX_set_keylog_callback(AmiSSLBase, (ctx), (cb))

SSL_CTX_keylog_cb_func __SSL_CTX_get_keylog_callback(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-29508(a6)";
#define SSL_CTX_get_keylog_callback(ctx) __SSL_CTX_get_keylog_callback(AmiSSLBase, (ctx))

int __SSL_get_peer_signature_type_nid(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("a1") int * pnid ) = "\tjsr\t-29514(a6)";
#define SSL_get_peer_signature_type_nid(s, pnid) __SSL_get_peer_signature_type_nid(AmiSSLBase, (s), (pnid))

int __SSL_key_update(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int updatetype ) = "\tjsr\t-29520(a6)";
#define SSL_key_update(s, updatetype) __SSL_key_update(AmiSSLBase, (s), (updatetype))

int __SSL_get_key_update_type(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-29526(a6)";
#define SSL_get_key_update_type(s) __SSL_get_key_update_type(AmiSSLBase, (s))

int __SSL_bytes_to_cipher_list(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const unsigned char * bytes , __reg("d0") size_t len , __reg("d1") int isv2format , __reg("a2") STACK_OF(SSL_CIPHER) ** sk , __reg("a3") STACK_OF(SSL_CIPHER) ** scsvs ) = "\tjsr\t-29532(a6)";
#define SSL_bytes_to_cipher_list(s, bytes, len, isv2format, sk, scsvs) __SSL_bytes_to_cipher_list(AmiSSLBase, (s), (bytes), (len), (isv2format), (sk), (scsvs))

size_t __SSL_client_hello_get0_compression_methods(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const unsigned char ** out ) = "\tjsr\t-29538(a6)";
#define SSL_client_hello_get0_compression_methods(s, out) __SSL_client_hello_get0_compression_methods(AmiSSLBase, (s), (out))

size_t __SSL_client_hello_get0_ciphers(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const unsigned char ** out ) = "\tjsr\t-29544(a6)";
#define SSL_client_hello_get0_ciphers(s, out) __SSL_client_hello_get0_ciphers(AmiSSLBase, (s), (out))

int __SSL_client_hello_get0_ext(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") unsigned int type , __reg("a1") const unsigned char ** out , __reg("a2") size_t * outlen ) = "\tjsr\t-29550(a6)";
#define SSL_client_hello_get0_ext(s, type, out, outlen) __SSL_client_hello_get0_ext(AmiSSLBase, (s), (type), (out), (outlen))

size_t __SSL_client_hello_get0_session_id(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const unsigned char ** out ) = "\tjsr\t-29556(a6)";
#define SSL_client_hello_get0_session_id(s, out) __SSL_client_hello_get0_session_id(AmiSSLBase, (s), (out))

size_t __SSL_client_hello_get0_random(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const unsigned char ** out ) = "\tjsr\t-29562(a6)";
#define SSL_client_hello_get0_random(s, out) __SSL_client_hello_get0_random(AmiSSLBase, (s), (out))

void __SSL_CTX_set_client_hello_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * c , __reg("a1") SSL_client_hello_cb_fn cb , __reg("a2") void * arg ) = "\tjsr\t-29568(a6)";
#define SSL_CTX_set_client_hello_cb(c, cb, arg) __SSL_CTX_set_client_hello_cb(AmiSSLBase, (c), (cb), (arg))

unsigned int __SSL_client_hello_get0_legacy_version(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-29574(a6)";
#define SSL_client_hello_get0_legacy_version(s) __SSL_client_hello_get0_legacy_version(AmiSSLBase, (s))

int __SSL_client_hello_isv2(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-29580(a6)";
#define SSL_client_hello_isv2(s) __SSL_client_hello_isv2(AmiSSLBase, (s))

int __SSL_set_max_early_data(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") uint32_t max_early_data ) = "\tjsr\t-29586(a6)";
#define SSL_set_max_early_data(s, max_early_data) __SSL_set_max_early_data(AmiSSLBase, (s), (max_early_data))

int __SSL_CTX_set_max_early_data(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") uint32_t max_early_data ) = "\tjsr\t-29592(a6)";
#define SSL_CTX_set_max_early_data(ctx, max_early_data) __SSL_CTX_set_max_early_data(AmiSSLBase, (ctx), (max_early_data))

uint32_t __SSL_get_max_early_data(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-29598(a6)";
#define SSL_get_max_early_data(s) __SSL_get_max_early_data(AmiSSLBase, (s))

uint32_t __SSL_CTX_get_max_early_data(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-29604(a6)";
#define SSL_CTX_get_max_early_data(ctx) __SSL_CTX_get_max_early_data(AmiSSLBase, (ctx))

int __SSL_write_early_data(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const void * buf , __reg("d0") size_t num , __reg("a2") size_t * written ) = "\tjsr\t-29610(a6)";
#define SSL_write_early_data(s, buf, num, written) __SSL_write_early_data(AmiSSLBase, (s), (buf), (num), (written))

int __SSL_read_early_data(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") void * buf , __reg("d0") size_t num , __reg("a2") size_t * readbytes ) = "\tjsr\t-29616(a6)";
#define SSL_read_early_data(s, buf, num, readbytes) __SSL_read_early_data(AmiSSLBase, (s), (buf), (num), (readbytes))

int __SSL_get_early_data_status(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-29622(a6)";
#define SSL_get_early_data_status(s) __SSL_get_early_data_status(AmiSSLBase, (s))

uint32_t __SSL_SESSION_get_max_early_data(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s ) = "\tjsr\t-29628(a6)";
#define SSL_SESSION_get_max_early_data(s) __SSL_SESSION_get_max_early_data(AmiSSLBase, (s))

int __SSL_add1_to_CA_list(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") const X509 * x ) = "\tjsr\t-29634(a6)";
#define SSL_add1_to_CA_list(ssl, x) __SSL_add1_to_CA_list(AmiSSLBase, (ssl), (x))

void __SSL_set0_CA_list(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") STACK_OF(X509_NAME) * name_list ) = "\tjsr\t-29640(a6)";
#define SSL_set0_CA_list(s, name_list) __SSL_set0_CA_list(AmiSSLBase, (s), (name_list))

void __SSL_CTX_set0_CA_list(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") STACK_OF(X509_NAME) * name_list ) = "\tjsr\t-29646(a6)";
#define SSL_CTX_set0_CA_list(ctx, name_list) __SSL_CTX_set0_CA_list(AmiSSLBase, (ctx), (name_list))

const STACK_OF(X509_NAME) * __SSL_get0_CA_list(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-29652(a6)";
#define SSL_get0_CA_list(s) __SSL_get0_CA_list(AmiSSLBase, (s))

const STACK_OF(X509_NAME) * __SSL_get0_peer_CA_list(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-29658(a6)";
#define SSL_get0_peer_CA_list(s) __SSL_get0_peer_CA_list(AmiSSLBase, (s))

int __SSL_CTX_add1_to_CA_list(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const X509 * x ) = "\tjsr\t-29664(a6)";
#define SSL_CTX_add1_to_CA_list(ctx, x) __SSL_CTX_add1_to_CA_list(AmiSSLBase, (ctx), (x))

const STACK_OF(X509_NAME) * __SSL_CTX_get0_CA_list(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-29670(a6)";
#define SSL_CTX_get0_CA_list(ctx) __SSL_CTX_get0_CA_list(AmiSSLBase, (ctx))

int __SSL_CTX_add_custom_ext(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") unsigned int ext_type , __reg("d1") unsigned int context , __reg("a1") SSL_custom_ext_add_cb_ex add_cb , __reg("a2") SSL_custom_ext_free_cb_ex free_cb , __reg("a3") void * add_arg , __reg("d2") SSL_custom_ext_parse_cb_ex parse_cb , __reg("d3") void * parse_arg ) = "\tjsr\t-29676(a6)";
#define SSL_CTX_add_custom_ext(ctx, ext_type, context, add_cb, free_cb, add_arg, parse_cb, parse_arg) __SSL_CTX_add_custom_ext(AmiSSLBase, (ctx), (ext_type), (context), (add_cb), (free_cb), (add_arg), (parse_cb), (parse_arg))

int __SSL_SESSION_is_resumable(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s ) = "\tjsr\t-29682(a6)";
#define SSL_SESSION_is_resumable(s) __SSL_SESSION_is_resumable(AmiSSLBase, (s))

void __SSL_CTX_set_record_padding_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") size_t (*cb)(SSL *ssl,int type,size_t len,void *arg) ) = "\tjsr\t-29688(a6)";
#define SSL_CTX_set_record_padding_callback(ctx, cb) __SSL_CTX_set_record_padding_callback(AmiSSLBase, (ctx), (cb))

int __SSL_set_record_padding_callback(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") size_t (*cb)(SSL *ssl,int type,size_t len,void *arg) ) = "\tjsr\t-29694(a6)";
#define SSL_set_record_padding_callback(ssl, cb) __SSL_set_record_padding_callback(AmiSSLBase, (ssl), (cb))

int __SSL_CTX_set_block_padding(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") size_t block_size ) = "\tjsr\t-29700(a6)";
#define SSL_CTX_set_block_padding(ctx, block_size) __SSL_CTX_set_block_padding(AmiSSLBase, (ctx), (block_size))

void * __SSL_CTX_get_record_padding_callback_arg(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-29706(a6)";
#define SSL_CTX_get_record_padding_callback_arg(ctx) __SSL_CTX_get_record_padding_callback_arg(AmiSSLBase, (ctx))

void * __SSL_get_record_padding_callback_arg(__reg("a6") struct Library * , __reg("a0") const SSL * ssl ) = "\tjsr\t-29712(a6)";
#define SSL_get_record_padding_callback_arg(ssl) __SSL_get_record_padding_callback_arg(AmiSSLBase, (ssl))

int __SSL_set_block_padding(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("d0") size_t block_size ) = "\tjsr\t-29718(a6)";
#define SSL_set_block_padding(ssl, block_size) __SSL_set_block_padding(AmiSSLBase, (ssl), (block_size))

void __SSL_set_record_padding_callback_arg(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") void * arg ) = "\tjsr\t-29724(a6)";
#define SSL_set_record_padding_callback_arg(ssl, arg) __SSL_set_record_padding_callback_arg(AmiSSLBase, (ssl), (arg))

void __SSL_CTX_set_record_padding_callback_arg(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") void * arg ) = "\tjsr\t-29730(a6)";
#define SSL_CTX_set_record_padding_callback_arg(ctx, arg) __SSL_CTX_set_record_padding_callback_arg(AmiSSLBase, (ctx), (arg))

int __SSL_CTX_use_serverinfo_ex(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") unsigned int version , __reg("a1") const unsigned char * serverinfo , __reg("d1") size_t serverinfo_length ) = "\tjsr\t-29736(a6)";
#define SSL_CTX_use_serverinfo_ex(ctx, version, serverinfo, serverinfo_length) __SSL_CTX_use_serverinfo_ex(AmiSSLBase, (ctx), (version), (serverinfo), (serverinfo_length))

int __SSL_client_hello_get1_extensions_present(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") int ** out , __reg("a2") size_t * outlen ) = "\tjsr\t-29742(a6)";
#define SSL_client_hello_get1_extensions_present(s, out, outlen) __SSL_client_hello_get1_extensions_present(AmiSSLBase, (s), (out), (outlen))

void __SSL_set_psk_find_session_callback(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") SSL_psk_find_session_cb_func cb ) = "\tjsr\t-29748(a6)";
#define SSL_set_psk_find_session_callback(s, cb) __SSL_set_psk_find_session_callback(AmiSSLBase, (s), (cb))

void __SSL_set_psk_use_session_callback(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") SSL_psk_use_session_cb_func cb ) = "\tjsr\t-29754(a6)";
#define SSL_set_psk_use_session_callback(s, cb) __SSL_set_psk_use_session_callback(AmiSSLBase, (s), (cb))

void __SSL_CTX_set_psk_use_session_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_psk_use_session_cb_func cb ) = "\tjsr\t-29760(a6)";
#define SSL_CTX_set_psk_use_session_callback(ctx, cb) __SSL_CTX_set_psk_use_session_callback(AmiSSLBase, (ctx), (cb))

void __SSL_CTX_set_psk_find_session_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_psk_find_session_cb_func cb ) = "\tjsr\t-29766(a6)";
#define SSL_CTX_set_psk_find_session_callback(ctx, cb) __SSL_CTX_set_psk_find_session_callback(AmiSSLBase, (ctx), (cb))

const EVP_MD * __SSL_CIPHER_get_handshake_digest(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c ) = "\tjsr\t-29772(a6)";
#define SSL_CIPHER_get_handshake_digest(c) __SSL_CIPHER_get_handshake_digest(AmiSSLBase, (c))

int __SSL_SESSION_set1_master_key(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * sess , __reg("a1") const unsigned char * in , __reg("d0") size_t len ) = "\tjsr\t-29778(a6)";
#define SSL_SESSION_set1_master_key(sess, in, len) __SSL_SESSION_set1_master_key(AmiSSLBase, (sess), (in), (len))

int __SSL_SESSION_set_cipher(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * s , __reg("a1") const SSL_CIPHER * cipher ) = "\tjsr\t-29784(a6)";
#define SSL_SESSION_set_cipher(s, cipher) __SSL_SESSION_set_cipher(AmiSSLBase, (s), (cipher))

int __SSL_SESSION_set_protocol_version(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * s , __reg("d0") int version ) = "\tjsr\t-29790(a6)";
#define SSL_SESSION_set_protocol_version(s, version) __SSL_SESSION_set_protocol_version(AmiSSLBase, (s), (version))

const char * __OPENSSL_cipher_name(__reg("a6") struct Library * , __reg("a0") const char * rfc_name ) = "\tjsr\t-29796(a6)";
#define OPENSSL_cipher_name(rfc_name) __OPENSSL_cipher_name(AmiSSLBase, (rfc_name))

int __SSL_alloc_buffers(__reg("a6") struct Library * , __reg("a0") SSL * ssl ) = "\tjsr\t-29802(a6)";
#define SSL_alloc_buffers(ssl) __SSL_alloc_buffers(AmiSSLBase, (ssl))

int __SSL_free_buffers(__reg("a6") struct Library * , __reg("a0") SSL * ssl ) = "\tjsr\t-29808(a6)";
#define SSL_free_buffers(ssl) __SSL_free_buffers(AmiSSLBase, (ssl))

SSL_SESSION * __SSL_SESSION_dup(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * src ) = "\tjsr\t-29814(a6)";
#define SSL_SESSION_dup(src) __SSL_SESSION_dup(AmiSSLBase, (src))

const SSL_CIPHER * __SSL_get_pending_cipher(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-29820(a6)";
#define SSL_get_pending_cipher(s) __SSL_get_pending_cipher(AmiSSLBase, (s))

uint16_t __SSL_CIPHER_get_protocol_id(__reg("a6") struct Library * , __reg("a0") const SSL_CIPHER * c ) = "\tjsr\t-29826(a6)";
#define SSL_CIPHER_get_protocol_id(c) __SSL_CIPHER_get_protocol_id(AmiSSLBase, (c))

int __SSL_SESSION_set_max_early_data(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * s , __reg("d0") uint32_t max_early_data ) = "\tjsr\t-29832(a6)";
#define SSL_SESSION_set_max_early_data(s, max_early_data) __SSL_SESSION_set_max_early_data(AmiSSLBase, (s), (max_early_data))

int __SSL_SESSION_set1_alpn_selected(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * s , __reg("a1") const unsigned char * alpn , __reg("d0") size_t len ) = "\tjsr\t-29838(a6)";
#define SSL_SESSION_set1_alpn_selected(s, alpn, len) __SSL_SESSION_set1_alpn_selected(AmiSSLBase, (s), (alpn), (len))

int __SSL_SESSION_set1_hostname(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * s , __reg("a1") const char * hostname ) = "\tjsr\t-29844(a6)";
#define SSL_SESSION_set1_hostname(s, hostname) __SSL_SESSION_set1_hostname(AmiSSLBase, (s), (hostname))

void __SSL_SESSION_get0_alpn_selected(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * s , __reg("a1") const unsigned char ** alpn , __reg("a2") size_t * len ) = "\tjsr\t-29850(a6)";
#define SSL_SESSION_get0_alpn_selected(s, alpn, len) __SSL_SESSION_get0_alpn_selected(AmiSSLBase, (s), (alpn), (len))

void __DTLS_set_timer_cb(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") DTLS_timer_cb cb ) = "\tjsr\t-29856(a6)";
#define DTLS_set_timer_cb(s, cb) __DTLS_set_timer_cb(AmiSSLBase, (s), (cb))

int __SSL_CTX_set_tlsext_max_fragment_length(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") uint8_t mode ) = "\tjsr\t-29862(a6)";
#define SSL_CTX_set_tlsext_max_fragment_length(ctx, mode) __SSL_CTX_set_tlsext_max_fragment_length(AmiSSLBase, (ctx), (mode))

int __SSL_set_tlsext_max_fragment_length(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("d0") uint8_t mode ) = "\tjsr\t-29868(a6)";
#define SSL_set_tlsext_max_fragment_length(ssl, mode) __SSL_set_tlsext_max_fragment_length(AmiSSLBase, (ssl), (mode))

uint8_t __SSL_SESSION_get_max_fragment_length(__reg("a6") struct Library * , __reg("a0") const SSL_SESSION * sess ) = "\tjsr\t-29874(a6)";
#define SSL_SESSION_get_max_fragment_length(sess) __SSL_SESSION_get_max_fragment_length(AmiSSLBase, (sess))

int __SSL_stateless(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-29880(a6)";
#define SSL_stateless(s) __SSL_stateless(AmiSSLBase, (s))

int __SSL_verify_client_post_handshake(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-29886(a6)";
#define SSL_verify_client_post_handshake(s) __SSL_verify_client_post_handshake(AmiSSLBase, (s))

void __SSL_set_post_handshake_auth(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int val ) = "\tjsr\t-29892(a6)";
#define SSL_set_post_handshake_auth(s, val) __SSL_set_post_handshake_auth(AmiSSLBase, (s), (val))

int __SSL_export_keying_material_early(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") unsigned char * out , __reg("d0") size_t olen , __reg("a2") const char * label , __reg("d1") size_t llen , __reg("a3") const unsigned char * context , __reg("d2") size_t contextlen ) = "\tjsr\t-29898(a6)";
#define SSL_export_keying_material_early(s, out, olen, label, llen, context, contextlen) __SSL_export_keying_material_early(AmiSSLBase, (s), (out), (olen), (label), (llen), (context), (contextlen))

int __SSL_CTX_use_cert_and_key(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") X509 * x509 , __reg("a2") EVP_PKEY * privatekey , __reg("a3") STACK_OF(X509) * chain , __reg("d0") int override ) = "\tjsr\t-29904(a6)";
#define SSL_CTX_use_cert_and_key(ctx, x509, privatekey, chain, override) __SSL_CTX_use_cert_and_key(AmiSSLBase, (ctx), (x509), (privatekey), (chain), (override))

int __SSL_use_cert_and_key(__reg("a6") struct Library * , __reg("a0") SSL * ssl , __reg("a1") X509 * x509 , __reg("a2") EVP_PKEY * privatekey , __reg("a3") STACK_OF(X509) * chain , __reg("d0") int override ) = "\tjsr\t-29910(a6)";
#define SSL_use_cert_and_key(ssl, x509, privatekey, chain, override) __SSL_use_cert_and_key(AmiSSLBase, (ssl), (x509), (privatekey), (chain), (override))

int __SSL_SESSION_get0_ticket_appdata(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * ss , __reg("a1") void ** data , __reg("a2") size_t * len ) = "\tjsr\t-29916(a6)";
#define SSL_SESSION_get0_ticket_appdata(ss, data, len) __SSL_SESSION_get0_ticket_appdata(AmiSSLBase, (ss), (data), (len))

int __SSL_SESSION_set1_ticket_appdata(__reg("a6") struct Library * , __reg("a0") SSL_SESSION * ss , __reg("a1") const void * data , __reg("d0") size_t len ) = "\tjsr\t-29922(a6)";
#define SSL_SESSION_set1_ticket_appdata(ss, data, len) __SSL_SESSION_set1_ticket_appdata(AmiSSLBase, (ss), (data), (len))

int __SSL_CTX_set_session_ticket_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_CTX_generate_session_ticket_fn gen_cb , __reg("a2") SSL_CTX_decrypt_session_ticket_fn dec_cb , __reg("a3") void * arg ) = "\tjsr\t-29928(a6)";
#define SSL_CTX_set_session_ticket_cb(ctx, gen_cb, dec_cb, arg) __SSL_CTX_set_session_ticket_cb(AmiSSLBase, (ctx), (gen_cb), (dec_cb), (arg))

void __SSL_CTX_set_stateless_cookie_generate_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*gen_stateless_cookie_cb)(SSL *ssl,unsigned char *cookie,size_t *cookie_len) ) = "\tjsr\t-29934(a6)";
#define SSL_CTX_set_stateless_cookie_generate_cb(ctx, gen_stateless_cookie_cb) __SSL_CTX_set_stateless_cookie_generate_cb(AmiSSLBase, (ctx), (gen_stateless_cookie_cb))

void __SSL_CTX_set_stateless_cookie_verify_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*verify_stateless_cookie_cb)(SSL *ssl,const unsigned char *cookie,size_t cookie_len) ) = "\tjsr\t-29940(a6)";
#define SSL_CTX_set_stateless_cookie_verify_cb(ctx, verify_stateless_cookie_cb) __SSL_CTX_set_stateless_cookie_verify_cb(AmiSSLBase, (ctx), (verify_stateless_cookie_cb))

int __SSL_CTX_set_ciphersuites(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * str ) = "\tjsr\t-29946(a6)";
#define SSL_CTX_set_ciphersuites(ctx, str) __SSL_CTX_set_ciphersuites(AmiSSLBase, (ctx), (str))

int __SSL_set_ciphersuites(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") const char * str ) = "\tjsr\t-29952(a6)";
#define SSL_set_ciphersuites(s, str) __SSL_set_ciphersuites(AmiSSLBase, (s), (str))

int __SSL_set_num_tickets(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") size_t num_tickets ) = "\tjsr\t-29958(a6)";
#define SSL_set_num_tickets(s, num_tickets) __SSL_set_num_tickets(AmiSSLBase, (s), (num_tickets))

size_t __SSL_CTX_get_num_tickets(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-29964(a6)";
#define SSL_CTX_get_num_tickets(ctx) __SSL_CTX_get_num_tickets(AmiSSLBase, (ctx))

size_t __SSL_get_num_tickets(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-29970(a6)";
#define SSL_get_num_tickets(s) __SSL_get_num_tickets(AmiSSLBase, (s))

int __SSL_CTX_set_num_tickets(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") size_t num_tickets ) = "\tjsr\t-29976(a6)";
#define SSL_CTX_set_num_tickets(ctx, num_tickets) __SSL_CTX_set_num_tickets(AmiSSLBase, (ctx), (num_tickets))

void __SSL_CTX_set_allow_early_data_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_allow_early_data_cb_fn cb , __reg("a2") void * arg ) = "\tjsr\t-29982(a6)";
#define SSL_CTX_set_allow_early_data_cb(ctx, cb, arg) __SSL_CTX_set_allow_early_data_cb(AmiSSLBase, (ctx), (cb), (arg))

void __SSL_set_allow_early_data_cb(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") SSL_allow_early_data_cb_fn cb , __reg("a2") void * arg ) = "\tjsr\t-29988(a6)";
#define SSL_set_allow_early_data_cb(s, cb, arg) __SSL_set_allow_early_data_cb(AmiSSLBase, (s), (cb), (arg))

int __SSL_set_recv_max_early_data(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") uint32_t recv_max_early_data ) = "\tjsr\t-29994(a6)";
#define SSL_set_recv_max_early_data(s, recv_max_early_data) __SSL_set_recv_max_early_data(AmiSSLBase, (s), (recv_max_early_data))

uint32_t __SSL_get_recv_max_early_data(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-30000(a6)";
#define SSL_get_recv_max_early_data(s) __SSL_get_recv_max_early_data(AmiSSLBase, (s))

uint32_t __SSL_CTX_get_recv_max_early_data(__reg("a6") struct Library * , __reg("a0") const SSL_CTX * ctx ) = "\tjsr\t-30006(a6)";
#define SSL_CTX_get_recv_max_early_data(ctx) __SSL_CTX_get_recv_max_early_data(AmiSSLBase, (ctx))

int __SSL_CTX_set_recv_max_early_data(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") uint32_t recv_max_early_data ) = "\tjsr\t-30012(a6)";
#define SSL_CTX_set_recv_max_early_data(ctx, recv_max_early_data) __SSL_CTX_set_recv_max_early_data(AmiSSLBase, (ctx), (recv_max_early_data))

void __SSL_CTX_set_post_handshake_auth(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("d0") int val ) = "\tjsr\t-30018(a6)";
#define SSL_CTX_set_post_handshake_auth(ctx, val) __SSL_CTX_set_post_handshake_auth(AmiSSLBase, (ctx), (val))

int __SSL_get_signature_type_nid(__reg("a6") struct Library * , __reg("a0") const SSL * s , __reg("a1") int * pnid ) = "\tjsr\t-30024(a6)";
#define SSL_get_signature_type_nid(s, pnid) __SSL_get_signature_type_nid(AmiSSLBase, (s), (pnid))

void __IPAddressRange_free(__reg("a6") struct Library * , __reg("a0") IPAddressRange * a ) = "\tjsr\t-30030(a6)";
#define IPAddressRange_free(a) __IPAddressRange_free(AmiSSLBase, (a))

TLS_FEATURE * __TLS_FEATURE_new(__reg("a6") struct Library * ) = "\tjsr\t-30036(a6)";
#define TLS_FEATURE_new() __TLS_FEATURE_new(AmiSSLBase)

const BIO_METHOD * __BIO_f_linebuffer(__reg("a6") struct Library * ) = "\tjsr\t-30048(a6)";
#define BIO_f_linebuffer() __BIO_f_linebuffer(AmiSSLBase)

IPAddressRange * __IPAddressRange_new(__reg("a6") struct Library * ) = "\tjsr\t-30060(a6)";
#define IPAddressRange_new() __IPAddressRange_new(AmiSSLBase)

const ASN1_ITEM * __IPAddressRange_it(__reg("a6") struct Library * ) = "\tjsr\t-30066(a6)";
#define IPAddressRange_it() __IPAddressRange_it(AmiSSLBase)

IPAddressRange * __d2i_IPAddressRange(__reg("a6") struct Library * , __reg("a0") IPAddressRange ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-30078(a6)";
#define d2i_IPAddressRange(a, in, len) __d2i_IPAddressRange(AmiSSLBase, (a), (in), (len))

void __TLS_FEATURE_free(__reg("a6") struct Library * , __reg("a0") TLS_FEATURE * a ) = "\tjsr\t-30096(a6)";
#define TLS_FEATURE_free(a) __TLS_FEATURE_free(AmiSSLBase, (a))

int __i2d_RSA_OAEP_PARAMS(__reg("a6") struct Library * , __reg("a0") const RSA_OAEP_PARAMS * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-30102(a6)";
#define i2d_RSA_OAEP_PARAMS(a, out) __i2d_RSA_OAEP_PARAMS(AmiSSLBase, (a), (out))

int __i2d_IPAddressRange(__reg("a6") struct Library * , __reg("a0") const IPAddressRange * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-30114(a6)";
#define i2d_IPAddressRange(a, out) __i2d_IPAddressRange(AmiSSLBase, (a), (out))

X509_OBJECT * __X509_OBJECT_new(__reg("a6") struct Library * ) = "\tjsr\t-30120(a6)";
#define X509_OBJECT_new() __X509_OBJECT_new(AmiSSLBase)

ASN1_TYPE * __PKCS12_get_attr(__reg("a6") struct Library * , __reg("a0") const PKCS12_SAFEBAG * bag , __reg("d0") int attr_nid ) = "\tjsr\t-30126(a6)";
#define PKCS12_get_attr(bag, attr_nid) __PKCS12_get_attr(AmiSSLBase, (bag), (attr_nid))

void __ECPKPARAMETERS_free(__reg("a6") struct Library * , __reg("a0") ECPKPARAMETERS * a ) = "\tjsr\t-30132(a6)";
#define ECPKPARAMETERS_free(a) __ECPKPARAMETERS_free(AmiSSLBase, (a))

ECPKPARAMETERS * __ECPKPARAMETERS_new(__reg("a6") struct Library * ) = "\tjsr\t-30138(a6)";
#define ECPKPARAMETERS_new() __ECPKPARAMETERS_new(AmiSSLBase)

const ASN1_ITEM * __ASN1_ITEM_lookup(__reg("a6") struct Library * , __reg("a0") const char * name ) = "\tjsr\t-30144(a6)";
#define ASN1_ITEM_lookup(name) __ASN1_ITEM_lookup(AmiSSLBase, (name))

const ASN1_ITEM * __ASN1_ITEM_get(__reg("a6") struct Library * , __reg("d0") size_t i ) = "\tjsr\t-30150(a6)";
#define ASN1_ITEM_get(i) __ASN1_ITEM_get(AmiSSLBase, (i))

int __BIO_read_ex(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") void * data , __reg("d0") size_t dlen , __reg("a2") size_t * readbytes ) = "\tjsr\t-30156(a6)";
#define BIO_read_ex(b, data, dlen, readbytes) __BIO_read_ex(AmiSSLBase, (b), (data), (dlen), (readbytes))

void __BIO_set_callback_ex(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") BIO_callback_fn_ex callback ) = "\tjsr\t-30162(a6)";
#define BIO_set_callback_ex(b, callback) __BIO_set_callback_ex(AmiSSLBase, (b), (callback))

BIO_callback_fn_ex __BIO_get_callback_ex(__reg("a6") struct Library * , __reg("a0") const BIO * b ) = "\tjsr\t-30168(a6)";
#define BIO_get_callback_ex(b) __BIO_get_callback_ex(AmiSSLBase, (b))

int __BIO_meth_set_read_ex(__reg("a6") struct Library * , __reg("a0") BIO_METHOD * biom , __reg("a1") int (*bread)(BIO *,char *,size_t,size_t *) ) = "\tjsr\t-30174(a6)";
#define BIO_meth_set_read_ex(biom, bread) __BIO_meth_set_read_ex(AmiSSLBase, (biom), (bread))

int  (* __BIO_meth_get_read_ex(__reg("a6") struct Library * , __reg("a0") const BIO_METHOD * biom ) )(BIO *, char *, size_t, size_t *) =  "\tjsr\t-30180(a6)";
#define BIO_meth_get_read_ex(biom) __BIO_meth_get_read_ex(AmiSSLBase, (biom))

int __BIO_write_ex(__reg("a6") struct Library * , __reg("a0") BIO * b , __reg("a1") const void * data , __reg("d0") size_t dlen , __reg("a2") size_t * written ) = "\tjsr\t-30186(a6)";
#define BIO_write_ex(b, data, dlen, written) __BIO_write_ex(AmiSSLBase, (b), (data), (dlen), (written))

int  (* __BIO_meth_get_write_ex(__reg("a6") struct Library * , __reg("a0") const BIO_METHOD * biom ) )(BIO *, const char *, size_t, size_t *) =  "\tjsr\t-30192(a6)";
#define BIO_meth_get_write_ex(biom) __BIO_meth_get_write_ex(AmiSSLBase, (biom))

int __BIO_meth_set_write_ex(__reg("a6") struct Library * , __reg("a0") BIO_METHOD * biom , __reg("a1") int (*bwrite)(BIO *,const char *,size_t,size_t *) ) = "\tjsr\t-30198(a6)";
#define BIO_meth_set_write_ex(biom, bwrite) __BIO_meth_set_write_ex(AmiSSLBase, (biom), (bwrite))

int __EVP_PKEY_CTX_md(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("d0") int optype , __reg("d1") int cmd , __reg("a1") const char * md ) = "\tjsr\t-30204(a6)";
#define EVP_PKEY_CTX_md(ctx, optype, cmd, md) __EVP_PKEY_CTX_md(AmiSSLBase, (ctx), (optype), (cmd), (md))

int __RSA_pkey_ctx_ctrl(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("d0") int optype , __reg("d1") int cmd , __reg("d2") int p1 , __reg("a1") void * p2 ) = "\tjsr\t-30210(a6)";
#define RSA_pkey_ctx_ctrl(ctx, optype, cmd, p1, p2) __RSA_pkey_ctx_ctrl(AmiSSLBase, (ctx), (optype), (cmd), (p1), (p2))

int __UI_method_set_ex_data(__reg("a6") struct Library * , __reg("a0") UI_METHOD * method , __reg("d0") int idx , __reg("a1") void * data ) = "\tjsr\t-30216(a6)";
#define UI_method_set_ex_data(method, idx, data) __UI_method_set_ex_data(AmiSSLBase, (method), (idx), (data))

const void * __UI_method_get_ex_data(__reg("a6") struct Library * , __reg("a0") const UI_METHOD * method , __reg("d0") int idx ) = "\tjsr\t-30222(a6)";
#define UI_method_get_ex_data(method, idx) __UI_method_get_ex_data(AmiSSLBase, (method), (idx))

UI_METHOD * __UI_UTIL_wrap_read_pem_callback(__reg("a6") struct Library * , __reg("a0") pem_password_cb * cb , __reg("d0") int rwflag ) = "\tjsr\t-30228(a6)";
#define UI_UTIL_wrap_read_pem_callback(cb, rwflag) __UI_UTIL_wrap_read_pem_callback(AmiSSLBase, (cb), (rwflag))

const unsigned char * __EVP_PKEY_get0_poly1305(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey , __reg("a1") size_t * len ) = "\tjsr\t-30234(a6)";
#define EVP_PKEY_get0_poly1305(pkey, len) __EVP_PKEY_get0_poly1305(AmiSSLBase, (pkey), (len))

const unsigned char * __EVP_PKEY_get0_siphash(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey , __reg("a1") size_t * len ) = "\tjsr\t-30240(a6)";
#define EVP_PKEY_get0_siphash(pkey, len) __EVP_PKEY_get0_siphash(AmiSSLBase, (pkey), (len))

const EVP_CIPHER * __EVP_aria_256_ofb(__reg("a6") struct Library * ) = "\tjsr\t-30246(a6)";
#define EVP_aria_256_ofb() __EVP_aria_256_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_256_cfb128(__reg("a6") struct Library * ) = "\tjsr\t-30252(a6)";
#define EVP_aria_256_cfb128() __EVP_aria_256_cfb128(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_128_cfb1(__reg("a6") struct Library * ) = "\tjsr\t-30258(a6)";
#define EVP_aria_128_cfb1() __EVP_aria_128_cfb1(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_128_ecb(__reg("a6") struct Library * ) = "\tjsr\t-30264(a6)";
#define EVP_aria_128_ecb() __EVP_aria_128_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_128_cfb128(__reg("a6") struct Library * ) = "\tjsr\t-30270(a6)";
#define EVP_aria_128_cfb128() __EVP_aria_128_cfb128(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_192_ecb(__reg("a6") struct Library * ) = "\tjsr\t-30276(a6)";
#define EVP_aria_192_ecb() __EVP_aria_192_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_128_cbc(__reg("a6") struct Library * ) = "\tjsr\t-30282(a6)";
#define EVP_aria_128_cbc() __EVP_aria_128_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_192_ofb(__reg("a6") struct Library * ) = "\tjsr\t-30288(a6)";
#define EVP_aria_192_ofb() __EVP_aria_192_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_192_cbc(__reg("a6") struct Library * ) = "\tjsr\t-30294(a6)";
#define EVP_aria_192_cbc() __EVP_aria_192_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_192_cfb1(__reg("a6") struct Library * ) = "\tjsr\t-30300(a6)";
#define EVP_aria_192_cfb1() __EVP_aria_192_cfb1(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_128_cfb8(__reg("a6") struct Library * ) = "\tjsr\t-30306(a6)";
#define EVP_aria_128_cfb8() __EVP_aria_128_cfb8(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_256_cfb1(__reg("a6") struct Library * ) = "\tjsr\t-30312(a6)";
#define EVP_aria_256_cfb1() __EVP_aria_256_cfb1(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_192_cfb8(__reg("a6") struct Library * ) = "\tjsr\t-30318(a6)";
#define EVP_aria_192_cfb8() __EVP_aria_192_cfb8(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_256_cfb8(__reg("a6") struct Library * ) = "\tjsr\t-30324(a6)";
#define EVP_aria_256_cfb8() __EVP_aria_256_cfb8(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_256_cbc(__reg("a6") struct Library * ) = "\tjsr\t-30330(a6)";
#define EVP_aria_256_cbc() __EVP_aria_256_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_128_ofb(__reg("a6") struct Library * ) = "\tjsr\t-30336(a6)";
#define EVP_aria_128_ofb() __EVP_aria_128_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_192_cfb128(__reg("a6") struct Library * ) = "\tjsr\t-30342(a6)";
#define EVP_aria_192_cfb128() __EVP_aria_192_cfb128(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_256_ecb(__reg("a6") struct Library * ) = "\tjsr\t-30348(a6)";
#define EVP_aria_256_ecb() __EVP_aria_256_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_256_ctr(__reg("a6") struct Library * ) = "\tjsr\t-30354(a6)";
#define EVP_aria_256_ctr() __EVP_aria_256_ctr(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_128_ctr(__reg("a6") struct Library * ) = "\tjsr\t-30360(a6)";
#define EVP_aria_128_ctr() __EVP_aria_128_ctr(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_192_ctr(__reg("a6") struct Library * ) = "\tjsr\t-30366(a6)";
#define EVP_aria_192_ctr() __EVP_aria_192_ctr(AmiSSLBase)

const UI_METHOD * __UI_null(__reg("a6") struct Library * ) = "\tjsr\t-30372(a6)";
#define UI_null() __UI_null(AmiSSLBase)

ENGINE * __EC_KEY_get0_engine(__reg("a6") struct Library * , __reg("a0") const EC_KEY * eckey ) = "\tjsr\t-30378(a6)";
#define EC_KEY_get0_engine(eckey) __EC_KEY_get0_engine(AmiSSLBase, (eckey))

const ASN1_ITEM * __INT32_it(__reg("a6") struct Library * ) = "\tjsr\t-30384(a6)";
#define INT32_it() __INT32_it(AmiSSLBase)

const ASN1_ITEM * __UINT64_it(__reg("a6") struct Library * ) = "\tjsr\t-30390(a6)";
#define UINT64_it() __UINT64_it(AmiSSLBase)

const ASN1_ITEM * __ZINT32_it(__reg("a6") struct Library * ) = "\tjsr\t-30396(a6)";
#define ZINT32_it() __ZINT32_it(AmiSSLBase)

const ASN1_ITEM * __ZUINT64_it(__reg("a6") struct Library * ) = "\tjsr\t-30402(a6)";
#define ZUINT64_it() __ZUINT64_it(AmiSSLBase)

const ASN1_ITEM * __INT64_it(__reg("a6") struct Library * ) = "\tjsr\t-30408(a6)";
#define INT64_it() __INT64_it(AmiSSLBase)

const ASN1_ITEM * __ZUINT32_it(__reg("a6") struct Library * ) = "\tjsr\t-30414(a6)";
#define ZUINT32_it() __ZUINT32_it(AmiSSLBase)

const ASN1_ITEM * __UINT32_it(__reg("a6") struct Library * ) = "\tjsr\t-30420(a6)";
#define UINT32_it() __UINT32_it(AmiSSLBase)

const ASN1_ITEM * __ZINT64_it(__reg("a6") struct Library * ) = "\tjsr\t-30426(a6)";
#define ZINT64_it() __ZINT64_it(AmiSSLBase)

int __BIO_lookup_ex(__reg("a6") struct Library * , __reg("a0") const char * host , __reg("a1") const char * service , __reg("d0") int lookup_type , __reg("d1") int family , __reg("d2") int socktype , __reg("d3") int protocol , __reg("a2") BIO_ADDRINFO ** res ) = "\tjsr\t-30432(a6)";
#define BIO_lookup_ex(host, service, lookup_type, family, socktype, protocol, res) __BIO_lookup_ex(AmiSSLBase, (host), (service), (lookup_type), (family), (socktype), (protocol), (res))

int __X509_CRL_print_ex(__reg("a6") struct Library * , __reg("a0") BIO * out , __reg("a1") X509_CRL * x , __reg("d0") unsigned long nmflag ) = "\tjsr\t-30438(a6)";
#define X509_CRL_print_ex(out, x, nmflag) __X509_CRL_print_ex(AmiSSLBase, (out), (x), (nmflag))

int __X509_SIG_INFO_get(__reg("a6") struct Library * , __reg("a0") const X509_SIG_INFO * siginf , __reg("a1") int * mdnid , __reg("a2") int * pknid , __reg("a3") int * secbits , __reg("d0") uint32_t * flags ) = "\tjsr\t-30444(a6)";
#define X509_SIG_INFO_get(siginf, mdnid, pknid, secbits, flags) __X509_SIG_INFO_get(AmiSSLBase, (siginf), (mdnid), (pknid), (secbits), (flags))

int __X509_get_signature_info(__reg("a6") struct Library * , __reg("a0") X509 * x , __reg("a1") int * mdnid , __reg("a2") int * pknid , __reg("a3") int * secbits , __reg("d0") uint32_t * flags ) = "\tjsr\t-30450(a6)";
#define X509_get_signature_info(x, mdnid, pknid, secbits, flags) __X509_get_signature_info(AmiSSLBase, (x), (mdnid), (pknid), (secbits), (flags))

void __X509_SIG_INFO_set(__reg("a6") struct Library * , __reg("a0") X509_SIG_INFO * siginf , __reg("d0") int mdnid , __reg("d1") int pknid , __reg("d2") int secbits , __reg("d3") uint32_t flags ) = "\tjsr\t-30456(a6)";
#define X509_SIG_INFO_set(siginf, mdnid, pknid, secbits, flags) __X509_SIG_INFO_set(AmiSSLBase, (siginf), (mdnid), (pknid), (secbits), (flags))

void __ESS_CERT_ID_V2_free(__reg("a6") struct Library * , __reg("a0") ESS_CERT_ID_V2 * a ) = "\tjsr\t-30462(a6)";
#define ESS_CERT_ID_V2_free(a) __ESS_CERT_ID_V2_free(AmiSSLBase, (a))

ESS_SIGNING_CERT_V2 * __ESS_SIGNING_CERT_V2_new(__reg("a6") struct Library * ) = "\tjsr\t-30468(a6)";
#define ESS_SIGNING_CERT_V2_new() __ESS_SIGNING_CERT_V2_new(AmiSSLBase)

ESS_SIGNING_CERT_V2 * __d2i_ESS_SIGNING_CERT_V2(__reg("a6") struct Library * , __reg("a0") ESS_SIGNING_CERT_V2 ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-30474(a6)";
#define d2i_ESS_SIGNING_CERT_V2(a, pp, length) __d2i_ESS_SIGNING_CERT_V2(AmiSSLBase, (a), (pp), (length))

int __i2d_ESS_CERT_ID_V2(__reg("a6") struct Library * , __reg("a0") const ESS_CERT_ID_V2 * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-30480(a6)";
#define i2d_ESS_CERT_ID_V2(a, pp) __i2d_ESS_CERT_ID_V2(AmiSSLBase, (a), (pp))

ESS_CERT_ID_V2 * __ESS_CERT_ID_V2_dup(__reg("a6") struct Library * , __reg("a0") const ESS_CERT_ID_V2 * a ) = "\tjsr\t-30486(a6)";
#define ESS_CERT_ID_V2_dup(a) __ESS_CERT_ID_V2_dup(AmiSSLBase, (a))

int __TS_RESP_CTX_set_ess_cert_id_digest(__reg("a6") struct Library * , __reg("a0") TS_RESP_CTX * ctx , __reg("a1") const EVP_MD * md ) = "\tjsr\t-30492(a6)";
#define TS_RESP_CTX_set_ess_cert_id_digest(ctx, md) __TS_RESP_CTX_set_ess_cert_id_digest(AmiSSLBase, (ctx), (md))

ESS_CERT_ID_V2 * __d2i_ESS_CERT_ID_V2(__reg("a6") struct Library * , __reg("a0") ESS_CERT_ID_V2 ** a , __reg("a1") const unsigned char ** pp , __reg("d0") long length ) = "\tjsr\t-30498(a6)";
#define d2i_ESS_CERT_ID_V2(a, pp, length) __d2i_ESS_CERT_ID_V2(AmiSSLBase, (a), (pp), (length))

int __i2d_ESS_SIGNING_CERT_V2(__reg("a6") struct Library * , __reg("a0") const ESS_SIGNING_CERT_V2 * a , __reg("a1") unsigned char ** pp ) = "\tjsr\t-30504(a6)";
#define i2d_ESS_SIGNING_CERT_V2(a, pp) __i2d_ESS_SIGNING_CERT_V2(AmiSSLBase, (a), (pp))

int __TS_CONF_set_ess_cert_id_digest(__reg("a6") struct Library * , __reg("a0") CONF * conf , __reg("a1") const char * section , __reg("a2") TS_RESP_CTX * ctx ) = "\tjsr\t-30510(a6)";
#define TS_CONF_set_ess_cert_id_digest(conf, section, ctx) __TS_CONF_set_ess_cert_id_digest(AmiSSLBase, (conf), (section), (ctx))

void __ESS_SIGNING_CERT_V2_free(__reg("a6") struct Library * , __reg("a0") ESS_SIGNING_CERT_V2 * a ) = "\tjsr\t-30516(a6)";
#define ESS_SIGNING_CERT_V2_free(a) __ESS_SIGNING_CERT_V2_free(AmiSSLBase, (a))

ESS_SIGNING_CERT_V2 * __ESS_SIGNING_CERT_V2_dup(__reg("a6") struct Library * , __reg("a0") const ESS_SIGNING_CERT_V2 * a ) = "\tjsr\t-30522(a6)";
#define ESS_SIGNING_CERT_V2_dup(a) __ESS_SIGNING_CERT_V2_dup(AmiSSLBase, (a))

ESS_CERT_ID_V2 * __ESS_CERT_ID_V2_new(__reg("a6") struct Library * ) = "\tjsr\t-30528(a6)";
#define ESS_CERT_ID_V2_new() __ESS_CERT_ID_V2_new(AmiSSLBase)

int __PEM_read_bio_ex(__reg("a6") struct Library * , __reg("a0") BIO * bp , __reg("a1") char ** name , __reg("a2") char ** header , __reg("a3") unsigned char ** data , __reg("d0") long * len , __reg("d1") unsigned int flags ) = "\tjsr\t-30534(a6)";
#define PEM_read_bio_ex(bp, name, header, data, len, flags) __PEM_read_bio_ex(AmiSSLBase, (bp), (name), (header), (data), (len), (flags))

int __PEM_bytes_read_bio_secmem(__reg("a6") struct Library * , __reg("a0") unsigned char ** pdata , __reg("a1") long * plen , __reg("a2") char ** pnm , __reg("a3") const char * name , __reg("d0") BIO * bp , __reg("d1") pem_password_cb * cb , __reg("d2") void * u ) = "\tjsr\t-30540(a6)";
#define PEM_bytes_read_bio_secmem(pdata, plen, pnm, name, bp, cb, u) __PEM_bytes_read_bio_secmem(AmiSSLBase, (pdata), (plen), (pnm), (name), (bp), (cb), (u))

int __EVP_DigestSign(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") unsigned char * sigret , __reg("a2") size_t * siglen , __reg("a3") const unsigned char * tbs , __reg("d0") size_t tbslen ) = "\tjsr\t-30546(a6)";
#define EVP_DigestSign(ctx, sigret, siglen, tbs, tbslen) __EVP_DigestSign(AmiSSLBase, (ctx), (sigret), (siglen), (tbs), (tbslen))

int __EVP_DigestVerify(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") const unsigned char * sigret , __reg("d0") size_t siglen , __reg("a2") const unsigned char * tbs , __reg("d1") size_t tbslen ) = "\tjsr\t-30552(a6)";
#define EVP_DigestVerify(ctx, sigret, siglen, tbs, tbslen) __EVP_DigestVerify(AmiSSLBase, (ctx), (sigret), (siglen), (tbs), (tbslen))

void * (* __UI_method_get_data_duplicator(__reg("a6") struct Library * , __reg("a0") const UI_METHOD * method ) )(UI *, void *) =  "\tjsr\t-30558(a6)";
#define UI_method_get_data_duplicator(method) __UI_method_get_data_duplicator(AmiSSLBase, (method))

int __UI_method_set_data_duplicator(__reg("a6") struct Library * , __reg("a0") UI_METHOD * method , __reg("a1") void *(*duplicator)(UI *ui,void *ui_data) , __reg("a2") void (*destructor)(UI *ui,void *ui_data) ) = "\tjsr\t-30564(a6)";
#define UI_method_set_data_duplicator(method, duplicator, destructor) __UI_method_set_data_duplicator(AmiSSLBase, (method), (duplicator), (destructor))

int __UI_dup_user_data(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") void * user_data ) = "\tjsr\t-30570(a6)";
#define UI_dup_user_data(ui, user_data) __UI_dup_user_data(AmiSSLBase, (ui), (user_data))

void  (* __UI_method_get_data_destructor(__reg("a6") struct Library * , __reg("a0") const UI_METHOD * method ) )(UI *, void *) =  "\tjsr\t-30576(a6)";
#define UI_method_get_data_destructor(method) __UI_method_get_data_destructor(AmiSSLBase, (method))

int __ERR_load_strings_const(__reg("a6") struct Library * , __reg("a0") const ERR_STRING_DATA * str ) = "\tjsr\t-30582(a6)";
#define ERR_load_strings_const(str) __ERR_load_strings_const(AmiSSLBase, (str))

int __ASN1_TIME_to_tm(__reg("a6") struct Library * , __reg("a0") const ASN1_TIME * s , __reg("a1") struct tm * tm ) = "\tjsr\t-30588(a6)";
#define ASN1_TIME_to_tm(s, tm) __ASN1_TIME_to_tm(AmiSSLBase, (s), (tm))

int __ASN1_TIME_set_string_X509(__reg("a6") struct Library * , __reg("a0") ASN1_TIME * s , __reg("a1") const char * str ) = "\tjsr\t-30594(a6)";
#define ASN1_TIME_set_string_X509(s, str) __ASN1_TIME_set_string_X509(AmiSSLBase, (s), (str))

int __OCSP_resp_get1_id(__reg("a6") struct Library * , __reg("a0") const OCSP_BASICRESP * bs , __reg("a1") ASN1_OCTET_STRING ** pid , __reg("a2") X509_NAME ** pname ) = "\tjsr\t-30600(a6)";
#define OCSP_resp_get1_id(bs, pid, pname) __OCSP_resp_get1_id(AmiSSLBase, (bs), (pid), (pname))

int __OSSL_STORE_register_loader(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_LOADER * loader ) = "\tjsr\t-30606(a6)";
#define OSSL_STORE_register_loader(loader) __OSSL_STORE_register_loader(AmiSSLBase, (loader))

int __OSSL_STORE_LOADER_set_error(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_LOADER * loader , __reg("a1") OSSL_STORE_error_fn error_function ) = "\tjsr\t-30612(a6)";
#define OSSL_STORE_LOADER_set_error(loader, error_function) __OSSL_STORE_LOADER_set_error(AmiSSLBase, (loader), (error_function))

EVP_PKEY * __OSSL_STORE_INFO_get0_PKEY(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30618(a6)";
#define OSSL_STORE_INFO_get0_PKEY(info) __OSSL_STORE_INFO_get0_PKEY(AmiSSLBase, (info))

int __OSSL_STORE_INFO_get_type(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30624(a6)";
#define OSSL_STORE_INFO_get_type(info) __OSSL_STORE_INFO_get_type(AmiSSLBase, (info))

int __ERR_load_OSSL_STORE_strings(__reg("a6") struct Library * ) = "\tjsr\t-30630(a6)";
#define ERR_load_OSSL_STORE_strings() __ERR_load_OSSL_STORE_strings(AmiSSLBase)

void __OSSL_STORE_LOADER_free(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_LOADER * loader ) = "\tjsr\t-30636(a6)";
#define OSSL_STORE_LOADER_free(loader) __OSSL_STORE_LOADER_free(AmiSSLBase, (loader))

EVP_PKEY * __OSSL_STORE_INFO_get1_PKEY(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30642(a6)";
#define OSSL_STORE_INFO_get1_PKEY(info) __OSSL_STORE_INFO_get1_PKEY(AmiSSLBase, (info))

void __OSSL_STORE_INFO_free(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_INFO * info ) = "\tjsr\t-30648(a6)";
#define OSSL_STORE_INFO_free(info) __OSSL_STORE_INFO_free(AmiSSLBase, (info))

int __OSSL_STORE_LOADER_set_eof(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_LOADER * loader , __reg("a1") OSSL_STORE_eof_fn eof_function ) = "\tjsr\t-30654(a6)";
#define OSSL_STORE_LOADER_set_eof(loader, eof_function) __OSSL_STORE_LOADER_set_eof(AmiSSLBase, (loader), (eof_function))

OSSL_STORE_LOADER * __OSSL_STORE_LOADER_new(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const char * scheme ) = "\tjsr\t-30660(a6)";
#define OSSL_STORE_LOADER_new(e, scheme) __OSSL_STORE_LOADER_new(AmiSSLBase, (e), (scheme))

X509 * __OSSL_STORE_INFO_get0_CERT(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30666(a6)";
#define OSSL_STORE_INFO_get0_CERT(info) __OSSL_STORE_INFO_get0_CERT(AmiSSLBase, (info))

int __OSSL_STORE_LOADER_set_close(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_LOADER * loader , __reg("a1") OSSL_STORE_close_fn close_function ) = "\tjsr\t-30672(a6)";
#define OSSL_STORE_LOADER_set_close(loader, close_function) __OSSL_STORE_LOADER_set_close(AmiSSLBase, (loader), (close_function))

OSSL_STORE_INFO * __OSSL_STORE_INFO_new_PARAMS(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * params ) = "\tjsr\t-30678(a6)";
#define OSSL_STORE_INFO_new_PARAMS(params) __OSSL_STORE_INFO_new_PARAMS(AmiSSLBase, (params))

OSSL_STORE_INFO * __OSSL_STORE_INFO_new_PKEY(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey ) = "\tjsr\t-30684(a6)";
#define OSSL_STORE_INFO_new_PKEY(pkey) __OSSL_STORE_INFO_new_PKEY(AmiSSLBase, (pkey))

EVP_PKEY * __OSSL_STORE_INFO_get1_PARAMS(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30690(a6)";
#define OSSL_STORE_INFO_get1_PARAMS(info) __OSSL_STORE_INFO_get1_PARAMS(AmiSSLBase, (info))

X509_CRL * __OSSL_STORE_INFO_get1_CRL(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30696(a6)";
#define OSSL_STORE_INFO_get1_CRL(info) __OSSL_STORE_INFO_get1_CRL(AmiSSLBase, (info))

int __OSSL_STORE_error(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_CTX * ctx ) = "\tjsr\t-30702(a6)";
#define OSSL_STORE_error(ctx) __OSSL_STORE_error(AmiSSLBase, (ctx))

X509 * __OSSL_STORE_INFO_get1_CERT(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30708(a6)";
#define OSSL_STORE_INFO_get1_CERT(info) __OSSL_STORE_INFO_get1_CERT(AmiSSLBase, (info))

EVP_PKEY * __OSSL_STORE_INFO_get0_PARAMS(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30714(a6)";
#define OSSL_STORE_INFO_get0_PARAMS(info) __OSSL_STORE_INFO_get0_PARAMS(AmiSSLBase, (info))

const char * __OSSL_STORE_INFO_type_string(__reg("a6") struct Library * , __reg("d0") int type ) = "\tjsr\t-30720(a6)";
#define OSSL_STORE_INFO_type_string(type) __OSSL_STORE_INFO_type_string(AmiSSLBase, (type))

char * __OSSL_STORE_INFO_get1_NAME(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30726(a6)";
#define OSSL_STORE_INFO_get1_NAME(info) __OSSL_STORE_INFO_get1_NAME(AmiSSLBase, (info))

int __OSSL_STORE_LOADER_set_load(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_LOADER * loader , __reg("a1") OSSL_STORE_load_fn load_function ) = "\tjsr\t-30732(a6)";
#define OSSL_STORE_LOADER_set_load(loader, load_function) __OSSL_STORE_LOADER_set_load(AmiSSLBase, (loader), (load_function))

const char * __OSSL_STORE_LOADER_get0_scheme(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_LOADER * loader ) = "\tjsr\t-30738(a6)";
#define OSSL_STORE_LOADER_get0_scheme(loader) __OSSL_STORE_LOADER_get0_scheme(AmiSSLBase, (loader))

OSSL_STORE_CTX * __OSSL_STORE_open(__reg("a6") struct Library * , __reg("a0") const char * uri , __reg("a1") const UI_METHOD * ui_method , __reg("a2") void * ui_data , __reg("a3") OSSL_STORE_post_process_info_fn post_process , __reg("d0") void * post_process_data ) = "\tjsr\t-30744(a6)";
#define OSSL_STORE_open(uri, ui_method, ui_data, post_process, post_process_data) __OSSL_STORE_open(AmiSSLBase, (uri), (ui_method), (ui_data), (post_process), (post_process_data))

int __OSSL_STORE_close(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_CTX * ctx ) = "\tjsr\t-30750(a6)";
#define OSSL_STORE_close(ctx) __OSSL_STORE_close(AmiSSLBase, (ctx))

OSSL_STORE_INFO * __OSSL_STORE_INFO_new_CERT(__reg("a6") struct Library * , __reg("a0") X509 * x509 ) = "\tjsr\t-30756(a6)";
#define OSSL_STORE_INFO_new_CERT(x509) __OSSL_STORE_INFO_new_CERT(AmiSSLBase, (x509))

X509_CRL * __OSSL_STORE_INFO_get0_CRL(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30762(a6)";
#define OSSL_STORE_INFO_get0_CRL(info) __OSSL_STORE_INFO_get0_CRL(AmiSSLBase, (info))

OSSL_STORE_INFO * __OSSL_STORE_load(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_CTX * ctx ) = "\tjsr\t-30768(a6)";
#define OSSL_STORE_load(ctx) __OSSL_STORE_load(AmiSSLBase, (ctx))

const char * __OSSL_STORE_INFO_get0_NAME(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30774(a6)";
#define OSSL_STORE_INFO_get0_NAME(info) __OSSL_STORE_INFO_get0_NAME(AmiSSLBase, (info))

OSSL_STORE_LOADER * __OSSL_STORE_unregister_loader(__reg("a6") struct Library * , __reg("a0") const char * scheme ) = "\tjsr\t-30780(a6)";
#define OSSL_STORE_unregister_loader(scheme) __OSSL_STORE_unregister_loader(AmiSSLBase, (scheme))

OSSL_STORE_INFO * __OSSL_STORE_INFO_new_CRL(__reg("a6") struct Library * , __reg("a0") X509_CRL * crl ) = "\tjsr\t-30786(a6)";
#define OSSL_STORE_INFO_new_CRL(crl) __OSSL_STORE_INFO_new_CRL(AmiSSLBase, (crl))

OSSL_STORE_INFO * __OSSL_STORE_INFO_new_NAME(__reg("a6") struct Library * , __reg("a0") char * name ) = "\tjsr\t-30792(a6)";
#define OSSL_STORE_INFO_new_NAME(name) __OSSL_STORE_INFO_new_NAME(AmiSSLBase, (name))

int __OSSL_STORE_eof(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_CTX * ctx ) = "\tjsr\t-30798(a6)";
#define OSSL_STORE_eof(ctx) __OSSL_STORE_eof(AmiSSLBase, (ctx))

int __OSSL_STORE_LOADER_set_open(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_LOADER * loader , __reg("a1") OSSL_STORE_open_fn open_function ) = "\tjsr\t-30804(a6)";
#define OSSL_STORE_LOADER_set_open(loader, open_function) __OSSL_STORE_LOADER_set_open(AmiSSLBase, (loader), (open_function))

int __OSSL_STORE_LOADER_set_ctrl(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_LOADER * loader , __reg("a1") OSSL_STORE_ctrl_fn ctrl_function ) = "\tjsr\t-30810(a6)";
#define OSSL_STORE_LOADER_set_ctrl(loader, ctrl_function) __OSSL_STORE_LOADER_set_ctrl(AmiSSLBase, (loader), (ctrl_function))

int __OSSL_STORE_vctrl(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_CTX * ctx , __reg("d0") int cmd , __reg("a1") va_list args ) = "\tjsr\t-30816(a6)";
#define OSSL_STORE_vctrl(ctx, cmd, args) __OSSL_STORE_vctrl(AmiSSLBase, (ctx), (cmd), (args))

#if !defined(NO_INLINE_STDARG) && (__STDC__ == 1L) && (__STDC_VERSION__ >= 199901L)
int __OSSL_STORE_ctrl(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_CTX * ctx , __reg("d0") int cmd , long dummy , ... ) = "\tmove.l\ta1,-(a7)\n\tlea\t4(a7),a1\n\tjsr\t-30816(a6)\n\tmovea.l\t(a7)+,a1";
#define OSSL_STORE_ctrl(ctx, cmd, ...) __OSSL_STORE_ctrl(AmiSSLBase, (ctx), (cmd), __VA_ARGS__)
#endif

const char * __OSSL_STORE_INFO_get0_NAME_description(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30822(a6)";
#define OSSL_STORE_INFO_get0_NAME_description(info) __OSSL_STORE_INFO_get0_NAME_description(AmiSSLBase, (info))

int __OSSL_STORE_INFO_set0_NAME_description(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_INFO * info , __reg("a1") char * desc ) = "\tjsr\t-30828(a6)";
#define OSSL_STORE_INFO_set0_NAME_description(info, desc) __OSSL_STORE_INFO_set0_NAME_description(AmiSSLBase, (info), (desc))

char * __OSSL_STORE_INFO_get1_NAME_description(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_INFO * info ) = "\tjsr\t-30834(a6)";
#define OSSL_STORE_INFO_get1_NAME_description(info) __OSSL_STORE_INFO_get1_NAME_description(AmiSSLBase, (info))

int __OSSL_STORE_do_all_loaders(__reg("a6") struct Library * , __reg("a0") void (*do_function)(const OSSL_STORE_LOADER *loader,void *do_arg) , __reg("a1") void * do_arg ) = "\tjsr\t-30840(a6)";
#define OSSL_STORE_do_all_loaders(do_function, do_arg) __OSSL_STORE_do_all_loaders(AmiSSLBase, (do_function), (do_arg))

const ENGINE * __OSSL_STORE_LOADER_get0_engine(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_LOADER * loader ) = "\tjsr\t-30846(a6)";
#define OSSL_STORE_LOADER_get0_engine(loader) __OSSL_STORE_LOADER_get0_engine(AmiSSLBase, (loader))

const EVP_MD * __EVP_sha3_224(__reg("a6") struct Library * ) = "\tjsr\t-30918(a6)";
#define EVP_sha3_224() __EVP_sha3_224(AmiSSLBase)

const EVP_MD * __EVP_sha3_256(__reg("a6") struct Library * ) = "\tjsr\t-30924(a6)";
#define EVP_sha3_256() __EVP_sha3_256(AmiSSLBase)

const EVP_MD * __EVP_sha3_384(__reg("a6") struct Library * ) = "\tjsr\t-30930(a6)";
#define EVP_sha3_384() __EVP_sha3_384(AmiSSLBase)

const EVP_MD * __EVP_sha3_512(__reg("a6") struct Library * ) = "\tjsr\t-30936(a6)";
#define EVP_sha3_512() __EVP_sha3_512(AmiSSLBase)

const EVP_MD * __EVP_shake128(__reg("a6") struct Library * ) = "\tjsr\t-30942(a6)";
#define EVP_shake128() __EVP_shake128(AmiSSLBase)

const EVP_MD * __EVP_shake256(__reg("a6") struct Library * ) = "\tjsr\t-30948(a6)";
#define EVP_shake256() __EVP_shake256(AmiSSLBase)

SCRYPT_PARAMS * __SCRYPT_PARAMS_new(__reg("a6") struct Library * ) = "\tjsr\t-30954(a6)";
#define SCRYPT_PARAMS_new() __SCRYPT_PARAMS_new(AmiSSLBase)

void __SCRYPT_PARAMS_free(__reg("a6") struct Library * , __reg("a0") SCRYPT_PARAMS * a ) = "\tjsr\t-30960(a6)";
#define SCRYPT_PARAMS_free(a) __SCRYPT_PARAMS_free(AmiSSLBase, (a))

int __i2d_SCRYPT_PARAMS(__reg("a6") struct Library * , __reg("a0") const SCRYPT_PARAMS * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-30966(a6)";
#define i2d_SCRYPT_PARAMS(a, out) __i2d_SCRYPT_PARAMS(AmiSSLBase, (a), (out))

SCRYPT_PARAMS * __d2i_SCRYPT_PARAMS(__reg("a6") struct Library * , __reg("a0") SCRYPT_PARAMS ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-30972(a6)";
#define d2i_SCRYPT_PARAMS(a, in, len) __d2i_SCRYPT_PARAMS(AmiSSLBase, (a), (in), (len))

const ASN1_ITEM * __SCRYPT_PARAMS_it(__reg("a6") struct Library * ) = "\tjsr\t-30978(a6)";
#define SCRYPT_PARAMS_it() __SCRYPT_PARAMS_it(AmiSSLBase)

const EVP_PKEY_METHOD * __EVP_PKEY_meth_get0(__reg("a6") struct Library * , __reg("d0") size_t idx ) = "\tjsr\t-30984(a6)";
#define EVP_PKEY_meth_get0(idx) __EVP_PKEY_meth_get0(AmiSSLBase, (idx))

size_t __EVP_PKEY_meth_get_count(__reg("a6") struct Library * ) = "\tjsr\t-30990(a6)";
#define EVP_PKEY_meth_get_count() __EVP_PKEY_meth_get_count(AmiSSLBase)

int __RAND_priv_bytes(__reg("a6") struct Library * , __reg("a0") unsigned char * buf , __reg("d0") int num ) = "\tjsr\t-31002(a6)";
#define RAND_priv_bytes(buf, num) __RAND_priv_bytes(AmiSSLBase, (buf), (num))

int __BN_priv_rand(__reg("a6") struct Library * , __reg("a0") BIGNUM * rnd , __reg("d0") int bits , __reg("d1") int top , __reg("d2") int bottom ) = "\tjsr\t-31008(a6)";
#define BN_priv_rand(rnd, bits, top, bottom) __BN_priv_rand(AmiSSLBase, (rnd), (bits), (top), (bottom))

int __BN_priv_rand_range(__reg("a6") struct Library * , __reg("a0") BIGNUM * rnd , __reg("a1") const BIGNUM * range ) = "\tjsr\t-31014(a6)";
#define BN_priv_rand_range(rnd, range) __BN_priv_rand_range(AmiSSLBase, (rnd), (range))

int __ASN1_TIME_normalize(__reg("a6") struct Library * , __reg("a0") ASN1_TIME * s ) = "\tjsr\t-31020(a6)";
#define ASN1_TIME_normalize(s) __ASN1_TIME_normalize(AmiSSLBase, (s))

int __ASN1_TIME_cmp_time_t(__reg("a6") struct Library * , __reg("a0") const ASN1_TIME * s , __reg("d0") time_t t ) = "\tjsr\t-31026(a6)";
#define ASN1_TIME_cmp_time_t(s, t) __ASN1_TIME_cmp_time_t(AmiSSLBase, (s), (t))

int __ASN1_TIME_compare(__reg("a6") struct Library * , __reg("a0") const ASN1_TIME * a , __reg("a1") const ASN1_TIME * b ) = "\tjsr\t-31032(a6)";
#define ASN1_TIME_compare(a, b) __ASN1_TIME_compare(AmiSSLBase, (a), (b))

int __EVP_PKEY_CTX_ctrl_uint64(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx , __reg("d0") int keytype , __reg("d1") int optype , __reg("d4") int cmd , __reg("d2/d3") uint64_t value ) = "\tjsr\t-31038(a6)";
#define EVP_PKEY_CTX_ctrl_uint64(ctx, keytype, optype, cmd, value) __EVP_PKEY_CTX_ctrl_uint64(AmiSSLBase, (ctx), (keytype), (optype), (cmd), (value))

int __EVP_DigestFinalXOF(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") unsigned char * md , __reg("d0") size_t len ) = "\tjsr\t-31044(a6)";
#define EVP_DigestFinalXOF(ctx, md, len) __EVP_DigestFinalXOF(AmiSSLBase, (ctx), (md), (len))

int __ERR_clear_last_mark(__reg("a6") struct Library * ) = "\tjsr\t-31050(a6)";
#define ERR_clear_last_mark() __ERR_clear_last_mark(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_192_ccm(__reg("a6") struct Library * ) = "\tjsr\t-31062(a6)";
#define EVP_aria_192_ccm() __EVP_aria_192_ccm(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_256_gcm(__reg("a6") struct Library * ) = "\tjsr\t-31068(a6)";
#define EVP_aria_256_gcm() __EVP_aria_256_gcm(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_256_ccm(__reg("a6") struct Library * ) = "\tjsr\t-31074(a6)";
#define EVP_aria_256_ccm() __EVP_aria_256_ccm(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_128_gcm(__reg("a6") struct Library * ) = "\tjsr\t-31080(a6)";
#define EVP_aria_128_gcm() __EVP_aria_128_gcm(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_128_ccm(__reg("a6") struct Library * ) = "\tjsr\t-31086(a6)";
#define EVP_aria_128_ccm() __EVP_aria_128_ccm(AmiSSLBase)

const EVP_CIPHER * __EVP_aria_192_gcm(__reg("a6") struct Library * ) = "\tjsr\t-31092(a6)";
#define EVP_aria_192_gcm() __EVP_aria_192_gcm(AmiSSLBase)

int __UI_get_result_length(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("d0") int i ) = "\tjsr\t-31098(a6)";
#define UI_get_result_length(ui, i) __UI_get_result_length(AmiSSLBase, (ui), (i))

int __UI_set_result_ex(__reg("a6") struct Library * , __reg("a0") UI * ui , __reg("a1") UI_STRING * uis , __reg("a2") const char * result , __reg("d0") int len ) = "\tjsr\t-31104(a6)";
#define UI_set_result_ex(ui, uis, result, len) __UI_set_result_ex(AmiSSLBase, (ui), (uis), (result), (len))

int __UI_get_result_string_length(__reg("a6") struct Library * , __reg("a0") UI_STRING * uis ) = "\tjsr\t-31110(a6)";
#define UI_get_result_string_length(uis) __UI_get_result_string_length(AmiSSLBase, (uis))

int __EVP_PKEY_check(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-31116(a6)";
#define EVP_PKEY_check(ctx) __EVP_PKEY_check(AmiSSLBase, (ctx))

void __EVP_PKEY_meth_set_check(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*check)(EVP_PKEY *pkey) ) = "\tjsr\t-31122(a6)";
#define EVP_PKEY_meth_set_check(pmeth, check) __EVP_PKEY_meth_set_check(AmiSSLBase, (pmeth), (check))

void __EVP_PKEY_meth_get_check(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pcheck)(EVP_PKEY *pkey) ) = "\tjsr\t-31128(a6)";
#define EVP_PKEY_meth_get_check(pmeth, pcheck) __EVP_PKEY_meth_get_check(AmiSSLBase, (pmeth), (pcheck))

int __EVP_PKEY_meth_remove(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth ) = "\tjsr\t-31134(a6)";
#define EVP_PKEY_meth_remove(pmeth) __EVP_PKEY_meth_remove(AmiSSLBase, (pmeth))

int __OPENSSL_sk_reserve(__reg("a6") struct Library * , __reg("a0") OPENSSL_STACK * st , __reg("d0") int n ) = "\tjsr\t-31140(a6)";
#define OPENSSL_sk_reserve(st, n) __OPENSSL_sk_reserve(AmiSSLBase, (st), (n))

DH * __DH_new_by_nid(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-31146(a6)";
#define DH_new_by_nid(nid) __DH_new_by_nid(AmiSSLBase, (nid))

int __DH_get_nid(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-31152(a6)";
#define DH_get_nid(dh) __DH_get_nid(AmiSSLBase, (dh))

OPENSSL_STACK * __OPENSSL_sk_new_reserve(__reg("a6") struct Library * , __reg("a0") OPENSSL_sk_compfunc c , __reg("d0") int n ) = "\tjsr\t-31158(a6)";
#define OPENSSL_sk_new_reserve(c, n) __OPENSSL_sk_new_reserve(AmiSSLBase, (c), (n))

void __EVP_PKEY_asn1_set_check(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*pkey_check)(const EVP_PKEY *pk) ) = "\tjsr\t-31164(a6)";
#define EVP_PKEY_asn1_set_check(ameth, pkey_check) __EVP_PKEY_asn1_set_check(AmiSSLBase, (ameth), (pkey_check))

void __EVP_PKEY_asn1_set_siginf(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*siginf_set)(X509_SIG_INFO *siginf,const X509_ALGOR *alg,const ASN1_STRING *sig) ) = "\tjsr\t-31170(a6)";
#define EVP_PKEY_asn1_set_siginf(ameth, siginf_set) __EVP_PKEY_asn1_set_siginf(AmiSSLBase, (ameth), (siginf_set))

const EVP_CIPHER * __EVP_sm4_ctr(__reg("a6") struct Library * ) = "\tjsr\t-31176(a6)";
#define EVP_sm4_ctr() __EVP_sm4_ctr(AmiSSLBase)

const EVP_CIPHER * __EVP_sm4_cbc(__reg("a6") struct Library * ) = "\tjsr\t-31182(a6)";
#define EVP_sm4_cbc() __EVP_sm4_cbc(AmiSSLBase)

const EVP_CIPHER * __EVP_sm4_ofb(__reg("a6") struct Library * ) = "\tjsr\t-31188(a6)";
#define EVP_sm4_ofb() __EVP_sm4_ofb(AmiSSLBase)

const EVP_CIPHER * __EVP_sm4_ecb(__reg("a6") struct Library * ) = "\tjsr\t-31194(a6)";
#define EVP_sm4_ecb() __EVP_sm4_ecb(AmiSSLBase)

const EVP_CIPHER * __EVP_sm4_cfb128(__reg("a6") struct Library * ) = "\tjsr\t-31200(a6)";
#define EVP_sm4_cfb128() __EVP_sm4_cfb128(AmiSSLBase)

const EVP_MD * __EVP_sm3(__reg("a6") struct Library * ) = "\tjsr\t-31206(a6)";
#define EVP_sm3() __EVP_sm3(AmiSSLBase)

int __RSA_get0_multi_prime_factors(__reg("a6") struct Library * , __reg("a0") const RSA * r , __reg("a1") const BIGNUM ** primes ) = "\tjsr\t-31212(a6)";
#define RSA_get0_multi_prime_factors(r, primes) __RSA_get0_multi_prime_factors(AmiSSLBase, (r), (primes))

int __EVP_PKEY_public_check(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-31218(a6)";
#define EVP_PKEY_public_check(ctx) __EVP_PKEY_public_check(AmiSSLBase, (ctx))

int __EVP_PKEY_param_check(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_CTX * ctx ) = "\tjsr\t-31224(a6)";
#define EVP_PKEY_param_check(ctx) __EVP_PKEY_param_check(AmiSSLBase, (ctx))

void __EVP_PKEY_meth_set_public_check(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*check)(EVP_PKEY *pkey) ) = "\tjsr\t-31230(a6)";
#define EVP_PKEY_meth_set_public_check(pmeth, check) __EVP_PKEY_meth_set_public_check(AmiSSLBase, (pmeth), (check))

void __EVP_PKEY_meth_set_param_check(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*check)(EVP_PKEY *pkey) ) = "\tjsr\t-31236(a6)";
#define EVP_PKEY_meth_set_param_check(pmeth, check) __EVP_PKEY_meth_set_param_check(AmiSSLBase, (pmeth), (check))

void __EVP_PKEY_meth_get_public_check(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pcheck)(EVP_PKEY *pkey) ) = "\tjsr\t-31242(a6)";
#define EVP_PKEY_meth_get_public_check(pmeth, pcheck) __EVP_PKEY_meth_get_public_check(AmiSSLBase, (pmeth), (pcheck))

void __EVP_PKEY_meth_get_param_check(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pcheck)(EVP_PKEY *pkey) ) = "\tjsr\t-31248(a6)";
#define EVP_PKEY_meth_get_param_check(pmeth, pcheck) __EVP_PKEY_meth_get_param_check(AmiSSLBase, (pmeth), (pcheck))

void __EVP_PKEY_asn1_set_public_check(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*pkey_pub_check)(const EVP_PKEY *pk) ) = "\tjsr\t-31254(a6)";
#define EVP_PKEY_asn1_set_public_check(ameth, pkey_pub_check) __EVP_PKEY_asn1_set_public_check(AmiSSLBase, (ameth), (pkey_pub_check))

void __EVP_PKEY_asn1_set_param_check(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*pkey_param_check)(const EVP_PKEY *pk) ) = "\tjsr\t-31260(a6)";
#define EVP_PKEY_asn1_set_param_check(ameth, pkey_param_check) __EVP_PKEY_asn1_set_param_check(AmiSSLBase, (ameth), (pkey_param_check))

int __DH_check_ex(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-31266(a6)";
#define DH_check_ex(dh) __DH_check_ex(AmiSSLBase, (dh))

int __DH_check_pub_key_ex(__reg("a6") struct Library * , __reg("a0") const DH * dh , __reg("a1") const BIGNUM * pub_key ) = "\tjsr\t-31272(a6)";
#define DH_check_pub_key_ex(dh, pub_key) __DH_check_pub_key_ex(AmiSSLBase, (dh), (pub_key))

int __DH_check_params_ex(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-31278(a6)";
#define DH_check_params_ex(dh) __DH_check_params_ex(AmiSSLBase, (dh))

int __RSA_generate_multi_prime_key(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("d0") int bits , __reg("d1") int primes , __reg("a1") BIGNUM * e , __reg("a2") BN_GENCB * cb ) = "\tjsr\t-31284(a6)";
#define RSA_generate_multi_prime_key(rsa, bits, primes, e, cb) __RSA_generate_multi_prime_key(AmiSSLBase, (rsa), (bits), (primes), (e), (cb))

int __RSA_get_multi_prime_extra_count(__reg("a6") struct Library * , __reg("a0") const RSA * r ) = "\tjsr\t-31290(a6)";
#define RSA_get_multi_prime_extra_count(r) __RSA_get_multi_prime_extra_count(AmiSSLBase, (r))

int __OCSP_resp_get0_signer(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * bs , __reg("a1") X509 ** signer , __reg("a2") STACK_OF(X509) * extra_certs ) = "\tjsr\t-31296(a6)";
#define OCSP_resp_get0_signer(bs, signer, extra_certs) __OCSP_resp_get0_signer(AmiSSLBase, (bs), (signer), (extra_certs))

int __RSA_get0_multi_prime_crt_params(__reg("a6") struct Library * , __reg("a0") const RSA * r , __reg("a1") const BIGNUM ** exps , __reg("a2") const BIGNUM ** coeffs ) = "\tjsr\t-31302(a6)";
#define RSA_get0_multi_prime_crt_params(r, exps, coeffs) __RSA_get0_multi_prime_crt_params(AmiSSLBase, (r), (exps), (coeffs))

int __RSA_set0_multi_prime_params(__reg("a6") struct Library * , __reg("a0") RSA * r , __reg("a1") BIGNUM ** primes , __reg("a2") BIGNUM ** exps , __reg("a3") BIGNUM ** coeffs , __reg("d0") int pnum ) = "\tjsr\t-31308(a6)";
#define RSA_set0_multi_prime_params(r, primes, exps, coeffs, pnum) __RSA_set0_multi_prime_params(AmiSSLBase, (r), (primes), (exps), (coeffs), (pnum))

int __RSA_get_version(__reg("a6") struct Library * , __reg("a0") RSA * r ) = "\tjsr\t-31314(a6)";
#define RSA_get_version(r) __RSA_get_version(AmiSSLBase, (r))

int  (* __RSA_meth_get_multi_prime_keygen(__reg("a6") struct Library * , __reg("a0") const RSA_METHOD * meth ) )(RSA *rsa, int bits, int primes, BIGNUM *e, BN_GENCB *cb) =  "\tjsr\t-31320(a6)";
#define RSA_meth_get_multi_prime_keygen(meth) __RSA_meth_get_multi_prime_keygen(AmiSSLBase, (meth))

int __RSA_meth_set_multi_prime_keygen(__reg("a6") struct Library * , __reg("a0") RSA_METHOD * meth , __reg("a1") int (*keygen)(RSA *rsa,int bits,int primes,BIGNUM *e,BN_GENCB *cb) ) = "\tjsr\t-31326(a6)";
#define RSA_meth_set_multi_prime_keygen(meth, keygen) __RSA_meth_set_multi_prime_keygen(AmiSSLBase, (meth), (keygen))

const ASN1_OCTET_STRING * __PROFESSION_INFO_get0_addProfessionInfo(__reg("a6") struct Library * , __reg("a0") const PROFESSION_INFO * pi ) = "\tjsr\t-31344(a6)";
#define PROFESSION_INFO_get0_addProfessionInfo(pi) __PROFESSION_INFO_get0_addProfessionInfo(AmiSSLBase, (pi))

void __ADMISSION_SYNTAX_free(__reg("a6") struct Library * , __reg("a0") ADMISSION_SYNTAX * a ) = "\tjsr\t-31350(a6)";
#define ADMISSION_SYNTAX_free(a) __ADMISSION_SYNTAX_free(AmiSSLBase, (a))

ADMISSION_SYNTAX * __d2i_ADMISSION_SYNTAX(__reg("a6") struct Library * , __reg("a0") ADMISSION_SYNTAX ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-31356(a6)";
#define d2i_ADMISSION_SYNTAX(a, in, len) __d2i_ADMISSION_SYNTAX(AmiSSLBase, (a), (in), (len))

void __NAMING_AUTHORITY_set0_authorityId(__reg("a6") struct Library * , __reg("a0") NAMING_AUTHORITY * n , __reg("a1") ASN1_OBJECT* namingAuthorityId ) = "\tjsr\t-31362(a6)";
#define NAMING_AUTHORITY_set0_authorityId(n, namingAuthorityId) __NAMING_AUTHORITY_set0_authorityId(AmiSSLBase, (n), (namingAuthorityId))

void __NAMING_AUTHORITY_set0_authorityURL(__reg("a6") struct Library * , __reg("a0") NAMING_AUTHORITY * n , __reg("a1") ASN1_IA5STRING* namingAuthorityUrl ) = "\tjsr\t-31368(a6)";
#define NAMING_AUTHORITY_set0_authorityURL(n, namingAuthorityUrl) __NAMING_AUTHORITY_set0_authorityURL(AmiSSLBase, (n), (namingAuthorityUrl))

PROFESSION_INFO * __d2i_PROFESSION_INFO(__reg("a6") struct Library * , __reg("a0") PROFESSION_INFO ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-31374(a6)";
#define d2i_PROFESSION_INFO(a, in, len) __d2i_PROFESSION_INFO(AmiSSLBase, (a), (in), (len))

const ASN1_ITEM * __NAMING_AUTHORITY_it(__reg("a6") struct Library * ) = "\tjsr\t-31380(a6)";
#define NAMING_AUTHORITY_it() __NAMING_AUTHORITY_it(AmiSSLBase)

const STACK_OF(ADMISSIONS) * __ADMISSION_SYNTAX_get0_contentsOfAdmissions(__reg("a6") struct Library * , __reg("a0") const ADMISSION_SYNTAX * as ) = "\tjsr\t-31386(a6)";
#define ADMISSION_SYNTAX_get0_contentsOfAdmissions(as) __ADMISSION_SYNTAX_get0_contentsOfAdmissions(AmiSSLBase, (as))

void __PROFESSION_INFO_set0_professionItems(__reg("a6") struct Library * , __reg("a0") PROFESSION_INFO * pi , __reg("a1") STACK_OF(ASN1_STRING) * as ) = "\tjsr\t-31392(a6)";
#define PROFESSION_INFO_set0_professionItems(pi, as) __PROFESSION_INFO_set0_professionItems(AmiSSLBase, (pi), (as))

NAMING_AUTHORITY * __NAMING_AUTHORITY_new(__reg("a6") struct Library * ) = "\tjsr\t-31398(a6)";
#define NAMING_AUTHORITY_new() __NAMING_AUTHORITY_new(AmiSSLBase)

const ASN1_IA5STRING * __NAMING_AUTHORITY_get0_authorityURL(__reg("a6") struct Library * , __reg("a0") const NAMING_AUTHORITY * n ) = "\tjsr\t-31404(a6)";
#define NAMING_AUTHORITY_get0_authorityURL(n) __NAMING_AUTHORITY_get0_authorityURL(AmiSSLBase, (n))

const GENERAL_NAME * __ADMISSION_SYNTAX_get0_admissionAuthority(__reg("a6") struct Library * , __reg("a0") const ADMISSION_SYNTAX * as ) = "\tjsr\t-31410(a6)";
#define ADMISSION_SYNTAX_get0_admissionAuthority(as) __ADMISSION_SYNTAX_get0_admissionAuthority(AmiSSLBase, (as))

PROFESSION_INFO * __PROFESSION_INFO_new(__reg("a6") struct Library * ) = "\tjsr\t-31416(a6)";
#define PROFESSION_INFO_new() __PROFESSION_INFO_new(AmiSSLBase)

ADMISSIONS * __ADMISSIONS_new(__reg("a6") struct Library * ) = "\tjsr\t-31422(a6)";
#define ADMISSIONS_new() __ADMISSIONS_new(AmiSSLBase)

void __ADMISSION_SYNTAX_set0_admissionAuthority(__reg("a6") struct Library * , __reg("a0") ADMISSION_SYNTAX * as , __reg("a1") GENERAL_NAME * aa ) = "\tjsr\t-31428(a6)";
#define ADMISSION_SYNTAX_set0_admissionAuthority(as, aa) __ADMISSION_SYNTAX_set0_admissionAuthority(AmiSSLBase, (as), (aa))

const STACK_OF(ASN1_OBJECT) * __PROFESSION_INFO_get0_professionOIDs(__reg("a6") struct Library * , __reg("a0") const PROFESSION_INFO * pi ) = "\tjsr\t-31434(a6)";
#define PROFESSION_INFO_get0_professionOIDs(pi) __PROFESSION_INFO_get0_professionOIDs(AmiSSLBase, (pi))

const ASN1_ITEM * __PROFESSION_INFO_it(__reg("a6") struct Library * ) = "\tjsr\t-31440(a6)";
#define PROFESSION_INFO_it() __PROFESSION_INFO_it(AmiSSLBase)

int __i2d_PROFESSION_INFO(__reg("a6") struct Library * , __reg("a0") const PROFESSION_INFO * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-31446(a6)";
#define i2d_PROFESSION_INFO(a, out) __i2d_PROFESSION_INFO(AmiSSLBase, (a), (out))

void __ADMISSIONS_set0_professionInfos(__reg("a6") struct Library * , __reg("a0") ADMISSIONS * a , __reg("a1") PROFESSION_INFOS * pi ) = "\tjsr\t-31452(a6)";
#define ADMISSIONS_set0_professionInfos(a, pi) __ADMISSIONS_set0_professionInfos(AmiSSLBase, (a), (pi))

const NAMING_AUTHORITY * __PROFESSION_INFO_get0_namingAuthority(__reg("a6") struct Library * , __reg("a0") const PROFESSION_INFO * pi ) = "\tjsr\t-31458(a6)";
#define PROFESSION_INFO_get0_namingAuthority(pi) __PROFESSION_INFO_get0_namingAuthority(AmiSSLBase, (pi))

void __PROFESSION_INFO_free(__reg("a6") struct Library * , __reg("a0") PROFESSION_INFO * a ) = "\tjsr\t-31464(a6)";
#define PROFESSION_INFO_free(a) __PROFESSION_INFO_free(AmiSSLBase, (a))

void __PROFESSION_INFO_set0_addProfessionInfo(__reg("a6") struct Library * , __reg("a0") PROFESSION_INFO * pi , __reg("a1") ASN1_OCTET_STRING * aos ) = "\tjsr\t-31470(a6)";
#define PROFESSION_INFO_set0_addProfessionInfo(pi, aos) __PROFESSION_INFO_set0_addProfessionInfo(AmiSSLBase, (pi), (aos))

void __PROFESSION_INFO_set0_registrationNumber(__reg("a6") struct Library * , __reg("a0") PROFESSION_INFO * pi , __reg("a1") ASN1_PRINTABLESTRING * rn ) = "\tjsr\t-31476(a6)";
#define PROFESSION_INFO_set0_registrationNumber(pi, rn) __PROFESSION_INFO_set0_registrationNumber(AmiSSLBase, (pi), (rn))

void __ADMISSION_SYNTAX_set0_contentsOfAdmissions(__reg("a6") struct Library * , __reg("a0") ADMISSION_SYNTAX * as , __reg("a1") STACK_OF(ADMISSIONS) * a ) = "\tjsr\t-31482(a6)";
#define ADMISSION_SYNTAX_set0_contentsOfAdmissions(as, a) __ADMISSION_SYNTAX_set0_contentsOfAdmissions(AmiSSLBase, (as), (a))

const ASN1_OBJECT * __NAMING_AUTHORITY_get0_authorityId(__reg("a6") struct Library * , __reg("a0") const NAMING_AUTHORITY * n ) = "\tjsr\t-31488(a6)";
#define NAMING_AUTHORITY_get0_authorityId(n) __NAMING_AUTHORITY_get0_authorityId(AmiSSLBase, (n))

const ASN1_ITEM * __ADMISSION_SYNTAX_it(__reg("a6") struct Library * ) = "\tjsr\t-31494(a6)";
#define ADMISSION_SYNTAX_it() __ADMISSION_SYNTAX_it(AmiSSLBase)

int __i2d_ADMISSION_SYNTAX(__reg("a6") struct Library * , __reg("a0") const ADMISSION_SYNTAX * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-31500(a6)";
#define i2d_ADMISSION_SYNTAX(a, out) __i2d_ADMISSION_SYNTAX(AmiSSLBase, (a), (out))

const ASN1_STRING * __NAMING_AUTHORITY_get0_authorityText(__reg("a6") struct Library * , __reg("a0") const NAMING_AUTHORITY * n ) = "\tjsr\t-31506(a6)";
#define NAMING_AUTHORITY_get0_authorityText(n) __NAMING_AUTHORITY_get0_authorityText(AmiSSLBase, (n))

void __PROFESSION_INFO_set0_namingAuthority(__reg("a6") struct Library * , __reg("a0") PROFESSION_INFO * pi , __reg("a1") NAMING_AUTHORITY * na ) = "\tjsr\t-31512(a6)";
#define PROFESSION_INFO_set0_namingAuthority(pi, na) __PROFESSION_INFO_set0_namingAuthority(AmiSSLBase, (pi), (na))

int __i2d_NAMING_AUTHORITY(__reg("a6") struct Library * , __reg("a0") const NAMING_AUTHORITY * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-31518(a6)";
#define i2d_NAMING_AUTHORITY(a, out) __i2d_NAMING_AUTHORITY(AmiSSLBase, (a), (out))

void __NAMING_AUTHORITY_free(__reg("a6") struct Library * , __reg("a0") NAMING_AUTHORITY * a ) = "\tjsr\t-31524(a6)";
#define NAMING_AUTHORITY_free(a) __NAMING_AUTHORITY_free(AmiSSLBase, (a))

void __ADMISSIONS_set0_admissionAuthority(__reg("a6") struct Library * , __reg("a0") ADMISSIONS * a , __reg("a1") GENERAL_NAME * aa ) = "\tjsr\t-31530(a6)";
#define ADMISSIONS_set0_admissionAuthority(a, aa) __ADMISSIONS_set0_admissionAuthority(AmiSSLBase, (a), (aa))

void __ADMISSIONS_free(__reg("a6") struct Library * , __reg("a0") ADMISSIONS * a ) = "\tjsr\t-31536(a6)";
#define ADMISSIONS_free(a) __ADMISSIONS_free(AmiSSLBase, (a))

const ASN1_PRINTABLESTRING * __PROFESSION_INFO_get0_registrationNumber(__reg("a6") struct Library * , __reg("a0") const PROFESSION_INFO * pi ) = "\tjsr\t-31542(a6)";
#define PROFESSION_INFO_get0_registrationNumber(pi) __PROFESSION_INFO_get0_registrationNumber(AmiSSLBase, (pi))

ADMISSIONS * __d2i_ADMISSIONS(__reg("a6") struct Library * , __reg("a0") ADMISSIONS ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-31548(a6)";
#define d2i_ADMISSIONS(a, in, len) __d2i_ADMISSIONS(AmiSSLBase, (a), (in), (len))

int __i2d_ADMISSIONS(__reg("a6") struct Library * , __reg("a0") const ADMISSIONS * a , __reg("a1") unsigned char ** out ) = "\tjsr\t-31554(a6)";
#define i2d_ADMISSIONS(a, out) __i2d_ADMISSIONS(AmiSSLBase, (a), (out))

const STACK_OF(ASN1_STRING) * __PROFESSION_INFO_get0_professionItems(__reg("a6") struct Library * , __reg("a0") const PROFESSION_INFO * pi ) = "\tjsr\t-31560(a6)";
#define PROFESSION_INFO_get0_professionItems(pi) __PROFESSION_INFO_get0_professionItems(AmiSSLBase, (pi))

const GENERAL_NAME * __ADMISSIONS_get0_admissionAuthority(__reg("a6") struct Library * , __reg("a0") const ADMISSIONS * a ) = "\tjsr\t-31566(a6)";
#define ADMISSIONS_get0_admissionAuthority(a) __ADMISSIONS_get0_admissionAuthority(AmiSSLBase, (a))

void __PROFESSION_INFO_set0_professionOIDs(__reg("a6") struct Library * , __reg("a0") PROFESSION_INFO * pi , __reg("a1") STACK_OF(ASN1_OBJECT) * po ) = "\tjsr\t-31572(a6)";
#define PROFESSION_INFO_set0_professionOIDs(pi, po) __PROFESSION_INFO_set0_professionOIDs(AmiSSLBase, (pi), (po))

NAMING_AUTHORITY * __d2i_NAMING_AUTHORITY(__reg("a6") struct Library * , __reg("a0") NAMING_AUTHORITY ** a , __reg("a1") const unsigned char ** in , __reg("d0") long len ) = "\tjsr\t-31578(a6)";
#define d2i_NAMING_AUTHORITY(a, in, len) __d2i_NAMING_AUTHORITY(AmiSSLBase, (a), (in), (len))

const ASN1_ITEM * __ADMISSIONS_it(__reg("a6") struct Library * ) = "\tjsr\t-31584(a6)";
#define ADMISSIONS_it() __ADMISSIONS_it(AmiSSLBase)

const NAMING_AUTHORITY * __ADMISSIONS_get0_namingAuthority(__reg("a6") struct Library * , __reg("a0") const ADMISSIONS * a ) = "\tjsr\t-31590(a6)";
#define ADMISSIONS_get0_namingAuthority(a) __ADMISSIONS_get0_namingAuthority(AmiSSLBase, (a))

void __NAMING_AUTHORITY_set0_authorityText(__reg("a6") struct Library * , __reg("a0") NAMING_AUTHORITY * n , __reg("a1") ASN1_STRING* namingAuthorityText ) = "\tjsr\t-31596(a6)";
#define NAMING_AUTHORITY_set0_authorityText(n, namingAuthorityText) __NAMING_AUTHORITY_set0_authorityText(AmiSSLBase, (n), (namingAuthorityText))

void __ADMISSIONS_set0_namingAuthority(__reg("a6") struct Library * , __reg("a0") ADMISSIONS * a , __reg("a1") NAMING_AUTHORITY * na ) = "\tjsr\t-31602(a6)";
#define ADMISSIONS_set0_namingAuthority(a, na) __ADMISSIONS_set0_namingAuthority(AmiSSLBase, (a), (na))

const PROFESSION_INFOS * __ADMISSIONS_get0_professionInfos(__reg("a6") struct Library * , __reg("a0") const ADMISSIONS * a ) = "\tjsr\t-31608(a6)";
#define ADMISSIONS_get0_professionInfos(a) __ADMISSIONS_get0_professionInfos(AmiSSLBase, (a))

ADMISSION_SYNTAX * __ADMISSION_SYNTAX_new(__reg("a6") struct Library * ) = "\tjsr\t-31614(a6)";
#define ADMISSION_SYNTAX_new() __ADMISSION_SYNTAX_new(AmiSSLBase)

const EVP_MD * __EVP_sha512_256(__reg("a6") struct Library * ) = "\tjsr\t-31620(a6)";
#define EVP_sha512_256() __EVP_sha512_256(AmiSSLBase)

const EVP_MD * __EVP_sha512_224(__reg("a6") struct Library * ) = "\tjsr\t-31626(a6)";
#define EVP_sha512_224() __EVP_sha512_224(AmiSSLBase)

int __OCSP_basic_sign_ctx(__reg("a6") struct Library * , __reg("a0") OCSP_BASICRESP * brsp , __reg("a1") X509 * signer , __reg("a2") EVP_MD_CTX * ctx , __reg("a3") STACK_OF(X509) * certs , __reg("d0") unsigned long flags ) = "\tjsr\t-31632(a6)";
#define OCSP_basic_sign_ctx(brsp, signer, ctx, certs, flags) __OCSP_basic_sign_ctx(AmiSSLBase, (brsp), (signer), (ctx), (certs), (flags))

OSSL_STORE_SEARCH * __OSSL_STORE_SEARCH_by_alias(__reg("a6") struct Library * , __reg("a0") const char * alias ) = "\tjsr\t-31650(a6)";
#define OSSL_STORE_SEARCH_by_alias(alias) __OSSL_STORE_SEARCH_by_alias(AmiSSLBase, (alias))

int __BIO_bind(__reg("a6") struct Library * , __reg("d0") int sock , __reg("a0") const BIO_ADDR * addr , __reg("d1") int options ) = "\tjsr\t-31656(a6)";
#define BIO_bind(sock, addr, options) __BIO_bind(AmiSSLBase, (sock), (addr), (options))

int __OSSL_STORE_LOADER_set_expect(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_LOADER * loader , __reg("a1") OSSL_STORE_expect_fn expect_function ) = "\tjsr\t-31662(a6)";
#define OSSL_STORE_LOADER_set_expect(loader, expect_function) __OSSL_STORE_LOADER_set_expect(AmiSSLBase, (loader), (expect_function))

int __OSSL_STORE_expect(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_CTX * ctx , __reg("d0") int expected_type ) = "\tjsr\t-31668(a6)";
#define OSSL_STORE_expect(ctx, expected_type) __OSSL_STORE_expect(AmiSSLBase, (ctx), (expected_type))

OSSL_STORE_SEARCH * __OSSL_STORE_SEARCH_by_key_fingerprint(__reg("a6") struct Library * , __reg("a0") const EVP_MD * digest , __reg("a1") const unsigned char * bytes , __reg("d0") size_t len ) = "\tjsr\t-31674(a6)";
#define OSSL_STORE_SEARCH_by_key_fingerprint(digest, bytes, len) __OSSL_STORE_SEARCH_by_key_fingerprint(AmiSSLBase, (digest), (bytes), (len))

const ASN1_INTEGER * __OSSL_STORE_SEARCH_get0_serial(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_SEARCH * criterion ) = "\tjsr\t-31680(a6)";
#define OSSL_STORE_SEARCH_get0_serial(criterion) __OSSL_STORE_SEARCH_get0_serial(AmiSSLBase, (criterion))

OSSL_STORE_SEARCH * __OSSL_STORE_SEARCH_by_name(__reg("a6") struct Library * , __reg("a0") X509_NAME * name ) = "\tjsr\t-31686(a6)";
#define OSSL_STORE_SEARCH_by_name(name) __OSSL_STORE_SEARCH_by_name(AmiSSLBase, (name))

int __OSSL_STORE_supports_search(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_CTX * ctx , __reg("d0") int search_type ) = "\tjsr\t-31692(a6)";
#define OSSL_STORE_supports_search(ctx, search_type) __OSSL_STORE_supports_search(AmiSSLBase, (ctx), (search_type))

int __OSSL_STORE_find(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_CTX * ctx , __reg("a1") const OSSL_STORE_SEARCH * search ) = "\tjsr\t-31698(a6)";
#define OSSL_STORE_find(ctx, search) __OSSL_STORE_find(AmiSSLBase, (ctx), (search))

int __OSSL_STORE_SEARCH_get_type(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_SEARCH * criterion ) = "\tjsr\t-31704(a6)";
#define OSSL_STORE_SEARCH_get_type(criterion) __OSSL_STORE_SEARCH_get_type(AmiSSLBase, (criterion))

const unsigned char * __OSSL_STORE_SEARCH_get0_bytes(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_SEARCH * criterion , __reg("a1") size_t * length ) = "\tjsr\t-31710(a6)";
#define OSSL_STORE_SEARCH_get0_bytes(criterion, length) __OSSL_STORE_SEARCH_get0_bytes(AmiSSLBase, (criterion), (length))

const char * __OSSL_STORE_SEARCH_get0_string(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_SEARCH * criterion ) = "\tjsr\t-31716(a6)";
#define OSSL_STORE_SEARCH_get0_string(criterion) __OSSL_STORE_SEARCH_get0_string(AmiSSLBase, (criterion))

OSSL_STORE_SEARCH * __OSSL_STORE_SEARCH_by_issuer_serial(__reg("a6") struct Library * , __reg("a0") X509_NAME * name , __reg("a1") const ASN1_INTEGER * serial ) = "\tjsr\t-31722(a6)";
#define OSSL_STORE_SEARCH_by_issuer_serial(name, serial) __OSSL_STORE_SEARCH_by_issuer_serial(AmiSSLBase, (name), (serial))

X509_NAME * __OSSL_STORE_SEARCH_get0_name(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_SEARCH * criterion ) = "\tjsr\t-31728(a6)";
#define OSSL_STORE_SEARCH_get0_name(criterion) __OSSL_STORE_SEARCH_get0_name(AmiSSLBase, (criterion))

const ASN1_OCTET_STRING * __X509_get0_authority_key_id(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-31734(a6)";
#define X509_get0_authority_key_id(x) __X509_get0_authority_key_id(AmiSSLBase, (x))

int __OSSL_STORE_LOADER_set_find(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_LOADER * loader , __reg("a1") OSSL_STORE_find_fn find_function ) = "\tjsr\t-31740(a6)";
#define OSSL_STORE_LOADER_set_find(loader, find_function) __OSSL_STORE_LOADER_set_find(AmiSSLBase, (loader), (find_function))

void __OSSL_STORE_SEARCH_free(__reg("a6") struct Library * , __reg("a0") OSSL_STORE_SEARCH * search ) = "\tjsr\t-31746(a6)";
#define OSSL_STORE_SEARCH_free(search) __OSSL_STORE_SEARCH_free(AmiSSLBase, (search))

const EVP_MD * __OSSL_STORE_SEARCH_get0_digest(__reg("a6") struct Library * , __reg("a0") const OSSL_STORE_SEARCH * criterion ) = "\tjsr\t-31752(a6)";
#define OSSL_STORE_SEARCH_get0_digest(criterion) __OSSL_STORE_SEARCH_get0_digest(AmiSSLBase, (criterion))

EVP_PKEY * __EVP_PKEY_new_raw_private_key(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") ENGINE * e , __reg("a1") const unsigned char * priv , __reg("d1") size_t len ) = "\tjsr\t-31764(a6)";
#define EVP_PKEY_new_raw_private_key(type, e, priv, len) __EVP_PKEY_new_raw_private_key(AmiSSLBase, (type), (e), (priv), (len))

EVP_PKEY * __EVP_PKEY_new_raw_public_key(__reg("a6") struct Library * , __reg("d0") int type , __reg("a0") ENGINE * e , __reg("a1") const unsigned char * pub , __reg("d1") size_t len ) = "\tjsr\t-31770(a6)";
#define EVP_PKEY_new_raw_public_key(type, e, pub, len) __EVP_PKEY_new_raw_public_key(AmiSSLBase, (type), (e), (pub), (len))

EVP_PKEY * __EVP_PKEY_new_CMAC_key(__reg("a6") struct Library * , __reg("a0") ENGINE * e , __reg("a1") const unsigned char * priv , __reg("d0") size_t len , __reg("a2") const EVP_CIPHER * cipher ) = "\tjsr\t-31776(a6)";
#define EVP_PKEY_new_CMAC_key(e, priv, len, cipher) __EVP_PKEY_new_CMAC_key(AmiSSLBase, (e), (priv), (len), (cipher))

void __EVP_PKEY_asn1_set_set_priv_key(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*set_priv_key)(EVP_PKEY *pk,const unsigned char *priv,size_t len) ) = "\tjsr\t-31782(a6)";
#define EVP_PKEY_asn1_set_set_priv_key(ameth, set_priv_key) __EVP_PKEY_asn1_set_set_priv_key(AmiSSLBase, (ameth), (set_priv_key))

void __EVP_PKEY_asn1_set_set_pub_key(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*set_pub_key)(EVP_PKEY *pk,const unsigned char *pub,size_t len) ) = "\tjsr\t-31788(a6)";
#define EVP_PKEY_asn1_set_set_pub_key(ameth, set_pub_key) __EVP_PKEY_asn1_set_set_pub_key(AmiSSLBase, (ameth), (set_pub_key))

unsigned int __X509_VERIFY_PARAM_get_hostflags(__reg("a6") struct Library * , __reg("a0") const X509_VERIFY_PARAM * param ) = "\tjsr\t-31800(a6)";
#define X509_VERIFY_PARAM_get_hostflags(param) __X509_VERIFY_PARAM_get_hostflags(AmiSSLBase, (param))

const BIGNUM * __DH_get0_p(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-31806(a6)";
#define DH_get0_p(dh) __DH_get0_p(AmiSSLBase, (dh))

const BIGNUM * __DH_get0_q(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-31812(a6)";
#define DH_get0_q(dh) __DH_get0_q(AmiSSLBase, (dh))

const BIGNUM * __DH_get0_g(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-31818(a6)";
#define DH_get0_g(dh) __DH_get0_g(AmiSSLBase, (dh))

const BIGNUM * __DH_get0_priv_key(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-31824(a6)";
#define DH_get0_priv_key(dh) __DH_get0_priv_key(AmiSSLBase, (dh))

const BIGNUM * __DH_get0_pub_key(__reg("a6") struct Library * , __reg("a0") const DH * dh ) = "\tjsr\t-31830(a6)";
#define DH_get0_pub_key(dh) __DH_get0_pub_key(AmiSSLBase, (dh))

const BIGNUM * __DSA_get0_priv_key(__reg("a6") struct Library * , __reg("a0") const DSA * d ) = "\tjsr\t-31836(a6)";
#define DSA_get0_priv_key(d) __DSA_get0_priv_key(AmiSSLBase, (d))

const BIGNUM * __DSA_get0_pub_key(__reg("a6") struct Library * , __reg("a0") const DSA * d ) = "\tjsr\t-31842(a6)";
#define DSA_get0_pub_key(d) __DSA_get0_pub_key(AmiSSLBase, (d))

const BIGNUM * __DSA_get0_q(__reg("a6") struct Library * , __reg("a0") const DSA * d ) = "\tjsr\t-31848(a6)";
#define DSA_get0_q(d) __DSA_get0_q(AmiSSLBase, (d))

const BIGNUM * __DSA_get0_p(__reg("a6") struct Library * , __reg("a0") const DSA * d ) = "\tjsr\t-31854(a6)";
#define DSA_get0_p(d) __DSA_get0_p(AmiSSLBase, (d))

const BIGNUM * __DSA_get0_g(__reg("a6") struct Library * , __reg("a0") const DSA * d ) = "\tjsr\t-31860(a6)";
#define DSA_get0_g(d) __DSA_get0_g(AmiSSLBase, (d))

const BIGNUM * __RSA_get0_dmp1(__reg("a6") struct Library * , __reg("a0") const RSA * r ) = "\tjsr\t-31866(a6)";
#define RSA_get0_dmp1(r) __RSA_get0_dmp1(AmiSSLBase, (r))

const BIGNUM * __RSA_get0_d(__reg("a6") struct Library * , __reg("a0") const RSA * d ) = "\tjsr\t-31872(a6)";
#define RSA_get0_d(d) __RSA_get0_d(AmiSSLBase, (d))

const BIGNUM * __RSA_get0_n(__reg("a6") struct Library * , __reg("a0") const RSA * d ) = "\tjsr\t-31878(a6)";
#define RSA_get0_n(d) __RSA_get0_n(AmiSSLBase, (d))

const BIGNUM * __RSA_get0_dmq1(__reg("a6") struct Library * , __reg("a0") const RSA * r ) = "\tjsr\t-31884(a6)";
#define RSA_get0_dmq1(r) __RSA_get0_dmq1(AmiSSLBase, (r))

const BIGNUM * __RSA_get0_e(__reg("a6") struct Library * , __reg("a0") const RSA * d ) = "\tjsr\t-31890(a6)";
#define RSA_get0_e(d) __RSA_get0_e(AmiSSLBase, (d))

const BIGNUM * __RSA_get0_q(__reg("a6") struct Library * , __reg("a0") const RSA * d ) = "\tjsr\t-31896(a6)";
#define RSA_get0_q(d) __RSA_get0_q(AmiSSLBase, (d))

const BIGNUM * __RSA_get0_p(__reg("a6") struct Library * , __reg("a0") const RSA * d ) = "\tjsr\t-31902(a6)";
#define RSA_get0_p(d) __RSA_get0_p(AmiSSLBase, (d))

const BIGNUM * __RSA_get0_iqmp(__reg("a6") struct Library * , __reg("a0") const RSA * r ) = "\tjsr\t-31908(a6)";
#define RSA_get0_iqmp(r) __RSA_get0_iqmp(AmiSSLBase, (r))

const BIGNUM * __ECDSA_SIG_get0_r(__reg("a6") struct Library * , __reg("a0") const ECDSA_SIG * sig ) = "\tjsr\t-31914(a6)";
#define ECDSA_SIG_get0_r(sig) __ECDSA_SIG_get0_r(AmiSSLBase, (sig))

const BIGNUM * __ECDSA_SIG_get0_s(__reg("a6") struct Library * , __reg("a0") const ECDSA_SIG * sig ) = "\tjsr\t-31920(a6)";
#define ECDSA_SIG_get0_s(sig) __ECDSA_SIG_get0_s(AmiSSLBase, (sig))

X509_LOOKUP_get_by_fingerprint_fn __X509_LOOKUP_meth_get_get_by_fingerprint(__reg("a6") struct Library * , __reg("a0") const X509_LOOKUP_METHOD * method ) = "\tjsr\t-31926(a6)";
#define X509_LOOKUP_meth_get_get_by_fingerprint(method) __X509_LOOKUP_meth_get_get_by_fingerprint(AmiSSLBase, (method))

X509_LOOKUP_METHOD * __X509_LOOKUP_meth_new(__reg("a6") struct Library * , __reg("a0") const char * name ) = "\tjsr\t-31932(a6)";
#define X509_LOOKUP_meth_new(name) __X509_LOOKUP_meth_new(AmiSSLBase, (name))

int  (* __X509_LOOKUP_meth_get_init(__reg("a6") struct Library * , __reg("a0") const X509_LOOKUP_METHOD* method ) )(X509_LOOKUP *ctx) =  "\tjsr\t-31938(a6)";
#define X509_LOOKUP_meth_get_init(method) __X509_LOOKUP_meth_get_init(AmiSSLBase, (method))

X509_LOOKUP_get_by_alias_fn __X509_LOOKUP_meth_get_get_by_alias(__reg("a6") struct Library * , __reg("a0") const X509_LOOKUP_METHOD * method ) = "\tjsr\t-31944(a6)";
#define X509_LOOKUP_meth_get_get_by_alias(method) __X509_LOOKUP_meth_get_get_by_alias(AmiSSLBase, (method))

int __X509_LOOKUP_meth_set_new_item(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP_METHOD * method , __reg("a1") int (*new_item)(X509_LOOKUP *ctx) ) = "\tjsr\t-31950(a6)";
#define X509_LOOKUP_meth_set_new_item(method, new_item) __X509_LOOKUP_meth_set_new_item(AmiSSLBase, (method), (new_item))

int __X509_LOOKUP_meth_set_shutdown(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP_METHOD * method , __reg("a1") int (*__shutdown)(X509_LOOKUP *ctx) ) = "\tjsr\t-31956(a6)";
#define X509_LOOKUP_meth_set_shutdown(method, __shutdown) __X509_LOOKUP_meth_set_shutdown(AmiSSLBase, (method), (__shutdown))

int  (* __X509_LOOKUP_meth_get_new_item(__reg("a6") struct Library * , __reg("a0") const X509_LOOKUP_METHOD* method ) )(X509_LOOKUP *ctx) =  "\tjsr\t-31962(a6)";
#define X509_LOOKUP_meth_get_new_item(method) __X509_LOOKUP_meth_get_new_item(AmiSSLBase, (method))

int __X509_LOOKUP_meth_set_ctrl(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP_METHOD * method , __reg("a1") X509_LOOKUP_ctrl_fn ctrl_fn ) = "\tjsr\t-31968(a6)";
#define X509_LOOKUP_meth_set_ctrl(method, ctrl_fn) __X509_LOOKUP_meth_set_ctrl(AmiSSLBase, (method), (ctrl_fn))

int __X509_LOOKUP_meth_set_get_by_issuer_serial(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP_METHOD * method , __reg("a1") X509_LOOKUP_get_by_issuer_serial_fn fn ) = "\tjsr\t-31974(a6)";
#define X509_LOOKUP_meth_set_get_by_issuer_serial(method, fn) __X509_LOOKUP_meth_set_get_by_issuer_serial(AmiSSLBase, (method), (fn))

X509_STORE * __X509_LOOKUP_get_store(__reg("a6") struct Library * , __reg("a0") const X509_LOOKUP * ctx ) = "\tjsr\t-31980(a6)";
#define X509_LOOKUP_get_store(ctx) __X509_LOOKUP_get_store(AmiSSLBase, (ctx))

X509_LOOKUP_ctrl_fn __X509_LOOKUP_meth_get_ctrl(__reg("a6") struct Library * , __reg("a0") const X509_LOOKUP_METHOD * method ) = "\tjsr\t-31986(a6)";
#define X509_LOOKUP_meth_get_ctrl(method) __X509_LOOKUP_meth_get_ctrl(AmiSSLBase, (method))

int __X509_LOOKUP_meth_set_get_by_alias(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP_METHOD * method , __reg("a1") X509_LOOKUP_get_by_alias_fn fn ) = "\tjsr\t-31992(a6)";
#define X509_LOOKUP_meth_set_get_by_alias(method, fn) __X509_LOOKUP_meth_set_get_by_alias(AmiSSLBase, (method), (fn))

X509_LOOKUP_get_by_subject_fn __X509_LOOKUP_meth_get_get_by_subject(__reg("a6") struct Library * , __reg("a0") const X509_LOOKUP_METHOD * method ) = "\tjsr\t-31998(a6)";
#define X509_LOOKUP_meth_get_get_by_subject(method) __X509_LOOKUP_meth_get_get_by_subject(AmiSSLBase, (method))

void  (* __X509_LOOKUP_meth_get_free(__reg("a6") struct Library * , __reg("a0") const X509_LOOKUP_METHOD* method ) )(X509_LOOKUP *ctx) =  "\tjsr\t-32004(a6)";
#define X509_LOOKUP_meth_get_free(method) __X509_LOOKUP_meth_get_free(AmiSSLBase, (method))

int __X509_LOOKUP_meth_set_get_by_subject(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP_METHOD * method , __reg("a1") X509_LOOKUP_get_by_subject_fn fn ) = "\tjsr\t-32010(a6)";
#define X509_LOOKUP_meth_set_get_by_subject(method, fn) __X509_LOOKUP_meth_set_get_by_subject(AmiSSLBase, (method), (fn))

int __X509_LOOKUP_meth_set_free(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP_METHOD * method , __reg("a1") void (*free_fn)(X509_LOOKUP *ctx) ) = "\tjsr\t-32016(a6)";
#define X509_LOOKUP_meth_set_free(method, free_fn) __X509_LOOKUP_meth_set_free(AmiSSLBase, (method), (free_fn))

int  (* __X509_LOOKUP_meth_get_shutdown(__reg("a6") struct Library * , __reg("a0") const X509_LOOKUP_METHOD* method ) )(X509_LOOKUP *ctx) =  "\tjsr\t-32022(a6)";
#define X509_LOOKUP_meth_get_shutdown(method) __X509_LOOKUP_meth_get_shutdown(AmiSSLBase, (method))

int __X509_LOOKUP_set_method_data(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP * ctx , __reg("a1") void * data ) = "\tjsr\t-32028(a6)";
#define X509_LOOKUP_set_method_data(ctx, data) __X509_LOOKUP_set_method_data(AmiSSLBase, (ctx), (data))

void * __X509_LOOKUP_get_method_data(__reg("a6") struct Library * , __reg("a0") const X509_LOOKUP * ctx ) = "\tjsr\t-32034(a6)";
#define X509_LOOKUP_get_method_data(ctx) __X509_LOOKUP_get_method_data(AmiSSLBase, (ctx))

int __X509_LOOKUP_meth_set_get_by_fingerprint(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP_METHOD * method , __reg("a1") X509_LOOKUP_get_by_fingerprint_fn fn ) = "\tjsr\t-32040(a6)";
#define X509_LOOKUP_meth_set_get_by_fingerprint(method, fn) __X509_LOOKUP_meth_set_get_by_fingerprint(AmiSSLBase, (method), (fn))

void __X509_LOOKUP_meth_free(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP_METHOD * method ) = "\tjsr\t-32046(a6)";
#define X509_LOOKUP_meth_free(method) __X509_LOOKUP_meth_free(AmiSSLBase, (method))

int __X509_OBJECT_set1_X509(__reg("a6") struct Library * , __reg("a0") X509_OBJECT * a , __reg("a1") X509 * obj ) = "\tjsr\t-32052(a6)";
#define X509_OBJECT_set1_X509(a, obj) __X509_OBJECT_set1_X509(AmiSSLBase, (a), (obj))

X509_LOOKUP_get_by_issuer_serial_fn __X509_LOOKUP_meth_get_get_by_issuer_serial(__reg("a6") struct Library * , __reg("a0") const X509_LOOKUP_METHOD * method ) = "\tjsr\t-32058(a6)";
#define X509_LOOKUP_meth_get_get_by_issuer_serial(method) __X509_LOOKUP_meth_get_get_by_issuer_serial(AmiSSLBase, (method))

int __X509_LOOKUP_meth_set_init(__reg("a6") struct Library * , __reg("a0") X509_LOOKUP_METHOD * method , __reg("a1") int (*init)(X509_LOOKUP *ctx) ) = "\tjsr\t-32064(a6)";
#define X509_LOOKUP_meth_set_init(method, init) __X509_LOOKUP_meth_set_init(AmiSSLBase, (method), (init))

int __X509_OBJECT_set1_X509_CRL(__reg("a6") struct Library * , __reg("a0") X509_OBJECT * a , __reg("a1") X509_CRL * obj ) = "\tjsr\t-32070(a6)";
#define X509_OBJECT_set1_X509_CRL(a, obj) __X509_OBJECT_set1_X509_CRL(AmiSSLBase, (a), (obj))

int __EVP_PKEY_get_raw_public_key(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey , __reg("a1") unsigned char * pub , __reg("a2") size_t * len ) = "\tjsr\t-32076(a6)";
#define EVP_PKEY_get_raw_public_key(pkey, pub, len) __EVP_PKEY_get_raw_public_key(AmiSSLBase, (pkey), (pub), (len))

int __EVP_PKEY_get_raw_private_key(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey , __reg("a1") unsigned char * priv , __reg("a2") size_t * len ) = "\tjsr\t-32082(a6)";
#define EVP_PKEY_get_raw_private_key(pkey, priv, len) __EVP_PKEY_get_raw_private_key(AmiSSLBase, (pkey), (priv), (len))

void __EVP_PKEY_asn1_set_get_priv_key(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*get_priv_key)(const EVP_PKEY *pk,unsigned char *priv,size_t *len) ) = "\tjsr\t-32088(a6)";
#define EVP_PKEY_asn1_set_get_priv_key(ameth, get_priv_key) __EVP_PKEY_asn1_set_get_priv_key(AmiSSLBase, (ameth), (get_priv_key))

void __EVP_PKEY_asn1_set_get_pub_key(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_ASN1_METHOD * ameth , __reg("a1") int (*get_pub_key)(const EVP_PKEY *pk,unsigned char *pub,size_t *len) ) = "\tjsr\t-32094(a6)";
#define EVP_PKEY_asn1_set_get_pub_key(ameth, get_pub_key) __EVP_PKEY_asn1_set_get_pub_key(AmiSSLBase, (ameth), (get_pub_key))

void __RAND_keep_random_devices_open(__reg("a6") struct Library * , __reg("d0") int keep ) = "\tjsr\t-32106(a6)";
#define RAND_keep_random_devices_open(keep) __RAND_keep_random_devices_open(AmiSSLBase, (keep))

int __EC_POINT_set_compressed_coordinates(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") EC_POINT * p , __reg("a2") const BIGNUM * x , __reg("d0") int y_bit , __reg("a3") BN_CTX * ctx ) = "\tjsr\t-32112(a6)";
#define EC_POINT_set_compressed_coordinates(group, p, x, y_bit, ctx) __EC_POINT_set_compressed_coordinates(AmiSSLBase, (group), (p), (x), (y_bit), (ctx))

int __EC_POINT_set_affine_coordinates(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") EC_POINT * p , __reg("a2") const BIGNUM * x , __reg("a3") const BIGNUM * y , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-32118(a6)";
#define EC_POINT_set_affine_coordinates(group, p, x, y, ctx) __EC_POINT_set_affine_coordinates(AmiSSLBase, (group), (p), (x), (y), (ctx))

int __EC_POINT_get_affine_coordinates(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") const EC_POINT * p , __reg("a2") BIGNUM * x , __reg("a3") BIGNUM * y , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-32124(a6)";
#define EC_POINT_get_affine_coordinates(group, p, x, y, ctx) __EC_POINT_get_affine_coordinates(AmiSSLBase, (group), (p), (x), (y), (ctx))

int __EC_GROUP_set_curve(__reg("a6") struct Library * , __reg("a0") EC_GROUP * group , __reg("a1") const BIGNUM * p , __reg("a2") const BIGNUM * a , __reg("a3") const BIGNUM * b , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-32130(a6)";
#define EC_GROUP_set_curve(group, p, a, b, ctx) __EC_GROUP_set_curve(AmiSSLBase, (group), (p), (a), (b), (ctx))

int __EC_GROUP_get_curve(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group , __reg("a1") BIGNUM * p , __reg("a2") BIGNUM * a , __reg("a3") BIGNUM * b , __reg("d0") BN_CTX * ctx ) = "\tjsr\t-32136(a6)";
#define EC_GROUP_get_curve(group, p, a, b, ctx) __EC_GROUP_get_curve(AmiSSLBase, (group), (p), (a), (b), (ctx))

const X509_ALGOR * __OCSP_resp_get0_tbs_sigalg(__reg("a6") struct Library * , __reg("a0") const OCSP_BASICRESP * bs ) = "\tjsr\t-32142(a6)";
#define OCSP_resp_get0_tbs_sigalg(bs) __OCSP_resp_get0_tbs_sigalg(AmiSSLBase, (bs))

const OCSP_RESPDATA * __OCSP_resp_get0_respdata(__reg("a6") struct Library * , __reg("a0") const OCSP_BASICRESP * bs ) = "\tjsr\t-32148(a6)";
#define OCSP_resp_get0_respdata(bs) __OCSP_resp_get0_respdata(AmiSSLBase, (bs))

void __EVP_MD_CTX_set_pkey_ctx(__reg("a6") struct Library * , __reg("a0") EVP_MD_CTX * ctx , __reg("a1") EVP_PKEY_CTX * pctx ) = "\tjsr\t-32154(a6)";
#define EVP_MD_CTX_set_pkey_ctx(ctx, pctx) __EVP_MD_CTX_set_pkey_ctx(AmiSSLBase, (ctx), (pctx))

void __EVP_PKEY_meth_set_digest_custom(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*digest_custom)(EVP_PKEY_CTX *ctx,EVP_MD_CTX *mctx) ) = "\tjsr\t-32160(a6)";
#define EVP_PKEY_meth_set_digest_custom(pmeth, digest_custom) __EVP_PKEY_meth_set_digest_custom(AmiSSLBase, (pmeth), (digest_custom))

void __EVP_PKEY_meth_get_digest_custom(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**pdigest_custom)(EVP_PKEY_CTX *ctx,EVP_MD_CTX *mctx) ) = "\tjsr\t-32166(a6)";
#define EVP_PKEY_meth_get_digest_custom(pmeth, pdigest_custom) __EVP_PKEY_meth_get_digest_custom(AmiSSLBase, (pmeth), (pdigest_custom))

const char * __OPENSSL_DIR_read(__reg("a6") struct Library * , __reg("a0") OPENSSL_DIR_CTX ** ctx , __reg("a1") const char * directory ) = "\tjsr\t-32172(a6)";
#define OPENSSL_DIR_read(ctx, directory) __OPENSSL_DIR_read(AmiSSLBase, (ctx), (directory))

int __OPENSSL_DIR_end(__reg("a6") struct Library * , __reg("a0") OPENSSL_DIR_CTX ** ctx ) = "\tjsr\t-32178(a6)";
#define OPENSSL_DIR_end(ctx) __OPENSSL_DIR_end(AmiSSLBase, (ctx))

ENGINE * __EVP_PKEY_get0_engine(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY * pkey ) = "\tjsr\t-32196(a6)";
#define EVP_PKEY_get0_engine(pkey) __EVP_PKEY_get0_engine(AmiSSLBase, (pkey))

const ASN1_INTEGER * __X509_get0_authority_serial(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-32202(a6)";
#define X509_get0_authority_serial(x) __X509_get0_authority_serial(AmiSSLBase, (x))

const GENERAL_NAMES * __X509_get0_authority_issuer(__reg("a6") struct Library * , __reg("a0") X509 * x ) = "\tjsr\t-32208(a6)";
#define X509_get0_authority_issuer(x) __X509_get0_authority_issuer(AmiSSLBase, (x))

void __EVP_PKEY_meth_set_digestsign(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*digestsign)(EVP_MD_CTX *ctx,unsigned char *sig,size_t *siglen,const unsigned char *tbs,size_t tbslen) ) = "\tjsr\t-32214(a6)";
#define EVP_PKEY_meth_set_digestsign(pmeth, digestsign) __EVP_PKEY_meth_set_digestsign(AmiSSLBase, (pmeth), (digestsign))

void __EVP_PKEY_meth_set_digestverify(__reg("a6") struct Library * , __reg("a0") EVP_PKEY_METHOD * pmeth , __reg("a1") int (*digestverify)(EVP_MD_CTX *ctx,const unsigned char *sig,size_t siglen,const unsigned char *tbs,size_t tbslen) ) = "\tjsr\t-32220(a6)";
#define EVP_PKEY_meth_set_digestverify(pmeth, digestverify) __EVP_PKEY_meth_set_digestverify(AmiSSLBase, (pmeth), (digestverify))

void __EVP_PKEY_meth_get_digestverify(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**digestverify)(EVP_MD_CTX *ctx,const unsigned char *sig,size_t siglen,const unsigned char *tbs,size_t tbslen) ) = "\tjsr\t-32226(a6)";
#define EVP_PKEY_meth_get_digestverify(pmeth, digestverify) __EVP_PKEY_meth_get_digestverify(AmiSSLBase, (pmeth), (digestverify))

void __EVP_PKEY_meth_get_digestsign(__reg("a6") struct Library * , __reg("a0") const EVP_PKEY_METHOD * pmeth , __reg("a1") int (**digestsign)(EVP_MD_CTX *ctx,unsigned char *sig,size_t *siglen,const unsigned char *tbs,size_t tbslen) ) = "\tjsr\t-32232(a6)";
#define EVP_PKEY_meth_get_digestsign(pmeth, digestsign) __EVP_PKEY_meth_get_digestsign(AmiSSLBase, (pmeth), (digestsign))

const RSA_PSS_PARAMS * __RSA_get0_pss_params(__reg("a6") struct Library * , __reg("a0") const RSA * r ) = "\tjsr\t-32238(a6)";
#define RSA_get0_pss_params(r) __RSA_get0_pss_params(AmiSSLBase, (r))

int __X509_ALGOR_copy(__reg("a6") struct Library * , __reg("a0") X509_ALGOR * dest , __reg("a1") const X509_ALGOR * src ) = "\tjsr\t-32244(a6)";
#define X509_ALGOR_copy(dest, src) __X509_ALGOR_copy(AmiSSLBase, (dest), (src))

void __X509_REQ_set0_signature(__reg("a6") struct Library * , __reg("a0") X509_REQ * req , __reg("a1") ASN1_BIT_STRING * psig ) = "\tjsr\t-32250(a6)";
#define X509_REQ_set0_signature(req, psig) __X509_REQ_set0_signature(AmiSSLBase, (req), (psig))

int __X509_REQ_set1_signature_algo(__reg("a6") struct Library * , __reg("a0") X509_REQ * req , __reg("a1") X509_ALGOR * palg ) = "\tjsr\t-32256(a6)";
#define X509_REQ_set1_signature_algo(req, palg) __X509_REQ_set1_signature_algo(AmiSSLBase, (req), (palg))

int __EC_KEY_decoded_from_explicit_params(__reg("a6") struct Library * , __reg("a0") const EC_KEY * key ) = "\tjsr\t-32262(a6)";
#define EC_KEY_decoded_from_explicit_params(key) __EC_KEY_decoded_from_explicit_params(AmiSSLBase, (key))

int __RSA_X931_derive_ex_amiga_1(__reg("a6") struct Library * , __reg("a0") RSA * rsa , __reg("a1") BIGNUM * p1 , __reg("a2") BIGNUM * p2 , __reg("d0") BIGNUM * q1 , __reg("d1") BIGNUM * q2 , __reg("d2") const BIGNUM * Xp1 , __reg("a3") void * moreargs ) = "\tjsr\t-32268(a6)";
#define RSA_X931_derive_ex_amiga_1(rsa, p1, p2, q1, q2, Xp1, moreargs) __RSA_X931_derive_ex_amiga_1(AmiSSLBase, (rsa), (p1), (p2), (q1), (q2), (Xp1), (moreargs))

void * __RSA_X931_derive_ex_amiga_2(__reg("a6") struct Library * , __reg("a0") const BIGNUM * Xp2 , __reg("a1") const BIGNUM * Xp , __reg("a2") const BIGNUM * Xq1 , __reg("d0") const BIGNUM * Xq2 , __reg("d1") const BIGNUM * Xq , __reg("d2") const BIGNUM * e , __reg("a3") BN_GENCB * cb ) = "\tjsr\t-32274(a6)";
#define RSA_X931_derive_ex_amiga_2(Xp2, Xp, Xq1, Xq2, Xq, e, cb) __RSA_X931_derive_ex_amiga_2(AmiSSLBase, (Xp2), (Xp), (Xq1), (Xq2), (Xq), (e), (cb))

int __SSL_CTX_set_async_callback(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") SSL_async_callback_fn callback ) = "\tjsr\t-32286(a6)";
#define SSL_CTX_set_async_callback(ctx, callback) __SSL_CTX_set_async_callback(AmiSSLBase, (ctx), (callback))

int __SSL_CTX_set_async_callback_arg(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") void * arg ) = "\tjsr\t-32292(a6)";
#define SSL_CTX_set_async_callback_arg(ctx, arg) __SSL_CTX_set_async_callback_arg(AmiSSLBase, (ctx), (arg))

int __SSL_set_async_callback(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") SSL_async_callback_fn callback ) = "\tjsr\t-32298(a6)";
#define SSL_set_async_callback(s, callback) __SSL_set_async_callback(AmiSSLBase, (s), (callback))

int __SSL_set_async_callback_arg(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") void * arg ) = "\tjsr\t-32304(a6)";
#define SSL_set_async_callback_arg(s, arg) __SSL_set_async_callback_arg(AmiSSLBase, (s), (arg))

int __SSL_get_async_status(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") int * status ) = "\tjsr\t-32310(a6)";
#define SSL_get_async_status(s, status) __SSL_get_async_status(AmiSSLBase, (s), (status))

int __SSL_sendfile(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int fd , __reg("d1") off_t offset , __reg("d2") size_t size , __reg("d3") int flags ) = "\tjsr\t-32316(a6)";
#define SSL_sendfile(s, fd, offset, size, flags) __SSL_sendfile(AmiSSLBase, (s), (fd), (offset), (size), (flags))

const char * __OSSL_default_cipher_list(__reg("a6") struct Library * ) = "\tjsr\t-32322(a6)";
#define OSSL_default_cipher_list() __OSSL_default_cipher_list(AmiSSLBase)

const char * __OSSL_default_ciphersuites(__reg("a6") struct Library * ) = "\tjsr\t-32328(a6)";
#define OSSL_default_ciphersuites() __OSSL_default_ciphersuites(AmiSSLBase)

int __SSL_add_store_cert_subjects_to_stack(__reg("a6") struct Library * , __reg("a0") STACK_OF(X509_NAME) * stackCAs , __reg("a1") const char * uri ) = "\tjsr\t-32334(a6)";
#define SSL_add_store_cert_subjects_to_stack(stackCAs, uri) __SSL_add_store_cert_subjects_to_stack(AmiSSLBase, (stackCAs), (uri))

int __SSL_CTX_set_default_verify_store(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx ) = "\tjsr\t-32340(a6)";
#define SSL_CTX_set_default_verify_store(ctx) __SSL_CTX_set_default_verify_store(AmiSSLBase, (ctx))

int __SSL_CTX_load_verify_file(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * CAfile ) = "\tjsr\t-32346(a6)";
#define SSL_CTX_load_verify_file(ctx, CAfile) __SSL_CTX_load_verify_file(AmiSSLBase, (ctx), (CAfile))

int __SSL_CTX_load_verify_dir(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * CApath ) = "\tjsr\t-32352(a6)";
#define SSL_CTX_load_verify_dir(ctx, CApath) __SSL_CTX_load_verify_dir(AmiSSLBase, (ctx), (CApath))

int __SSL_CTX_load_verify_store(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") const char * CAstore ) = "\tjsr\t-32358(a6)";
#define SSL_CTX_load_verify_store(ctx, CAstore) __SSL_CTX_load_verify_store(AmiSSLBase, (ctx), (CAstore))

int __SSL_CTX_set_tlsext_ticket_key_evp_cb(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") int (*fp)(SSL *,unsigned char *,unsigned char *,EVP_CIPHER_CTX *,EVP_MAC_CTX *,int) ) = "\tjsr\t-32364(a6)";
#define SSL_CTX_set_tlsext_ticket_key_evp_cb(ctx, fp) __SSL_CTX_set_tlsext_ticket_key_evp_cb(AmiSSLBase, (ctx), (fp))

SSL_CTX * __SSL_CTX_new_ex(__reg("a6") struct Library * , __reg("a0") OSSL_LIB_CTX * libctx , __reg("a1") const char * propq , __reg("a2") const SSL_METHOD * meth ) = "\tjsr\t-32370(a6)";
#define SSL_CTX_new_ex(libctx, propq, meth) __SSL_CTX_new_ex(AmiSSLBase, (libctx), (propq), (meth))

int __SSL_new_session_ticket(__reg("a6") struct Library * , __reg("a0") SSL * s ) = "\tjsr\t-32376(a6)";
#define SSL_new_session_ticket(s) __SSL_new_session_ticket(AmiSSLBase, (s))

X509 * __SSL_get0_peer_certificate(__reg("a6") struct Library * , __reg("a0") const SSL * s ) = "\tjsr\t-32382(a6)";
#define SSL_get0_peer_certificate(s) __SSL_get0_peer_certificate(AmiSSLBase, (s))

STACK_OF(X509_NAME) * __SSL_load_client_CA_file_ex(__reg("a6") struct Library * , __reg("a0") const char * file , __reg("a1") OSSL_LIB_CTX * libctx , __reg("a2") const char * propq ) = "\tjsr\t-32388(a6)";
#define SSL_load_client_CA_file_ex(file, libctx, propq) __SSL_load_client_CA_file_ex(AmiSSLBase, (file), (libctx), (propq))

int __SSL_set0_tmp_dh_pkey(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("a1") EVP_PKEY * dhpkey ) = "\tjsr\t-32394(a6)";
#define SSL_set0_tmp_dh_pkey(s, dhpkey) __SSL_set0_tmp_dh_pkey(AmiSSLBase, (s), (dhpkey))

int __SSL_CTX_set0_tmp_dh_pkey(__reg("a6") struct Library * , __reg("a0") SSL_CTX * ctx , __reg("a1") EVP_PKEY * dhpkey ) = "\tjsr\t-32400(a6)";
#define SSL_CTX_set0_tmp_dh_pkey(ctx, dhpkey) __SSL_CTX_set0_tmp_dh_pkey(AmiSSLBase, (ctx), (dhpkey))

const char * __SSL_group_to_name(__reg("a6") struct Library * , __reg("a0") SSL * s , __reg("d0") int id ) = "\tjsr\t-32406(a6)";
#define SSL_group_to_name(s, id) __SSL_group_to_name(AmiSSLBase, (s), (id))

X509_CRL * __X509_CRL_load_http(__reg("a6") struct Library * , __reg("a0") const char * url , __reg("a1") BIO * bio , __reg("a2") BIO * rbio , __reg("d0") int timeout ) = "\tjsr\t-32412(a6)";
#define X509_CRL_load_http(url, bio, rbio, timeout) __X509_CRL_load_http(AmiSSLBase, (url), (bio), (rbio), (timeout))

int __OSSL_HTTP_parse_url(__reg("a6") struct Library * , __reg("a0") const char * url , __reg("a1") int * pssl , __reg("a2") char ** puser , __reg("a3") char ** phost , __reg("d0") char ** pport , __reg("d1") int * pport_num , __reg("d2") char ** ppath , __reg("d3") char ** pquery , __reg("d4") char ** pfrag ) = "\tjsr\t-32418(a6)";
#define OSSL_HTTP_parse_url(url, pssl, puser, phost, pport, pport_num, ppath, pquery, pfrag) __OSSL_HTTP_parse_url(AmiSSLBase, (url), (pssl), (puser), (phost), (pport), (pport_num), (ppath), (pquery), (pfrag))

BIO * __OSSL_HTTP_REQ_CTX_exchange(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx ) = "\tjsr\t-32424(a6)";
#define OSSL_HTTP_REQ_CTX_exchange(rctx) __OSSL_HTTP_REQ_CTX_exchange(AmiSSLBase, (rctx))

OSSL_HTTP_REQ_CTX * __OSSL_HTTP_REQ_CTX_new(__reg("a6") struct Library * , __reg("a0") BIO * wbio , __reg("a1") BIO * rbio , __reg("d0") int buf_size ) = "\tjsr\t-32430(a6)";
#define OSSL_HTTP_REQ_CTX_new(wbio, rbio, buf_size) __OSSL_HTTP_REQ_CTX_new(AmiSSLBase, (wbio), (rbio), (buf_size))

X509 * __X509_load_http(__reg("a6") struct Library * , __reg("a0") const char * url , __reg("a1") BIO * bio , __reg("a2") BIO * rbio , __reg("d0") int timeout ) = "\tjsr\t-32436(a6)";
#define X509_load_http(url, bio, rbio, timeout) __X509_load_http(AmiSSLBase, (url), (bio), (rbio), (timeout))

unsigned long __X509_NAME_hash_ex(__reg("a6") struct Library * , __reg("a0") const X509_NAME * x , __reg("a1") OSSL_LIB_CTX * libctx , __reg("a2") const char * propq , __reg("a3") int * ok ) = "\tjsr\t-32442(a6)";
#define X509_NAME_hash_ex(x, libctx, propq, ok) __X509_NAME_hash_ex(AmiSSLBase, (x), (libctx), (propq), (ok))

int __OSSL_HTTP_REQ_CTX_set_request_line(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx , __reg("d0") int method_POST , __reg("a1") const char * server , __reg("a2") const char * port , __reg("a3") const char * path ) = "\tjsr\t-32448(a6)";
#define OSSL_HTTP_REQ_CTX_set_request_line(rctx, method_POST, server, port, path) __OSSL_HTTP_REQ_CTX_set_request_line(AmiSSLBase, (rctx), (method_POST), (server), (port), (path))

int __OSSL_HTTP_REQ_CTX_set1_req(__reg("a6") struct Library * , __reg("a0") OSSL_HTTP_REQ_CTX * rctx , __reg("a1") const char * content_type , __reg("a2") const ASN1_ITEM * it , __reg("a3") const ASN1_VALUE * req ) = "\tjsr\t-32454(a6)";
#define OSSL_HTTP_REQ_CTX_set1_req(rctx, content_type, it, req) __OSSL_HTTP_REQ_CTX_set1_req(AmiSSLBase, (rctx), (content_type), (it), (req))

EVP_MAC_CTX * __EVP_MAC_CTX_new(__reg("a6") struct Library * , __reg("a0") EVP_MAC * mac ) = "\tjsr\t-32460(a6)";
#define EVP_MAC_CTX_new(mac) __EVP_MAC_CTX_new(AmiSSLBase, (mac))

void __EVP_MAC_CTX_free(__reg("a6") struct Library * , __reg("a0") EVP_MAC_CTX * ctx ) = "\tjsr\t-32466(a6)";
#define EVP_MAC_CTX_free(ctx) __EVP_MAC_CTX_free(AmiSSLBase, (ctx))

EVP_MAC_CTX * __EVP_MAC_CTX_dup(__reg("a6") struct Library * , __reg("a0") const EVP_MAC_CTX * src ) = "\tjsr\t-32472(a6)";
#define EVP_MAC_CTX_dup(src) __EVP_MAC_CTX_dup(AmiSSLBase, (src))

EVP_MAC * __EVP_MAC_CTX_get0_mac(__reg("a6") struct Library * , __reg("a0") EVP_MAC_CTX * ctx ) = "\tjsr\t-32478(a6)";
#define EVP_MAC_CTX_get0_mac(ctx) __EVP_MAC_CTX_get0_mac(AmiSSLBase, (ctx))

size_t __EVP_MAC_CTX_get_mac_size(__reg("a6") struct Library * , __reg("a0") EVP_MAC_CTX * ctx ) = "\tjsr\t-32484(a6)";
#define EVP_MAC_CTX_get_mac_size(ctx) __EVP_MAC_CTX_get_mac_size(AmiSSLBase, (ctx))

unsigned char * __EVP_Q_mac(__reg("a6") struct Library * , __reg("a0") OSSL_LIB_CTX * libctx , __reg("a1") const char * name , __reg("a2") const char * propq , __reg("a3") const char * subalg , __reg("d0") const OSSL_PARAM * params , __reg("d1") const void * key , __reg("d2") size_t keylen , __reg("d3") const unsigned char * data , __reg("d4") size_t datalen , __reg("d5") unsigned char * out , __reg("d6") size_t outsize , __reg("d7") size_t * outlen ) = "\tjsr\t-32490(a6)";
#define EVP_Q_mac(libctx, name, propq, subalg, params, key, keylen, data, datalen, out, outsize, outlen) __EVP_Q_mac(AmiSSLBase, (libctx), (name), (propq), (subalg), (params), (key), (keylen), (data), (datalen), (out), (outsize), (outlen))

int __EVP_MAC_init(__reg("a6") struct Library * , __reg("a0") EVP_MAC_CTX * ctx , __reg("a1") const unsigned char * key , __reg("d0") size_t keylen , __reg("a2") const OSSL_PARAM * params ) = "\tjsr\t-32496(a6)";
#define EVP_MAC_init(ctx, key, keylen, params) __EVP_MAC_init(AmiSSLBase, (ctx), (key), (keylen), (params))

int __EVP_MAC_update(__reg("a6") struct Library * , __reg("a0") EVP_MAC_CTX * ctx , __reg("a1") const unsigned char * data , __reg("d0") size_t datalen ) = "\tjsr\t-32502(a6)";
#define EVP_MAC_update(ctx, data, datalen) __EVP_MAC_update(AmiSSLBase, (ctx), (data), (datalen))

int __EVP_MAC_final(__reg("a6") struct Library * , __reg("a0") EVP_MAC_CTX * ctx , __reg("a1") unsigned char * out , __reg("a2") size_t * outl , __reg("d0") size_t outsize ) = "\tjsr\t-32508(a6)";
#define EVP_MAC_final(ctx, out, outl, outsize) __EVP_MAC_final(AmiSSLBase, (ctx), (out), (outl), (outsize))

int __EVP_MAC_finalXOF(__reg("a6") struct Library * , __reg("a0") EVP_MAC_CTX * ctx , __reg("a1") unsigned char * out , __reg("d0") size_t outsize ) = "\tjsr\t-32514(a6)";
#define EVP_MAC_finalXOF(ctx, out, outsize) __EVP_MAC_finalXOF(AmiSSLBase, (ctx), (out), (outsize))

const char * __OSSL_EC_curve_nid2name(__reg("a6") struct Library * , __reg("d0") int nid ) = "\tjsr\t-32520(a6)";
#define OSSL_EC_curve_nid2name(nid) __OSSL_EC_curve_nid2name(AmiSSLBase, (nid))

int __EVP_PKEY_digestsign_supports_digest(__reg("a6") struct Library * , __reg("a0") EVP_PKEY * pkey , __reg("a1") OSSL_LIB_CTX * libctx , __reg("a2") const char * name , __reg("a3") const char * propq ) = "\tjsr\t-32526(a6)";
#define EVP_PKEY_digestsign_supports_digest(pkey, libctx, name, propq) __EVP_PKEY_digestsign_supports_digest(AmiSSLBase, (pkey), (libctx), (name), (propq))

int __SRP_VBASE_add0_user(__reg("a6") struct Library * , __reg("a0") SRP_VBASE * vb , __reg("a1") SRP_user_pwd * user_pwd ) = "\tjsr\t-32532(a6)";
#define SRP_VBASE_add0_user(vb, user_pwd) __SRP_VBASE_add0_user(AmiSSLBase, (vb), (user_pwd))

SRP_user_pwd * __SRP_user_pwd_new(__reg("a6") struct Library * ) = "\tjsr\t-32538(a6)";
#define SRP_user_pwd_new() __SRP_user_pwd_new(AmiSSLBase)

void __SRP_user_pwd_set_gN(__reg("a6") struct Library * , __reg("a0") SRP_user_pwd * user_pwd , __reg("a1") const BIGNUM * g , __reg("a2") const BIGNUM * N ) = "\tjsr\t-32544(a6)";
#define SRP_user_pwd_set_gN(user_pwd, g, N) __SRP_user_pwd_set_gN(AmiSSLBase, (user_pwd), (g), (N))

int __SRP_user_pwd_set1_ids(__reg("a6") struct Library * , __reg("a0") SRP_user_pwd * user_pwd , __reg("a1") const char * id , __reg("a2") const char * info ) = "\tjsr\t-32550(a6)";
#define SRP_user_pwd_set1_ids(user_pwd, id, info) __SRP_user_pwd_set1_ids(AmiSSLBase, (user_pwd), (id), (info))

int __SRP_user_pwd_set0_sv(__reg("a6") struct Library * , __reg("a0") SRP_user_pwd * user_pwd , __reg("a1") BIGNUM * s , __reg("a2") BIGNUM * v ) = "\tjsr\t-32556(a6)";
#define SRP_user_pwd_set0_sv(user_pwd, s, v) __SRP_user_pwd_set0_sv(AmiSSLBase, (user_pwd), (s), (v))

unsigned int __OPENSSL_version_major(__reg("a6") struct Library * ) = "\tjsr\t-32562(a6)";
#define OPENSSL_version_major() __OPENSSL_version_major(AmiSSLBase)

unsigned int __OPENSSL_version_minor(__reg("a6") struct Library * ) = "\tjsr\t-32568(a6)";
#define OPENSSL_version_minor() __OPENSSL_version_minor(AmiSSLBase)

unsigned int __OPENSSL_version_patch(__reg("a6") struct Library * ) = "\tjsr\t-32574(a6)";
#define OPENSSL_version_patch() __OPENSSL_version_patch(AmiSSLBase)

const char * __OPENSSL_version_pre_release(__reg("a6") struct Library * ) = "\tjsr\t-32580(a6)";
#define OPENSSL_version_pre_release() __OPENSSL_version_pre_release(AmiSSLBase)

const char * __OPENSSL_version_build_metadata(__reg("a6") struct Library * ) = "\tjsr\t-32586(a6)";
#define OPENSSL_version_build_metadata() __OPENSSL_version_build_metadata(AmiSSLBase)

int __ASYNC_WAIT_CTX_get_callback(__reg("a6") struct Library * , __reg("a0") ASYNC_WAIT_CTX * ctx , __reg("a1") ASYNC_callback_fn * callback , __reg("a2") void ** callback_arg ) = "\tjsr\t-32592(a6)";
#define ASYNC_WAIT_CTX_get_callback(ctx, callback, callback_arg) __ASYNC_WAIT_CTX_get_callback(AmiSSLBase, (ctx), (callback), (callback_arg))

int __ASYNC_WAIT_CTX_set_callback(__reg("a6") struct Library * , __reg("a0") ASYNC_WAIT_CTX * ctx , __reg("a1") ASYNC_callback_fn callback , __reg("a2") void * callback_arg ) = "\tjsr\t-32598(a6)";
#define ASYNC_WAIT_CTX_set_callback(ctx, callback, callback_arg) __ASYNC_WAIT_CTX_set_callback(AmiSSLBase, (ctx), (callback), (callback_arg))

int __ASYNC_WAIT_CTX_set_status(__reg("a6") struct Library * , __reg("a0") ASYNC_WAIT_CTX * ctx , __reg("d0") int status ) = "\tjsr\t-32604(a6)";
#define ASYNC_WAIT_CTX_set_status(ctx, status) __ASYNC_WAIT_CTX_set_status(AmiSSLBase, (ctx), (status))

int __ASYNC_WAIT_CTX_get_status(__reg("a6") struct Library * , __reg("a0") ASYNC_WAIT_CTX * ctx ) = "\tjsr\t-32610(a6)";
#define ASYNC_WAIT_CTX_get_status(ctx) __ASYNC_WAIT_CTX_get_status(AmiSSLBase, (ctx))

void __EVP_KDF_CTX_free(__reg("a6") struct Library * , __reg("a0") EVP_KDF_CTX * ctx ) = "\tjsr\t-32616(a6)";
#define EVP_KDF_CTX_free(ctx) __EVP_KDF_CTX_free(AmiSSLBase, (ctx))

void __EVP_KDF_CTX_reset(__reg("a6") struct Library * , __reg("a0") EVP_KDF_CTX * ctx ) = "\tjsr\t-32622(a6)";
#define EVP_KDF_CTX_reset(ctx) __EVP_KDF_CTX_reset(AmiSSLBase, (ctx))

size_t __EVP_KDF_CTX_get_kdf_size(__reg("a6") struct Library * , __reg("a0") EVP_KDF_CTX * ctx ) = "\tjsr\t-32628(a6)";
#define EVP_KDF_CTX_get_kdf_size(ctx) __EVP_KDF_CTX_get_kdf_size(AmiSSLBase, (ctx))

int __EVP_KDF_derive(__reg("a6") struct Library * , __reg("a0") EVP_KDF_CTX * ctx , __reg("a1") unsigned char * key , __reg("d0") size_t keylen , __reg("a2") const OSSL_PARAM * params ) = "\tjsr\t-32634(a6)";
#define EVP_KDF_derive(ctx, key, keylen, params) __EVP_KDF_derive(AmiSSLBase, (ctx), (key), (keylen), (params))

const char * __EVP_KDF_get0_name(__reg("a6") struct Library * , __reg("a0") const EVP_KDF * kdf ) = "\tjsr\t-32640(a6)";
#define EVP_KDF_get0_name(kdf) __EVP_KDF_get0_name(AmiSSLBase, (kdf))

const BIGNUM * __EC_GROUP_get0_field(__reg("a6") struct Library * , __reg("a0") const EC_GROUP * group ) = "\tjsr\t-32646(a6)";
#define EC_GROUP_get0_field(group) __EC_GROUP_get0_field(AmiSSLBase, (group))

int __CRYPTO_alloc_ex_data(__reg("a6") struct Library * , __reg("d0") int class_index , __reg("a0") void * obj , __reg("a1") CRYPTO_EX_DATA * ad , __reg("d1") int idx ) = "\tjsr\t-32652(a6)";
#define CRYPTO_alloc_ex_data(class_index, obj, ad, idx) __CRYPTO_alloc_ex_data(AmiSSLBase, (class_index), (obj), (ad), (idx))

OSSL_LIB_CTX * __OSSL_LIB_CTX_new(__reg("a6") struct Library * ) = "\tjsr\t-32658(a6)";
#define OSSL_LIB_CTX_new() __OSSL_LIB_CTX_new(AmiSSLBase)

void __OSSL_LIB_CTX_free(__reg("a6") struct Library * , __reg("a0") OSSL_LIB_CTX * a ) = "\tjsr\t-32664(a6)";
#define OSSL_LIB_CTX_free(a) __OSSL_LIB_CTX_free(AmiSSLBase, (a))

void __OPENSSL_LH_flush(__reg("a6") struct Library * , __reg("a0") OPENSSL_LHASH * lh ) = "\tjsr\t-32670(a6)";
#define OPENSSL_LH_flush(lh) __OPENSSL_LH_flush(AmiSSLBase, (lh))

BIGNUM * __BN_native2bn(__reg("a6") struct Library * , __reg("a0") const unsigned char * s , __reg("d0") int len , __reg("a1") BIGNUM * ret ) = "\tjsr\t-32676(a6)";
#define BN_native2bn(s, len, ret) __BN_native2bn(AmiSSLBase, (s), (len), (ret))

int __BN_bn2nativepad(__reg("a6") struct Library * , __reg("a0") const BIGNUM * a , __reg("a1") unsigned char * to , __reg("d0") int tolen ) = "\tjsr\t-32682(a6)";
#define BN_bn2nativepad(a, to, tolen) __BN_bn2nativepad(AmiSSLBase, (a), (to), (tolen))

int __OSSL_trace_get_category_num(__reg("a6") struct Library * , __reg("a0") const char * name ) = "\tjsr\t-32688(a6)";
#define OSSL_trace_get_category_num(name) __OSSL_trace_get_category_num(AmiSSLBase, (name))

const char * __OSSL_trace_get_category_name(__reg("a6") struct Library * , __reg("d0") int num ) = "\tjsr\t-32694(a6)";
#define OSSL_trace_get_category_name(num) __OSSL_trace_get_category_name(AmiSSLBase, (num))

int __OSSL_trace_set_channel(__reg("a6") struct Library * , __reg("d0") int category , __reg("a0") BIO* channel ) = "\tjsr\t-32700(a6)";
#define OSSL_trace_set_channel(category, channel) __OSSL_trace_set_channel(AmiSSLBase, (category), (channel))

int __OSSL_trace_set_prefix(__reg("a6") struct Library * , __reg("d0") int category , __reg("a0") const char * prefix ) = "\tjsr\t-32706(a6)";
#define OSSL_trace_set_prefix(category, prefix) __OSSL_trace_set_prefix(AmiSSLBase, (category), (prefix))

int __OSSL_trace_set_suffix(__reg("a6") struct Library * , __reg("d0") int category , __reg("a0") const char * suffix ) = "\tjsr\t-32712(a6)";
#define OSSL_trace_set_suffix(category, suffix) __OSSL_trace_set_suffix(AmiSSLBase, (category), (suffix))

int __OSSL_trace_set_callback(__reg("a6") struct Library * , __reg("d0") int category , __reg("a0") OSSL_trace_cb callback , __reg("a1") void * data ) = "\tjsr\t-32718(a6)";
#define OSSL_trace_set_callback(category, callback, data) __OSSL_trace_set_callback(AmiSSLBase, (category), (callback), (data))

#endif /* !_INLINE_AMISSL_H */
