; $VER: Install-AmiSSL 4.0.14 (17.4.2020)

(set #AmiUpdate (if (= @app-name "AmiUpdate") 1 0))

(set @app-name "AmiSSL")

(if (= (exists "Env:Language") 1)
	(set @language (getenv "Language"))
)

(if (= #AmiUpdate 0) (welcome))

;----------------------------------------------------------------------------
; /// ***** English
(set #str-acknowledgeOS (cat
	"Please acknowledge the automatic\n"
	"detection of your operating system:")
)
(set #str-amissl-assign (cat
	"The Installer has detected that you already have the "
	"AmiSSL: assign pointing to \"%s\". Would you like to install and "
	"upgrade AmiSSL there using your previous installation choices?\n\n"
	"Note: It is strongly recommended to have all AmiSSL releases "
	"installed into the same directory. Installations in different "
	"directories will most likely require manual intervention in "
	"User-Startup.")
)
(set #str-no-help "No help available")
(set #str-dest-dir (cat
	"Where would you like to install AmiSSL? A directory named "
	"AmiSSL WILL be created there.")
)
(set #str-certs-older-over-newer (cat
	"It seems that you already have a newer version of AmiSSL "
	"installed. It is recommended that you do not install the "
	"certificates from this, older version and keep the "
	"currently installed certificates from the newer version.\n\n"
	"Would you like to keep the currently installed "
	"certificates?")
)
(set #str-certs-keep "Keep installed certificates")
(set #str-certs-replace "Replace certificates")
(set #str-add-path (cat
	"Would you like to add AmiSSL: to your path? This will make it "
	"possible to execute the OpenSSL tool without specifying full "
	"path to it.")
)
(set #str-add-assign (cat
	"The AmiSSL: assign needs to be added to User-Startup "
	"so that AmiSSL can find its certificates.")
)
(set #str-success (cat
	"AmiSSL installation finished succesfully. Enjoy!\n\n"
	"(Please reboot for modifications to take effect)")
)
(set #str-reboot-before-install (cat
	"The installer has detected that a running application is using "
	"AmiSSL. Please close all applications that are using AmiSSL and "
	"run the installer again.\n\n"
	"If this message persists, reboot and try again.")
)
(set #str-deleting-certs "Deleting old certificates")
(set #str-amiupdate-copyfile "Copying file via AmiUpdate:\n%s\n\nTo drawer:\n%s")
(set #str-cpu-68k (cat
	"AmiSSL comes in two versions optimised for different processors. "
	"Which version of AmiSSL would you like to install?")
)

; ///
; /// ***** Deutsch
(if (= #language "deutsch")
)
; ///

;----------------------------------------------------------------------------
; /// Checking environment
(set EXEC_ver (getversion "exec.library" (resident)))
(set NEWLIB_ver (getversion "newlib.library" (resident)))
(set AROS_ver (getversion "aros.library" (resident)))

; we use newlib.library to check whether we are running on AmigaOS 4.x
(if (>= NEWLIB_ver (* 4 65536))
    (set #detectedSystem 1)
    (
        ; we are not running on AmigaOS 4.x
        (if (>= AROS_ver (* 40 65536))
            (set #detectedSystem 3)
            (
                ; we are not running on AROS
                ; now check if we are running on MorphOS (exec.library V50+) or on AmigaOS 3.x
                (if (>= EXEC_ver (* 50 65536))
                    (set #detectedSystem 2)
                    (set #detectedSystem 0)
                )
            )
        )
    )
)

(if (= #AmiUpdate 1)
    (set #detectedSystem 1)
    ; else
    (set #detectedSystem
        (askchoice
            (prompt #str-acknowledgeOS)
            (help @askchoice-help)
            (choices "AmigaOS 3.x"
                     "AmigaOS 4.x"
                     "MorphOS 1.x/2.x/3.x"
                     ;"AROS i386"
                     ;"AROS PPC"
                     ;"AROS x86_64"
            )
            (default #detectedSystem)
        )
    )
)
; finally convert the system number into a string for easier understanding
(set #detectedSystem
	(select #detectedSystem "os3" "os4" "mos" "aros-i386" "aros-ppc" "aros-x86_64")
)

;----------------------------------------------------------------------------
; /// Here we go!

(complete 0)

(set #amissl-assign (getassign "AmiSSL"))

; Standard install - everything goes in AmiSSL:
(set #selfContained 1)

; Default install path
(if (<> #amissl-assign "")
	(
		(set #dest-dir #amissl-assign)
		(set #updateInstall 1)
	)
	; else
	(
		(set #dest-dir (tackon (if (exists "Work:" (noreq)) "Work:" "SYS:") "AmiSSL"))
		(set #updateInstall 0)
	)
)

; Set up the source and destination path
(if (= #detectedSystem "os3")
	(set #src-os-dir "AmigaOS3")
)
(if (= #detectedSystem "os4")
	(
		(set #src-os-dir "AmigaOS4")
		(set #selfContained 0)
		(set #updateInstall 1)
		(set #dest-dir "SYS:")
		(set #storage-dir (if (<> #amissl-assign "") #amissl-assign "DEVS:AmiSSL"))
		(set #cmd-dir "SYS:C")
		(set #docs-dir "SYS:Documentation/AmiSSL")
	)
)
(if (= #detectedSystem "mos")
	;(set #src-os-dir "MorphOS")
	(set #src-os-dir "AmigaOS3")
)
(if (= #detectedSystem "aros-i386")
	(set #src-os-dir "AROS-i386")
)
(if (= #detectedSystem "aros-ppc")
	(set #src-os-dir "AROS-ppc")
)
(if (= #detectedSystem "aros-x86_64")
	(set #src-os-dir "AROS-x86_64")
)

;----------------------------------------------------------------------------
; /// For an existing install, check if to update or start afresh
(if (and (= #updateInstall 1) (= #selfContained 1))
	(set #updateInstall
		(askbool
			(prompt (#str-amissl-assign #amissl-assign))
			(help #str-no-help)
			(default 1)
		)
	)
)

;----------------------------------------------------------------------------
; /// Ask for new installation dir, if required
(if (= #updateInstall 0)
	(set #dest-dir
		(tackon
			(askdir
				(prompt #str-dest-dir)
				(default (pathonly #dest-dir))
				(help @askdir-help)
			)
			"AmiSSL"
		)
	)
)

(makedir #dest-dir (infos))

(if (= #selfContained 1)
	(
		(set #storage-dir #dest-dir)
		(set #docs-dir #dest-dir)
		(set #cmd-dir #dest-dir)
	)
)

;----------------------------------------------------------------------------
; /// Install libraries

(set #libs-dir (tackon #dest-dir "Libs"))
(set #libs-src-dir (tackon "Libs" #src-os-dir))

(set #old-lib-ver (getversion "LIBS:amisslmaster.library"))
(set #new-lib-ver (getversion (tackon #libs-src-dir "amisslmaster.library")))

(if (= #detectedSystem "os4")
	(
		; /// Try to force ramlib to expunge libraries to release exclusive file locks
		(foreach (tackon #libs-dir "AmiSSL") "amissl_v#?.library"
			(
				(set #resident-lib-ver (getversion @each-name (resident)))
				(if (> #resident-lib-ver 0)
					(
						(set #lib-name ((tackon (tackon #libs-dir "AmiSSL") @each-name)))
						(rename #lib-name (cat #lib-name "-expunge"))
						(rename (cat #lib-name "-expunge") #lib-name)
					)
				)
			)
		)
		(set #resident-lib-ver (getversion "amisslmaster.library" (resident)))
		(if (> #resident-lib-ver 0)
			(
				(set #lib-name (tackon #libs-dir "amisslmaster.library"))
				(rename #lib-name (cat #lib-name "-expunge"))
				(rename (cat #lib-name "-expunge") #lib-name)
			)
		)
		(set #resident-lib-ver (getversion "amisslmaster.library" (resident)))
		(if (> #resident-lib-ver 0)
			(abort #str-reboot-before-install)
		)
	)
)

(if (= #AmiUpdate 1)
	(
		(working (#str-amiupdate-copyfile (tackon #libs-src-dir "amisslmaster.library")  #libs-dir))
		(run "CopyStore " (tackon #libs-src-dir "amisslmaster.library") " "  #libs-dir)
	)
	; else
	(copyfiles
		(source (tackon #libs-src-dir "amisslmaster.library"))
		(dest #libs-dir)
	)
)

(complete 10)
(if (= #detectedSystem "os3")

)


(if (= #src-os-dir "AmigaOS3")
	(
		(if (= #detectedSystem "mos")
			(set #cpu-id 0)
			; else
			(set #cpu-id
				(if (OR (= (database "cpu") "68060")
				    (OR (<> (getversion "68060.library" (resident)) 0)
				        (<> (getversion "amithlon.resource" (resident)) 0)))
				1 0)
			)
		)
		(set #cpu-id
			(askchoice
				(prompt #str-cpu-68k)
				(help @askchoice-help)
				(choices "68020/030/040/080 or MorphOS" "68060 or Amithlon")
				(default #cpu-id)
			)
		)
		(set #cpu-dir (if (= 1 #cpu-id) "68060" "68020-40" ))
	)
	; else
	(set #cpu-dir "")
)

(foreach (tackon (tackon #libs-src-dir "AmiSSL") #cpu-dir) "#?.library"
	(if (= #AmiUpdate 1)
		(
			(working (#str-amiupdate-copyfile (tackon (tackon #libs-src-dir "AmiSSL") @each-name) (tackon #libs-dir "AmiSSL")))
			(run "CopyStore " (tackon (tackon #libs-src-dir "AmiSSL") @each-name) " " (tackon #libs-dir "AmiSSL"))
		)
		; else
		(copyfiles
			(source (tackon (tackon (tackon #libs-src-dir "AmiSSL") #cpu-dir) @each-name))
			(dest (tackon #libs-dir "AmiSSL"))
		)
	)
)

(complete 30)

;----------------------------------------------------------------------------
; /// Install documentation

(makedir #docs-dir (infos))

(copyfiles
	(source "Doc/AmiSSL.doc")
	(dest #docs-dir)
	(infos)
)

(complete 40)

(copyfiles
	(source "Doc/OpenSSL.doc")
	(dest #docs-dir)
	(infos)
)

(complete 45)

;----------------------------------------------------------------------------
; /// Install OpenSSL tool

(if (= #AmiUpdate 1)
	(
		(working (#str-amiupdate-copyfile (tackon "C" (tackon #src-os-dir "OpenSSL")) #cmd-dir))
		(run "CopyStore " (tackon "C" (tackon #src-os-dir "OpenSSL")) " " #cmd-dir)
	)
	; else
	(copyfiles
		(source (tackon "C" (tackon #src-os-dir "OpenSSL")))
		(dest #cmd-dir)
	)
)

(complete 60)

;----------------------------------------------------------------------------
; /// Install Certificates

(set #certs-dir (tackon #storage-dir "Certs"))
(set #certs-dir-exists (if (= (exists #certs-dir (noreq)) 2) 1 0))
(set #delete-old-certs #certs-dir-exists)
(set #copy-certs 1)

(if
	(and
		(= #certs-dir-exists 1)
		(> #old-lib-ver #new-lib-ver)
	)
	(if	(askbool
			(prompt #str-certs-older-over-newer)
			(choices #str-certs-keep #str-certs-replace)
			(help #str-no-help)
			(default 1)
		)
		(
			(set #delete-old-certs 0)
			(set #copy-certs 0)
		)
		; else
		(
			(set #delete-old-certs 1)
			(set #copy-certs 1)
		)
	)
)

(if (= #delete-old-certs 1)
	(
		(working #str-deleting-certs)
		(foreach #certs-dir "#?"
			(delete (tackon #certs-dir @each-name))
		)
	)
)

(complete 75)

(if (= #copy-certs 1)
	(copyfiles
		(source "Certs")
		(dest #certs-dir)
		(all)
	)
)

(makedir (tackon #storage-dir "UserCerts"))
(makedir (tackon #storage-dir "Private"))

(complete 90)

;----------------------------------------------------------------------------
; /// S:User-Startup additions

(set #startup-command "")

; If assign missing (OS4 install) or new install
(if (or (= #updateInstall 0) (= #amissl-assign ""))
	(set #startup-command (cat "Assign AmiSSL: \"" #storage-dir "\"\n"))
)

(if (= #updateInstall 0)
	(set #startup-command
		(cat #startup-command
			"If Exists AmiSSL:Libs\n"
			"  Assign LIBS: AmiSSL:Libs ADD\n"
			"EndIf\n"
		)
	)
)

(if (= #updateInstall 0)
	(if	(askbool
			(prompt #str-add-path)
			(help #str-no-help)
			(default 1)
		)
		(set #startup-command (cat #startup-command "Path AmiSSL: ADD\n"))
	)
)

(if (<> #startup-command "")
	(startup @app-name
		(prompt #str-add-assign)
		(help @startup-help)
		(command #startup-command)
	)
)

;----------------------------------------------------------------------------
; /// ********************

(complete 100)
(set @default-dest #dest-dir)
(if (= #AmiUpdate 1) (exit (quiet)) (exit #str-success))
